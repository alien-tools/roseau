commit|date|message|createdFilesCount|deletedFilesCount|updatedFilesCount|typesCount|methodsCount|fieldsCount|deprecatedAnnotationsCount|checkoutTime|apiTime|diffTime|breakingChangesCount|breakingChanges
604b400e38cf8bd9aa7d5b70ea06ba1569ceed1a|Mon Apr 18 14:45:09 CEST 2011|point build.xml at new MOE_MIGRATION=|0|0|0|206|1707|77|11|9|9|248|0|
5ef30df12a54b06d59416feeb53ae1891d9579ff|Wed Apr 20 14:55:56 CEST 2011||0|0|1|206|1707|77|11|12|64|43|1|BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.ExecutionList, newSymbol=com.google.common.util.concurrent.ExecutionList]
6febfcaeb5cee048529e38cb781a8dc7a06252c4|Wed Apr 20 15:21:42 CEST 2011||0|0|1|206|1707|77|11|9|90|31|0|
0fbb5fd987e669919e77023b5f44319cbf1a1fc4|Wed Apr 20 22:05:07 CEST 2011|updated POMs for maven builds.|0|0|0|206|1707|77|11|18|6|31|0|
e7eb1829e0979fb691a7668ecd15116a9afd7e2e|Fri Apr 22 16:27:55 CEST 2011||0|0|1|206|1707|77|11|10|74|33|0|
8bd124ef4b414552fcdc6ba7a52aa677c60f6fee|Fri Apr 22 16:35:06 CEST 2011||8|0|1|213|1763|79|12|15|100|21|0|
ee8f585a1bc430c6c2ee035e7a0b7fd28aadcda5|Fri Apr 22 16:43:36 CEST 2011||0|0|1|213|1763|79|12|12|72|12|0|
195c219da43c9e72d4f203bde6af55b6b9c44955|Fri Apr 22 16:44:24 CEST 2011||0|0|0|213|1763|79|12|196|7|10|0|
ac41a695df586611cc94b58b0a4694b45fb0367f|Fri Apr 22 20:43:54 CEST 2011||0|0|1|213|1763|79|12|358|52|7|0|
fd8214ea734857a27bfd349a85ca32fc7a24d5bb|Mon Apr 25 16:08:46 CEST 2011||0|0|0|213|1763|79|12|9|4|8|0|
6b0878bb361f990e8125db56e1905ea43d35ad45|Mon Apr 25 16:54:42 CEST 2011||0|0|0|213|1763|79|12|8|4|7|0|
aed324cc5bcc6b50d5624d734d8cfb6336be84c4|Tue Apr 26 02:49:50 CEST 2011||0|0|3|213|1763|79|12|9|71|8|0|
ef2231dbccbafe2b1ed1b49c2a190b550b09e7df|Tue Apr 26 16:46:49 CEST 2011||0|0|5|213|1763|79|12|13|86|9|0|
6b57b0fac9f798a0f8a6d48f1c53f04db47112b1|Tue Apr 26 16:52:01 CEST 2011||0|0|1|213|1763|79|12|12|9|7|0|
926b756dd992a11ccab513e1abd9a9f20f8868d5|Wed Apr 27 14:31:53 CEST 2011||0|0|0|213|1763|79|12|8|4|7|0|
294ae439736e9aa3f87ce727929b2bb6f225dc43|Wed Apr 27 14:48:24 CEST 2011||0|0|1|213|1765|79|12|8|21|9|0|
6c3eec595a9a8d2ec0277cfa46e9592637ae24c3|Wed Apr 27 15:02:44 CEST 2011||3|0|1|215|1772|79|12|11|24|8|1|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.MoreExecutors.sameThreadExecutor(), newSymbol=com.google.common.util.concurrent.MoreExecutors.sameThreadExecutor()]
44e73ae5701e5e61e53d1f55a9fd30f5c283a067|Wed Apr 27 15:13:33 CEST 2011||0|0|1|215|1771|79|12|11|52|10|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.makeListenable(java.util.concurrent.Future<V>), newSymbol=]
c6f8f2035d5f2287e391849ac66996e2fc04bcf7|Wed Apr 27 15:14:41 CEST 2011||1|0|1|216|1782|79|12|9|20|8|0|
a0753a617325b308d2d8b2158182eb717e787d3a|Thu Apr 28 15:55:42 CEST 2011||0|0|1|216|1782|79|12|9|77|9|0|
65b86a4b57abbc844279a307339a4a615d57bb42|Thu Apr 28 16:04:58 CEST 2011||0|0|3|216|1782|79|12|15|76|7|0|
53bcea501aab53f77cf6f313f5794b8f3e9cbca8|Thu Apr 28 16:19:12 CEST 2011||0|0|3|216|1782|79|12|12|69|6|0|
a9d192cbe41d23f9417ddccf8ff0fe6cc628663e|Thu Apr 28 16:45:31 CEST 2011||0|0|3|216|1782|79|12|12|78|8|0|
b2b80b63f2ce0a704ae8411fcebaf61145d8d9cc|Fri Apr 29 17:19:51 CEST 2011||0|0|2|216|1780|79|12|14|16|8|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractListenableFuture.done(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.done(), newSymbol=]
f7fba870bc4fdce22e491dba2ee0d619eb0ea2cf|Mon May 02 13:47:29 CEST 2011||0|0|8|216|1780|79|12|13|38|6|0|
6d60ccc7204ec520780b6899359132eba4edc407|Mon May 02 14:56:09 CEST 2011||0|0|2|216|1780|79|12|13|16|5|0|
205d7fdf0469960ab65820e3c850f4e8efa2961f|Mon May 02 15:23:58 CEST 2011||0|0|4|216|1780|79|13|12|52|4|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractListenableFuture.done(), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.SettableFuture, newSymbol=com.google.common.util.concurrent.SettableFuture]
75214c924d9c39facb61183b0247619fcfebc92b|Mon May 02 15:47:34 CEST 2011||0|0|1|216|1780|79|13|13|72|3|0|
1ef7f793742b940281e513ab5bb6d1c819d495dd|Mon May 02 16:09:08 CEST 2011||0|0|3|216|1780|79|13|13|77|5|0|
7b42834aa30de9ab058584b2787227d9988ac1a3|Mon May 02 16:31:13 CEST 2011||0|0|3|216|1780|79|13|12|67|3|0|
ba41093b42024d072743904adf0a6dd2417451df|Mon May 02 16:39:47 CEST 2011||0|0|0|216|1780|79|13|11|2|6|0|
b1e632ac78c6074ada75233462452780a93762de|Mon May 02 17:01:53 CEST 2011||0|0|1|216|1781|79|13|9|45|5|0|
fdff38befd3294746b465993be5db36d98f2a34b|Mon May 02 17:08:01 CEST 2011||0|0|2|216|1781|79|13|12|14|4|0|
bee56d564204d35d412f802f867f3ba00c75fa08|Mon May 02 17:09:25 CEST 2011||0|0|1|216|1781|79|13|10|35|5|0|
d3abdd9e76ef0dc23650da95f60e03fd1b2ed60d|Tue May 03 14:10:40 CEST 2011||0|1|0|215|1781|79|12|9|2|4|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractListenableFuture, newSymbol=]
6739a534dfbc82ad6eaf8db9fcaf47bc1ea79bed|Tue May 03 14:16:56 CEST 2011||0|0|3|215|1781|79|12|8|71|6|0|
e6d92d2323a96871aef78be3ff4e57cf5edd33f7|Tue May 03 14:25:34 CEST 2011||0|0|0|215|1781|79|12|12|2|3|0|
859a3816b268781af1802719a7d0a5a2158121ee|Tue May 03 14:35:50 CEST 2011||0|0|8|215|1781|79|12|14|37|3|0|
892f2a51c0f1a8405832c339ffe90142ae94c1e6|Wed May 04 13:25:39 CEST 2011||0|0|4|215|1781|79|12|14|74|3|0|
3ab5ad4f16dad46dde4e2f4c32cad19141f0fd14|Wed May 04 13:27:45 CEST 2011||0|0|1|215|1781|79|12|14|70|3|0|
dc5f806882f1447f2ce5d024817d0bdfe66bf09d|Thu May 05 13:38:29 CEST 2011||0|0|1|215|1781|79|12|13|10|3|0|
3295847aa0f463fd082b5dd1b54eba6a4c8aa06c|Thu May 05 13:40:06 CEST 2011||0|0|1|215|1781|79|12|8|54|3|0|
9246aef36f6cdd59db4b6495a9f7a57891736e6d|Thu May 05 13:41:40 CEST 2011||3|0|3|218|1805|79|12|12|76|3|0|
e3b22f92567bc66425772f5deb2e1f9d2d7b13d8|Thu May 05 14:01:08 CEST 2011||0|0|2|218|1805|79|12|13|44|3|0|
f52ed9ee8e39c679e07ee118dfb7f7dfc3179659|Fri May 06 13:07:26 CEST 2011||0|0|1|218|1805|79|12|9|16|4|0|
ef80c224861e3a676e2b6545a68781053b549ed5|Fri May 06 13:09:21 CEST 2011||2|0|4|218|1808|79|12|10|38|4|2|BC[kind=CLASS_TYPE_CHANGED, impactedSymbol=com.google.common.base.Equivalence, newSymbol=com.google.common.base.Equivalence],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Equivalences.pairwise(com.google.common.base.Equivalence<? super T>), newSymbol=]
1e894ebb3ba63e1ea06af2c7ae15b30693ab29a4|Fri May 06 13:44:31 CEST 2011||0|2|4|218|1805|79|12|10|13|4|5|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Equivalence.onResultOf(com.google.common.base.Function<F,? extends T>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Equivalence.equivalentTo(T), newSymbol=],BC[kind=CLASS_TYPE_CHANGED, impactedSymbol=com.google.common.base.Equivalence, newSymbol=com.google.common.base.Equivalence],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Equivalence.pairwise(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Equivalence.wrap(S), newSymbol=]
df76d9fa660f672e95d621ae5b20b4ff7adf1769|Wed May 11 23:59:05 CEST 2011||0|0|4|218|1805|79|12|12|68|3|0|
c87142e306811f7ac9094d43de45dca4339a2898|Thu May 12 00:00:47 CEST 2011||0|0|2|218|1806|79|12|11|43|3|1|BC[kind=CLASS_TYPE_CHANGED, impactedSymbol=com.google.common.base.Ticker, newSymbol=com.google.common.base.Ticker]
00bbec0d0e197a6b3f577530623aaf269c00db69|Thu May 12 00:01:52 CEST 2011||0|0|4|218|1806|79|12|11|73|4|0|
61ce6ccc3714f870ec83b1aab69dcbb27963ef73|Thu May 12 00:22:13 CEST 2011||0|0|3|218|1806|79|12|14|43|3|0|
a6339e3b12f563a1c1129b9fafc87a830a17b493|Thu May 12 00:23:22 CEST 2011||0|0|1|218|1807|79|12|9|13|3|0|
6981740800b04aa5df81f3d80ae561953e7b1e56|Thu May 12 00:24:42 CEST 2011||0|0|1|218|1810|79|13|7|10|5|9|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.base.Optional.hashCode(), newSymbol=com.google.common.base.Optional.hashCode()],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.base.Optional.isPresent(), newSymbol=com.google.common.base.Optional.isPresent()],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.base.Optional.equals(java.lang.Object), newSymbol=com.google.common.base.Optional.equals(java.lang.Object)],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.base.Optional, newSymbol=com.google.common.base.Optional.orNull()],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.base.Optional.get(), newSymbol=com.google.common.base.Optional.get()],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.base.Optional, newSymbol=com.google.common.base.Optional.or(T)],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.base.Optional.get(T), newSymbol=com.google.common.base.Optional.get(T)],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.base.Optional.toString(), newSymbol=com.google.common.base.Optional.toString()],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.base.Optional, newSymbol=com.google.common.base.Optional.or(com.google.common.base.Optional<? extends T>)]
e69b9484e6d89e41e9e4e6a058588d053a53934b|Thu May 12 00:26:22 CEST 2011||0|0|0|218|1810|79|13|9|2|5|0|
bc47900d640c2264fb8a9f0cf799c3985adb9a27|Thu May 12 00:27:16 CEST 2011||0|0|1|218|1810|79|13|9|39|5|0|
c7b17cede87c16cb4cf7059441fa67585ace18a2|Thu May 12 16:44:51 CEST 2011||2|0|1|219|1819|79|13|10|11|5|0|
58c90ae66c33501b0d301e2307aeb53c5082bf6d|Fri May 13 14:18:12 CEST 2011||1|0|6|220|1822|79|13|11|68|6|0|
c19921758fe661962e3f5f5c697453475171e213|Fri May 13 14:19:19 CEST 2011||0|1|2|222|1827|84|14|14|67|5|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.EvictionListeners, newSymbol=]
cf718c5842b150a0df6411a457d427b51e60ae28|Fri May 13 14:20:21 CEST 2011||2|2|3|224|1841|84|16|13|70|4|2|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.CacheStatsCounterImpl, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.CacheStatsCounter, newSymbol=]
c8d9b916179531d0899a0411fc562eec611e5d33|Mon May 16 14:16:06 CEST 2011||0|0|2|224|1841|84|16|12|66|5|0|
f725415eae3da91ec3ccb3a10f5351624dfcfb19|Mon May 16 14:22:56 CEST 2011||1|0|0|225|1849|84|16|12|11|6|0|
cc0d96ecd04b2614cf28b66b93e24d163553ed9f|Mon May 16 14:29:18 CEST 2011||0|0|4|225|1849|84|16|10|58|5|0|
e6b0f8aebb7a36dd4eb0ed83100b3a8f9d13d6cd|Mon May 16 14:31:50 CEST 2011||0|0|3|225|1849|84|17|11|46|7|0|
41ffe5d7a7fa4be3034c63b309094878618f801d|Mon May 16 14:33:06 CEST 2011||0|0|1|225|1849|84|17|11|45|4|0|
88564fd20074bd3fd6ce8bcf71b7c7616f543b37|Mon May 16 14:33:58 CEST 2011||0|0|2|225|1849|84|17|10|56|5|0|
a909fde4811a54e8cb4dc1d60175e7534ebbb4c0|Wed May 18 08:26:41 CEST 2011|Enable source artifact generation in all builds on guava, and use that plus other resources to build the Guava-gwt artifact. Then enable the gwt artifact in the aggregate build.|0|0|0|225|1849|84|17|10|2|2|0|
425f94349f5c09a054bd2ad69c395818703ab879|Wed May 18 17:04:34 CEST 2011||0|0|2|225|1849|84|17|8|35|3|0|
483276e6be92c9a37714335e4e12225557fc9419|Wed May 18 17:06:14 CEST 2011||0|0|4|225|1849|84|17|11|28|5|1|BC[kind=CONSTRUCTOR_NOW_PROTECTED, impactedSymbol=com.google.common.base.Ticker.<init>(), newSymbol=com.google.common.base.Ticker.<init>()]
ee1dc95f8ccae95a3f4fbcb26c434ee396aa5816|Wed May 18 17:07:02 CEST 2011||0|0|1|225|1849|84|18|9|44|4|0|
e6715f52d29a45fd38af3222ab8283b638187f6b|Wed May 18 17:07:48 CEST 2011||0|0|0|225|1849|84|18|9|2|4|0|
8d93dfaccc39ae925d8ac86f8c3ed510ceedbfb3|Wed May 18 22:36:18 CEST 2011|Add a bootstrap JVM class replacement that overcomes an incompatibility between JDK5/6.  This allows us to compile in such a way that our concurrency code works in J2SE 5 and 6.|0|0|0|225|1849|84|18|8|2|3|0|
f7af1268fa325b985ae41ad2724133bfe0ac4341|Thu May 19 03:56:03 CEST 2011||0|1|1|225|1847|84|16|14|39|8|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ImmutableSortedSet.withExplicitOrder(java.util.List<E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ImmutableSortedSet.withExplicitOrder(E,E[]), newSymbol=]
c1b14ee27f5a094cf59a1cebc8510020f60788c3|Thu May 19 04:00:30 CEST 2011||0|0|0|225|1847|84|16|12|2|5|0|
46c620d094ef1f7caec153616b421b2f35798829|Mon May 23 15:21:03 CEST 2011||0|0|1|225|1847|84|16|8|49|3|2|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.LinkedListMultimap.entries(), newSymbol=com.google.common.collect.LinkedListMultimap.entries()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.LinkedListMultimap.values(), newSymbol=com.google.common.collect.LinkedListMultimap.values()]
798be897ac21ab4b861acaa44a83c0dc8185827d|Mon May 23 15:27:44 CEST 2011||0|0|1|225|1847|84|16|9|52|4|0|
6e1f1fd477562d47463279503b0551b53c640e39|Tue May 24 15:14:43 CEST 2011||0|0|0|225|1847|84|16|10|1|3|0|
4bef95a137f3cdfce8e5961a8b0274ca1f83d813|Tue May 24 15:23:08 CEST 2011||0|0|1|225|1847|84|16|9|35|3|0|
f681eacba59748d116ecab7b8885f545a6b4aea7|Tue May 24 15:41:59 CEST 2011||0|0|0|225|1847|84|16|10|3|4|0|
457462e54495dc3e31d8680f1de6b9c260ad70b6|Tue May 24 21:27:00 CEST 2011||1|0|2|225|1851|84|16|10|50|3|2|BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.collect.GenericMapMaker, newSymbol=com.google.common.collect.GenericMapMaker.ticker(com.google.common.base.Ticker)],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.collect.GenericMapMaker, newSymbol=com.google.common.collect.GenericMapMaker.makeCache(com.google.common.collect.CacheLoader<? super K,V>)]
46d4eb45009051a9c1d212c26ee4567db3e9c34d|Wed May 25 03:34:02 CEST 2011||2|0|4|225|1854|84|16|10|33|4|2|BC[kind=CLASS_TYPE_CHANGED, impactedSymbol=com.google.common.base.Equivalence, newSymbol=com.google.common.base.Equivalence],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Equivalences.pairwise(com.google.common.base.Equivalence<? super T>), newSymbol=]
f6c76b737c31bbd6089fa9f78fa5cb640c105192|Wed May 25 03:35:22 CEST 2011||0|0|6|225|1855|84|17|10|53|4|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Cache.get(K), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.Cache, newSymbol=com.google.common.collect.Cache.getUnchecked(K)]
ad3640c6eec0ccac230a0f9c96b343aa025b89bb|Wed May 25 04:00:51 CEST 2011||0|0|2|225|1855|84|17|10|51|4|0|
177a182b35f8dfcf9cbeea8f5c7c912285e33458|Wed May 25 04:02:31 CEST 2011||0|0|33|225|1855|84|17|26|162|9|0|
b10c01e2baca951cc914b21fe920a578dffb6652|Wed May 25 23:58:33 CEST 2011||0|0|8|225|1855|84|17|28|34|4|0|
f472da48a1a04c6df9fc7745e285cd386e3d2f15|Wed May 25 23:59:52 CEST 2011||0|0|2|225|1855|84|17|12|23|3|0|
ac4eddbe2c16062e74753f7218a3f392d0a745b6|Thu May 26 00:00:44 CEST 2011||0|0|1|225|1855|84|17|8|30|7|0|
3ba8913b9fad819c24323943971b256151d67a80|Thu May 26 00:02:11 CEST 2011||2|0|2|227|1858|84|21|10|48|3|0|
1caee4174f50a088dc42ab0b3f8782f8f079d7b0|Tue May 31 14:28:45 CEST 2011||0|0|2|227|1858|84|21|10|45|4|0|
816331252820d2b52cf1ac22fd2b1180ae6f59ee|Tue May 31 14:54:16 CEST 2011||0|0|9|227|1858|84|21|13|82|8|0|
d9df723ceefa789c14d3f60b0d3b805096843823|Wed Jun 01 13:50:15 CEST 2011||0|0|2|227|1858|84|21|14|67|5|0|
2b295dc3ce740836534f7caf0b214c7589b0b8d0|Wed Jun 01 13:51:18 CEST 2011||0|0|3|227|1858|84|21|12|66|6|0|
30aae4f25d511a34ef41d340945234b9679fa5b0|Thu Jun 02 13:36:36 CEST 2011||0|0|1|227|1858|84|21|12|15|5|0|
8309c2994a3ef05b91252aec8864ae371135800d|Thu Jun 02 13:54:53 CEST 2011||0|0|1|228|1863|84|21|8|30|5|0|
87df707d642a3cbf8037678aa4ea4c58c502fe85|Fri Jun 03 13:16:13 CEST 2011||0|0|4|228|1868|84|21|10|50|4|8|BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.collect.CacheStats.<init>(long,long,long,long,long), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.AbstractCache$StatsCounter, newSymbol=com.google.common.collect.AbstractCache$StatsCounter.recordCreateException(long)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.AbstractCache$StatsCounter, newSymbol=com.google.common.collect.AbstractCache$StatsCounter.recordConcurrentMiss()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.AbstractCache$StatsCounter.recordMiss(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.AbstractCache$SimpleStatsCounter.recordCreate(long), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.AbstractCache$StatsCounter, newSymbol=com.google.common.collect.AbstractCache$StatsCounter.recordCreateSuccess(long)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.AbstractCache$SimpleStatsCounter.recordMiss(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.AbstractCache$StatsCounter.recordCreate(long), newSymbol=]
a13e02167e90125e6a78bf9bbd061996d05a143a|Tue Jun 07 14:06:49 CEST 2011||0|0|3|228|1868|84|21|10|66|4|0|
5809efca4c4fd7dbd3c954a3c1656baecf5cf9b2|Tue Jun 07 14:24:46 CEST 2011||0|0|1|228|1868|84|21|11|33|4|0|
61e205c9052232b130461d7e505d6f3982be77f0|Tue Jun 07 14:47:53 CEST 2011||0|0|5|228|1868|84|22|12|63|3|0|
9a5e97e85d4df3a1659286c1b7fe7100c5c1d22e|Tue Jun 07 15:15:07 CEST 2011||0|0|1|228|1868|84|22|10|45|4|0|
b0a5ff44fa2e6888be778b0685a7229bc032ed4d|Tue Jun 07 15:20:47 CEST 2011||0|0|1|228|1868|84|22|11|10|4|0|
c3e283e5a4e5bc9151791e094e48904c7fb82416|Tue Jun 07 15:53:58 CEST 2011||0|0|4|228|1868|84|22|11|68|3|0|
a09c2e1ca049fe2b17312ac9d928a3d4c6075882|Tue Jun 07 16:12:21 CEST 2011||0|0|1|228|1868|84|22|11|28|5|0|
c58f5577cdaa08cdf38b19dca3beacb6d679046f|Tue Jun 07 16:23:34 CEST 2011||0|0|1|228|1869|84|22|8|6|3|0|
0092825a6ddccdb868f1a3b726445676b087191c|Wed Jun 08 15:07:39 CEST 2011||0|0|2|228|1869|84|22|7|43|7|0|
093c91737c08de04a16d8412e84cd0089b3a47b2|Wed Jun 08 15:28:04 CEST 2011||0|0|1|228|1869|84|23|8|44|3|0|
48a9f33b1d20381dbc51e038bebda59fba094e32|Wed Jun 08 15:57:38 CEST 2011||0|0|1|228|1870|84|23|9|13|4|0|
d55e49806cc1648d260c68dad979b75833c384f8|Wed Jun 08 16:19:17 CEST 2011||0|0|1|228|1871|84|23|7|45|3|0|
8fb836ebb3ae191c608db81e1193ebd775432ff7|Wed Jun 08 16:28:38 CEST 2011||0|0|1|228|1871|84|23|8|45|3|0|
f61b8474810da4b2a48b0f21d0a5184f627b8398|Wed Jun 08 17:20:03 CEST 2011||0|0|1|228|1871|84|23|8|10|5|0|
c4e15b8fc32c580afb8dc3fa6060bb67f23c92db|Thu Jun 09 13:27:23 CEST 2011||0|0|2|228|1871|84|23|8|44|3|0|
5c8e33ab1817afd0cc8dede2db1d9f5750f4f8de|Mon Jun 13 14:13:18 CEST 2011||0|0|0|228|1871|84|23|8|1|3|0|
7021c4ef7f2960780a345e1fd3b4bd180170ee04|Mon Jun 13 14:15:55 CEST 2011||0|0|1|228|1871|84|23|6|11|3|0|
19ec9dd7ddea5a54271c422c886eccf290e14429|Tue Jun 14 14:41:44 CEST 2011||0|0|5|228|1871|84|23|9|73|3|0|
6b5fbaa81c9c1b6c211dea7acc02f70104f68ef8|Tue Jun 14 18:21:24 CEST 2011||0|0|1|228|1871|84|23|11|41|3|0|
9dde2406c8fcf61022b471d792bf4e46207a5fcc|Wed Jun 15 14:51:24 CEST 2011||0|0|6|228|1871|84|25|9|11|8|0|
0805113e81b6f80cda67a0eb265ec025f7571b9f|Wed Jun 15 14:59:04 CEST 2011||0|0|6|228|1871|84|25|8|12|11|0|
13525d2e9b607ec2770e90116b87472c1f9a6c70|Fri Jun 17 13:37:43 CEST 2011||1|0|6|229|1873|84|23|11|54|3|4|BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.collect.AbstractCache, newSymbol=com.google.common.collect.Cache.get(K)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.Cache, newSymbol=com.google.common.collect.Cache.get(K)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Cache.getChecked(K), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.Cache, newSymbol=com.google.common.collect.Cache.invalidateAll()]
f120240f86606523799380dec477d7f37379fb11|Mon Jun 20 15:00:08 CEST 2011||0|0|1|229|1873|84|23|10|26|9|0|
78b0172b008ca1fd37363951cbeaa217a2041f94|Mon Jun 20 16:29:33 CEST 2011||0|0|1|229|1873|84|23|10|40|5|0|
4d14578f560048c131e6748e64898008905dd7db|Mon Jun 20 20:09:42 CEST 2011||0|0|2|229|1876|84|23|13|49|4|8|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.util.concurrent.Futures.allAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends T>>), newSymbol=com.google.common.util.concurrent.Futures.allAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.Futures.successfulAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends T>>), newSymbol=com.google.common.util.concurrent.Futures.successfulAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.Futures.allAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends T>>), newSymbol=com.google.common.util.concurrent.Futures.allAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.Futures.allAsList(com.google.common.util.concurrent.ListenableFuture<? extends T>[]), newSymbol=com.google.common.util.concurrent.Futures.allAsList(com.google.common.util.concurrent.ListenableFuture<? extends V>[])],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.util.concurrent.Futures.allAsList(com.google.common.util.concurrent.ListenableFuture<? extends T>[]), newSymbol=com.google.common.util.concurrent.Futures.allAsList(com.google.common.util.concurrent.ListenableFuture<? extends V>[])],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.util.concurrent.Futures.successfulAsList(com.google.common.util.concurrent.ListenableFuture<? extends T>[]), newSymbol=com.google.common.util.concurrent.Futures.successfulAsList(com.google.common.util.concurrent.ListenableFuture<? extends V>[])],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.Futures.successfulAsList(com.google.common.util.concurrent.ListenableFuture<? extends T>[]), newSymbol=com.google.common.util.concurrent.Futures.successfulAsList(com.google.common.util.concurrent.ListenableFuture<? extends V>[])],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.util.concurrent.Futures.successfulAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends T>>), newSymbol=com.google.common.util.concurrent.Futures.successfulAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>)]
ecad59d96734e9b07e89ffd3e9608aa18de9398c|Mon Jun 20 20:11:31 CEST 2011||0|0|5|229|1876|84|23|11|10|10|0|
1e8985b92efa2d82f2d750d0fe13395b67a9c9f6|Mon Jun 20 20:13:17 CEST 2011||0|0|2|229|1878|84|23|9|10|5|0|
80b8cc52b2102da2feda215bfd859c0ada4c2ea4|Mon Jun 20 20:15:10 CEST 2011||0|0|1|229|1877|84|23|6|8|4|4|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.ListenableFutureTask.addListener(java.lang.Runnable,java.util.concurrent.Executor), newSymbol=com.google.common.util.concurrent.ListenableFutureTask.addListener(java.lang.Runnable,java.util.concurrent.Executor)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.ListenableFutureTask.create(java.lang.Runnable,V), newSymbol=com.google.common.util.concurrent.ListenableFutureTask.create(java.lang.Runnable,V)],BC[kind=CLASS_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.ListenableFutureTask, newSymbol=com.google.common.util.concurrent.ListenableFutureTask],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.ListenableFutureTask.create(java.util.concurrent.Callable<V>), newSymbol=com.google.common.util.concurrent.ListenableFutureTask.create(java.util.concurrent.Callable<V>)]
466620fa6de518dae169734661d24151e6dd9993|Mon Jun 20 20:28:45 CEST 2011||0|0|1|229|1877|84|23|7|43|6|0|
f397b6a97aa7ffb3f9e5ed7997d27d1d9ae44df7|Mon Jun 20 20:30:30 CEST 2011||1|0|0|229|1877|84|23|8|27|5|0|
cceffaf2d98c278fbae7b8451528d1589a01d6ae|Tue Jun 21 14:47:27 CEST 2011||0|0|1|229|1877|84|23|9|10|6|3|BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.util.concurrent.ListenableFutureTask.<init>(java.lang.Runnable,V), newSymbol=],BC[kind=CLASS_NOW_ABSTRACT, impactedSymbol=com.google.common.util.concurrent.ListenableFutureTask, newSymbol=com.google.common.util.concurrent.ListenableFutureTask],BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.util.concurrent.ListenableFutureTask.<init>(java.util.concurrent.Callable<V>), newSymbol=]
005d2636567e070ea0fa8b4e13e53501214087f3|Tue Jun 21 15:22:40 CEST 2011||0|0|1|229|1877|84|23|8|34|7|0|
c5145ffbf08aabb6ee9d5ea8833a4ce18d8d72db|Wed Jun 22 16:04:41 CEST 2011||0|0|3|229|1877|84|23|9|45|5|0|
2f4cae379dcc3db3437b78046b1ad0513a52791f|Wed Jun 22 16:14:59 CEST 2011||0|0|1|229|1877|84|23|8|35|4|0|
559a0744abb05326badf3b5a0345860f80798788|Wed Jun 22 16:42:40 CEST 2011||0|0|6|229|1877|84|23|11|51|7|0|
580538910fac252b1d308d8ac6d2bf08e774673f|Wed Jun 22 17:20:41 CEST 2011||0|0|2|229|1877|84|23|12|58|11|0|
0f665880c99f90936464b763fff3b23bad7e118c|Wed Jun 22 17:33:27 CEST 2011||0|0|1|229|1877|84|23|10|43|6|0|
2ebe4b2fe66170cf77b7984bc46aaa0f66e0f5f9|Wed Jun 22 18:41:15 CEST 2011||0|0|2|229|1877|84|23|9|9|5|0|
d1cd105198f2e40eb43ceed869edf294e0a6d726|Wed Jun 22 18:44:52 CEST 2011||1|0|3|229|1874|84|23|9|49|4|3|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableMultiset.size(), newSymbol=java.util.Collection.size()],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableMultiset.count(java.lang.Object), newSymbol=com.google.common.collect.Multiset.count(java.lang.Object)],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableMultiset.elementSet(), newSymbol=com.google.common.collect.Multiset.elementSet()]
4453b1e930121c4a99929259115015360a4ee55b|Wed Jun 22 18:47:00 CEST 2011||0|0|1|229|1874|84|23|10|31|5|0|
e96330b6b6b4a3e756a96a98ec991d0b95a6d459|Fri Jun 24 23:44:37 CEST 2011||0|0|1|229|1874|84|23|7|31|3|0|
8285ea5d073d6883eaf53595b0b9c2fd0ec182c4|Fri Jun 24 23:46:32 CEST 2011||0|0|1|229|1874|84|24|8|13|3|0|
94d8950f580a11390f5aa212733ef58ca358d727|Fri Jun 24 23:48:44 CEST 2011||1|0|0|229|1874|84|24|7|34|5|0|
1bf14f9852e41756fd658638bcdb9682e637d57c|Fri Jun 24 23:50:56 CEST 2011||0|0|0|229|1874|84|24|8|2|3|0|
4569adf3c580376e65eec3170429c48e2a9f6255|Fri Jun 24 23:52:58 CEST 2011||0|0|0|229|1874|84|24|10|1|3|0|
ddd2809334bf3daf4ed53451b660d5cd1d527ae8|Fri Jun 24 23:54:37 CEST 2011||0|0|15|229|1874|84|24|16|86|11|0|
b367e8a004116c66626c087ccd0b1f7ad702b54c|Fri Jun 24 23:57:40 CEST 2011||0|0|2|229|1874|84|24|15|46|5|0|
7c603ae3d3d76af888ad3685c6a789ffc8c0834b|Sat Jun 25 00:04:02 CEST 2011||0|0|1|229|1876|84|24|9|7|3|0|
9413cf4a7bb88c5464a5a00deb853d0931c7d267|Sat Jun 25 01:27:37 CEST 2011||0|0|3|229|1877|84|24|9|64|3|1|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.StandardTable.row(R), newSymbol=com.google.common.collect.TreeBasedTable.row(R)]
872769250cb5c39afe834d5cdc12de4e8e656646|Sat Jun 25 01:30:12 CEST 2011||0|0|7|229|1879|84|24|16|76|6|0|
774ebd4cdc7294a47ddc47ff5701474ef0ef20f4|Sat Jun 25 01:32:38 CEST 2011||1|0|0|229|1879|84|24|12|33|5|0|
a9e38e42901ebaddf9285d8b0f5be5b5a10244f5|Sat Jun 25 01:34:31 CEST 2011||1|0|0|229|1879|84|24|7|35|3|0|
1360e12079223b1cc8b142cd52bc5b03ce6b0ebc|Sat Jun 25 02:39:10 CEST 2011||0|4|0|229|1879|84|24|6|1|3|0|
f1dd5f59b4c796a5165d3e4063a1ffd568272c0a|Tue Jun 28 17:25:42 CEST 2011||1|0|3|230|1879|84|24|8|81|3|0|
10c62d7b6e70bc4ab342287a8a57dc61d22cf28f|Tue Jun 28 17:41:10 CEST 2011||1|0|3|230|1879|84|24|13|37|7|4|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Ranges.range(C,com.google.common.collect.Range$BoundType,C,com.google.common.collect.Range$BoundType), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.Range.lowerBoundType(), newSymbol=com.google.common.collect.Range.lowerBoundType()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.Range.upperBoundType(), newSymbol=com.google.common.collect.Range.upperBoundType()],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.Range$BoundType, newSymbol=]
6c37b4b488b32e3b574305ad1bd6cffa35157d71|Wed Jun 29 02:35:58 CEST 2011||0|0|5|230|1879|84|24|10|44|10|0|
74798fb2cefa5d002fc3827594654740b3ee8599|Wed Jun 29 02:37:53 CEST 2011||0|0|1|230|1879|84|24|11|12|3|0|
6acec39b056814b43cc7c055f6fe197317a24865|Wed Jun 29 02:50:44 CEST 2011||0|5|4|224|1828|84|24|11|70|3|8|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.AbstractCache, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.AbstractCache$SimpleStatsCounter, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.CacheStats, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.CacheLoader, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.GenericMapMaker.makeCache(com.google.common.collect.CacheLoader<? super K,V>), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.Cache, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.AbstractCache$StatsCounter, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapMaker.makeCache(com.google.common.collect.CacheLoader<? super K,V>), newSymbol=]
8b5c2b458485597b358ec7e2eb5c9b91a863cfc3|Wed Jun 29 02:54:02 CEST 2011||0|0|1|224|1828|84|24|10|6|4|0|
566710252062c7cae0e1af40e246ae222ae89378|Wed Jun 29 03:02:55 CEST 2011||0|0|1|224|1828|84|24|6|6|7|0|
5e5a6d2ad71915be42e945a97b56a96d9c525c20|Wed Jun 29 03:15:38 CEST 2011||0|0|1|224|1828|84|24|7|5|8|0|
bf3cbe742aa51e16bc35e4dc7f68f2b3ea7bee08|Wed Jun 29 17:36:23 CEST 2011||11|1|0|233|1902|89|24|12|81|3|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.UncheckedExecutionException, newSymbol=]
d54d130fb1cbdc405e78adfc65339b8a3b6f26b4|Thu Jun 30 23:01:24 CEST 2011||0|0|3|233|1902|89|24|13|65|6|0|
c8f276037d02c63b6860031feedc39642b4c6131|Thu Jun 30 23:03:17 CEST 2011||0|0|1|233|1902|89|24|11|37|5|0|
6d5ee971d4f6f94fc9c174b0ec8612cefdb62f36|Wed Jul 06 19:33:39 CEST 2011||0|0|1|233|1902|89|24|9|36|3|0|
8fefc2db7942c08628b1a17d7680209ca650c18c|Wed Jul 06 19:34:57 CEST 2011||0|0|6|233|1902|89|24|11|53|3|0|
da891b4c8b0ed8e0403e0752fce506eca0e6932c|Thu Jul 07 18:10:41 CEST 2011||0|0|0|233|1902|89|24|12|1|3|0|
5416b3db0de8436a6388dc733623b474ea5c3e6f|Thu Jul 07 18:12:41 CEST 2011||0|0|5|233|1902|94|24|9|28|3|0|
457b295e7bc6f6ad15b3abe7149bf890d25ab1b6|Thu Jul 07 18:19:15 CEST 2011||0|0|2|233|1904|94|24|10|42|6|0|
117a7cf8b0606c06a1ef6b95fb5b97b291458cec|Fri Jul 08 18:04:48 CEST 2011||0|0|1|233|1904|94|24|10|43|3|16|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.weakValues(), newSymbol=com.google.common.cache.CacheBuilder.weakValues()],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.build(com.google.common.cache.CacheLoader<? super K,V>), newSymbol=com.google.common.cache.CacheBuilder.build(com.google.common.cache.CacheLoader<? super K1,V1>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.initialCapacity(int), newSymbol=com.google.common.cache.CacheBuilder.initialCapacity(int)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.expireAfterAccess(long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.cache.CacheBuilder.expireAfterAccess(long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.softKeys(), newSymbol=com.google.common.cache.CacheBuilder.softKeys()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.ticker(com.google.common.base.Ticker), newSymbol=com.google.common.cache.CacheBuilder.ticker(com.google.common.base.Ticker)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.maximumSize(int), newSymbol=com.google.common.cache.CacheBuilder.maximumSize(int)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.removalListener(com.google.common.cache.RemovalListener<K,V>), newSymbol=com.google.common.cache.CacheBuilder.removalListener(com.google.common.cache.RemovalListener<K1,V1>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.softValues(), newSymbol=com.google.common.cache.CacheBuilder.softValues()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.removalListener(com.google.common.cache.RemovalListener<K,V>), newSymbol=com.google.common.cache.CacheBuilder.removalListener(com.google.common.cache.RemovalListener<K1,V1>)],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.removalListener(com.google.common.cache.RemovalListener<K,V>), newSymbol=com.google.common.cache.CacheBuilder.removalListener(com.google.common.cache.RemovalListener<K1,V1>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.concurrencyLevel(int), newSymbol=com.google.common.cache.CacheBuilder.concurrencyLevel(int)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.build(com.google.common.cache.CacheLoader<? super K,V>), newSymbol=com.google.common.cache.CacheBuilder.build(com.google.common.cache.CacheLoader<? super K1,V1>)],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.build(com.google.common.cache.CacheLoader<? super K,V>), newSymbol=com.google.common.cache.CacheBuilder.build(com.google.common.cache.CacheLoader<? super K1,V1>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.expireAfterWrite(long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.cache.CacheBuilder.expireAfterWrite(long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.weakKeys(), newSymbol=com.google.common.cache.CacheBuilder.weakKeys()]
e642d9344d9f32bb4cc5d3f5627eebbfe102623b|Fri Jul 08 18:18:53 CEST 2011||0|0|1|233|1905|94|24|7|36|3|0|
cf6c470efd2cb17cf79b2f96a2ab328494d5fde8|Fri Jul 08 18:20:57 CEST 2011||0|0|4|233|1905|94|24|10|73|7|0|
dbf570f8c1c9a1d62bed24d1be8d159e484e597c|Tue Jul 12 00:41:06 CEST 2011||0|0|1|233|1904|94|23|12|8|3|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Optional.get(T), newSymbol=]
a7493e579b9d4febd01bbc2f856fa1186280acce|Tue Jul 12 00:42:46 CEST 2011||2|0|4|234|1910|94|23|9|42|3|1|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain<C>), newSymbol=com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain<C>)]
eff547826025edda6873becb3104d07c13f81630|Wed Jul 13 20:43:16 CEST 2011||0|0|2|235|1914|94|23|9|38|4|4|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.schedule(java.util.concurrent.Callable<V>,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.util.concurrent.Callable<V>,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)]
ab3bd3a78d8acc6922f328269b4810c1a56541ce|Wed Jul 13 20:44:39 CEST 2011||0|0|2|234|1910|94|23|8|14|4|5|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService$ListenableScheduledFuture, newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.util.concurrent.Callable<V>,long,java.util.concurrent.TimeUnit), newSymbol=java.util.concurrent.ScheduledExecutorService.schedule(java.util.concurrent.Callable<V>,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit), newSymbol=java.util.concurrent.ScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit), newSymbol=java.util.concurrent.ScheduledExecutorService.schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit), newSymbol=java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)]
a7acd14f84eabd98f44f8df9e598d386dce17fc8|Wed Jul 13 20:45:47 CEST 2011||0|0|1|234|1909|94|22|8|13|4|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.cancel(), newSymbol=]
fe758695c2cf3abd61e1e22dc902bb764adba7ca|Thu Jul 14 00:10:18 CEST 2011||0|0|0|234|1909|94|22|20|3|3|0|
2324b8da74a4849e2341a0cee1421bd6ae1fe173|Thu Jul 14 06:30:35 CEST 2011|Ignore files from within a git/svn bridge client.|0|0|0|234|1909|94|22|11|1|3|0|
b90d3753f6e127f1ebffa52471f955eabd20654f|Thu Jul 14 14:27:56 CEST 2011|Create maven metadata for tests and testlib, disable two tests missing testlib support, and add modules for them.|0|0|1|234|1909|94|22|13|36|3|0|
ad26795b4220ccacd7f56d7cf7ea96ab669e772a|Thu Jul 14 19:59:02 CEST 2011||0|0|5|234|1909|94|21|16|51|3|0|
5469124a71873058c07f0999115a186f5a5300e3|Thu Jul 14 20:00:21 CEST 2011||0|0|2|234|1911|94|21|13|45|3|0|
3c39c3d3cc403c017b3681432e324be92044f141|Mon Jul 18 20:17:42 CEST 2011||0|0|4|234|1912|94|22|9|43|5|0|
e3eb31934c08c0adbba59d2cad81f559f768bf8a|Mon Jul 18 20:19:14 CEST 2011||0|0|1|234|1906|93|22|9|28|4|1|BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractCheckedFuture.delegate, newSymbol=]
b21e63569b69aa02124b2df97b7571f7449d3eb0|Mon Jul 18 21:54:47 CEST 2011||0|0|4|234|1908|93|24|9|48|8|0|
31a2ff00211e28ada5bbcfde0a171432e607cd61|Mon Jul 18 21:56:13 CEST 2011||0|0|3|234|1910|93|24|9|43|3|0|
4264ac9c3ae3cf1188f6de93a83bf4a9069524ec|Mon Jul 18 21:58:29 CEST 2011||0|0|1|234|1910|93|24|8|8|3|0|
270fb44b0f4d68acaf15c7fa0342bf688c0dbfc3|Mon Jul 18 22:00:24 CEST 2011||0|0|1|235|1917|93|24|7|12|3|0|
dfdac94415422e64b699141227f2f90660e3b996|Tue Jul 19 21:35:21 CEST 2011||0|0|1|235|1917|93|24|7|30|3|0|
05362312b7e4b828321e4d09a925c0c8ba86d6af|Tue Jul 19 21:36:47 CEST 2011||0|0|13|235|1916|93|24|12|80|4|22|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.toString(), newSymbol=com.google.common.collect.ImmutableMultiset.toString()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.of(E,E,E,E), newSymbol=com.google.common.collect.ImmutableMultiset.of(E,E,E,E)],BC[kind=CONSTRUCTOR_NOW_PROTECTED, impactedSymbol=com.google.common.base.Equivalence.<init>(), newSymbol=com.google.common.base.Equivalence.<init>()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.entrySet(), newSymbol=com.google.common.collect.ImmutableMultiset.entrySet()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.contains(java.lang.Object), newSymbol=com.google.common.collect.ImmutableMultiset.contains(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.builder(), newSymbol=com.google.common.collect.ImmutableMultiset.builder()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.iterator(), newSymbol=com.google.common.collect.ImmutableMultiset.iterator()],BC[kind=CLASS_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset, newSymbol=com.google.common.collect.ImmutableMultiset],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.of(E,E,E), newSymbol=com.google.common.collect.ImmutableMultiset.of(E,E,E)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Callables.throwing(java.lang.Exception), newSymbol=],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.of(E,E,E,E,E,E,E[]), newSymbol=com.google.common.collect.ImmutableMultiset.of(E,E,E,E,E,E,E[])],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.copyOf(java.lang.Iterable<? extends E>), newSymbol=com.google.common.collect.ImmutableMultiset.copyOf(java.lang.Iterable<? extends E>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.equals(java.lang.Object), newSymbol=com.google.common.collect.ImmutableMultiset.equals(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.copyOf(E[]), newSymbol=com.google.common.collect.ImmutableMultiset.copyOf(E[])],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.of(E,E,E,E,E), newSymbol=com.google.common.collect.ImmutableMultiset.of(E,E,E,E,E)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.copyOf(java.util.Iterator<? extends E>), newSymbol=com.google.common.collect.ImmutableMultiset.copyOf(java.util.Iterator<? extends E>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.of(), newSymbol=com.google.common.collect.ImmutableMultiset.of()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.of(E[]), newSymbol=com.google.common.collect.ImmutableMultiset.of(E[])],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.of(E,E), newSymbol=com.google.common.collect.ImmutableMultiset.of(E,E)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.hashCode(), newSymbol=com.google.common.collect.ImmutableMultiset.hashCode()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMultiset.of(E), newSymbol=com.google.common.collect.ImmutableMultiset.of(E)],BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.collect.ImmutableMultiset.<init>(), newSymbol=]
51234d756e9ebd547f9978626ac01ef594381b7d|Tue Jul 19 21:38:36 CEST 2011||0|0|5|235|1916|93|26|16|45|5|0|
0bec11dadb3e962aad6d4954dd08d374b8922614|Tue Jul 19 21:40:46 CEST 2011||2|0|8|237|1934|93|26|11|40|4|0|
d527a39f9e9536918c37b4c8bc6eceea7506986d|Thu Jul 21 18:21:45 CEST 2011||0|0|0|237|1934|93|26|8|1|3|0|
5828d379dc7e9f673122e76d1681fbd991efaeba|Thu Jul 21 18:31:24 CEST 2011||0|0|1|237|1934|93|26|7|38|4|0|
c58ed03477bb35b7e515090534ace1245c94accc|Mon Jul 25 18:17:48 CEST 2011||9|0|0|242|1946|93|26|12|44|4|0|
718bad39b0bff3e26cc44ab0ef6631b911674fb5|Mon Jul 25 18:18:56 CEST 2011||0|0|3|242|1946|93|26|10|36|8|0|
b6b9d05351c32cb9d8f52227c4ce6cdc52749ef7|Mon Jul 25 18:20:08 CEST 2011||1|0|0|243|1950|93|26|8|6|4|0|
23f4d6f35f6408eec2cc33badb0a7b213d5c3096|Mon Jul 25 18:21:20 CEST 2011||0|0|1|243|1952|93|28|8|34|4|0|
1c7c26962b76b3e066d126be70a8788e0a64d4f8|Tue Jul 26 15:41:29 CEST 2011||0|1|3|243|1952|93|28|10|75|4|0|
7476dde5258cdc306f1c598f3d77bce0f898c86e|Tue Jul 26 16:12:20 CEST 2011||2|0|0|243|1952|93|28|10|31|4|0|
83dcbe2470a4e2b74833dd866993c5b06201bb20|Tue Jul 26 16:26:59 CEST 2011||2|0|0|243|1952|93|28|8|25|7|0|
1a089b80b1760d5efc9e9d369fcd69e88e12672b|Tue Jul 26 16:37:23 CEST 2011||0|2|0|243|1952|93|28|6|1|5|0|
395e998b21811e68ebb26f0ecb02e722f1c99f72|Wed Jul 27 20:18:43 CEST 2011||2|0|0|243|1952|93|28|7|27|5|0|
b508f5c6650742252aec7696c2159eb03ac1a220|Wed Jul 27 20:27:32 CEST 2011||2|0|0|243|1952|93|28|9|31|6|0|
56967521032344e4648d54b7ad9b9d99fcb627fd|Wed Jul 27 20:36:21 CEST 2011||1|0|0|243|1952|93|28|8|29|3|0|
8fe3740b4f3b9166153cb8031d7dbd1322b8ec90|Wed Jul 27 20:45:18 CEST 2011||3|0|0|243|1952|93|28|7|31|3|0|
2789a742435443060abb74c2f618226fa4ea05db|Wed Jul 27 20:54:15 CEST 2011||0|0|1|243|1953|93|28|7|15|6|0|
e767cfd2cb5dda09a31ab4b15a5622c5ac971529|Wed Jul 27 21:03:15 CEST 2011||0|0|7|243|1953|93|28|9|34|3|0|
b3b3eca79a5159fe4fb7a165fd2d861e853e72ba|Wed Jul 27 21:12:21 CEST 2011||1|0|0|243|1953|93|28|9|30|3|0|
756dd64541365d318a69a49e751bf7448e8e38c1|Wed Jul 27 21:21:24 CEST 2011||0|0|1|243|1953|93|28|9|36|3|0|
bf3b770ff9f808b4b773ebe1961ea6ba1bab2cdc|Wed Jul 27 21:44:50 CEST 2011||2|0|4|247|2021|93|30|11|60|3|0|
f1569d50ec5199583cdd223bd55d1a2716d1e5ad|Wed Jul 27 21:53:51 CEST 2011||11|11|0|247|2021|93|30|15|36|5|0|
db84b65703f9ba207a52f252b0018ddd6f40ed7b|Wed Jul 27 22:02:31 CEST 2011||0|0|1|247|2021|93|30|8|39|3|0|
13ac2cd2e2deeee5d43255885076ee56853793ee|Wed Jul 27 22:18:47 CEST 2011||2|0|0|247|2021|93|30|8|32|6|0|
87fa2e243109d1f28c94ddb8392411115273d4f1|Wed Jul 27 22:28:41 CEST 2011||1|0|0|247|2021|93|30|7|30|5|0|
b26983651b4c13ae718e2eb22df13c4fde77cc4d|Wed Jul 27 23:24:22 CEST 2011||0|0|1|247|2021|93|30|8|30|4|0|
2769293fa44aeb60819a41150e6f20cd8f8ff0b4|Wed Jul 27 23:26:14 CEST 2011||1|0|0|247|2021|93|30|8|30|4|0|
aadd54a45faff761042e29821f39b0b797dec28e|Wed Jul 27 23:27:59 CEST 2011||0|0|1|247|2021|93|30|7|31|3|0|
dcaab87e6bc95a8e8162fecbc4a757ef534e062d|Wed Jul 27 23:29:45 CEST 2011||0|0|1|247|2021|93|30|7|29|3|0|
d6d9e5315c26f179b6d768dcd02b4af2cb34f73a|Wed Jul 27 23:31:45 CEST 2011||0|0|3|247|2021|93|30|10|71|3|0|
17c363a0c1ef30c17e860067c524f8da59caa307|Wed Jul 27 23:33:34 CEST 2011||0|0|1|247|2022|93|30|10|8|3|0|
de78035826ac131e562d025a87d61fdb36c648ae|Thu Jul 28 00:15:25 CEST 2011||0|1|1|247|2022|93|30|7|30|4|2|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.base.Equivalence.wrap(S), newSymbol=com.google.common.base.Equivalence.wrap(S)],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.base.EquivalenceWrapper, newSymbol=]
2b6570d8a552fcfdbff387de51bb59d764e6eaf4|Thu Jul 28 00:17:12 CEST 2011||0|0|2|247|2022|93|30|8|7|3|0|
f8a62a7a01315b1549b499ef6cedf44f35d3ff87|Mon Aug 01 15:37:39 CEST 2011||0|0|1|247|2022|93|30|7|32|10|0|
af5194696140453304a4d0d52bc8ac46823752b8|Mon Aug 01 16:10:46 CEST 2011||0|0|1|247|2022|93|30|8|7|5|0|
d6b8b507adb35f98a6b85e16eaa4b28f46ee5f6e|Mon Aug 01 16:24:15 CEST 2011||0|0|3|247|2022|93|30|8|36|3|0|
f4f4caf04a5130bdf630d4670a4d6f2d7707cab7|Mon Aug 01 16:49:11 CEST 2011||0|0|1|247|2022|93|30|8|29|2|0|
414b26b365af30cc2defcdaf06a163178eed5f7f|Mon Aug 01 17:02:34 CEST 2011||1|0|1|248|2023|93|31|8|34|3|0|
d6c1c40dc4fbd0cecf476272419f2b7e9c46dd7e|Mon Aug 01 17:14:41 CEST 2011||0|0|0|248|2023|93|31|8|1|3|0|
d0026766b1581677a406aa68e2c0bc4a18fa3c3f|Mon Aug 01 17:41:51 CEST 2011||0|0|1|248|2023|93|31|7|13|3|0|
dae49d1c4bce831a80b5a6e033a72af57eac3f2b|Mon Aug 01 17:56:17 CEST 2011||0|0|0|248|2023|93|31|9|3|4|0|
3318bf8fc09829a8b9293864a5f1fc7993249d48|Mon Aug 01 18:16:00 CEST 2011||0|1|0|247|2010|93|31|7|1|4|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.base.Holder, newSymbol=]
8ecbbcc022da4728a4e301647d3a61410fcfcf3b|Mon Aug 01 18:35:12 CEST 2011||0|0|0|247|2010|93|31|8|1|3|0|
b5d39b05fbca60fd285e65f2a8ce18a36bd41da3|Mon Aug 01 18:44:37 CEST 2011||0|0|1|247|2013|93|31|9|9|5|0|
928a3fadb7be6ab3046798ef870759ded8bc4dc3|Mon Aug 01 18:54:15 CEST 2011||0|0|5|247|2013|93|31|12|63|4|0|
07cbb899f48261a4a11707647b173a3dedefd44f|Mon Aug 01 19:05:12 CEST 2011||0|0|1|247|2014|93|31|13|55|5|0|
91868c0f611e7e122738585cc9086cabff994488|Mon Aug 01 19:57:53 CEST 2011||0|1|4|247|2016|93|31|11|36|3|4|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.base.Equivalence.hash(T), newSymbol=com.google.common.base.Equivalence.hash(T)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.base.Equivalence.equivalent(T,T), newSymbol=com.google.common.base.Equivalence.equivalent(T,T)],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.base.Equivalence, newSymbol=com.google.common.base.Equivalence.doHash(T)],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.base.Equivalence, newSymbol=com.google.common.base.Equivalence.doEquivalent(T,T)]
6363cf972c56fa1983bb8f50cbf15be73a0ae714|Mon Aug 01 20:01:24 CEST 2011||0|0|1|247|2017|93|31|7|8|3|1|BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.base.Optional, newSymbol=com.google.common.base.Optional.or(com.google.common.base.Supplier<? extends T>)]
64bcc64fff10beb2cea629064f2b447b2f39d9ee|Mon Aug 01 20:04:35 CEST 2011||0|0|0|247|2017|93|31|6|1|4|0|
7da1a643cb05dc3e006afe087bedfb53ad2c1143|Mon Aug 01 21:26:43 CEST 2011||0|0|4|247|2016|93|33|8|53|4|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.CacheBuilder.softKeys(), newSymbol=]
5549d365b673a569043b6a6f91df099bfe07ae0a|Mon Aug 01 21:28:44 CEST 2011||0|0|8|247|2016|93|33|12|49|6|0|
0825f346a52ebfc8e4e2959d8d7c864d9da94a9b|Mon Aug 01 21:31:45 CEST 2011||0|0|3|244|2008|88|39|13|60|4|6|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.GenericMapMaker.ticker(com.google.common.base.Ticker), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.MapMaker$RemovalCause, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapMaker.ticker(com.google.common.base.Ticker), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.MapMaker$RemovalNotification, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapMaker.removalListener(com.google.common.collect.MapMaker$RemovalListener<K,V>), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.MapMaker$RemovalListener, newSymbol=]
4de5e3903ea31cf2bf4cd3cd7908cff83d72a054|Tue Aug 02 13:56:20 CEST 2011||0|0|1|244|2008|88|39|10|27|3|0|
c001245dd8df746d36af64391f53212d4613e4d7|Tue Aug 02 14:27:11 CEST 2011||0|0|1|244|2008|88|39|9|35|5|0|
9522d8652c4d6d5762fc21fe6b6586e220d8e3d7|Tue Aug 02 14:49:13 CEST 2011||0|0|2|243|2001|88|39|11|38|3|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractListeningExecutorService, newSymbol=]
37fa1d4fcd055e99351a2542c939c74cf272f22f|Tue Aug 02 15:32:46 CEST 2011||0|0|4|243|2002|88|39|9|43|7|0|
81eedd445ecba741fc53b9846c5a2e56e6eeb171|Wed Aug 03 15:56:12 CEST 2011||1|0|6|244|2002|88|39|12|68|4|2|BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.util.concurrent.UncheckedExecutionException.<init>(java.lang.String,java.lang.Throwable), newSymbol=],BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.util.concurrent.UncheckedExecutionException.<init>(java.lang.Throwable), newSymbol=]
4d3387cf16363994efd6c3361e7573dfa1d26eff|Wed Aug 03 16:19:14 CEST 2011||0|0|2|244|2002|88|39|13|71|7|0|
65d41f4243942f41e788878525f38433e9ab8df3|Wed Aug 03 16:46:01 CEST 2011||0|0|1|244|2002|88|39|10|45|3|0|
361267e22e6f2a7a2d897315a43f7feddf9d05a7|Wed Aug 03 17:03:31 CEST 2011||0|0|2|244|2002|88|39|8|75|5|0|
988c4914c12449cb8719ccbd6c3d5c41a4f7f54d|Wed Aug 03 17:12:35 CEST 2011||0|0|2|244|2002|88|39|12|60|3|0|
b5119bde43a61b7ab66d8c843a3e48326071e96b|Thu Aug 04 12:57:18 CEST 2011||0|0|1|244|2003|88|39|9|13|3|0|
616b0430d73f5dfc602c6e4fb17c60288e0b480f|Thu Aug 04 16:06:40 CEST 2011||0|0|0|244|2003|88|39|24|1|4|0|
e79151ace251da007c70d1ead9e9c5992f9901e4|Thu Aug 04 16:26:47 CEST 2011||0|0|3|244|2003|88|39|15|77|3|0|
5fe70b8509b2a14787d3823b5f928ef399a7afdc|Thu Aug 04 16:43:52 CEST 2011||1|0|1|245|2017|89|39|13|21|5|0|
f5a7c1a3e0a55b4440fccd0f5004fb7256ce1fcc|Thu Aug 04 16:59:07 CEST 2011||0|0|2|249|2017|89|43|8|35|8|0|
6e7e451a734bb79881b5a24b4f1da28fd58eabbb|Thu Aug 04 17:30:02 CEST 2011||0|0|0|249|2017|89|43|8|1|5|0|
d30089cd3d7788a6ca83d5d5f3b29dd8437695df|Thu Aug 04 17:43:39 CEST 2011||1|0|3|250|2019|89|43|8|30|5|0|
830e03139e65820edf12a47090fe70253d3f3c37|Fri Aug 05 17:47:04 CEST 2011||0|0|1|250|2019|89|43|9|55|4|0|
825c1ac5a6367a94f0f53a21d2c67403ef440d57|Fri Aug 05 18:14:08 CEST 2011||0|0|1|250|2019|89|43|11|59|5|0|
06eab020b4ea54091ab0c0ee72b0aa7e2e2aa27c|Fri Aug 05 18:35:51 CEST 2011||0|0|1|250|2019|89|43|9|46|4|0|
d0686ecae5f502ca81b611f7a8653bd94d29420e|Fri Aug 05 18:45:32 CEST 2011||0|0|2|250|2019|89|43|10|40|4|0|
63073cc36f910d2470802a8e25a3ca7300bb5dd2|Fri Aug 05 18:55:19 CEST 2011||0|0|1|250|2019|89|43|10|47|3|0|
a902488bba2e3c5f4163b7f3595fbb4775853414|Fri Aug 05 18:59:08 CEST 2011||0|0|1|250|2019|89|43|8|36|3|0|
6371dcebdfd7690fb79907d49549fba0e7c25db7|Fri Aug 05 19:01:28 CEST 2011||0|0|1|250|2017|89|43|7|13|5|4|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedLongs.remainder(long,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedLongs.divide(long,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedLongs.parseLong(java.lang.String,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedLongs.parseLong(java.lang.String), newSymbol=]
2969926e4549bccbb8ddaa8b4e93e08f9f0054f4|Fri Aug 05 19:40:13 CEST 2011||0|0|0|250|2017|89|43|8|1|3|0|
04cb0bd4acb8028fb66127a59ba9d0e93a5e6892|Mon Aug 08 15:21:10 CEST 2011||0|0|2|251|2021|89|43|8|37|4|4|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.schedule(java.util.concurrent.Callable<V>,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.util.concurrent.Callable<V>,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)]
4b454d968113001e544011c90fc7ba6408a68171|Mon Aug 08 15:49:03 CEST 2011||0|0|2|250|2017|89|43|7|14|5|5|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService$ListenableScheduledFuture, newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.util.concurrent.Callable<V>,long,java.util.concurrent.TimeUnit), newSymbol=java.util.concurrent.ScheduledExecutorService.schedule(java.util.concurrent.Callable<V>,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit), newSymbol=java.util.concurrent.ScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit), newSymbol=java.util.concurrent.ScheduledExecutorService.schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit), newSymbol=java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)]
9f9ffca114c92a8ba72f52033ed94c1117e1315e|Mon Aug 08 18:29:06 CEST 2011||0|0|0|250|2017|89|43|11|1|3|0|
7a95b2151f935aa1b95875200e6a7f999c8eeb1f|Mon Aug 08 18:32:55 CEST 2011||0|0|1|250|2017|89|43|9|31|3|0|
c92fa930bd9ce9229a7dea3dea29472acb6b494c|Mon Aug 08 18:36:47 CEST 2011||0|0|0|250|2017|89|43|8|1|4|0|
70453cbaefed33888d4b098a99c4e6fd295fd72b|Tue Aug 09 14:06:26 CEST 2011||0|0|1|250|2017|89|43|7|9|4|0|
2585c71e6158b4db59e3f5cfce44c8424f2b6311|Tue Aug 09 17:38:04 CEST 2011||0|0|6|250|2017|89|43|11|81|5|2|BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.util.concurrent.UncheckedExecutionException.<init>(java.lang.Exception), newSymbol=],BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.util.concurrent.UncheckedExecutionException.<init>(java.lang.String,java.lang.Exception), newSymbol=]
284c5aebcc91d15537094da23fe1d59eb058541d|Tue Aug 09 17:41:34 CEST 2011||0|0|0|250|2017|89|43|10|1|5|0|
38d9403a6875b6a9c0a551da50a77eabfb2c62ed|Tue Aug 09 17:51:37 CEST 2011||0|0|2|250|2018|89|43|8|35|3|0|
ecfd36e04848863229f5e946758fb32a8ab17ff1|Tue Aug 09 18:04:26 CEST 2011||0|0|1|250|2019|89|43|8|9|6|0|
dab38ee0da7e0883b72a5322ac112608b3713f86|Tue Aug 09 18:07:39 CEST 2011||0|0|1|250|2019|89|43|9|13|3|0|
5dbd44263855481dd3d0843eb98c892998af4812|Tue Aug 09 18:15:41 CEST 2011||0|0|19|249|2017|89|43|19|100|12|2|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.contains(java.lang.Object), newSymbol=com.google.common.collect.AbstractMultiset.contains(java.lang.Object)],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.BstAggregate, newSymbol=]
a961ac31197d5b221898539ceaa5be61dec4d1cc|Wed Aug 10 23:03:19 CEST 2011|unused imports.|0|0|1|249|2017|89|43|16|38|4|0|
0ae2d4fe60720233283579aea8c325bde5d60a6f|Fri Aug 12 14:51:04 CEST 2011|massive manual sync|2|0|11|249|2017|89|45|37|97|6|0|
e2899b353e58105dc6a0fd5e2605f4cdbea32abf|Fri Aug 12 16:46:31 CEST 2011|manual sync|1|0|1|250|2018|89|45|25|49|3|0|
4fbef9f220a86423f6ebc131c06bac5c3bb5e731|Mon Aug 15 23:23:49 CEST 2011|manual sync|1|1|75|250|2018|89|45|50|201|13|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.contains(java.lang.Object), newSymbol=com.google.common.collect.AbstractMultiset.contains(java.lang.Object)]
ea947ffc893512d103f44c119554ee38fd457b3f|Tue Aug 16 13:50:23 CEST 2011|manual sync|0|0|2|250|2018|89|44|38|33|11|0|
d2e06112416223cb5437d43c12a989c0adc7345b|Tue Aug 16 16:35:41 CEST 2011|add missing dependencies, and fix a few typos|0|0|0|250|2018|89|44|9|1|4|0|
d2576e967953ba6aec0cc20283d8714838bc1d75|Tue Aug 16 19:09:34 CEST 2011|remove unused imports.|0|0|2|250|2018|89|44|8|39|4|0|
5560bc10e7472f94e8f50831eb0907a35628e725|Wed Aug 17 17:14:44 CEST 2011|manual git sync|9|0|7|250|2021|89|44|17|72|5|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.add(E,int), newSymbol=com.google.common.collect.TreeMultiset.add(E,int)]
00b6d8823b0de865c769ff3438888c639448cfff|Wed Aug 17 20:13:32 CEST 2011|fix build|0|0|0|250|2021|89|44|14|1|3|0|
709d400204a574ffbed50e874821f8a2d32ef02b|Wed Aug 17 20:14:40 CEST 2011|ignores.|0|0|0|250|2021|89|44|8|1|7|0|
6923b5fac0feb7005429d0b24be93b91685f9637|Thu Aug 18 16:23:09 CEST 2011|manual sync|0|0|12|250|2021|89|44|13|91|7|12|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache$StatsCounter.recordCreateException(long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.CacheStats.totalCreateTime(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.CacheStats.createSuccessCount(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.CacheStats.createExceptionCount(), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.cache.AbstractCache$StatsCounter, newSymbol=com.google.common.cache.AbstractCache$StatsCounter.recordLoadSuccess(long)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.recordCreateException(long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.recordCreateSuccess(long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.CacheStats.averageCreatePenalty(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache$StatsCounter.recordCreateSuccess(long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.CacheStats.createExceptionRate(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.CacheStats.createCount(), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.cache.AbstractCache$StatsCounter, newSymbol=com.google.common.cache.AbstractCache$StatsCounter.recordLoadException(long)]
c33b595b65bf2b5a83117e53139b78e5fd0af8bd|Tue Aug 30 00:10:13 CEST 2011|delete IDEA files, and update .gitignore accordingly|0|0|0|250|2021|89|44|15|1|6|0|
956d3d3a40c6148de35957b1d0d4d8b268ba1ee6|Tue Aug 30 00:55:45 CEST 2011|manual sync|2|0|29|251|2039|91|54|114|148|5|2|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.contains(java.lang.Object), newSymbol=com.google.common.collect.AbstractMultiset.contains(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.iterator(), newSymbol=com.google.common.collect.TreeMultiset.iterator()]
c77ce7f12037fe1fee19635cc73eb6a658538119|Tue Aug 30 19:36:59 CEST 2011|- cleanup formatting, and add missing dependencies - use animal-sniffer-maven-plugin to verify 1.5 compatibility|0|0|0|251|2039|91|54|73|2|10|0|
bc3d55804a5e98a18849e04e3fe8e53bbe310d04|Tue Aug 30 23:49:45 CEST 2011|make more tests pass|0|0|0|251|2039|91|54|17|1|4|0|
964bbeb9831bb9e9b1fb3426cf9b1cc30c92c002|Wed Aug 31 02:20:12 CEST 2011|make all tests pass|0|0|1|251|2039|91|54|18|13|3|0|
f032011ce38eecea4ae0425bf9c78623c6b986de|Wed Aug 31 16:24:08 CEST 2011|specify plugin versions|0|0|0|251|2039|91|54|13|2|3|0|
f69e5a487b794508363c860422c4b0b996b91a14|Wed Aug 31 16:42:22 CEST 2011|update artifact names|0|0|0|251|2039|91|54|12|4|3|0|
4ca190810367bceba3dc35478ab8d3895f0cd92f|Wed Aug 31 16:53:10 CEST 2011|add javadoc generation|0|0|0|251|2039|91|54|10|1|3|0|
c8d9d9095315893882867ec7519888f83df41278|Thu Sep 01 01:40:43 CEST 2011|copyright and warning cleanup|0|0|30|251|2039|91|56|74|117|10|0|
dc01c7fb3e17f4179bd651694ee8eab1e4ef6390|Thu Sep 01 17:09:27 CEST 2011|add support for jdiff generation|0|0|0|251|2039|91|56|42|1|7|0|
b5def53eef1ab922c7c6ff608b2876bd2acbe03a|Thu Sep 01 19:19:25 CEST 2011|use 'latest' for non-release version|0|0|0|251|2039|91|56|13|1|3|0|
9d58d3bfcd1237217747562b86983d0dfdd6c516|Fri Sep 02 19:56:50 CEST 2011|remove unused xerces jar|0|0|0|251|2039|91|56|12|1|7|0|
89adf4023d9672f209e064700e1ea47ba22eca6d|Sat Sep 03 01:20:12 CEST 2011|test updates|0|0|0|251|2039|91|56|11|1|4|0|
4fc7c376154e26f694eead7bc6720cfe6a06653a|Tue Sep 06 16:13:44 CEST 2011|- add cache cleanup - scrub @since tags|0|0|219|251|2041|91|56|106|291|18|1|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.cache.Cache, newSymbol=com.google.common.cache.Cache.cleanUp()]
1513e307f1047b9677ee42ce5ad3b32b6201818a|Tue Sep 06 16:52:40 CEST 2011|split configuration out of execution so it will apply to other executions|0|0|0|251|2041|91|56|58|2|20|0|
afd2a9fe6d069050dbf5d13fa2967152d61027e4|Tue Sep 06 17:37:58 CEST 2011|update scm urls|0|0|0|251|2041|91|56|11|1|4|0|
75c1e6a324e878c0858d650f121c1d3cc7dff277|Tue Sep 06 22:11:17 CEST 2011|remove build.xml, and unneeded libs|0|0|0|251|2041|91|56|12|1|3|0|
d2eebdb1a15b401a48439ea7df44b28ac2a47861|Tue Sep 06 22:11:59 CEST 2011|deprecate throwCause|0|0|1|251|2041|91|57|10|36|8|0|
c24d831d266910f67eef3f54bec7abbc7b2314b9|Wed Sep 07 19:24:59 CEST 2011|javadoc cleanup|0|0|17|251|2041|91|57|20|125|12|0|
edd8c6856b3e6a759e726bb924682bf34383ea3d|Thu Sep 08 18:22:09 CEST 2011|doc cleanup|0|0|12|251|2041|91|57|26|101|9|0|
c24084136974dfb50adb252bdc4ed363faaa27c9|Fri Sep 09 15:10:30 CEST 2011|use new sonatype parent|0|0|0|251|2041|91|57|22|1|3|0|
1f00a91744712ce98b2512a73e617f1b517a6037|Mon Sep 12 18:36:22 CEST 2011|Fully qualify @links so that they actually work.|0|0|0|251|2041|91|57|11|1|3|0|
58b25281762b670b1559b0b7a3e5aa7f01b68f6b|Mon Sep 12 18:40:30 CEST 2011|Expose StandardXXX constructors, fixing external issue 701.|0|0|2|251|2041|91|57|11|34|7|0|
57a4677cc2def1228e7dd76fbb997826add30a8e|Mon Sep 12 18:44:38 CEST 2011|Visibility changes.|0|0|1|251|2041|91|57|11|46|3|0|
29d80d96ffbf32318de15706751386d963892cab|Mon Sep 12 18:52:52 CEST 2011|Add putUninterruptibly and takeUninterruptibly, and use them in the implementation of chain().|0|0|2|251|2043|91|57|13|50|3|0|
3d52e50b4e93523669d0a436dada37b9ab8fbd08|Mon Sep 12 19:01:01 CEST 2011|Improve @throws InterruptedException documentation for get().|0|0|1|251|2043|91|57|13|12|3|0|
95f6ef1fc6a2162170addddde38c341faa589679|Mon Sep 12 19:05:11 CEST 2011|Further Javadoc changes.|0|0|1|251|2043|91|57|10|30|5|0|
46f185a04d35d1e6c40a49d258f0247f395d8965|Mon Sep 12 19:09:21 CEST 2011|Better SerializableTester Javadoc.	Strip reference to internal SerializationChecker from Guava.|0|0|0|251|2043|91|57|10|1|3|0|
ef9505fc17e8bb888dfc891266192add41d7b08a|Wed Sep 14 21:49:14 CEST 2011|Merging BlockingQueues into Queues|0|0|0|251|2043|91|57|11|1|4|0|
0fd75ca0d5ef77b79b89ef8dc9ca72b7799258d5|Wed Sep 14 21:53:28 CEST 2011|Improve Javadoc of ArrayTable methods cellSet() and values()|0|0|1|251|2043|91|57|13|43|4|0|
5589a2c5b35b6463038121a5d4b453a5ce31fac1|Wed Sep 14 22:05:52 CEST 2011|Inline BaseHolder interface into Holder and Optional. It was causing issues to	Scala users and didn't really serve any purpose anyway. This also makes it	easier to start selectively eliminating some of the methods from Holder if we	want to do that.|0|1|1|251|2047|91|57|13|8|3|4|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.base.BaseHolder.or(T), newSymbol=com.google.common.base.Optional.or(T)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.base.BaseHolder.orNull(), newSymbol=com.google.common.base.Optional.orNull()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.base.BaseHolder.get(), newSymbol=com.google.common.base.Optional.get()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.base.BaseHolder.isPresent(), newSymbol=com.google.common.base.Optional.isPresent()]
055ca91078cdd419a49a2ab9d3a134d358e685fe|Wed Sep 14 22:14:10 CEST 2011|Eliminate GWT serialization warnings for HashBasedTable/TreeBasedTable and TreeMultiset.	As of <http://gwt-code-reviews.appspot.com/1544803>, GWT recognizes any annotation named @GwtTransient.|1|0|2|251|2047|91|57|12|45|3|0|
6aa742def37629a4d92742b0d6ecfe227508c940|Wed Sep 14 22:18:18 CEST 2011|@since tags|0|0|6|251|2047|91|57|16|83|5|0|
3ba2abcbae26e2943b5514910a3ccee4966bae65|Wed Sep 14 22:22:28 CEST 2011|Handling paths of the form x/../../b (bug 705)|0|0|1|251|2047|91|57|19|10|3|0|
73bc67770d8636e4ea514250536fca88b21929c8|Wed Sep 14 22:26:36 CEST 2011|Implement Range.isContiguousWith(Range), which defines the conditions under which two ranges will be coalesced in RangeSet.|0|0|1|251|2048|91|57|12|34|6|0|
6055146e0f6b02098512cbc686e2b43bbb63a8c4|Wed Sep 14 22:30:09 CEST 2011|Migrate SortedMaps.transform{Values,Entries} to Maps|0|0|2|251|2050|91|59|16|54|5|0|
61816638fc933cd40a152618d858e1000387b996|Wed Sep 14 22:34:35 CEST 2011|Reorganize methods between UnsignedLongs and UnsignedLong.	Make clear in the Javadoc the reasons to use each.|0|0|1|251|2048|91|59|18|14|4|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedLongs.saturatedCast(java.math.BigInteger), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedLongs.toBigInteger(long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedLongs.checkedCast(java.math.BigInteger), newSymbol=]
312e0a94847816fb6f4c4d3b24f90522a9992802|Thu Sep 15 16:21:10 CEST 2011|add ForwardingCache|1|0|0|253|2060|91|60|12|38|3|0|
64b32d8a33f284adc71e423515b93fa83694fe97|Thu Sep 15 16:25:07 CEST 2011|Provide serialization for UnsignedLong|0|0|0|253|2060|91|60|11|1|6|0|
1069aa565069b30bbedb2c03a27a8b682b2ac1b1|Fri Sep 16 19:39:00 CEST 2011|update since to 10|0|0|1|253|2060|91|60|11|33|4|0|
8f6162205cf8746cf3a6c3c01a64b2af8fa028aa|Fri Sep 16 19:42:32 CEST 2011|Begin adding "most common element" operations to Multisets.|0|0|2|253|2061|91|60|12|47|4|0|
ad96fd0ccf5c0d63fbd1f2911e608e353cd3e61d|Fri Sep 16 19:46:05 CEST 2011|Add UnsignedInts to primitives.|1|0|0|254|2073|91|60|14|12|3|0|
7d537203053ef3fdd18dbf0a4f3273e44bc977c4|Fri Sep 16 19:52:50 CEST 2011|Move SortedMaps.difference to Maps|0|0|2|254|2074|91|61|15|60|3|0|
ad738e396e084c7068bcb17d21a169ba08bb1209|Fri Sep 16 20:02:47 CEST 2011|Allow nulls in GeneralRange.|0|0|1|254|2074|91|61|17|30|3|0|
75cdf1695d9d40809507991eed6a8acf6be2911b|Fri Sep 16 20:06:06 CEST 2011|implement basic serializability for ComputingCache|0|0|3|254|2074|91|61|14|67|4|1|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.removalListener(com.google.common.cache.RemovalListener<K1,V1>), newSymbol=com.google.common.cache.CacheBuilder.removalListener(com.google.common.cache.RemovalListener<? super K1,? super V1>)]
60dcf63ae6d58e4bd0bbab26ef5c96c736f4b1bf|Fri Sep 16 20:09:25 CEST 2011|make tests of unreleased classes GoogleInternal|0|0|0|254|2074|91|61|13|1|7|0|
9edd26602faeaa033f2426900ef0da148d24f45d|Fri Sep 16 20:17:08 CEST 2011|Update testers to recognize that null may be a restricted element|0|0|0|254|2074|91|61|11|1|3|0|
c3e76e441b6b0b56edbff6c903cb245e1056b7ea|Fri Sep 16 20:21:21 CEST 2011|Make Bst framework null-compatible when the comparator is|0|0|3|254|2074|91|61|11|31|3|0|
e34196b55437eb5d687cb4d319826c1ad1f86252|Fri Sep 16 20:25:29 CEST 2011|Update primitives package-info|0|0|0|254|2074|91|61|11|1|3|0|
550c8c54f190cc722c46b0b9ddd7b3dc0e58e8e3|Tue Sep 20 03:47:09 CEST 2011|Drop in SortedTreeMultiset in place of TreeMultiset.|0|0|4|254|2079|91|61|12|38|6|5|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.clear(), newSymbol=com.google.common.collect.TreeMultiset.clear()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.remove(java.lang.Object,int), newSymbol=com.google.common.collect.TreeMultiset.remove(java.lang.Object,int)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.entrySet(), newSymbol=com.google.common.collect.AbstractMultiset.entrySet()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.size(), newSymbol=com.google.common.collect.TreeMultiset.size()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.setCount(E,int), newSymbol=com.google.common.collect.TreeMultiset.setCount(E,int)]
60abb1cc79bf78d53b59cfb540f6c67dea4f9d1d|Tue Sep 20 03:50:47 CEST 2011|allow all write operations on asMap view|0|0|2|254|2079|91|61|15|51|4|0|
1ed32d483d0e583f7a245b60932c8c291c9a1e37|Tue Sep 20 03:54:42 CEST 2011|Fix ImmutableMultiset 1.6.0u24 compilation error.|0|0|1|254|2079|91|61|13|39|3|0|
097102081ab68bdefcbc8ad7977a760565f87e51|Tue Sep 20 03:58:36 CEST 2011|Link {Iterables,Collections2,Lists}.transform.	Refer to ForkJoinTask.join from Futures.getUnchecked Javadoc.	Remove an unnecessary cast.	Also, fix a typo in the InterruptedRuntimeException deprecation instructions.|0|0|4|254|2079|91|61|13|59|3|0|
2a4a1074f4a911eb3d233473e14d137cef2a7f43|Tue Sep 20 04:06:29 CEST 2011|Fix compile problems with Guava.|0|0|0|254|2079|91|61|15|1|7|0|
025874e98e89f2fc5f60ba15d7f0c75b61a2d88e|Tue Sep 20 04:09:53 CEST 2011|Eliminate most uses of non-Unicode whitespace in com.google.common tests.|0|0|0|254|2079|91|61|13|1|3|0|
211010cdea45f7296d2ca60a4276d7a67ccbb575|Tue Sep 20 21:58:40 CEST 2011|Clone of Louis's UnsignedLong(s) documentation CL. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24073780|0|0|2|254|2080|91|61|31|42|3|0|
997fcecd77d595b28870417d3cc01cd89a653754|Thu Sep 22 20:21:44 CEST 2011|- Fix handling of filenames that contain more than one period as reported in bug 716 - Fix problem with simplifying paths that begin ./|0|0|1|254|2080|91|61|23|8|3|0|
0b76a315b803465779786630c967df15ba2d7630|Thu Sep 22 20:22:44 CEST 2011|- have Cache.size() return a long - remove Cache.activeEntries ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24109421|0|0|6|254|2077|91|61|14|74|3|6|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.Cache.activeEntries(int), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.ForwardingCache.size(), newSymbol=com.google.common.cache.ForwardingCache.size()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache.activeEntries(int), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.Cache.size(), newSymbol=com.google.common.cache.Cache.size()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.AbstractCache.size(), newSymbol=com.google.common.cache.AbstractCache.size()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.ForwardingCache.activeEntries(int), newSymbol=]
27f1f61eab9e0af0eeb33ed35027ae8d93dbfcf6|Thu Sep 22 21:19:16 CEST 2011|Release common.math package. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24109421|4|0|0|257|2113|91|61|18|22|3|0|
3b89bebb16858aa352b4018c54af3c2aba8902db|Thu Sep 22 23:58:55 CEST 2011|Fix indentation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24147455|0|0|1|257|2113|91|61|12|16|3|0|
83e45164044f16362e0d6921b6254f3c85ff3fd5|Fri Sep 23 19:00:59 CEST 2011|Add some URI resolution tests to the simplifyPath tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24166215|0|0|0|257|2113|91|61|10|1|3|0|
dc850b69ccba246f601a5205ad615de8064be665|Fri Sep 23 19:09:24 CEST 2011|forbid null return from cache lookups, and null parameter in invalidate ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24168264|0|0|3|257|2113|91|61|11|57|3|0|
7f8883575ddc64ab3b40b08e635e7992bf06c9e2|Fri Sep 23 19:17:15 CEST 2011|Extensive tests for simplifyPath. This doesn't cover tests beginning with a character other than /, which is unfortunate, but realpath, which I used to generate the expected outputs, would resolve any .. at the beginning of the input path, which isn't what we want here. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24168601|0|0|0|257|2113|91|61|12|1|3|0|
d35febe2c6eb578026310b00f9fede73ee8d8689|Mon Sep 26 18:02:35 CEST 2011|fix common.math copyrights ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24212498|0|0|4|257|2113|91|61|14|16|3|0|
8870f03f567756585168c17b70c691adcc6ed456|Mon Sep 26 18:06:20 CEST 2011|Add a method to Files that returns the file extension from a given file name. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24212884|0|0|1|257|2114|91|61|13|12|3|0|
97181ffb37ea82ae0ac70f2d3c99dbdcd837eb1f|Mon Sep 26 18:10:58 CEST 2011|Doc-only changes to the InternetDomainName family clarifying validation options and fixing some references to deprecated methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24213290|0|0|1|257|2114|91|61|11|36|6|0|
b0fbb1287e8f0bbae2077210f3f2c72c819c4913|Mon Sep 26 21:16:38 CEST 2011|One missing copyright, one missing @since. Should cherrypick, but not end of world if not. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24215692|0|0|1|257|2115|91|61|11|40|3|0|
b8c92d6a6bc75be4d4983c9901fa88d8b74e1fb5|Mon Sep 26 21:21:13 CEST 2011|Export input file for new CleanPathTest tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24216931|0|0|0|257|2115|91|61|17|1|3|0|
d725feea787baab9facdd90727888981190d0d44|Tue Sep 27 16:13:13 CEST 2011|introduce maximumWeight ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24224790|1|0|2|258|2118|91|61|29|65|3|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.CacheBuilder.maximumSize(int), newSymbol=]
649834561cf07e6cb630a7a6420ee6b32dbed7cd|Tue Sep 27 20:12:40 CEST 2011|Louis's changes to remove JDK6-isms from DoubleMath ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24246702|2|0|3|259|2126|91|61|20|18|3|0|
f4cace556e08d2576de45f6d85289afcba74f521|Thu Sep 29 18:53:00 CEST 2011|update since on simplifyPath to 11.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24251651|0|0|1|259|2126|91|61|11|12|3|0|
622cdb75f9b7a5c87d50ca0e44753f36adf2ce79|Thu Sep 29 19:00:56 CEST 2011|Rename CleanPathTest to FilesSimplifyPathTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24256474|0|0|0|259|2126|91|61|11|1|3|0|
b00fc801c438f40a9f116a2f85517944ae601f07|Mon Oct 03 16:34:54 CEST 2011|A round of promotions/deletions/updates for Guava 11.0. Try to minimize use of MOE: magic somewhat. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24279246|7|4|17|261|2202|97|42|27|100|12|21|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.MapEvictionListener, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Equivalences.pairwise(com.google.common.base.Equivalence<? super T>), newSymbol=],BC[kind=CLASS_NOW_ABSTRACT, impactedSymbol=com.google.common.util.concurrent.ListenableFutureTask, newSymbol=com.google.common.util.concurrent.ListenableFutureTask],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.makeUninterruptible(java.util.concurrent.Future<V>), newSymbol=],BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.util.concurrent.ListenableFutureTask.<init>(java.lang.Runnable,V), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardKeySet(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.done(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardEntrySet(com.google.common.base.Supplier<java.util.Iterator<java.util.Map$Entry<K,V>>>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.cancel(), newSymbol=],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.collect.ImmutableSortedSet.of(E[]), newSymbol=com.google.common.collect.ImmutableSortedSetFauxverideShim.of(E[])],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapMaker.evictionListener(com.google.common.collect.MapEvictionListener<K,V>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardValues(), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractListenableFuture, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.ExecutionList.run(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.makeChecked(java.util.concurrent.Future<V>,com.google.common.base.Function<java.lang.Exception,X>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMultiset.standardElementSet(), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.UninterruptibleFuture, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Throwables.throwCause(java.lang.Exception,boolean), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.EvictionListeners, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.makeListenable(java.util.concurrent.Future<V>), newSymbol=],BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.util.concurrent.ListenableFutureTask.<init>(java.util.concurrent.Callable<V>), newSymbol=]
e5a1fab31f45cee47eaedd828e9a9e525e4da69a|Mon Oct 03 16:38:48 CEST 2011|Replace unused generic type parameter with wildcard. If the Iterable is a Collection, use its isEmpty() method instead of constructing an Iterator instance. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24282737|0|0|1|261|2202|97|42|20|41|4|2|BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.collect.Iterables.isEmpty(java.lang.Iterable<T>), newSymbol=com.google.common.collect.Iterables.isEmpty(java.lang.Iterable<? extends java.lang.Object>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.isEmpty(java.lang.Iterable<T>), newSymbol=com.google.common.collect.Iterables.isEmpty(java.lang.Iterable<? extends java.lang.Object>)]
08bab65fac9237d965b1fe9d5f0afa77fcf5ca95|Mon Oct 03 16:42:39 CEST 2011|Implement a new Service base class for services that need to execute some functionality periodically. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24292212|1|0|2|264|2217|97|42|16|40|4|0|
4a065e382213f084402c05e6131b1505545bd954|Mon Oct 03 16:50:07 CEST 2011|use isFinite instead of getExponent, from Louis ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24305670|0|0|2|264|2217|97|42|13|9|3|0|
0b048ef06d395a8d2fe4a46322a3f5725c861522|Mon Oct 03 16:55:13 CEST 2011|externally remove methods scheduled for deletion in release 11.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24306560|0|0|2|264|2211|97|36|65|51|5|6|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.GenericMapMaker.maximumSize(int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapMaker.expireAfterAccess(long,java.util.concurrent.TimeUnit), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.GenericMapMaker.expireAfterAccess(long,java.util.concurrent.TimeUnit), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.GenericMapMaker.expireAfterWrite(long,java.util.concurrent.TimeUnit), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapMaker.expireAfterWrite(long,java.util.concurrent.TimeUnit), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapMaker.maximumSize(int), newSymbol=]
dcd0f8dda7d2458011c71054d6a40a0f8437125a|Mon Oct 03 16:59:24 CEST 2011|I give up. I can no longer maintain the in-place algorithm. The bugs have defeated me.|0|0|1|264|2211|97|36|14|12|4|0|
d30cc68a0c604c0fe737777291699caf2e1b1a29|Mon Oct 03 17:03:27 CEST 2011|Make IntMath @GwtCompatible so that it can be used in common.collect overflow checks. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24308523|0|0|2|264|2211|97|36|16|15|3|0|
0e1b915cb9a181809b1891146e7dfb6ab069b8b9|Mon Oct 03 17:13:43 CEST 2011|- rename ComputingCache to LocalCache - internally refer to computation as loading ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24327248|1|1|2|264|2211|97|36|15|61|3|0|
00dbf54a864d873d7efd8093c6f57e4dc2992f5b|Mon Oct 03 17:21:29 CEST 2011|Replace old 'simple' Strings.repeat with more complex, but faster implementation based on binary exponentiation. Add benchmark to compare with old method. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24327769|0|0|1|264|2211|97|36|15|9|3|0|
85ea2911e041fa53e3f81e36fd81dbc4cd4f2969|Mon Oct 03 17:31:46 CEST 2011|add Cache.refresh ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24327805|0|0|8|264|2215|97|35|17|75|3|4|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.cache.AbstractCache$StatsCounter, newSymbol=com.google.common.cache.AbstractCache$StatsCounter.recordMiss()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.cache.Cache, newSymbol=com.google.common.cache.Cache.refresh(K)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache$StatsCounter.recordConcurrentMiss(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.recordConcurrentMiss(), newSymbol=]
11fc7c2bb6b7deb4187a58f349032a4e375c752c|Mon Oct 03 17:36:21 CEST 2011|remove NullCache, now that we support immediate eviction|0|0|1|264|2215|97|35|17|42|3|0|
b138010e6d5ad6effc11e7e729080cfb3e1b72de|Mon Oct 03 17:42:22 CEST 2011|Resolve "." to "." instead of the empty string.|0|0|1|264|2215|97|35|13|12|5|0|
6b8a5f91cdc57f2bee24a62e8a871603a48b02e4|Mon Oct 03 21:38:03 CEST 2011|rename MapMakerTests to MapMakerTest for Guava's sake ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24372219|0|0|0|264|2215|97|35|12|1|4|0|
99335d2f4143510a2c3319e72b2ce74f14fe1986|Mon Oct 03 21:44:56 CEST 2011|Integrate common.math into common.collect. From Louis: http://codereview.appspot.com/5142053/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24372231|0|0|3|264|2215|97|35|14|59|6|0|
b49c1296eb569afcaee5b521ad2d0c7afd921d8f|Mon Oct 03 21:52:04 CEST 2011|Add extensive tests for simplifyPath that aren't prefixed with /b/c. These tests caught the "." -> "" problem (though I initially ignored it... oops) and would have caught the if->while problem raised during review. I suspect they would also have caught the existing bugs, but I haven't yet confirmed this. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24372607|0|0|0|264|2215|97|35|21|1|2|0|
e4916cf1ad5e18427e76851741c88eb901d4bf8c|Mon Oct 03 21:57:14 CEST 2011|Fix TreeMultiset.subMultiset().size() overflow condition. From Louis: http://codereview.appspot.com/5153041/|0|1|4|264|2215|97|35|37|41|6|0|
c660cab465638fe5b82c26b2f4b97ce1633e84d7|Mon Oct 03 22:00:26 CEST 2011|fix broken Guava tests ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24377974|0|0|0|264|2215|97|35|15|1|3|0|
a767620313fe5fdb127a6c1eaabc3a6cdf28d459|Mon Oct 03 22:07:34 CEST 2011|Implement expireAfter*(0, *) in terms of maximumSize(0). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24379350|0|0|1|264|2215|97|35|13|46|3|0|
c88a4a8aa5bfa6e0508f3de6739831f1a76c4fa3|Mon Oct 03 23:26:21 CEST 2011|release MultisetNavigationTester ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24382979|0|0|0|264|2215|97|35|12|1|3|0|
64c42745d40d75332f97d11e1c3443e12fe22bea|Tue Oct 04 15:30:50 CEST 2011|remove incomplete test|0|0|0|264|2215|97|35|11|1|4|0|
7df4faca1bac3e9ce35ae3ecbf77a1b7b4118e95|Tue Oct 04 15:49:41 CEST 2011|call newBuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24383532|0|0|1|264|2215|97|35|10|42|3|0|
b5de7f6c155739d221f30136ebac74493aec4143|Tue Oct 04 15:53:08 CEST 2011|hold strong references to new entries added during testing loops ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24399894|0|0|0|264|2215|97|35|12|1|4|0|
2ed70e770c428854c7e12988bda3883ec0bf9957|Thu Oct 06 17:44:16 CEST 2011|add Maginatics ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24433529|0|0|0|264|2215|97|35|10|2|3|0|
0c60dc3c8e760b0583cde051f4253f6960fe9ea8|Thu Oct 06 17:47:25 CEST 2011|allow Cache.asMap().get(Object) to count as an access wrt eviction ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24445289|0|0|1|264|2215|97|35|12|42|5|0|
620820eb11c587909fedcd6fd6455d4e6b4a9d2d|Thu Oct 06 18:23:59 CEST 2011|un-deprecate FinalizableReferenceQueue and friends ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24467300|0|0|6|264|2215|97|33|13|9|4|0|
67ccb7b9674578700f80821d18899644a397b8b3|Fri Oct 07 14:56:42 CEST 2011|Add overloaded primitive methods to ToStringHelper to avoid autoboxing ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24476666|0|0|1|264|2227|97|33|11|8|2|0|
c4ac9f1c9742de5d3f402c02d82f435a44045093|Mon Oct 10 16:06:47 CEST 2011|only call waitForValue on loading references ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24502384|0|0|1|264|2227|97|33|12|60|3|0|
64db350ddbb15e42b936560e636962d6abc0fd04|Mon Oct 10 16:11:14 CEST 2011|add Cache.get(K, Callable<V>) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24506370|0|0|6|264|2230|97|33|17|66|5|1|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.cache.Cache, newSymbol=com.google.common.cache.Cache.get(K,java.util.concurrent.Callable<V>)]
f1d53007f14206d37b2458433fba71217dbe55d5|Mon Oct 10 16:12:46 CEST 2011|tweaks ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24509876|0|0|1|264|2230|97|33|15|39|3|0|
d94b5bf4170459c301f79a93678e7a4e8e576da8|Mon Oct 10 16:13:43 CEST 2011|doc cleanup ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24510024|0|0|1|264|2230|97|33|13|44|4|0|
ffe659d2a0ff60efd6d4fd0568c0a2fa1d5db76f|Mon Oct 10 20:03:14 CEST 2011|Fix @param javadoc for UnsignedInts.parseUnsignedInt() to reflect actual parameter name. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24544750|0|0|1|264|2230|97|33|12|14|4|0|
18a39333df1fa0179495a66eb2d8506313a961fa|Mon Oct 10 20:04:11 CEST 2011|inline Callables.throwing ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24545964|0|0|0|264|2230|97|33|12|1|5|0|
f14a101d537c1627a16b6d6d653cf8441049690c|Tue Oct 11 13:53:31 CEST 2011|remove lenient builder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24546639|0|0|2|264|2230|97|33|12|62|3|0|
186bf93f6405eb3ad6c63b1b8db7e49dcd81de36|Tue Oct 11 13:54:29 CEST 2011|Add Itera{bles,tors}#tryFind ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24555364|0|0|2|264|2232|97|33|15|39|3|0|
2f345c3c276773d555938699f467f722ade40441|Wed Oct 12 16:47:35 CEST 2011|Replace evictionQueue and expirationQueue with accessQueue and writeQueue. Also tightly couple accessTime with expirationQueue, and writeTime with writeQueue. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24572156|0|0|1|264|2232|97|33|19|60|5|0|
d08ed948cbf80a3633f50edbbdcbbce75deb553b|Wed Oct 12 16:49:08 CEST 2011|- allow expireAfterWrite + expireAfterAccess - throw AssertionError on computation code paths which musn't return null ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24573984|0|0|2|264|2232|97|33|16|58|3|0|
6ee12c7a936073f098b809bd25f826c329385978|Wed Oct 12 16:50:43 CEST 2011|Mark Caches as final. Update ImmutableTable.Builder#putAll to use ImmutableTable.Builder#put(Cell). Update docs on Files#simplifyPath ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24574078|0|0|2|264|2232|97|33|13|41|3|0|
7ecaf592b89798c9d35c056cd957e3522354bdbb|Wed Oct 12 16:54:04 CEST 2011|Add c.g.c.net.HttpHeaders to Guava (since 11.0). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24584184|1|0|0|265|2232|171|33|13|5|3|0|
83cd3a4f56120309323a8db0ff9f848775d52f58|Wed Oct 12 16:56:09 CEST 2011|Remove Iterables#rotate. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24585036|0|0|0|265|2232|171|33|12|1|5|0|
aaa31fda95b49f81f46411a7f1c75d99d4d20c61|Wed Oct 12 16:58:49 CEST 2011|Disallow null-returning suppliers in Optional#or ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24585583|0|0|1|265|2232|171|33|12|8|3|0|
872d2894d3b7f10013b7b80d5261a4f983abbf8c|Wed Oct 12 17:05:15 CEST 2011|drop spurious '?' in UnsignedInts.toLong() javadoc|0|0|1|265|2232|171|33|11|11|3|0|
d446df5924608c8d4b202488be6a842363728bf7|Wed Oct 12 17:06:18 CEST 2011|Reformatting-only CL: reflow ConcurrentHashMultiset to make it consistently 100 characters. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24603115|0|0|1|265|2232|171|33|11|39|3|0|
f9736b98decdccb33084604577d6b865609322b9|Thu Oct 13 16:30:09 CEST 2011|only read ticker once per operation ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24604473|0|0|2|265|2232|171|33|13|71|3|0|
cf4dce06543d1fd7c63260fd1775e347e359390c|Thu Oct 13 16:34:00 CEST 2011|Add Optional.asSet()|0|0|1|265|2233|171|33|15|9|4|1|BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.base.Optional, newSymbol=com.google.common.base.Optional.asSet()]
0e9af8d8fa16397ee9797f101aa35d799dc099b2|Thu Oct 13 16:36:32 CEST 2011|standardize test modules ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24612598|0|0|0|265|2233|171|33|15|1|3|0|
8124eb561b979c5d4300f5694f8871d1d7a5619e|Thu Oct 13 16:51:28 CEST 2011|Initial release of the escapers into Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24623640|14|0|0|279|2279|174|33|21|25|3|0|
a63efb286b7a54c2965e32ab045afe32439d03d1|Fri Oct 14 15:38:11 CEST 2011|more gwt test standardization ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24636709|0|0|0|279|2279|174|33|15|1|25|0|
fcb4a1b81a96fd658f7f25018cdf25e41ea6453e|Fri Oct 14 15:51:20 CEST 2011|test cleanup ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24637603|0|0|1|279|2279|174|33|12|5|3|0|
1435b80485acc907e218d53068f41ff6dd95f8fa|Fri Oct 14 16:10:48 CEST 2011|Run common.testing tests under GWT GWT-enable a few other classes that are trivial to GWT-enable. Open-source the common.testing tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24640713|0|0|0|279|2279|174|33|17|1|3|0|
f2e25e258c514a4c1b58d2ba97a37b1085794936|Fri Oct 14 17:20:27 CEST 2011|Release GcFinalization. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24667108|0|0|0|279|2279|174|33|14|1|4|0|
660ff323d335810d7114c178d938f3c94de18e07|Tue Oct 18 16:09:50 CEST 2011|add missing Apache header ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24673684|0|0|0|279|2279|174|33|11|1|5|0|
5ea28885057164801a8c59d8d3975658d29e451c|Tue Oct 18 16:12:41 CEST 2011|Trivial cleanup. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24676130|0|0|1|279|2279|174|33|12|35|3|0|
bd4ced02fe51dbd9153c1e0622aa90ad38e42bc0|Tue Oct 18 16:17:07 CEST 2011|Just noticed a few missing constructors while looking at javadocs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24713377|0|0|2|279|2279|174|33|12|14|3|2|BC[kind=CONSTRUCTOR_NOW_PROTECTED, impactedSymbol=com.google.common.base.CharMatcher.<init>(), newSymbol=com.google.common.base.CharMatcher.<init>()],BC[kind=CONSTRUCTOR_NOW_PROTECTED, impactedSymbol=com.google.common.cache.CacheLoader.<init>(), newSymbol=com.google.common.cache.CacheLoader.<init>()]
7abeec86044d5cbee6e615af1c053f3e1ce04b43|Tue Oct 18 16:18:34 CEST 2011|Manually reject leading plus signs since JDK7 won't. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24713441|0|0|1|279|2279|174|33|12|10|3|0|
bd5c0d6cb2cf91d7fb8ea573f94116b4181b58f6|Tue Oct 18 16:19:31 CEST 2011|Remove reference to done() from documentation. Clumsily attempt to document the wart of a visible done() method that no one can call. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24720806|0|0|1|279|2279|174|33|11|7|6|0|
57670278b2d635bdc4011c2f1aee9b0a198accc0|Tue Oct 18 18:19:27 CEST 2011|fix a flaky test by using a FakeTicker ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24746343|0|0|0|279|2279|174|33|12|2|3|0|
c98da2e62ba1635fd883bfa3a8754b0c7d2ea1f5|Wed Oct 19 14:30:00 CEST 2011|rename CustomConcurrentHashMap to LocalCacheAsMap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24749721|1|1|3|279|2279|174|33|17|71|3|0|
64f16597f629142dcefc2b914089a22000511802|Wed Oct 19 14:31:28 CEST 2011|Move merge sorting code out of TreeBasedTable. Add mergeSorted() functionality to Iteratorables. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24751437|0|0|3|279|2281|174|33|20|49|3|0|
53921947d568c284669a95de482579ffe40f329e|Wed Oct 19 14:32:54 CEST 2011|Declare mergeSorted() return type as Iterable instead of UnmodifiableIterable, which is private. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24756036|0|0|1|279|2281|174|33|18|42|6|1|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.Iterables.mergeSorted(java.lang.Iterable<? extends java.lang.Iterable<? extends T>>,java.util.Comparator<? super T>), newSymbol=com.google.common.collect.Iterables.mergeSorted(java.lang.Iterable<? extends java.lang.Iterable<? extends T>>,java.util.Comparator<? super T>)]
d099e2b65d5ae3b5fa9e31ff5206dd4b51ba2ce1|Wed Oct 19 14:35:23 CEST 2011|BigIntegerMath.factorial rewritten to be faster. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24767128|0|0|4|279|2281|174|33|16|19|3|0|
79a6e8977e7eae259909a769a35fcd5c6cb399bc|Thu Oct 20 16:32:32 CEST 2011|Put the timeout duration into the exception detail message. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24781085|0|0|0|279|2281|174|33|13|1|3|0|
034c881e4fd9c148da7aa4aa824c503071b51ffb|Fri Oct 21 14:07:09 CEST 2011|Betafy ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24809615|0|0|4|279|2281|174|33|13|16|2|0|
6d2ff1d9bce1a5c068ba83786ab9007d5e99b9d5|Fri Oct 21 14:11:37 CEST 2011|add Cache.getAll and CacheLoader.loadAll ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24824285|0|0|7|280|2288|174|33|16|72|4|8|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.cache.Cache, newSymbol=com.google.common.cache.Cache.invalidateAll(java.lang.Iterable<? extends java.lang.Object>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache$StatsCounter.recordHit(), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.cache.AbstractCache$StatsCounter, newSymbol=com.google.common.cache.AbstractCache$StatsCounter.recordMisses(int)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.recordHit(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache$StatsCounter.recordMiss(), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.cache.Cache, newSymbol=com.google.common.cache.Cache.getAll(java.lang.Iterable<? extends K>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.cache.AbstractCache$StatsCounter, newSymbol=com.google.common.cache.AbstractCache$StatsCounter.recordHits(int)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.recordMiss(), newSymbol=]
125c1b340ad55cc3fcb30db77cadab6c152339a7|Fri Oct 21 14:13:09 CEST 2011|Add GWT tests for cache and labs.concurrent. These are the last two packages that use java_and_gwt_library but not java_and_gwt_tests (excluding annotations and labs.converter, both of whose GWT-compatible classes are all annotations). The newly added tests discovered that Cache.gwt.xml contains dependencies that the package doesn't declare, and I've removed them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24827412|0|0|0|280|2288|174|33|15|1|8|0|
5dc1f62c8d234c8eb45bac7d9c4732eca59f67a5|Mon Oct 24 15:24:50 CEST 2011|Changing ImmutableList.of(E[]) and ImmutableSet.of(E[]) to be non-public. Callers should have been changed already to call .copyOf(E[]). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24840447|0|0|3|280|2286|174|31|13|41|6|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ImmutableList.of(E[]), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ImmutableSet.of(E[]), newSymbol=]
3daf3f9a1cfb17447b2afcc81947b54a19a23a2d|Mon Oct 24 15:26:33 CEST 2011|Optimize BigIntegerMath.sqrt. Louis's: http://codereview.appspot.com/5130047/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24844188|0|0|2|280|2286|174|31|15|10|5|0|
99091e882f9c6985315f9498b2125af9141af431|Mon Oct 24 15:28:06 CEST 2011|Introduce Tables.unmodifiable(RowSorted)Table. From Louis: http://codereview.appspot.com/5266049/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24846124|0|0|2|280|2288|174|31|15|65|4|0|
77f56b0a3f6b34790c0ffe9830cbf591ff0c5752|Mon Oct 24 15:29:42 CEST 2011|rename CustomConcurrentHashMap to MapMakerInternalMap rename LocalCacheAsMap to LocalCacheInternalMap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24846402|2|2|6|280|2288|174|31|25|79|3|0|
75ac5fd70fb316fcdcf9428a5d763d8db4fbe744|Mon Oct 24 15:31:14 CEST 2011|move LocalCache into LocalCacheInternalMap, then rename LocalCacheInternalMap to LocalCache ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24848838|0|1|2|280|2288|174|31|28|65|6|0|
08fb8bc14dff5e928840d4e95176b1279bb4ea58|Tue Oct 25 16:05:15 CEST 2011|cleanup stats collection workarounds from MapMaker ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24891730|0|0|2|280|2288|174|31|17|61|3|0|
c321d666797914e0bc01f106bf0bb59a7738f8b6|Wed Oct 26 03:36:43 CEST 2011|Bring documentation of Service.{start,stop}().cancel() in line with reality. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24922495|0|0|1|280|2288|174|31|15|8|3|0|
aac333b616c49840a060f600fed3a8db49251167|Wed Oct 26 15:38:33 CEST 2011|add Cache.getIfPresent, Cache.put, and CacheBuilder.build() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24936790|0|0|5|280|2298|174|31|16|71|4|5|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.Cache.getAll(java.lang.Iterable<? extends K>), newSymbol=com.google.common.cache.Cache.getAll(java.lang.Iterable<? extends K>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.cache.Cache, newSymbol=com.google.common.cache.Cache.put(K,V)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.cache.Cache, newSymbol=com.google.common.cache.Cache.getIfPresent(K)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.ForwardingCache.getAll(java.lang.Iterable<? extends K>), newSymbol=com.google.common.cache.ForwardingCache.getAll(java.lang.Iterable<? extends K>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.cache.Cache, newSymbol=com.google.common.cache.Cache.getAllPresent(java.lang.Iterable<? extends K>)]
c06d0ad496c0563030950a49122aba46a95faaf5|Thu Oct 27 16:03:49 CEST 2011|Update class docs of HostAndPort regarding immutability. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=24957966|0|0|1|280|2298|174|31|18|10|3|0|
9b1de11918c7e17b02c883365b1d13532988ee05|Thu Oct 27 15:55:28 CEST 2011|Add AtomicDouble and friends.|2|0|0|282|2321|174|31|13|8|3|0|
f5fd39f531deb5518d423913c0b0442857de2859|Mon Oct 31 12:50:39 CET 2011|Add CacheStats.plus() similar to minus(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25033829|0|0|1|282|2322|174|31|13|11|3|0|
0fd5af56f1f124a53aa91250531b24c8d9564643|Tue Nov 01 12:43:58 CET 2011|Defer building of error message. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25067192|0|0|1|282|2322|174|31|13|15|4|0|
4394fd2ad92e334ff0ac2d98ee931a773b567407|Tue Nov 01 12:45:33 CET 2011|Fix deadlock in CompositeService when attempting to shutdown a FAILED service.  Also, when shutting down services make sure all services are either TERMINATED or FAILED before notifyingStopped or notifyingFailed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25070823|0|0|1|282|2322|174|31|13|13|6|0|
c6aa1e3c0282de8ac6c5d142cd02e65bdefd9395|Tue Nov 01 12:47:04 CET 2011|Simplify BigIntegerMath.factorial logic. From Louis: http://code.google.com/r/wassermanlouis-guava/source/detail?r=4ff33ce527b87451c7ee92136d29664fb2c750e1&name=simplify-big ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25071062|0|0|1|282|2322|174|31|13|11|3|0|
2837f9fe2b6b9943f5ea46794721ea04e6b1af53|Wed Nov 02 13:58:16 CET 2011|split LoadingCache out of Cache interface ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25099006|3|0|6|286|2338|174|31|20|73|3|2|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.cache.AbstractCache.getIfPresent(K), newSymbol=com.google.common.cache.Cache.getIfPresent(K)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.CacheBuilder.build(com.google.common.cache.CacheLoader<? super K1,V1>), newSymbol=com.google.common.cache.CacheBuilder.build(com.google.common.cache.CacheLoader<? super K1,V1>)]
eea6e7bfc9fe9475a6b32579a2fec75ae324ff8b|Wed Nov 02 14:01:49 CET 2011|Use RuntimeException to make things a little more convenient for test authors.  Forcing users to deal with InterruptedException and TimeoutException does not seem sufficiently useful in a _testing_ utility.  Controversial. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25119032|0|0|0|286|2338|174|31|19|2|8|0|
6f84ad2c0489f40b8d34d4d6840ae25e1ef4f96a|Wed Nov 02 16:28:47 CET 2011|deprecated/remove LoadingCache methods from Cache|0|0|3|286|2332|174|40|13|46|4|6|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache.getAll(java.lang.Iterable<? extends K>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.ForwardingCache.getAll(java.lang.Iterable<? extends K>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.Cache.getAll(java.lang.Iterable<? extends K>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache.refresh(K), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.Cache.refresh(K), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.ForwardingCache.refresh(K), newSymbol=]
3e537c1c5aea2b676eb8e5ac8c9cfc1c0c837772|Thu Nov 03 15:12:20 CET 2011|Remove JAVA_WHITESPACE. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25139131|0|0|1|286|2332|173|40|13|10|3|1|BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.JAVA_WHITESPACE, newSymbol=]
9745076bfb78c1335b94b0c2b877d6425ab2a733|Thu Nov 03 15:13:25 CET 2011|add CacheBuilder.refreshInterval ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25139834|0|0|6|286|2333|173|40|16|65|5|3|BC[kind=METHOD_NO_LONGER_THROWS_CHECKED_EXCEPTION, impactedSymbol=com.google.common.cache.AbstractLoadingCache.refresh(K), newSymbol=com.google.common.cache.AbstractLoadingCache.refresh(K)],BC[kind=METHOD_NO_LONGER_THROWS_CHECKED_EXCEPTION, impactedSymbol=com.google.common.cache.LoadingCache.refresh(K), newSymbol=com.google.common.cache.LoadingCache.refresh(K)],BC[kind=METHOD_NO_LONGER_THROWS_CHECKED_EXCEPTION, impactedSymbol=com.google.common.cache.ForwardingLoadingCache.refresh(K), newSymbol=com.google.common.cache.ForwardingLoadingCache.refresh(K)]
8b5f2e0d5acdbf7b35a14800f68660322fff59ac|Mon Nov 07 15:56:28 CET 2011|Fix instances of divzero in []. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25176483|0|0|0|286|2333|173|40|17|1|8|0|
71b9c3f4e5e49cba693fe721f3dec6458a2957e3|Mon Nov 07 15:57:47 CET 2011|Expanding test coverage on several methods ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25178955|0|0|0|286|2333|173|40|12|1|4|0|
b37e84970a242ee48062f84b93c8e9a3b3808633|Mon Nov 07 15:59:09 CET 2011|Adding tests for multiple ByteStreams methods ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25179180|0|0|0|286|2333|173|40|13|1|4|0|
211d803baeeecf9f5b121cb57e3d62172935aa4e|Mon Nov 07 16:00:55 CET 2011|Filling in test coverage on several methods ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25192532|0|0|0|286|2333|173|40|11|1|3|0|
196e0bbc645609dd542749262832c251da18eba0|Mon Nov 07 16:02:32 CET 2011|Cleaning up JavaDoc copy-and-paste errors ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25192783|0|0|1|286|2333|173|40|11|9|5|0|
a7b281ed0c557c5a7ba5bf9fb8435e8fb52eba92|Mon Nov 07 16:04:10 CET 2011|Test for resources.toByteArray ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25194827|0|0|0|286|2333|173|40|12|1|3|0|
ec3c0062a8918bcc53d68bc95d4bbe47a5a03b83|Mon Nov 07 16:05:48 CET 2011|Replace MoreAsserts calls so that code compiles in Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25200636|0|0|0|286|2333|173|40|11|1|3|0|
1278d9c6ed68fde9e630678f009cfd91bf2b9ff4|Mon Nov 07 16:07:26 CET 2011|introduce AtomicLongMap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25201110|1|0|0|287|2353|173|40|12|39|3|0|
f63606f9b5bfc46fdf8e598b3762489be68523b7|Mon Nov 07 16:09:34 CET 2011|more tightly accomodate garbage-collected keys and values ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25202456|0|0|0|287|2353|173|40|12|1|4|0|
8defea1872ecd6f96676e5b54f21f1a248ebf703|Mon Nov 07 16:13:27 CET 2011|JavaDoc grammar fix. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25242113|0|0|1|287|2353|173|40|12|6|5|0|
234b26abce7c22088a3bffb67802633856eed2f2|Mon Nov 07 16:24:51 CET 2011|Testing exceptional conditions on reset ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25242293|0|0|0|287|2353|173|40|12|1|3|0|
4c9351138e15f02a7dd58463968a180664e7830a|Mon Nov 07 16:31:32 CET 2011|Overrides of synchronized methods should be synchronized ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25242297|0|0|2|287|2353|173|40|12|6|3|0|
b5fe5675b8ff0086bde230f88ce2cab3daca2f1d|Mon Nov 07 16:41:10 CET 2011|Adding test for skipFully ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25242304|0|0|0|287|2353|173|40|11|1|3|0|
c22cfd1b2ac9dc59f652f1d3e955ef69ae089d93|Mon Nov 07 17:04:31 CET 2011|test coverage for ready and skip ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25242419|0|0|0|287|2353|173|40|11|1|5|0|
6ddbfccc91fb3fed94a708cf9df07814c43454f4|Mon Nov 07 20:16:58 CET 2011|Removing MoreAsserts call ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25247052|0|0|0|287|2353|173|40|11|1|3|0|
caaae1c713b905fdc2268c61d80f309d8581654e|Mon Nov 07 20:38:23 CET 2011|@Beta, @since, and hard-coded test seed ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25248940|0|0|1|287|2353|173|40|11|39|3|0|
b89023cb0d117432817e081fce8ea19bb3d758ff|Tue Nov 08 14:16:04 CET 2011|have CacheLoader.reload return ListenableFuture ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25264832|0|0|5|287|2353|173|40|17|75|3|1|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.cache.CacheLoader.reload(K,V), newSymbol=com.google.common.cache.CacheLoader.reload(K,V)]
10755664196d6018caa01bef58cb40787c1ea8c9|Tue Nov 08 14:17:05 CET 2011|be more accomodating of slow gc reference enqueuing ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25267574|0|0|0|287|2353|173|40|15|1|6|0|
cbfbc3b7eda05e0286f65c147441d61432d60f62|Wed Nov 09 15:56:30 CET 2011|Javadoc improvements: - Emphasize that an empty SetMultimap and an empty ListMultimap are equal. - ListenableFuture listeners can also run in the thread that cancels the future (hat tip to <https://plus.google.com/114212977194801425439/posts/eFxZv6ibkM9>, which tipped me off to this by describing a related bug)... plus other minor improvements. - ListeningExecutorService can throw RejectedExecutionException. - Subclasses of AbstractListeningExecutorService must implement execute() and the shutdown/termination methods. Also, fix a comment in AbstractListeningExecutorServiceTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25284749|0|0|7|287|2353|173|40|14|44|3|0|
d8d8ef522d14a8fb2c6494ca19834d88197f41d2|Wed Nov 09 16:04:53 CET 2011|Change the implementation of AbstractFuture.Sync#complete to guarantee that the future is complete before exiting, even if the current thread is not the thread actually completing the future.|0|0|1|287|2353|173|40|17|13|3|0|
726b42b0794e85f6936ddd31c7f864442ae1e346|Thu Nov 10 15:55:48 CET 2011|Improve initial approximation to sqrt(x) when x.doubleValue() == Double.POSITIVE_INFINITY (x >= 2^1024). Louis's: http://code.google.com/r/wassermanlouis-guava/source/detail?r=6ea966f033aead7adc3aba9f74c05b115b37f83b&name=big-sqrt ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25315505|0|0|1|287|2353|173|40|13|10|3|0|
2914956e0e2409a0f249048881c4c4b0f1169ec3|Thu Nov 10 15:59:16 CET 2011|Add tests for interruption while waiting. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25335633|0|0|0|287|2353|173|40|13|1|5|0|
9c7ee3dd920286c451268a7e5a82273f77f8c7a5|Fri Nov 11 13:45:27 CET 2011|Move SortedMaps.filter* to Maps. Copy tests for SortedMaps.transform* to MapsTest. Test the filter* methods under GWT, and make them available under GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25351048|0|0|2|287|2356|173|41|16|57|4|0|
31fc73e80e99ad0ce8ea9948da6c329216f1f7b4|Fri Nov 11 13:47:35 CET 2011|Delete GuavaAsserts.checkEqualsAndHashCodeMethods, replacing its one use with EqualsTester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25351800|0|0|0|287|2356|173|41|11|1|3|0|
8d3f84c2785acd666707d57d4f58090b670b8c7b|Fri Nov 11 13:51:47 CET 2011|Throw an IAE if source and destination files are the same in Files#copy ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25364042|0|0|1|287|2356|173|41|11|12|4|0|
c29d8ae455fac7d3a416e92cd60be2d1f33d11f6|Mon Nov 14 16:27:52 CET 2011|Add ImmutableMap.Builder#put(Entry) overload. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25392198|0|0|2|287|2358|173|41|15|45|10|0|
73c5fc6ef0d1cc45cf628e7b4897674e4b4c58e1|Mon Nov 14 16:30:03 CET 2011|Added filter(SortedSet) to allow for the creation of a filtered SortedSet ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25393046|0|0|1|287|2359|173|41|18|44|3|0|
2383c0ef29cb6c9b7ff884026baa337e094a6798|Mon Nov 14 16:33:10 CET 2011|Add Builder#put(Entry) to ImmutableMultimap, ImmutableListMultimap, and ImmutableSetMultimap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25396013|0|0|3|287|2362|173|41|18|49|3|0|
2a561b1b7275e92623c6e452698453bfed20fcbd|Mon Nov 14 16:45:04 CET 2011|Add Ordering.min(Iterator) and Ordering.max(Iterator). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25397156|0|0|3|287|2364|173|41|20|43|7|0|
f67e430a61873ed1e58d00a23b5834057787cc11|Mon Nov 14 16:53:45 CET 2011|Replace custom TestAssertionFailure with JUnit AssertionFailedError. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25397711|0|0|0|287|2364|173|41|16|1|3|0|
95a474bbd250ecccdcc522240108c20e2870e929|Tue Nov 15 16:06:34 CET 2011|test when resetOnFinalize==true ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25434366|0|0|0|287|2364|173|41|12|1|3|0|
b2f584589d18c4d933025a65ebbe88505f74cb8d|Wed Nov 16 17:17:52 CET 2011|Document the relationship between Multiset and AtomicLongMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25472109|0|0|2|287|2364|173|41|11|39|3|0|
f29391d6c98f82c0e797369d9ecff3231e1c40c6|Wed Nov 16 17:20:42 CET 2011|documentation enhancements to Cache, LoadingCache, and CacheBuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25472243|0|0|3|287|2364|173|41|14|50|3|0|
c50a8e8e0268dbdbf618c6c786d73b6a48ee5776|Wed Nov 16 17:24:06 CET 2011|Use iterator().next() in FilteredSortedSet#first ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25472467|0|0|1|287|2364|173|41|16|46|4|0|
f956ac11a48f7cdf836f6037ac9b5c1be25b3cd3|Wed Nov 16 17:27:18 CET 2011|Remove GuavaAsserts, replacing all calls with calls to Assert. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25472533|0|0|0|287|2364|173|41|15|1|3|0|
f54e659fad056b233bf134d17823a3e71ad6456b|Thu Nov 17 23:07:00 CET 2011|Test that finalize deletes the backing file. This required refactoring the model code to make finalize accessible from tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25515639|0|0|0|287|2364|173|41|11|1|3|0|
c6de7a5f6d4f990ce38abffe1c67d413bcaef8b8|Thu Nov 17 23:07:55 CET 2011|Make c.g.c.collect.Queues @Beta. Remove old TODO from Optional (unrelated change, but combined for TAP's sake). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25522897|1|0|1|288|2382|173|41|12|41|3|0|
aa1f8216acb9d4e8f3ea40ab5254ed841163f346|Thu Nov 17 23:08:49 CET 2011|Use Uninterruptibles.awaitUninterruptibly() instead of a hand-rolled version or an abort-on-interrupt version. Reuse DelayingIdentityLoader instead of reimplementing. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25523974|0|0|0|288|2382|173|41|14|1|4|0|
268b89eb0ddc028c4f093042060ad05fa0e107e0|Thu Nov 17 23:09:48 CET 2011|Clear interrupt at end of test so as not to interfere with subsequent tests. I have vague plans to run all tests that call interrupt() in a fresh, non-main thread so that this sort of problem can't occur, but naturally I haven't gotten around to it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25527509|0|0|0|288|2382|173|41|13|1|3|0|
48cc5df92df6ae9695b2985c6da799c8b47094f6|Thu Nov 17 23:10:51 CET 2011|Mark the Queues methods that deal with ArrayDeque and LinkedBlockingDeque as internal only (they are JDK6 only). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25554993|0|0|1|288|2377|173|41|13|37|3|5|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Queues.newArrayDeque(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Queues.newArrayDeque(java.lang.Iterable<? extends E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Queues.newLinkedBlockingDeque(java.lang.Iterable<? extends E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Queues.newLinkedBlockingDeque(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Queues.newLinkedBlockingDeque(int), newSymbol=]
7cd8c61f13f3cb977abc49e5101a21d1505adef2|Fri Nov 18 19:09:58 CET 2011|Tests for several newDataInput.readFoo methods ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25574201|0|0|0|288|2377|173|41|14|1|3|0|
b17c9e85b643e61a9d94fb239f1bf75212d707ae|Fri Nov 18 19:11:07 CET 2011|Reference Futures.get from CheckedFuture ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25577062|0|0|1|288|2377|173|41|11|33|3|0|
507347f2a8eb702f5fc6a22ec856375ebda7f0ea|Mon Nov 21 17:53:25 CET 2011|Making Queues#drain calls timeouts more accurate, by potentially adding a System.nanoTime() call. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25588185|0|0|1|288|2377|173|41|11|38|3|0|
3decb92053378e31a24b5bdf5eac0fd7e489f76c|Mon Nov 21 17:54:45 CET 2011|Remove @Beta from QueuesTests (we never mark tests as @Beta). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25588377|0|0|0|288|2377|173|41|13|1|3|0|
f69e0d232b1837ea6a866d4addd81685b5047177|Tue Nov 22 18:13:03 CET 2011|Create PriorityQueue with internal capacity 2 instead of estimating the size from the number of inputs. This is simpler, and it might be faster than iterating twice. It might be slower if the input (a) is a Collection (so that size() is available) and (b) is larger than size 2 (so that growing the array is necessary), but I'm not too concerned. Only 2 of ~8 callers have a chance of passing in more than 2 inputs, anyway. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25641457|0|0|1|288|2377|173|41|15|38|3|0|
6fcc6652057d52769bffe6d3fb228343964ba518|Tue Nov 22 18:14:28 CET 2011|Document advantages of "implicit signaling". ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25642514|0|0|1|288|2377|173|41|13|35|3|0|
f7a1c2b042abc23e9abd885336ffed201aac5f6d|Tue Nov 22 18:15:35 CET 2011|Add explicit <K, V> to entryOf() call. The current code works in javac but fails compilation in Eclipse compiler. It could be Eclipse's fault. But it seems easy enough to avoid the gray area, no? ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25651472|0|0|1|288|2377|173|41|12|35|6|0|
2b7e8589db7c8ba987c6a960114a3194a7c2fe0e|Wed Nov 23 17:51:13 CET 2011|Make SerializableTester.reserialize a no-op under GWT so that test authors can use it as part of larger test methods. With that done, eliminate the equivalent, awful hack in RangeTest. Further, with bug 5599623 fixed, run OrderingTest under GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25672151|0|0|1|288|2377|173|41|16|37|5|0|
99d7ce0525002a4d8c709f61acc4fe3dabc69b8f|Wed Nov 23 17:52:36 CET 2011|Plug a bunch of unit testing holes in common.net. Also, remove a redundant item from the HostSpecifier Javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25677661|0|0|1|288|2377|173|41|16|7|3|0|
e3676a6b21e798b632e75048209fd1eb0719a7a9|Wed Nov 23 17:53:43 CET 2011|Test that transform* calls on a "secretly" sorted map are passed off to the SortedMap overloads. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25679905|0|0|0|288|2377|173|41|12|1|3|0|
c72ba765bed12267569936ffeb7c76d2f525fe2a|Wed Nov 30 18:17:39 CET 2011|Reorder some of the HTTP Headers. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25806584|1|0|1|288|2377|173|41|13|12|3|0|
287bc67cac97052b13cbbc0358aed8054b14bd4a|Wed Nov 30 18:19:01 CET 2011|Replace try/catch/propagate with try/finally idiom.|0|0|1|288|2377|173|41|11|37|5|0|
120633982325062f3c9952821382189e5338cb5f|Fri Dec 02 17:10:37 CET 2011|Copy c.g.c.collect.AbstractIterator to c.g.c.base as a package-private class. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25880322|1|0|2|288|2377|173|41|14|38|3|0|
6dc1da63206320ccdb959ccbcc811ee2c1e2cc2e|Fri Dec 02 17:13:24 CET 2011|Make threads used by listenInPoolThread daemon, since the mere act of creating a ListenableFuture isn't expected to keep a process alive. http://code.google.com/p/guava-libraries/issues/detail?id=726 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25885317|0|0|1|288|2377|173|41|14|36|3|0|
f8cdf1885e05d64889c64006c0a894062e71f581|Fri Dec 02 17:12:01 CET 2011|Add c.g.common.base.Optional#presentInstances ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25881600|0|0|1|288|2378|173|41|11|8|3|0|
03b79658d4d2591bf76e9377081c16906c77fe0b|Mon Dec 05 20:43:39 CET 2011|trigger refresh on Cache.getIfPresent ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25908678|0|0|3|288|2378|173|41|14|69|3|0|
909420f21d93ca1e9866baa6a10c88fb3cc295db|Mon Dec 05 20:45:00 CET 2011|Many Javadoc fixes, including fixes for public issues: - http://code.google.com/p/guava-libraries/issues/detail?id=778 - http://code.google.com/p/guava-libraries/issues/detail?id=736 - http://code.google.com/p/guava-libraries/issues/detail?id=713 - http://code.google.com/p/guava-libraries/issues/detail?id=710 - http://code.google.com/p/guava-libraries/issues/detail?id=709 - http://code.google.com/p/guava-libraries/issues/detail?id=706 - http://code.google.com/p/guava-libraries/issues/detail?id=566 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25915349|0|0|12|288|2378|173|41|23|83|5|0|
4b9da9148906ad483af308daf48d597046d306dd|Mon Dec 05 20:46:15 CET 2011|Fixed a tiny Javadoc typo. You might be asking yourself: why is he wasting his time with this? I... don't know. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25918269|0|0|0|288|2378|173|41|18|1|3|0|
d5de86dc98b759183762543e3e977743e781d923|Mon Dec 05 20:47:22 CET 2011|If {ByteStreams,CharStreams}.copy fails to close both input and output, it should log one exception while throwing the other. http://code.google.com/p/guava-libraries/issues/detail?id=667 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25920059|0|0|3|288|2378|173|41|12|11|5|0|
8ebc9b11b98d538e43369b75ad6f19173537717a|Tue Dec 06 18:24:23 CET 2011|Include all source files as resources in guava-gwt jar. The only one currently missing was GwtSerializationDependencies, but this causes serialization problems: http://code.google.com/p/guava-libraries/issues/detail?id=791|0|0|0|288|2378|173|41|14|1|3|0|
2f2090bad927edb46799411a1220a88cf092f2a4|Tue Dec 06 18:25:22 CET 2011|Introduce Futures.transform overloads that accept an AsyncFunction in preparation for eliminating Futures.chain. Also: - Fix Javadoc example code's rowKeyFuture confusion: http://code.google.com/p/guava-libraries/issues/detail?id=788 - Add test that the result of the preexisting Future.transform is memoized when the transformation succeeds.|1|0|1|289|2381|173|43|14|45|4|0|
36048c35fc79c0265f9dfde4a27b4ffa14966772|Tue Dec 06 17:31:05 CET 2011|Tiny clarification to Queues#drain ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25965634|0|0|1|289|2381|173|43|15|37|3|0|
b041be5124ef01b392e21a3ff0bc3d93f552156d|Tue Dec 06 21:11:41 CET 2011|Add Multimaps.filter methods ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=25993671|0|0|2|289|2384|173|43|18|65|4|0|
9db1ad6ef2aac319e91db7e6b06a9a418a4eae21|Fri Dec 09 17:06:08 CET 2011|Convert more users from to-be-deprecated Futures.chain to new AsyncFunction-based Future.transform. Deprecate Futures.chain.|0|0|1|289|2384|173|43|20|51|3|0|
097aa881a449c790285c1790af90382eca69c645|Fri Dec 09 17:08:10 CET 2011|emulate CacheBuilder in GWT, gwtifying all requistie dependencies ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26046933|0|0|9|289|2384|173|43|21|74|3|0|
206ae78f06324ff4a6257ed8ef6cd4d97746cce5|Fri Dec 09 17:10:10 CET 2011|add new Cache/LoadingCache methods to RemovalCause javadocs ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26048028|0|0|1|289|2384|173|43|18|44|4|0|
223faeecda173159b63f15cf224b201eb2e103e8|Fri Dec 09 17:14:21 CET 2011|Add c.g.common.collect.Sets#newLinkedHashSetWithExpectedSize ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26074694|0|0|1|289|2385|173|43|13|47|3|0|
068891544566246bd5caea917ae3cb78f1a21747|Fri Dec 09 17:16:23 CET 2011|Remove Futures.chain internally, though it will go out in Guava r11 before being removed in r12. Roll back temporary AbstractFuturesChainTest mess from 25962636 (but restore FuturesChainTest as "FuturesTransformAsyncFunctionTest." Also, fix a copy-and-paste error in the AsyncFunction Futures.transform Javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26078097|0|0|1|289|2385|173|43|16|42|3|0|
163ac499a9a7dc973e1b8293080fdf794bd07a78|Fri Dec 09 17:18:27 CET 2011|Restore LocalCache.LocalManualCache.{apply,get,getUnchecked} to fix Guava compilation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26079466|0|0|1|289|2385|173|43|15|72|4|0|
72b2f75013ece02c4410a63e77579ba3c30ab774|Fri Dec 09 17:20:48 CET 2011|Add Ints.tryParse. The implementation is based off that of Android's java.lang.Integer#parseInt. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26080239|0|0|2|289|2387|173|43|14|17|3|0|
a3192ae7e8297e688f8338470965c87c69bad523|Fri Dec 09 17:25:24 CET 2011|Make CharEscaper.escapeSlow final (as UnicodeEscaper.escapeSlow already is). No one overrides it.|0|0|2|289|2387|173|43|13|10|3|2|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.escape.CharEscaper.escapeSlow(java.lang.String,int), newSymbol=com.google.common.escape.CharEscaper.escapeSlow(java.lang.String,int)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.escape.Escaper.asFunction(), newSymbol=com.google.common.escape.Escaper.asFunction()]
6a8de5972a8b85c54fd0730d150aac74f525e43c|Fri Dec 09 18:53:27 CET 2011|add missing @since tags, per the jdiff report ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26103222|0|0|7|289|2387|173|43|13|56|6|0|
302c4a033600dd90bb2219d9657537d66d9c59a5|Fri Dec 09 21:27:52 CET 2011|add GwtSerializationDependencies ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26103631|0|0|0|289|2387|173|43|13|1|5|0|
ce4a11c5cef5de8c4b0997bbb0feedba3bd63186|Fri Dec 09 21:29:22 CET 2011|add more missing @since tags ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26105362|0|0|1|289|2387|173|43|12|43|3|0|
eca25fd66c44202627678b711342c22e74c42c7e|Fri Dec 09 21:30:50 CET 2011|remove spurious new method ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26108853|0|0|1|289|2386|173|42|11|39|3|1|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.cache.AbstractCache.get(K), newSymbol=com.google.common.cache.Cache.get(K)]
66939aa3b89c02fb5c8a64e137689978dedf97bc|Mon Dec 12 16:01:01 CET 2011|Remove @GuardedBy annotation from all public methods of Monitor.|0|0|1|289|2386|173|42|12|37|5|0|
5b5b107c851a3f8c80c62ac53a458ed1d60af9e2|Mon Dec 12 16:04:03 CET 2011|Eliminate the reevaluateGuards method of Monitor and tighten the contract of Monitor.Guard.|0|0|1|289|2385|173|42|12|39|4|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Monitor.reevaluateGuards(), newSymbol=]
0af256f339334e7f50a3cdb5103de14bc9f96d33|Tue Dec 13 20:34:41 CET 2011|Retract tryParse overload that accepts a radix from Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26163146|0|0|1|289|2384|173|42|14|18|3|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.Ints.tryParse(java.lang.String,int), newSymbol=]
e4da692d191d2b3db21858f4b59abd70673674d3|Tue Dec 13 20:40:47 CET 2011|Add inverse() method to Immutable{,Set,List}Multimap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26169224|0|0|4|289|2387|173|42|15|56|5|1|BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.collect.ImmutableMultimap, newSymbol=com.google.common.collect.ImmutableMultimap.inverse()]
e53f74d98a676e9784ed0dd83cc69f4797ea26cd|Tue Dec 13 20:47:25 CET 2011|Use tryLock to avoid expensive calls to nanoTime when possible (only if not fair). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26172551|0|0|1|289|2387|173|42|18|39|4|0|
3d38931cf28d1551e56f2b6682061b96ccaeb9cf|Tue Dec 13 20:55:17 CET 2011|Fixing the issue of XmlWriter not escaping \t, \n and \r in the attribute value.  This change adds XmlEscapers.xmlAttributeExcapte(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26174331|0|0|1|289|2387|173|42|13|6|3|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.xml.XmlEscapers.xmlEscaper(), newSymbol=]
a434310da225aa2467c65beea6123ae18ac562ce|Tue Dec 13 21:00:57 CET 2011|Add package-info for math. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26186233|0|0|0|289|2387|173|42|13|1|3|0|
085c040764a9a242012cacd2f70761197a35828a|Tue Dec 13 21:07:08 CET 2011|exclude base.internal from javadoc ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26186322|0|0|0|289|2387|173|42|12|1|3|0|
852dcdc3a06a889d9a24e8e02d25d4cd1aa5bf37|Tue Dec 13 21:16:53 CET 2011|rename CacheBuilder.refreshInterval to refreshAfterWrite ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26186574|0|0|2|289|2387|173|42|13|47|3|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.CacheBuilder.refreshInterval(long,java.util.concurrent.TimeUnit), newSymbol=]
8f95b6b573c6473df57cf145e5275e7f1b990100|Tue Dec 13 21:25:43 CET 2011|deprecate MapMaker's caching methods in favor of CacheBuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26186850|0|0|1|289|2387|173|42|16|54|5|0|
ea728eaf52cbdcac3ab3ede7109367a9f0b34f15|Tue Dec 13 21:45:32 CET 2011|- Cache.get(K, Callable<V>) => get(K, Callable<? extends V>) - more clearly document how Cache methods moved to CacheLoader should be dealt with - explain what expireAfterAccess does and doesn't count as an access - recall RangeSet from Guava - tweak Queues javadoc ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26193165|0|1|6|288|2370|173|42|17|74|3|4|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.cache.AbstractCache.get(K,java.util.concurrent.Callable<V>), newSymbol=com.google.common.cache.AbstractCache.get(K,java.util.concurrent.Callable<? extends V>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.cache.Cache.get(K,java.util.concurrent.Callable<V>), newSymbol=com.google.common.cache.Cache.get(K,java.util.concurrent.Callable<? extends V>)],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.RangeSet, newSymbol=],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.cache.ForwardingCache.get(K,java.util.concurrent.Callable<V>), newSymbol=com.google.common.cache.ForwardingCache.get(K,java.util.concurrent.Callable<? extends V>)]
17969e18334d05efd6438e0275ebbec296d62371|Tue Dec 13 23:14:44 CET 2011|Updating Javadoc and removing commented-out lines ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26197988|0|0|1|288|2370|173|42|15|6|3|0|
cb2d3860c6c6ce5f234981d21914a1f5e0bac08a|Tue Dec 13 22:53:54 CET 2011|remove tests of absent code ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26198410|0|0|0|288|2370|173|42|12|1|3|0|
41da518d8920cdf1db6571e55efdfa55cfebbf00|Tue Dec 13 23:07:16 CET 2011|Avoid generating garbage while evaluating and() and or() predicates. External guava issue: http://code.google.com/p/guava-libraries/issues/detail?id=820 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26198729|0|0|1|288|2370|173|42|14|37|3|0|
484ed1848fc76d4541eacf605100e68018db5af3|Wed Dec 14 00:27:29 CET 2011|Fix UnsignedInteger documentation. From Louis: http://codereview.appspot.com/5488051/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26200863|0|0|3|288|2370|173|42|13|16|3|0|
60262d5b7e4c834062b8c06c81ad5e85ae728721|Wed Dec 14 00:33:36 CET 2011|remove escapers from Guava for now ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26201712|0|14|0|274|2324|170|42|15|2|5|14|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.CharEscaperBuilder, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.SourceCodeEscapers, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.UnicodeEscaper, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.net.UriEscapers, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.Escapers, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.ArrayBasedEscaperMap, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.Escapers$Builder, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.net.PercentEscaper, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.xml.XmlEscapers, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.Escaper, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.html.HtmlEscapers, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.CharEscaper, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.ArrayBasedUnicodeEscaper, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.ArrayBasedCharEscaper, newSymbol=]
3bda9bf977d2df45a688cc3d4fe6aa67b666eb10|Wed Dec 14 17:02:08 CET 2011|fix spacing ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26220833|0|0|0|274|2324|170|42|11|1|3|0|
f9318924b71d4ed2c59d3d835fe6a4ce3feefcbf|Wed Dec 14 19:14:12 CET 2011|Open source c.g.common.hash into Guava 11.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26225631|17|0|0|282|2387|170|42|19|24|3|0|
735c50d1de5f1e603fe87db3fbad3d05b54976da|Wed Dec 14 20:32:59 CET 2011|Fix SingletonImmutableSet's isHashCodeFast(), and slightly reduce its memory footprint. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26227772|0|0|1|282|2387|170|42|16|33|3|0|
2c0727049d7e7cbbe1febf5bcf6b7a4b1860dea5|Wed Dec 14 20:39:15 CET 2011|Fix two aspects of the AbstractScheduledService.CustomScheduler implementation 1. Give the abstract callback method a more intuitive and convenient signature which will make it easier to ensure that weird things don't happen. 2. Handle exceptions thrown from the scheduling callback.  Previously if this method threw an exception the service would silently stop running.  Typically without any logging or notification of any kind. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26228216|0|0|1|282|2387|170|42|13|36|5|2|BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler, newSymbol=com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler.getNextSchedule()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler.scheduleNextIteration(java.util.concurrent.ScheduledExecutorService,java.util.concurrent.Callable<java.lang.Void>), newSymbol=]
6fcf6088fd78018dadc61536f149027247055598|Thu Dec 15 22:52:04 CET 2011|- remove methods scheduled for deletion in 11.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26259157|0|0|1|282|2385|170|40|12|12|3|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.deleteRecursively(java.io.File), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.deleteDirectoryContents(java.io.File), newSymbol=]
556976f81c236be7798e5d065a0dae09ca0cc1d3|Fri Dec 16 20:02:04 CET 2011|Fixing bug in NullPointerTester, where it fails spuriously for methods with no default value for @Nullable parameters. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26289693|0|0|0|282|2385|170|40|11|1|3|0|
8fce2b3fd00ec920f4621bb42b7e1862a732ed1c|Fri Dec 16 20:03:34 CET 2011|Add Iterator support to c.g.common.base.Joiner ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26290845|0|0|1|282|2397|170|46|11|10|3|0|
5a212334f8e7119594d9f7dff61bb6802cf1daf2|Fri Dec 16 20:04:48 CET 2011|- remove transform(Future, Function) for 11.0 as promised - fix @since formatting ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26291224|0|0|2|282|2396|170|45|15|74|4|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.transform(java.util.concurrent.Future<I>,com.google.common.base.Function<? super I,? extends O>), newSymbol=]
e55f2b580a67c7fb34b86097255df8cce96b047d|Fri Dec 16 20:05:56 CET 2011|- allow a small amount of leniency in expiration timestamp ordering during concurrent reads - use ticker to make strong assumption about expiration ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26292370|0|0|0|282|2396|170|45|16|1|4|0|
d0f4023bd9027b21d9ef3f8077651ad0d2c2275d|Sat Dec 17 18:04:57 CET 2011|This fixes to publicly filed bugs against the AbstractScheduledService:|0|0|1|282|2396|170|45|12|32|3|0|
bc5fa6eeaa254f4872465390454fe88e17f5fe2a|Wed Dec 21 21:09:15 CET 2011|CycleDetectingLockFactory creates ReentrantLocks and ReentrantReadWriteLocks that detect potential deadlock by checking for cycles in lock acquisition order. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26303617|0|0|0|282|2396|170|45|12|1|3|0|
25628af3241c74a4e68d67c0b5bdbe60763b693d|Wed Dec 21 21:10:20 CET 2011|Use GcFinalization. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26310755|0|0|0|282|2396|170|45|12|2|6|0|
9d410869d8f333d422b7c305c017a63bcabbee15|Wed Dec 21 21:11:25 CET 2011|Make the Maps/Multimaps Iterator/Iterable accepting overloads package-private (MOE public). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26321384|0|0|0|282|2396|170|45|13|2|4|0|
ae7bc782b786d8421c9536b624888f7d9419af54|Wed Dec 21 21:12:27 CET 2011|Make the Joiner Iterator/Iterable accepting overloads package-private (MOE public). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26321753|0|0|1|282|2396|170|45|13|10|3|0|
0aaf62796d043621a7458e0b49916671d7643290|Wed Dec 21 21:13:35 CET 2011|Use GcFinalization. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26339509|0|0|0|282|2396|170|45|13|1|4|0|
5bf085557770b769437895ab763541ec7240c44d|Wed Dec 21 21:14:41 CET 2011|Add leak-detection example. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26365358|0|0|0|282|2396|170|45|11|1|4|0|
abb836693293727f91f1249f43ac421825fcd744|Wed Dec 21 21:15:48 CET 2011|Remove MOE stripping of public modifier from c.g.c.base.Joiner ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26365643|0|0|1|282|2396|170|45|11|9|3|0|
ef63e4f4692eb168aa1a859e822cdb7b161f84b7|Wed Dec 21 21:18:00 CET 2011|Mentioning the number of hash bits to algorithms where it is not quite clear from their name. (I also add them for sha-256 and sha-512, though these are more obvious) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26389968|0|0|1|282|2396|170|45|12|12|3|0|
00749f8f82776ae65d475f15c380a08795ee4640|Wed Dec 21 21:19:07 CET 2011|@GoogleInternal to CycleDetectingLockFactoryTest ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26393155|0|0|0|282|2396|170|45|11|1|4|0|
5bbd6db3e6c5b4cfab0c900dd27f4158fbf65bdb|Thu Dec 22 20:23:16 CET 2011|Using a MessageDigest per Hasher, not per MessageDigestHashFunction (making the latter thread-safe) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26416662|0|0|1|282|2396|170|45|11|15|3|0|
81f0a77431bf90bf02543b999577400c7c13aa13|Wed Dec 28 21:06:11 CET 2011|Fix bug in Optional#presentInstances. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26472796|0|0|1|282|2396|170|45|13|9|4|0|
471ed9841fe95cfa9cab826649dcb14772dceaae|Tue Jan 03 19:07:44 CET 2012|new hash tests ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26509373|0|0|0|282|2396|170|45|13|1|3|0|
ffa4945ff3e117385a5433c3353403d7c473c484|Tue Jan 03 19:44:55 CET 2012|add pm ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26523300|0|0|1|282|2396|170|45|13|32|3|0|
056b64495f4a7bb64d83fbf858f742b9d0406e0f|Tue Jan 03 19:52:09 CET 2012|properly adjust size/weight on clear calls without a removal listener ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26558016|0|0|1|282|2396|170|45|13|68|7|0|
7c3778f085554d9df44182b4b0cb25078d00ed85|Wed Jan 04 14:05:23 CET 2012|add new patterns ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26562202|0|0|1|282|2396|170|45|15|34|4|0|
422653c89062c58e9206a147d4de26811aaf3ab2|Wed Jan 04 16:55:01 CET 2012|Typo ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26568675|0|0|1|282|2396|170|45|13|9|4|0|
7d779571cb4f2970f6ea79b8e1853b64d9267646|Wed Jan 04 16:55:32 CET 2012|reorganize hash tests ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26573308|0|0|0|282|2396|170|45|12|1|4|0|
27138179b9db52895a4236d4f041b4dd1052dd25|Wed Jan 04 14:26:35 CET 2012|specify that asMap never auto-loads entries ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26581537|0|0|1|282|2397|170|45|11|37|5|1|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.cache.Cache.get(K,java.util.concurrent.Callable<V>), newSymbol=com.google.common.cache.Cache.get(K,java.util.concurrent.Callable<? extends V>)]
4e186093dd12cb5d74b1679295b582423d42345e|Thu Jan 05 14:08:00 CET 2012|Add awaitFullGc() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26591095|0|0|0|282|2397|170|45|12|1|3|0|
996313a820ef2b89c1c34ae2871807b65416c6e3|Thu Jan 05 14:21:23 CET 2012|remove from Guava methods which were scheduled for deletion in release 12.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26591946|0|0|3|282|2389|170|37|13|39|3|13|BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache, newSymbol=com.google.common.cache.AbstractCache],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.ForwardingCache.getUnchecked(K), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.ForwardingCache.apply(K), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.Cache.getUnchecked(K), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.ForwardingCache.get(K), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache.getUnchecked(K), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.Cache.get(K), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.cache.Cache, newSymbol=com.google.common.cache.Cache],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.cache.ForwardingCache$SimpleForwardingCache, newSymbol=com.google.common.cache.ForwardingCache$SimpleForwardingCache],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.AbstractCache.apply(K), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Function.equals(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.Cache.apply(K), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.cache.ForwardingCache, newSymbol=com.google.common.cache.ForwardingCache]
ca0537e080e601f517b3721839340f2f907c2f18|Thu Jan 05 14:28:05 CET 2012|fix broken javadoc links, per issues 853 and 855 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26594437|0|0|3|282|2389|170|37|13|51|3|0|
23aa7906fea8756ffe401e1fac6c999cce16934d|Fri Jan 06 14:36:24 CET 2012|add softKeys scare text ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26614390|0|0|1|282|2389|170|37|12|47|3|0|
b55bf940bd46534b441d5729d6fdd732c8cdfbc2|Fri Jan 06 14:43:39 CET 2012|clarify verbage regarding the cleanup of entries with reclaimed keys/values (Issue 841) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26627817|0|0|1|282|2389|170|37|13|49|3|0|
b8222756f9a21c86b983b542fd52404a8cc57883|Wed Jan 11 06:45:13 CET 2012|Some small test changes that I found forgotten in my client. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26686444|0|0|0|282|2389|170|37|12|1|3|0|
674fc65b8d5bc466c7bbc138deabba957fa0df25|Wed Jan 11 06:46:12 CET 2012|Deleting (again) the weird Interners#newInterner(GenericMapMaker) method: has been mostly unused, and not entirely correct ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26688481|0|0|1|282|2389|170|37|13|37|4|0|
95866063bfb234cc0977341a8136a424fe496aab|Wed Jan 11 06:47:12 CET 2012|Provide better documentation for the state transitions that are legal/illegal for a Service to make.  Also change the behavior of service.start() such that it will now throw exceptions when trying to start a TERMINATED or FAILED service. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26691313|0|0|1|282|2389|170|37|12|8|3|0|
01a5709c3de641d9055a68452c428ad5b8e624e5|Wed Jan 11 06:49:08 CET 2012|Use "null" for null entries when joining. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26695018|0|0|1|282|2389|170|37|13|39|3|0|
c27eee83a57e9b5639f9cbb251f456acd61bd534|Wed Jan 11 06:51:06 CET 2012|In forUriString(), check the IP version before giving getByAddress() a chance to collapse mapped addresses from IPv6 to IPv4.|0|0|1|282|2389|170|37|18|14|3|0|
01ffe90e79766394fba487461e58a9e9abc0facd|Fri Jan 13 20:30:44 CET 2012|Add c.g.common.math.DoubleUtils#ensureNonNegative ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26762334|0|0|1|282|2389|170|37|14|9|6|0|
e0c54a1b1874d846bc393939bd1a4b97d2d606c8|Tue Jan 17 17:11:23 CET 2012|Remove a few lines of unused code ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26803682|0|0|3|282|2389|170|37|14|39|3|0|
a18a9c955aa9c488e14d5fdfb9d6351cb7ec4e2a|Tue Jan 17 17:12:55 CET 2012|Irrelevant no-op diff created by internal-only changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26829506|0|0|0|282|2389|170|37|13|1|3|0|
ca8467cff1588a95df50bc8cf2ae171953e36da4|Thu Jan 19 20:14:09 CET 2012|Eliminate unneeded Annotations dependency. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26894404|0|0|0|282|2389|170|37|11|1|3|0|
883202c1ea5bfb52914cc1546ff38a4716c08dde|Mon Jan 23 16:48:19 CET 2012|AbstractLinkedIterator -> AbstractSequentialIterator. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26926853|1|0|5|283|2392|170|38|14|95|5|0|
afce494977cb4f1018b72333a6ed7d7fac3531d1|Tue Jan 24 21:01:31 CET 2012|Added new method omitNullValues() to ToStringHelper. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=26991532|0|0|1|283|2393|170|38|18|8|4|0|
edcaa9418aa5e315ba081f4b6791bd9daa926bfa|Tue Jan 24 20:22:23 CET 2012|Strip workarounds for past Google bugs from public release. In fact, stripping the allAsList/successfulAsList code is basically a bug fix, as the existing workaround allows get() to block indefinitely after the Future is done. Past discussion: https://groups.google.com[]group/java-libraries-discuss/browse_thread/thread/33a137c1707fe40b ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27022708|0|0|1|283|2393|170|38|12|41|3|0|
320501e0a6457802f4afc9d2f21cf394b3e173a8|Wed Jan 25 13:27:34 CET 2012|- Eliminate serialization warning on TreeMultiset by marking AbstractSortedMultiset.comparator as @GwtTransient: http://code.google.com/p/guava-libraries/issues/detail?id=871 - Eliminate reference to long-gone "Note on element equivalence" in Multiset docs. - Fix ByteStreams.copy inconsistency over whether the output is closed: http://code.google.com/p/guava-libraries/issues/detail?id=757 - Link in Partition shouldn't contain the space after the word. - Mention unsigned types in package-info. - Standardize on "input" for name of input Future parameters in transformation methods. - Remove deprecated Futures.chain for Guava 12. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27031992|0|0|4|283|2391|170|36|15|58|4|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.chain(com.google.common.util.concurrent.ListenableFuture<I>,com.google.common.base.Function<? super I,? extends com.google.common.util.concurrent.ListenableFuture<? extends O>>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.chain(com.google.common.util.concurrent.ListenableFuture<I>,com.google.common.base.Function<? super I,? extends com.google.common.util.concurrent.ListenableFuture<? extends O>>,java.util.concurrent.Executor), newSymbol=]
dc5a4119abe8328cd1cd863fbb9f2ad0d5219379|Wed Jan 25 13:48:33 CET 2012|allow jdk6 in Guava ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27051331|0|0|0|283|2391|170|36|15|3|3|0|
e8370c5f62b108802ddb1d8fe3ce96f19884a6fe|Thu Jan 26 15:49:06 CET 2012|Remove JDK5 hack now that Guava is on JDK6. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27059690|0|0|2|283|2391|170|36|12|15|3|0|
3e82ff72b19d4230eba795b2760036eb18dfd4ff|Mon Jan 30 23:17:07 CET 2012|Make Optional GWT serializable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27120368|2|0|1|283|2391|170|36|13|8|3|0|
46156c9b4f2af68882ca4c1907cdc90bc2d88f53|Mon Jan 30 23:21:06 CET 2012|take core cache classes out of Beta ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27122549|0|0|4|283|2391|170|36|13|51|3|0|
732d54fa40cada5ac2956be1af84122af8989952|Mon Jan 30 23:23:47 CET 2012|Created BiMapTestSuiteBuilder. From Louis: http://code.google.com/r/wassermanlouis-guava/source/detail?r=7d23827f8dc31cda03829bcadd0d0ef419a00ed4&name=bimap-testsuitebuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27127892|0|0|0|283|2391|170|36|18|2|7|0|
49dee297a34a74649db340facc5ca4d5cb1f9cf4|Mon Jan 30 23:27:42 CET 2012|Test suite checking for fail-fast iterators. From Louis: http://codereview.appspot.com/5556071/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27129949|0|0|0|283|2391|170|36|21|2|3|0|
1e2090489003cc96d3f9bebb1f3e0a84fab0432e|Mon Jan 30 23:29:00 CET 2012|Update test sizes per feedback from [] ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27164800|0|0|0|283|2391|170|36|15|1|3|0|
53abadc9336bfc8c73ec993f0c396eff701c853d|Sun Jan 01 13:02:50 CET 2012|add osgi metadata|0|0|0|283|2391|170|36|11|1|2|0|
e25ea225661c61002c90b7c631c49b4754056f0c|Wed Feb 08 21:36:52 CET 2012|Rearranging of methods, plus Javadoc changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27173884|0|0|1|283|2391|170|36|13|53|5|0|
381584a0f4124a9316dd2d7219033d2a981a3289|Wed Feb 08 21:56:54 CET 2012|Improve ForwardingNavigableMap, adding standard* methods. Release in Guava. From Louis: http://codereview.appspot.com/5591043/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27201643|1|0|1|286|2429|170|36|19|63|3|0|
a324899e2e017a5ea275e8d2c6b2fcf95ca73613|Thu Feb 09 22:16:43 CET 2012|Add legible #toString implementations for CharMatcher. From Louis: http://codereview.appspot.com/5570067/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27203019|0|0|1|286|2430|170|36|18|10|9|0|
a3bbf1bcbf797ead80e5e23f79a07e17b07aa19d|Thu Feb 09 22:21:36 CET 2012|Implemented Sets.unmodifiableNavigableSet. From Louis: http://codereview.appspot.com/5591044/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27228500|0|0|1|286|2431|170|36|12|44|6|0|
f25158e086c1a2eeb22b1ff782a3e6075c8f1752|Thu Feb 09 22:26:21 CET 2012|Updates math utilities to use JDK 6 methods where possible, addressing several TODOs. From Louis: http://codereview.appspot.com/5587044/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27228554|0|0|3|286|2431|170|36|16|13|4|0|
81c7840b444adf271634a509b11fa4080e525919|Thu Feb 09 22:31:01 CET 2012|Add missing @since+@Beta for nested class. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27233385|0|0|1|286|2431|170|36|14|42|9|0|
2bba62b3c9928b0e3e11c725a600689990c6af90|Thu Feb 09 22:40:59 CET 2012|Add empty array and enum handling to NullPointerTester; I can also clean up the 'throws Exception' though is it better to do it in a separate CL? ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27238145|0|0|0|286|2431|170|36|13|1|3|0|
d58ff32e240a70b92a7133edd5c73c6c276798af|Thu Feb 09 22:45:32 CET 2012|Changed default sizes of ImmutableSet to be more conservative. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27245924|0|0|1|286|2431|170|36|14|38|4|0|
a7a666c992819ca60ea7990ff3cf63a9a8f2210a|Thu Feb 09 22:50:29 CET 2012|Add documented constructor. Move private utility method to bottom of file. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27260445|0|0|1|286|2431|170|36|13|35|7|1|BC[kind=CONSTRUCTOR_NOW_PROTECTED, impactedSymbol=com.google.common.collect.ForwardingNavigableMap.<init>(), newSymbol=com.google.common.collect.ForwardingNavigableMap.<init>()]
7806203c8f5e3f351b9d71744c33aa115aa43725|Thu Feb 09 22:55:27 CET 2012|Improve ForwardingNavigableMap, adding standard* methods. Release in Guava. From Louis: http://codereview.appspot.com/5585045/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27260448|1|0|1|288|2455|170|36|13|51|5|0|
806967c3660d231e62a52674703acb51ec4e6623|Thu Feb 09 23:05:33 CET 2012|Link pages to the wiki. From Louis: http://codereview.appspot.com/5553067/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27271233|0|0|81|288|2455|170|36|56|211|12|4|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardValues(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardKeySet(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardEntrySet(com.google.common.base.Supplier<java.util.Iterator<java.util.Map$Entry<K,V>>>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ImmutableSortedSetFauxverideShim.of(E[]), newSymbol=]
eecbe53fbfaa870636a4c7144505d5863ba5fecf|Thu Feb 09 23:15:37 CET 2012|Implemented Maps.unmodifiableNavigableMap. From Louis: http://codereview.appspot.com/5590044/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27271664|0|0|1|288|2456|170|36|43|63|15|0|
2c6e1366dee1a252a08c889ef1d4e3eb0d54acbb|Thu Feb 09 23:30:44 CET 2012|Switching to non-power-of-2 bloom filter sizes, and making serialization more future-proof. Unfortunately, this changes the serialized form, since hashBitsPerFunction was hardwired to the BloomFilter, and that really assumed power-of-two tables. Also, this fixes a nasty exponential-slowdown bug that was in the previous version of BloomFilter (that code was added to support serialization, and deleted as part of the new strategy for serialization) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27307766|0|0|4|288|2456|170|36|20|17|5|0|
22fc7ff20615bebb9029184dcc0e33067035edae|Thu Feb 09 23:35:45 CET 2012|Add c.g.common.base.Enums#getIfPresent(MyEnum.class, "FOO") -> Optional ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27314756|0|0|1|288|2457|170|36|13|8|4|0|
026ec0d4f3294d37b83894154f396a12c710535e|Thu Feb 09 23:40:49 CET 2012|open-source AtomicLong ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27336398|0|0|0|288|2457|170|36|11|1|6|0|
1b1943f69c90fe45c6b920da04e6e6a86b4ee0ca|Thu Feb 09 23:45:54 CET 2012|Add/document constructors for Forwarding* and their Standard* nested classes. Fix visibility of ForwardingNavigableSet.StandardDescendingSet constructor so that it's usable outside the package, e.g.,|0|0|4|288|2457|170|36|12|42|13|0|
24449864a733812c37d5a280f1d8c2e7b14743b7|Thu Feb 09 23:56:05 CET 2012|Add testConstructors(), testStaticMethods(), testInstanceMethods() that take a minimalVisibility parameter ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27341632|0|0|0|288|2457|170|36|13|1|6|0|
7a155b570906e2c31c5773e100839ce6a2d79679|Fri Feb 10 00:05:59 CET 2012|Release more Queues methods: newAD, newLBD ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27350067|0|0|1|288|2462|170|36|12|43|10|0|
b959173880ef1bcb89d98c83c76c3eb7256d14a9|Fri Feb 10 00:21:10 CET 2012|Add SERIALIZABLE feature to TestSuiteBuilders. From Louis: http://codereview.appspot.com/5635044/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27376846|0|0|0|288|2462|170|36|23|1|5|0|
e86741fbb4b53b8913440de9626e276db6c1466d|Fri Feb 10 00:26:16 CET 2012|Add tests for ConcatenatedHashFunction. Add NullPointerTester test for Hashing. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27382584|0|0|1|288|2462|170|36|18|14|5|0|
720104e72da61e660c704195eba94de8b4926304|Fri Feb 10 00:36:25 CET 2012|Refactor tests for BiMaps to use BiMapTestSuiteBuilder. Fix a bug with EnumBiMap in which null values throw the forward and backward maps out of sync. From Louis: http://codereview.appspot.com/5642050/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27388061|0|0|3|288|2462|170|36|18|38|5|0|
f863c7433cd69d2d0c29b8db4f8e3fb98bb42a10|Fri Feb 10 22:18:28 CET 2012|eliminate trailing whitespace and tabs|0|0|0|288|2462|170|36|17|1|7|0|
237fef61e00fe356f5e3bad6ecedfb7b924fa4f2|Sat Feb 11 03:09:22 CET 2012|Restore accidentally removed Util.gwt.xml. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27483073|0|0|0|288|2462|170|36|12|1|5|0|
51a457bcc4443e4160593df00d5a8f21e6d27d25|Mon Feb 13 21:51:09 CET 2012|Open-source GWT emulation of CacheLoader, which was unintentionally missing. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27522709|0|0|0|288|2462|170|36|13|2|5|0|
c9830858e734c11312f3d10a06390cb1bc7185c1|Tue Feb 14 00:06:20 CET 2012|Rename com.google.common.hash.Sink to PrimitiveSink. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27538021|1|1|3|288|2462|170|36|12|6|4|4|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.Funnel.funnel(T,com.google.common.hash.Sink), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.hash.Sink, newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.hash.Hasher, newSymbol=com.google.common.hash.Hasher],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.hash.Funnel, newSymbol=com.google.common.hash.Funnel.funnel(T,com.google.common.hash.PrimitiveSink)]
b0abc289340340a36a1a2deec33702331ee4a31c|Tue Feb 14 16:20:21 CET 2012|Randomizing goodFastHash ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27545564|0|0|1|288|2462|170|36|12|13|7|0|
da2e687edd79b6bbab3d279de529a71ed034c2e6|Wed Feb 15 19:15:42 CET 2012|Copy Reflection.getField(Enum) to Enums.getField(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27564524|0|0|1|288|2463|170|36|12|8|5|0|
9657adb9a22190fd43ff06d2aecbfc66f1135dc3|Tue Feb 21 14:40:45 CET 2012|Add @since for Enums.getField. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27632359|0|0|1|288|2463|170|36|11|8|5|0|
ae671eb9a3601782256c7bf3311af719db6aa5e3|Tue Feb 21 14:45:47 CET 2012|add Beta disclaimer ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27667758|0|0|2|288|2463|170|36|12|41|7|0|
a122d63e9c87338b080ec48d2fcc75265339f0d7|Tue Feb 21 14:55:50 CET 2012|Make the shortcut methods in the new hashing API faster by using the legacy implementations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27671418|0|0|2|288|2464|170|36|14|15|4|1|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.hash.HashFunction, newSymbol=com.google.common.hash.HashFunction.hashInt(int)]
222448cb98d9f53819d8f36c1e36d4c4b3ee7cbd|Tue Feb 21 15:00:55 CET 2012|Remove obsolete TODO from CharMatcher. Annotate the return type of Function#apply as @Nullable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27671585|0|0|2|288|2464|170|36|12|10|5|0|
de8eeba94bd6a12a83a05786cf2ddd00d8547b48|Tue Feb 21 15:05:58 CET 2012|Expose c.g.common.hash.HashCodes and its static factory methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27671928|0|0|4|289|2467|170|36|13|16|5|0|
0823847e96b1d082e94f06327cf218e418fe2228|Tue Feb 21 15:11:08 CET 2012|Add c.g.common.base.Optional#transform(Function) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27673881|0|0|3|289|2468|170|36|13|10|7|1|BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.base.Optional, newSymbol=com.google.common.base.Optional.transform(com.google.common.base.Function<? super T,V>)]
543c2e92b4445eb22e400d2ff89721f4a20c707e|Tue Feb 21 15:20:53 CET 2012|Write tests to verify that HashFunction shortcuts are equivalent to the long forms.  Then fix the legacy hashing implementations to unbreak them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27678321|0|0|0|289|2468|170|36|13|2|4|0|
2daad4cb6bdd1ba3ae36f4bdab8fd4dbb7cf78a7|Tue Feb 21 21:34:37 CET 2012|Release MediaType into Guava as @Beta. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27598067|1|0|0|290|2481|221|36|15|49|4|0|
267e41fbf208f6511c513048cbe7f7da25370b24|Tue Feb 21 22:29:01 CET 2012|add escapers back to Guava ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27739172|14|0|0|304|2527|224|36|20|20|8|0|
29e1378b00d80d51fcf7ddcc8cdf892010edce09|Wed Feb 22 16:06:36 CET 2012|Open-source missing .gwt.xml and TestModuleEntryPoint files. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27751596|0|0|0|304|2527|224|36|16|1|13|0|
a331fdd7c89e1c91e696d06b80f1bd611dab0c5c|Thu Feb 23 22:17:30 CET 2012|Don't specify weakValues in a flaky test where it's not required. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27770962|0|0|0|304|2527|224|36|12|2|4|0|
535653a2637b3d0628e7d7e8df4c26d1c480c3fa|Thu Feb 23 22:20:46 CET 2012|Make Charsets GWT-compatible now that Charset is emulated. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27776341|0|0|1|304|2527|224|36|14|7|6|0|
6d31346faa5a42f735a6b8055d6ca7a22b1ce096|Thu Feb 23 22:24:11 CET 2012|Make MediaType fully GWT-compatible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27783220|0|0|1|304|2527|224|36|16|53|7|0|
17f6cb8aa782944d63d33232153cab4a417004d9|Thu Feb 23 22:29:53 CET 2012|Extracted part of NullPointerTester and Stub into NullValues; Added code to call default constructor if all else failed;|0|0|1|304|2527|224|36|14|35|5|0|
f8144b4df7eec5f1c9e6942d8d5ef734a8767fd9|Thu Feb 23 22:33:10 CET 2012|For all of //java/com/google/common/... and //javatests/com/google/common/... -sort imports -remove unused imports|0|0|17|304|2527|224|36|32|93|8|0|
66a4a82d359ee8ec552e0af29290081c09ad9d48|Fri Feb 24 17:56:22 CET 2012|Remove c.g.common.escape usages in c.g.common.net.MediaType. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27815215|0|0|1|304|2527|224|36|24|47|5|0|
a1ebd775d663a1c3caab588ef5cd70eddd4be0ce|Fri Feb 24 17:57:50 CET 2012|remove escapers from Guava (won't make it for Guava 12) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27816445|0|14|0|290|2481|221|36|14|1|3|14|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.CharEscaperBuilder, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.SourceCodeEscapers, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.UnicodeEscaper, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.Escapers, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.net.UriEscapers, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.ArrayBasedEscaperMap, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.Escapers$Builder, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.xml.XmlEscapers, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.html.HtmlEscapers, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.Escaper, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.CharEscaper, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.net.PercentEscaper, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.ArrayBasedUnicodeEscaper, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.escape.ArrayBasedCharEscaper, newSymbol=]
3c8b80ac26c04ed731b87c99df0726e4605b5145|Fri Feb 24 17:59:19 CET 2012|Guava issue 534: static builders for COWAS/COWAL. From Louis: http://codereview.appspot.com/5273049/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27817252|0|0|2|290|2485|221|36|14|61|7|0|
113dea14725c0c97b4abfce934a650bb6d9ba1dc|Fri Feb 24 18:00:51 CET 2012|introduce Cache.putAll ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27837322|0|0|5|290|2488|221|36|19|68|6|3|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.cache.AbstractCache.get(K,java.util.concurrent.Callable<V>), newSymbol=com.google.common.cache.AbstractCache.get(K,java.util.concurrent.Callable<? extends V>)],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.cache.AbstractCache.get(K), newSymbol=com.google.common.cache.LoadingCache.get(K)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.cache.Cache, newSymbol=com.google.common.cache.Cache.putAll(java.util.Map<? extends K,? extends V>)]
b145ddc17680673605aa45a1deef15ba0c60a4bf|Fri Feb 24 18:02:19 CET 2012|- clarify CacheBuilder's similarity to MapMaker in the @deprecated messages - be more explicit about CacheBuilder Cache's "default" behavior ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27837348|0|0|2|290|2488|221|36|14|58|7|0|
397b9934cf8ec5e7a5b4b25972ad8c368950246f|Tue Feb 28 19:02:14 CET 2012|Make startUp and shutdown non-abstract on AbstractScheduledService. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27904180|0|0|2|290|2488|221|36|15|36|7|0|
4df8c4ce6c29346b24a8b2ad1d94ce034d5b08fc|Wed Feb 29 17:13:04 CET 2012|Update to latest Mozilla tld data file. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27943273|0|0|1|290|2488|221|36|12|32|6|0|
42d8301aa9d4d570e7d4bea07b3fa7641c338bdc|Wed Feb 29 17:25:20 CET 2012|Add parsing test that caught a regression in overflow detection. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27952556|0|0|0|290|2488|221|36|12|1|7|0|
fefd98f33f69a4beec09606bb96a8113ead755e2|Wed Feb 29 23:54:17 CET 2012|Drop +co.yu from changes file now that it's been removed from the Google domains list. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27972295|0|0|1|290|2488|221|36|13|37|7|0|
a4944fb7e64392cd53159de6a42e2711e3808db1|Thu Mar 01 17:02:06 CET 2012|Roll back CL 23327883's very broken FeatureSpecificTestSuiteBuilder optimization. (We don't clone the tests, so we run all methods against the same target class (the last to be initialized).) Fix up newly failing tests (except for CompactIntegerListTest, for which I've filed a bug). Most are problems with the tests themselves: - Test suppressions weren't being carried over to tests of the reserialized collections. - Map values() collections were universally assumed to permit null queries. - EnumSet was asserted to fail fast on concurrent modification. - Many ConcurrentModificationException tests advanced the iterator past the end of size-zero or size-one collections. - It's not possible to create an empty collection that contains null. Empty collections don't contain anything :) - (Bi)MapGenerator.create is passed an Object[] containing Entry objects, not an Entry[]. - (Bi)MapGenerator.create is passed an Object[] containing Entry objects, not an Entry[]. - StandardImplForwardingNavigableMap.keySet() returned a SortedSet instead of a NavigableSet. - StandardImplForwardingNavigableMap implemented lastEntry and descendingSet in terms of one another (using the standard* methods). - Tests of null SortedMultiset values fail when run against a nullsFirst() comparator because the nulls are outside the submultiset ranges tested. - NavigableSets.synchronizedNavigableSet(SafeTreeSet) does not allow null queries. - Tables.transformValues().cellSet() permits remove operations. - collect/testing SmallTests needed their timeout increased. - CompactIntegerListTest didn't specify all the mutation operations it supports. A few are fixed by improvements to production code that arguably aren't strictly "bug fixes": - ConcurrentHashMultiset.removeAll(collectionContainingNull) threw NPE. - Maps.unmodifiableNavigableMap().subSet/headSet/tailSet returned a SortedSet instead of a NavigableSet. - NavigableMaps.unmodifiableNavigableMap().keySet() returned a SortedSet instead of a NavigableSet. - RegularContiguousSet.contains/containsAll threw NPE (which the EmptyContiguousSet equivalents did not). - WellBehavedMap.entrySet().remove(null) threw NPE instead of returning false. (The fix removes the need for Sets.transform.) A few more are real bugs: - TreeMultiset.add(null) succeeded even for comparators that do not permit null. - TreeMultiset.remove(null) failed even for comparators that permit null. - TreeMultiset iterators couldn't remove null elements. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28001960|0|0|6|290|2488|221|36|25|81|9|0|
cec7952f282c73c2221bddc9dd620298f906870d|Thu Mar 01 16:57:55 CET 2012|BloomFilter changes: - Add copy method. - Add equals method. - Modify put method to return boolean, indicating whether the underlying BloomFilter bits may have changed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=27988892|0|0|3|290|2491|221|36|24|14|5|1|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.hash.BloomFilter.put(T), newSymbol=com.google.common.hash.BloomFilter.put(T)]
8395dcbd9c9860508c9c16a7db3c07945ca346d7|Fri Mar 02 19:58:52 CET 2012|- new @Beta classes for Guava 12.0 - @Beta graduations for Guava 12.0 - remove classes scheduled for removal in Guava 12.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28043743|1|1|8|290|2496|221|32|19|98|11|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.SortedMaps, newSymbol=]
9d782cc8033a9cd0ec6e6257db7fa8b06f4ab8a8|Fri Mar 02 21:35:34 CET 2012|Make minor simplifications to WellBehavedMap, and small optimizations to ForwardingSet. From Louis: http://codereview.appspot.com/5719046/ (Also, sneak in a change to make toRemove final.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28047471|0|0|4|290|2497|221|32|22|50|6|0|
5676e86ee53d6721d1ecd5e9fdd1da8f8c991e85|Tue Mar 06 01:15:33 CET 2012|Add c.g.c.net.MediaType#TIFF Fix minor typo in c.g.c.hash.Hasher javadocs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28107242|0|0|2|290|2497|222|32|14|52|5|0|
70455d395feb903752268145fb8561262cc185cd|Tue Mar 06 01:19:42 CET 2012|UnsignedLongs.toString is suboptimal. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28107274|0|0|1|290|2497|222|32|11|12|7|0|
83504453b0f6f49220988bd068e11d6469488f83|Tue Mar 06 01:23:47 CET 2012|Eliminate Platform#unsafeArrayCopy ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28108805|0|0|2|290|2497|222|32|14|29|5|0|
707f3a276d4ea8e9d53621d137febb00cd2128da|Tue Mar 06 01:28:06 CET 2012|Simplify ImmutableList and its implementations. From Louis: http://codereview.appspot.com/5731051/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28109145|0|0|7|290|2498|222|32|18|62|8|0|
0a3a6d9cd933017d738684d4197838315d9ee150|Tue Mar 06 01:32:20 CET 2012|Provide failure atomicity in AbstractMultimap.put. From Louis: http://codereview.appspot.com/5728049/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28110338|0|0|1|290|2498|222|32|18|45|6|0|
2f830e65a6705678a41f5da1d3eb5eee86f2f2fb|Tue Mar 06 01:36:22 CET 2012|Complete several TODOs, and introduce TransformedIterator, which simplifies and reduces the overhead of package-internal iterator transformations. From Louis: http://codereview.appspot.com/5730052/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28112037|2|0|16|290|2498|222|32|23|116|13|0|
b8bdd426430015ecca79d35eb7f67b320a00ddd2|Wed Mar 07 17:48:16 CET 2012|Removing unnecessary cast ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28137851|0|0|1|290|2498|222|32|26|39|7|0|
6316d5eee36e8d6deb91eb85b096821d9e790b2b|Wed Mar 07 17:58:46 CET 2012|Removing unused, untested non-public no-args constructor ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28138884|0|0|1|290|2498|222|32|12|26|6|0|
12c2f68b5661d415c8a88228c8372c1a80e3523c|Thu Mar 08 20:13:38 CET 2012|Make MediaType more lenient when parsing whitespace. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28182440|0|0|1|290|2498|222|32|14|51|5|0|
2f4db4ac381cb8405286d8d57f47ad90cd63b5f2|Thu Mar 08 20:18:59 CET 2012|Provide a default subList() implementation in ImmutableList. From Louis: http://codereview.appspot.com/5759058/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28206673|0|0|3|290|2498|222|32|12|38|9|0|
bd3d46ff61aab113bac98311b77c1d5f6ce1334e|Thu Mar 08 20:24:23 CET 2012|Simplify ImmutableMap, providing skeleton implementations of each view. From Louis: http://codereview.appspot.com/5753064/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28206736|0|0|10|290|2497|222|32|19|81|8|0|
ea2b4743d2f327d17d586cd061e4c686dc016d19|Fri Mar 09 15:38:54 CET 2012|enhance documentation ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28216272|0|0|1|290|2497|222|32|21|43|4|0|
60f83464509bbed6ff52a9fe65c671e461d425aa|Mon Mar 12 17:46:52 CET 2012|Formal testing of null server and client in TeredoInfo ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28244957|0|0|0|290|2497|222|32|14|1|7|0|
7ebdd5768ad1a5f839a9c78f42606f91bfc22546|Mon Mar 12 17:48:21 CET 2012|delete methods whose Time Has Come ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28245241|0|0|3|290|2494|222|29|14|72|8|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Multimaps.index(I,com.google.common.base.Function<? super V,K>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Maps.uniqueIndex(I,com.google.common.base.Function<? super V,K>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ImmutableMultiset.of(E[]), newSymbol=]
1ef9b7d6b95602f03e729e28207ae64041c71c0c|Mon Mar 12 17:49:48 CET 2012|test for minimum when the minimum is not the first element in the array ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28246126|0|0|0|290|2494|222|29|19|1|5|0|
e3ec650dd008fd92cb494ab54d152062614503c7|Mon Mar 12 17:58:31 CET 2012|test for indexOf with two array arguments; isEmpty and other methods of BooleanArrayAsList ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28292228|0|0|0|290|2494|222|29|12|2|5|0|
66b3ca82937bd6194039cda7e58825eb1d3b6683|Tue Mar 13 21:14:56 CET 2012|Add MediaType matching according to the model defined in the HTTP/1.1 Accept header. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28299737|0|0|1|290|2496|228|29|15|46|5|0|
f27e2690a260db7c3c9355b75132c86e0b0a7ff8|Tue Mar 13 21:15:58 CET 2012|Change primitives #toArray to take Collection<? extends Number> ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28305601|0|0|6|290|2496|228|29|17|23|5|6|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.primitives.Bytes.toArray(java.util.Collection<java.lang.Byte>), newSymbol=com.google.common.primitives.Bytes.toArray(java.util.Collection<? extends java.lang.Number>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.primitives.Floats.toArray(java.util.Collection<java.lang.Float>), newSymbol=com.google.common.primitives.Floats.toArray(java.util.Collection<? extends java.lang.Number>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.primitives.Doubles.toArray(java.util.Collection<java.lang.Double>), newSymbol=com.google.common.primitives.Doubles.toArray(java.util.Collection<? extends java.lang.Number>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.primitives.Ints.toArray(java.util.Collection<java.lang.Integer>), newSymbol=com.google.common.primitives.Ints.toArray(java.util.Collection<? extends java.lang.Number>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.primitives.Longs.toArray(java.util.Collection<java.lang.Long>), newSymbol=com.google.common.primitives.Longs.toArray(java.util.Collection<? extends java.lang.Number>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.primitives.Shorts.toArray(java.util.Collection<java.lang.Short>), newSymbol=com.google.common.primitives.Shorts.toArray(java.util.Collection<? extends java.lang.Number>)]
fb807d78d20685fc1c1139c1ca6b8c0a3db3bca8|Tue Mar 13 21:16:59 CET 2012|Adding a custom serialization option, when the space overhead of java serialization is significant compared to the BF size itself (i.e. for small BFs) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28310115|0|0|2|290|2496|228|29|18|13|5|0|
843f8d8fc37133e6870d5b2200838219a55eb83e|Tue Mar 13 21:18:01 CET 2012|Nuke 85 lines of code in Collections2 by adopting common.math. Which apparently fixed a size calculation bug that wasn't found due to a bad test that thought C(34,14) > MAX_VALUE.  (?)|0|0|1|290|2496|228|29|14|47|4|0|
ec452d24ada3b476ede4bbd9c68e71d4211c0afe|Tue Mar 13 21:19:03 CET 2012|Release FluentIterable into Guava 12.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28311090|1|0|0|291|2526|228|30|15|34|4|0|
2d33ed7fd15022675c91e9be6a68ca1011f83d60|Tue Mar 13 21:20:05 CET 2012|add warning to Ticker ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28316339|0|0|1|291|2526|228|30|13|6|4|0|
44cc8b95c855857a9d582449701e723cfe342b50|Tue Mar 13 21:21:08 CET 2012|- discuss segment behavior in concurrencyLevel ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28316785|0|0|1|291|2526|228|30|13|49|7|0|
3b4e1a6e6c3ceb5a3f31422af98cfc16d656ec92|Tue Mar 13 21:23:12 CET 2012|fix cache links ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28332818|0|0|2|291|2526|228|30|12|44|3|0|
7bab537f942c39e499ed8088463a860631abcec0|Tue Mar 13 21:24:13 CET 2012|Remove assorted unused fields and variables. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28333899|0|0|0|291|2526|228|30|13|1|3|0|
68f3baf20396dcbdd3403f1ff8287f4b0f1e6df8|Tue Mar 13 21:28:21 CET 2012|Use immutable sets in FluentIterableTest where possible ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28342780|0|0|0|291|2526|228|30|13|1|5|0|
b656eca11bf9f0785b2df180ca5a76b5bac9ac82|Wed Mar 14 22:36:54 CET 2012|Filling in coverage for last couple of uncovered branches ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28369624|0|0|0|291|2526|228|30|12|1|5|0|
1678fdb055fb98f44f8c1814981c4ef51fcc2935|Wed Mar 14 22:38:00 CET 2012|leave from methods as Beta ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28374134|0|0|1|291|2526|228|30|13|51|4|0|
9eed06311194b0060c42ea9662cc6d3cb76e6a43|Wed Mar 14 22:39:12 CET 2012|don't unnesessarily constrain type of getIfPresent and getAllPresent parameters ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28374192|0|0|4|291|2526|228|30|15|68|8|3|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.cache.ForwardingCache.getAllPresent(java.lang.Iterable<? extends K>), newSymbol=com.google.common.cache.ForwardingCache.getAllPresent(java.lang.Iterable<? extends java.lang.Object>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.cache.AbstractCache.getAllPresent(java.lang.Iterable<? extends K>), newSymbol=com.google.common.cache.AbstractCache.getAllPresent(java.lang.Iterable<? extends java.lang.Object>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.cache.Cache.getAllPresent(java.lang.Iterable<? extends K>), newSymbol=com.google.common.cache.Cache.getAllPresent(java.lang.Iterable<? extends java.lang.Object>)]
738a4732cd67e0fe0a771c508d637a3d5586d76a|Wed Mar 14 22:40:13 CET 2012|specify 1.6 as source/target for maven-compiler-plugin ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28377677|0|0|0|291|2526|228|30|16|1|5|0|
7b513c2dc24ac2735b894b573b67135d78fd94ee|Fri Mar 16 23:02:27 CET 2012|Widen the default-accepting methods of Itera*s ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28402326|0|0|2|291|2526|228|30|14|48|4|10|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.get(java.lang.Iterable<T>,int,T), newSymbol=com.google.common.collect.Iterables.get(java.lang.Iterable<? extends T>,int,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.get(java.util.Iterator<T>,int,T), newSymbol=com.google.common.collect.Iterators.get(java.util.Iterator<? extends T>,int,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator<T>,T), newSymbol=com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator<? extends T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.getNext(java.util.Iterator<T>,T), newSymbol=com.google.common.collect.Iterators.getNext(java.util.Iterator<? extends T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.getLast(java.util.Iterator<T>,T), newSymbol=com.google.common.collect.Iterators.getLast(java.util.Iterator<? extends T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.find(java.util.Iterator<T>,com.google.common.base.Predicate<? super T>,T), newSymbol=com.google.common.collect.Iterators.find(java.util.Iterator<? extends T>,com.google.common.base.Predicate<? super T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.find(java.lang.Iterable<T>,com.google.common.base.Predicate<? super T>,T), newSymbol=com.google.common.collect.Iterables.find(java.lang.Iterable<? extends T>,com.google.common.base.Predicate<? super T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.getLast(java.lang.Iterable<T>,T), newSymbol=com.google.common.collect.Iterables.getLast(java.lang.Iterable<? extends T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.getFirst(java.lang.Iterable<T>,T), newSymbol=com.google.common.collect.Iterables.getFirst(java.lang.Iterable<? extends T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.getOnlyElement(java.lang.Iterable<T>,T), newSymbol=com.google.common.collect.Iterables.getOnlyElement(java.lang.Iterable<? extends T>,T)]
550c3b9efb37ff248193e05e084d0f2208230eef|Fri Mar 16 23:06:16 CET 2012|Revert: Widen the default-accepting methods of Itera*s ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28412150|0|0|2|291|2526|228|30|16|44|4|10|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.get(java.lang.Iterable<? extends T>,int,T), newSymbol=com.google.common.collect.Iterables.get(java.lang.Iterable<T>,int,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.get(java.util.Iterator<? extends T>,int,T), newSymbol=com.google.common.collect.Iterators.get(java.util.Iterator<T>,int,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.getLast(java.util.Iterator<? extends T>,T), newSymbol=com.google.common.collect.Iterators.getLast(java.util.Iterator<T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.getLast(java.lang.Iterable<? extends T>,T), newSymbol=com.google.common.collect.Iterables.getLast(java.lang.Iterable<T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.find(java.util.Iterator<? extends T>,com.google.common.base.Predicate<? super T>,T), newSymbol=com.google.common.collect.Iterators.find(java.util.Iterator<T>,com.google.common.base.Predicate<? super T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.find(java.lang.Iterable<? extends T>,com.google.common.base.Predicate<? super T>,T), newSymbol=com.google.common.collect.Iterables.find(java.lang.Iterable<T>,com.google.common.base.Predicate<? super T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.getOnlyElement(java.lang.Iterable<? extends T>,T), newSymbol=com.google.common.collect.Iterables.getOnlyElement(java.lang.Iterable<T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator<? extends T>,T), newSymbol=com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator<T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.getNext(java.util.Iterator<? extends T>,T), newSymbol=com.google.common.collect.Iterators.getNext(java.util.Iterator<T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.getFirst(java.lang.Iterable<? extends T>,T), newSymbol=com.google.common.collect.Iterables.getFirst(java.lang.Iterable<T>,T)]
f4cdd87a6103131b1faaa6531ee3650dd790d47e|Fri Mar 16 23:08:51 CET 2012|Add superclass safety check in getSupertype(), added @Beta and @since to TypeToken and Reflection. reflect needs no GWT compatibility, so there seems to be no BUILD dark magic to do? ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28428778|6|0|0|295|2553|228|30|21|75|6|0|
5d20cd63a82dbebe644ed8d69c6383c6d24d6d71|Fri Mar 16 23:10:10 CET 2012|Make UnsignedLong final. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28448320|0|0|1|295|2553|228|30|15|12|6|22|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.toString(), newSymbol=com.google.common.primitives.UnsignedLong.toString()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.subtract(com.google.common.primitives.UnsignedLong), newSymbol=com.google.common.primitives.UnsignedLong.subtract(com.google.common.primitives.UnsignedLong)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.equals(java.lang.Object), newSymbol=com.google.common.primitives.UnsignedLong.equals(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.remainder(com.google.common.primitives.UnsignedLong), newSymbol=com.google.common.primitives.UnsignedLong.remainder(com.google.common.primitives.UnsignedLong)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.doubleValue(), newSymbol=com.google.common.primitives.UnsignedLong.doubleValue()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.valueOf(java.math.BigInteger), newSymbol=com.google.common.primitives.UnsignedLong.valueOf(java.math.BigInteger)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.valueOf(java.lang.String,int), newSymbol=com.google.common.primitives.UnsignedLong.valueOf(java.lang.String,int)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.longValue(), newSymbol=com.google.common.primitives.UnsignedLong.longValue()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.compareTo(com.google.common.primitives.UnsignedLong), newSymbol=com.google.common.primitives.UnsignedLong.compareTo(com.google.common.primitives.UnsignedLong)],BC[kind=CLASS_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong, newSymbol=com.google.common.primitives.UnsignedLong],BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedLong.<init>(long), newSymbol=],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.add(com.google.common.primitives.UnsignedLong), newSymbol=com.google.common.primitives.UnsignedLong.add(com.google.common.primitives.UnsignedLong)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.valueOf(java.lang.String), newSymbol=com.google.common.primitives.UnsignedLong.valueOf(java.lang.String)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.divide(com.google.common.primitives.UnsignedLong), newSymbol=com.google.common.primitives.UnsignedLong.divide(com.google.common.primitives.UnsignedLong)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.bigIntegerValue(), newSymbol=com.google.common.primitives.UnsignedLong.bigIntegerValue()],BC[kind=CLASS_NOW_ABSTRACT, impactedSymbol=com.google.common.primitives.UnsignedLong, newSymbol=com.google.common.primitives.UnsignedLong],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.hashCode(), newSymbol=com.google.common.primitives.UnsignedLong.hashCode()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.toString(int), newSymbol=com.google.common.primitives.UnsignedLong.toString(int)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.asUnsigned(long), newSymbol=com.google.common.primitives.UnsignedLong.asUnsigned(long)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.intValue(), newSymbol=com.google.common.primitives.UnsignedLong.intValue()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.multiply(com.google.common.primitives.UnsignedLong), newSymbol=com.google.common.primitives.UnsignedLong.multiply(com.google.common.primitives.UnsignedLong)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.primitives.UnsignedLong.floatValue(), newSymbol=com.google.common.primitives.UnsignedLong.floatValue()]
50d906b9cd3768067846ed168458e6e3273463ff|Fri Mar 16 23:11:27 CET 2012|Fix some minor javadoc typos in FluentIterable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28451125|0|0|1|295|2553|228|30|13|37|3|0|
eff8aceed635612158a5422168515d6e642724a9|Fri Mar 16 23:14:03 CET 2012|Mark AtomicLongMap @GwtCompatible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28453594|0|0|1|295|2553|228|30|13|42|5|0|
05ba41fc65d2bad97a35cc5f368e6785d287c7fa|Fri Mar 16 23:15:21 CET 2012|Dump some more blahblah into the @Beta annotation to try to clear up some persistent misconceptions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28454189|0|0|1|295|2553|228|30|12|2|5|0|
a7f1729ad02a50fea6cb33dbca5a6d03a447da0f|Fri Mar 16 23:16:39 CET 2012|Make FluentIterabl#of @GoogleInternal ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28454584|0|0|1|295|2552|228|30|13|37|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.FluentIterable.of(), newSymbol=]
ed528dd50aae58fb6a3de43f6261105178a13c6f|Fri Mar 16 23:17:57 CET 2012|Range: fairly major javadoc rewriting. Meticulous math term definitions that we no longer supply here can be found on the Guava Glossary page I just created, or on wikipedia for that matter. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28455770|0|0|1|295|2552|228|30|15|37|6|0|
20e02b70a3a8d08e40456c0a9dc67560325c6661|Fri Mar 16 23:19:15 CET 2012|Added support for resolving types from type variable and wildcard bounds. Useful when deriving inherited generic method signatures. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28457914|0|0|1|295|2552|228|30|13|38|5|0|
7ed2aab3422eb9ba7187b74aea64c69a43708204|Fri Mar 16 23:20:33 CET 2012|Some small fixes for Guava (methods called were @GI). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28457946|0|0|0|295|2552|228|30|13|2|4|0|
31046a7559332368053a6cffe62be3dc12bd2046|Fri Mar 16 23:22:07 CET 2012|Deprecate a few more StringUtil trimming methods; several random javadoc cleanups. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28459342|0|0|2|295|2552|228|30|14|57|9|0|
2b5830861fa281a59a072b6e8117116e3d93c5cf|Fri Mar 16 23:23:24 CET 2012|Un-GoogleInternal a variable used in a test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28460268|0|0|0|295|2552|228|30|13|1|6|0|
d902c949efad09bd3f9400802ae091078c04bce5|Mon Mar 19 17:22:56 CET 2012|Added default-value auto generation to NullPointerTester, for interfaces (and got rid of the manual registration of Function, Predicate and BinaryPredicate).|1|0|0|296|2555|228|30|12|4|4|0|
b9358ae952477b4b8ba9bd97428bc6ed46acc61e|Mon Mar 19 17:26:57 CET 2012|Make ImmutableSortedSet implement NavigableSet. (Under GWT, it still implements only SortedSet.) From Louis: http://codereview.appspot.com/5590046/|0|0|6|296|2569|228|30|21|48|9|2|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.SortedSet.reversed(), newSymbol=java.util.NavigableSet.reversed()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ImmutableSortedSet.of(E[]), newSymbol=]
95c35d3cb9c716f26fb2d3b260049b2bd0d9024b|Mon Mar 19 23:20:13 CET 2012|Fix some typos in MediaType javadocs and error messages. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28512819|0|0|1|296|2569|228|30|20|52|4|0|
56790c18cd659c9696e56bc7988b5723b506c34d|Tue Mar 20 02:04:02 CET 2012|Re-word Beta comment to work around MOE bug that strips anything with the word [] in it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28517528|0|0|1|296|2569|228|30|11|3|4|0|
9eecc5ff9cbace8bb8609d9cdd9585f17cedac4c|Thu Mar 22 20:54:40 CET 2012|Widen the default-accepting methods of Itera*s. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28577590|0|0|2|296|2569|228|30|13|43|7|10|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.get(java.lang.Iterable<T>,int,T), newSymbol=com.google.common.collect.Iterables.get(java.lang.Iterable<? extends T>,int,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.get(java.util.Iterator<T>,int,T), newSymbol=com.google.common.collect.Iterators.get(java.util.Iterator<? extends T>,int,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator<T>,T), newSymbol=com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator<? extends T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.getNext(java.util.Iterator<T>,T), newSymbol=com.google.common.collect.Iterators.getNext(java.util.Iterator<? extends T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.getLast(java.util.Iterator<T>,T), newSymbol=com.google.common.collect.Iterators.getLast(java.util.Iterator<? extends T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.find(java.util.Iterator<T>,com.google.common.base.Predicate<? super T>,T), newSymbol=com.google.common.collect.Iterators.find(java.util.Iterator<? extends T>,com.google.common.base.Predicate<? super T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.find(java.lang.Iterable<T>,com.google.common.base.Predicate<? super T>,T), newSymbol=com.google.common.collect.Iterables.find(java.lang.Iterable<? extends T>,com.google.common.base.Predicate<? super T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.getLast(java.lang.Iterable<T>,T), newSymbol=com.google.common.collect.Iterables.getLast(java.lang.Iterable<? extends T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.getFirst(java.lang.Iterable<T>,T), newSymbol=com.google.common.collect.Iterables.getFirst(java.lang.Iterable<? extends T>,T)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.getOnlyElement(java.lang.Iterable<T>,T), newSymbol=com.google.common.collect.Iterables.getOnlyElement(java.lang.Iterable<? extends T>,T)]
1b23f4e098bcc4de59b5993b5577049bd2eebdd7|Thu Mar 22 21:02:38 CET 2012|Applied missing Apache license stuff to the files I forgot in previous round (oops) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28579696|0|0|4|296|2569|228|30|17|47|5|0|
04bb5f70c38935c6fa24073f8ce8b1facaf392bc|Thu Mar 22 21:18:40 CET 2012|Remove completely unnecessary type parameter from Iterators.skip(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28598708|0|0|1|296|2569|228|30|14|41|5|2|BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.collect.Iterators.skip(java.util.Iterator<T>,int), newSymbol=com.google.common.collect.Iterators.skip(java.util.Iterator<? extends java.lang.Object>,int)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.skip(java.util.Iterator<T>,int), newSymbol=com.google.common.collect.Iterators.skip(java.util.Iterator<? extends java.lang.Object>,int)]
f81aa60c8461401640add879ea9a627f963eb334|Thu Mar 22 22:16:27 CET 2012|Strip references to Google-internal Escape module from Guava.|0|0|0|296|2569|228|30|14|1|4|0|
5b4c81e0606cf55ec32cf747cb7e66bc1f1946f8|Thu Mar 22 22:17:34 CET 2012|Add createConstant and createConstantUtf8 static methods. This avoids a lot of the weird initiaization ordering issues and allows us to consistently use create everywhere instead of having to rely on the constructor in some places. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28617806|0|0|1|296|2569|228|30|13|49|4|0|
4d38b1674bb23385c8ab866af98a2a31e7ab098e|Thu Mar 22 21:39:03 CET 2012|Clarify the impact of having a synchronous refresh implementation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28619483|0|0|1|296|2569|228|30|14|50|6|0|
d26ce6c5c5d775422926ba6d54242a668fb19029|Thu Mar 22 21:26:42 CET 2012|- have Iterables return FluentIterables - allow FluentIterables to be subclassed - withdraw toImmutableSortedList from Guava (will be restored as toSortedImmutableList) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28621161|0|0|2|296|2567|228|30|16|40|5|3|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.FluentIterable.iterator(), newSymbol=java.lang.Iterable.iterator()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.FluentIterable.iterator(), newSymbol=java.lang.Iterable.iterator()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.FluentIterable.toImmutableSortedList(java.util.Comparator<? super E>), newSymbol=]
ea4d8f3a5756d920033728a4646fe80ac162119f|Fri Mar 23 22:33:06 CET 2012|Add Apache header to BloomFilterStrategies ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28651552|0|0|1|296|2567|228|30|15|10|4|0|
6bff760c10d79c6a00a5c02a01626f6b4d4488d5|Fri Mar 23 22:37:10 CET 2012|Fix javadoc of getRawType(). The old one wasn't accurate. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28652466|0|0|1|296|2567|228|30|12|52|4|0|
323b48157718353987d1cf465c17988b6279ee48|Fri Mar 23 22:45:25 CET 2012|Strip ImmutableSortedMultiset from package-info, and un-strip ForwardingNavigable*. Strip FluentIterable getOnlyElement and append methods. Annotate TypeParameter as @Beta, and add @since. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28658296|0|0|2|296|2563|228|30|15|39|5|4|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.FluentIterable.append(E[]), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.FluentIterable.getOnlyElement(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.FluentIterable.getOnlyElement(E), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.FluentIterable.append(java.lang.Iterable<? extends E>), newSymbol=]
94c047c01521965b1a1b3e94a24e95c1b55f3bfe|Fri Mar 23 22:49:35 CET 2012|Add more null values to NullValues, and rename to ArbitraryInstances. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28658308|0|0|0|296|2563|228|30|17|1|4|0|
8cd024fe646729e855468750cf2a20e8ab0f770f|Fri Mar 23 22:53:50 CET 2012|Make Collections2.orderedPermutations work under GWT again. To do so, make the minimal (I think) subset of common.math required work under GWT. This requires suppressing a few cases in the divide() tests due to GWT's non-compliant int implementation (which, for example, occasionally believes that 2147483648 is a valid int). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28659665|0|0|4|296|2563|228|30|16|47|4|0|
b5b4b40a9c17484828dbd7ceb28e0a468dad0b75|Sat Mar 24 04:10:50 CET 2012|Fix FinalizableReferenceQueue class leak which prevented the ClassLoader that loaded FinalizableReferenceQueue from being garbage-collected subsequently. This is Guava issue http://code.google.com/p/guava-libraries/issues/detail?id=92 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28624233|0|0|2|296|2563|228|30|18|10|7|49|BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.getContextClassLoader(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.setDaemon(boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.join(java.time.Duration), newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=java.lang.Thread.NORM_PRIORITY, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.ofPlatform(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.startVirtualThread(java.lang.Runnable), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.isInterrupted(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.currentThread(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.isDaemon(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.isVirtual(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.setContextClassLoader(java.lang.ClassLoader), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.checkAccess(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.holdsLock(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.getName(), newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=java.lang.Thread.MIN_PRIORITY, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.sleep(java.time.Duration), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.interrupted(), newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=java.lang.Thread.MAX_PRIORITY, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.interrupt(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.ofVirtual(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.activeCount(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.threadId(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.getAllStackTraces(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.yield(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.enumerate(java.lang.Thread[]), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.isAlive(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.join(long,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.dumpStack(), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.base.internal.Finalizer, newSymbol=com.google.common.base.internal.Finalizer],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.join(long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.sleep(long,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.getUncaughtExceptionHandler(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.setPriority(int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.setName(java.lang.String), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.clone(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.toString(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.getId(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.getDefaultUncaughtExceptionHandler(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.getPriority(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.sleep(long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.getState(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.join(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.onSpinWait(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.getThreadGroup(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.getStackTrace(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.start(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.stop(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Thread.setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler), newSymbol=]
2c5657b1ee65c4f8338d1d9b1ed595c4ab50c8fc|Sat Mar 24 04:12:22 CET 2012|Fix typo in Javadoc of DiscreteDomain.distance. Fix misleading UncheckedExecutionException Javadoc. Provide dangerous listenInPoolThread that accepts an Executor. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28660317|0|0|3|296|2564|228|30|13|43|7|0|
49ae40b145bebb8bd06a967edc03cb285577d0cc|Sat Mar 24 04:37:21 CET 2012|Created compact, special-case Unicode whitespace CharMatcher. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28661107|0|0|1|296|2564|228|30|14|12|6|0|
30dccfb7e97e8c2a900c1b9daead04fbd7abbb33|Sat Mar 24 04:41:31 CET 2012|Adds: -ByteStreams#hash(InputSupplier, HashFunction) -> HashCode -Files#hash(File, HashFunction) -> HashCode Deprecates: -ByteStreams#getDigest(InputSupplier, MessageDigest) -> byte[] -Files#getDigest(File, MessageDigest) -> byte[] ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28662456|0|0|2|296|2566|228|32|12|17|4|0|
38ef7e8acfe8ae37af01930d800b89100a0e814b|Sat Mar 24 04:49:43 CET 2012|more carefully bound the segment count by maximum size/weight ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28665687|0|0|1|296|2566|228|32|13|70|8|0|
dfd0f7dedc650c7c519102e9bc45c497f480eaf5|Tue Mar 27 19:04:24 CEST 2012|ComparisonChain.compare(boolean, boolean) is too confusing, especially when users have to negate or reverse the parameters so as to get true to come first. Adding compareTrueFirst and compareFalseFirst, and deprecating compare(boolean, boolean). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28707952|0|0|1|296|2568|228|33|16|34|6|2|BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.collect.ComparisonChain, newSymbol=com.google.common.collect.ComparisonChain.compareFalseFirst(boolean,boolean)],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.collect.ComparisonChain, newSymbol=com.google.common.collect.ComparisonChain.compareTrueFirst(boolean,boolean)]
94ded5e2edee8c98a0bf8d126641d04be54d3a27|Tue Mar 27 19:08:24 CEST 2012|Just reduce the default expectedValuesPerKey for HashMultimap from 8 to 2, and for ArrayListMultimap from 10 to 3.|0|0|2|296|2568|228|33|16|43|4|0|
ce5be991c18074bb57c74972c8842c9963334792|Tue Mar 27 19:12:22 CEST 2012|Change Ascii.MIN and MAX from ints to chars. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28708581|0|0|1|296|2568|228|33|14|8|7|2|BC[kind=FIELD_TYPE_CHANGED, impactedSymbol=com.google.common.base.Ascii.MAX, newSymbol=com.google.common.base.Ascii.MAX],BC[kind=FIELD_TYPE_CHANGED, impactedSymbol=com.google.common.base.Ascii.MIN, newSymbol=com.google.common.base.Ascii.MIN]
16ddbb5f52a4538ba31e9d4b5a763f45415c95bb|Tue Mar 27 19:20:29 CEST 2012|Expose ImmutableSortedMultiset ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28711726|0|0|1|298|2599|228|33|12|40|6|0|
701837629ccc49d182a72b9cc4a979a31ee58d44|Tue Mar 27 19:24:33 CEST 2012|Adds a ForwardingDeque. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28714562|1|0|0|299|2617|228|33|16|29|4|0|
1d75b660abdce7128dadc517b2255f9626eb2c0b|Tue Mar 27 19:28:31 CEST 2012|Remove unnecessary method type parameter. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28715773|0|0|1|299|2617|228|33|15|36|6|0|
fb16503b15241807f65ecfc5bb545d3961315ad3|Tue Mar 27 19:32:30 CEST 2012|A few final minor javadoc fixes to close external guava bugs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28717009|0|0|5|299|2617|228|33|15|29|5|0|
3962aabbbf87e27e6f11373d0782a15da83ddde6|Tue Mar 27 19:36:35 CEST 2012|Add private constructor (pointed out by Louis). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28717208|0|0|1|299|2617|228|33|14|10|4|2|BC[kind=CLASS_NOW_ABSTRACT, impactedSymbol=com.google.common.math.DoubleMath, newSymbol=com.google.common.math.DoubleMath],BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.math.DoubleMath.<init>(), newSymbol=]
cdee39b8e7d7e4a303d615da5e3557b6bd3974ac|Tue Mar 27 19:40:35 CEST 2012|Fix up deprecation messaging in ByteStreams and Files. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28728118|0|0|3|299|2617|228|33|14|45|6|0|
946bb1f5bf9ee7ab7702a21cb75ec3fbbeb8343f|Tue Mar 27 19:48:57 CEST 2012|specify missing version numbers ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28741770|0|0|0|299|2617|228|33|15|1|5|0|
d72c700e82a8aa728569ff7182aac5b63978f83f|Tue Mar 27 19:53:14 CEST 2012|Fix GWT behavior of "opportunistic" ImmutableList subclasses. The "standard" ImmutableLists were fine, but Lists.charactersOf() and TransformedImmutableList were broken. Under Java, they inherited working implementations of their methods; under GWT, they inherited versions that forwarded to an empty "delegate" collection. I've overridden all forwarding methods in the GWT emulation in order to avoid this. I've also added tests for charactersOf(), which reveal that GWT String/StringBuilder doesn't perform index checks, so I've added manual checks. TransformedImmutableList could probably stand to have some tests, too, but at least it will be exercised indirectly through the asList() views implemented atop it in Louis's coming CL, which is in fact what revealed these problems. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28741879|1|0|3|299|2617|228|33|17|51|5|0|
1a7e408ce9f1e2c256635d6673595282fed8805a|Tue Mar 27 19:57:26 CEST 2012|retract partition and partitionWithPadding from Guava ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28741930|0|0|1|299|2615|228|33|19|36|5|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.FluentIterable.partition(int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.FluentIterable.partitionWithPadding(int), newSymbol=]
91c10473084d808b488b23d1fce21f72f8c3a928|Tue Mar 27 20:01:46 CEST 2012|Simplify ImmutableMultiset implementations. From Louis: http://codereview.appspot.com/5780044/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28742978|0|0|7|299|2615|228|33|20|49|5|1|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.ImmutableMultiset.entrySet(), newSymbol=com.google.common.collect.ImmutableMultiset.entrySet()]
ae80f64044d657af43fb4732ab5909471ee10c8e|Tue Mar 27 21:32:14 CEST 2012|Stop erroneously placing the "normal Java" version of TestPlatform under guava-gwt. (The GWT version happens to be missing, and we'll need to fix that up before the tests can run externally.) This fixes the Guava build breakage introduced by my Collections2 CL.|0|0|0|299|2615|228|33|14|1|4|0|
11ca41e98e8930d8a6506a08678439bc10666706|Tue Mar 27 21:32:45 CEST 2012|Changed NullPointerTester to test inherited methods.|0|0|1|299|2617|228|33|12|9|4|0|
305d4749447a41ef78efc6cfbbbc2d82c059d640|Tue Mar 27 20:10:06 CEST 2012|Split SortedMap tests out of NavigableMap tests in preparation for running the former under GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28743199|0|0|0|299|2617|228|33|13|1|5|0|
f594440f46536d573dc5c51911d05f790fdd1f1e|Tue Mar 27 21:32:45 CEST 2012|Fix up erroneous git rebase? ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28743194|0|0|0|299|2617|228|33|14|1|4|0|
d4f53a983e8776505cfb664340502fb7d9a24bbb|Wed Mar 28 01:37:10 CEST 2012|warn that Cache.asMap.get does _not_ automatically load values. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28753957|0|0|1|299|2617|228|33|12|53|6|0|
1787c68ce94219f34906ad6c1b65747245c0259f|Thu Mar 29 19:40:46 CEST 2012|Make KNOWN_ORDER significant for Map tests. (There are no direct Map tests using KNOWN_ORDER, but we now pass KNOWN_ORDER on to our keySet, entrySet, and values sub-suites.) Start using KNOWN_ORDER in various tests, including automatically in all SortedMap and SortedSet tests. Introduce TestStringSortedMapGenerator to save us from having to write "sort(insertionOrder, Helpers.<String, String>entryComparator(Ordering.natural().nullsFirst()));" as an order() implementation over and over. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28780249|0|0|0|299|2617|228|33|18|1|6|0|
561e50586995195031e1916d3cee995ec1850a16|Thu Mar 29 19:46:01 CEST 2012|Make MapTestSuiteBuilder (also BiMapTestSuiteBuilder) work under GWT, and then use it there (as well as the non-GWT ImmutableSortedMapTest, where it should have been used already).|0|0|0|299|2617|228|33|19|1|3|0|
4e23ecc8ae473ebe8aacd6fe5047c856ac4ebd02|Thu Mar 29 19:51:08 CEST 2012|Make ImmutableSortedMap implement NavigableMap. From Louis: http://codereview.appspot.com/5606043/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28789345|0|0|1|299|2635|228|33|16|44|6|5|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.SequencedMap.pollFirstEntry(), newSymbol=com.google.common.collect.ImmutableSortedMap.pollFirstEntry()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.SortedMap.reversed(), newSymbol=java.util.NavigableMap.reversed()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.SequencedMap.lastEntry(), newSymbol=com.google.common.collect.ImmutableSortedMap.lastEntry()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.SequencedMap.pollLastEntry(), newSymbol=com.google.common.collect.ImmutableSortedMap.pollLastEntry()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.SequencedMap.firstEntry(), newSymbol=com.google.common.collect.ImmutableSortedMap.firstEntry()]
390065920f44c80e567b8c71e7feec1578e1a6fa|Thu Mar 29 20:01:34 CEST 2012|Use murmur32 for hashing when coercing IPv6 addresses into IPv4 addresses. Although murmur32 is slightly slower, it has fewer collisions (on a sample dataset) and is licensed under the MIT License. The hash was last changed on 2010/12/06: [] ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28793594|0|0|1|299|2635|228|33|15|17|4|0|
e17759dcf1575e634058443bce106b34e15215cd|Thu Mar 29 20:12:05 CEST 2012|Bunch of small style cleanups/code cleanups to InetAddresses. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28795487|0|0|1|299|2635|228|33|13|20|5|0|
7a2d19a43e69ceb7623ee4d2749490a69c17f2ea|Thu Mar 29 20:17:21 CEST 2012|Add FluentIterable.toImmutableSortedSet(Comparator) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28795758|0|0|1|299|2636|228|33|13|34|3|0|
683a0e2832a38d8ca110b8b5ba25558a673a9a7f|Thu Mar 29 20:22:16 CEST 2012|Make SortedMapTestSuiteBuilder work under GWT. There is some restructuring and additions of trivial getters in the builders, but the only real code changes are in GwtTestSuiteGenerator (and the use in ImmutableSortedMapTestSuite). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28819226|0|0|0|299|2636|228|33|15|1|4|0|
4367e2ad3c72a38ebfba05b734267df81b795211|Thu Mar 29 23:21:46 CEST 2012|Use SortedMapTestSuiteBuilder and NavigableMapTestSuiteBuilder more widely. This requires two improvements: - Generalize NullsBeforeB, intended for use with test elements "a", "b", "c", etc., to introduce NullsBeforeTwo, intended for use with test elements "one", "two", "three", .... - Do not require SortedMap keySet() to be a SortedSet (as the interface doesn't require this). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28826718|0|0|0|299|2636|228|33|13|2|6|0|
a0fdfe9985143b795149194c749a93db292316af|Thu Mar 29 23:26:50 CEST 2012|Fix ForwardingList documentation. http://code.google.com/p/guava-libraries/issues/detail?id=873 From Louis: http://codereview.appspot.com/5576046/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28826914|0|0|1|299|2636|228|33|15|32|7|0|
7adacdf912f3e1829071421cd57f649b3df6857a|Thu Mar 29 23:31:59 CEST 2012|Document the weird problem with Optional<? extends T> along with its workaround. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28829356|0|0|1|299|2636|228|33|14|9|4|0|
a86e366244f9cd13898c274daa78af3979a3a656|Thu Mar 29 23:37:10 CEST 2012|Java6 cleanups for Guava 12.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28829456|0|0|1|299|2636|228|33|13|7|3|0|
66e833ad489d855bf9a201af4cc24623d3617232|Thu Mar 29 23:42:00 CEST 2012|Remove the severely outdated primitive generate scripts. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28829652|0|0|0|299|2636|228|33|14|1|4|0|
94225aae1eb510d19b225df3995cb1d608b2e291|Fri Mar 30 01:15:46 CEST 2012|- throw InterruptedException from CacheLoader methods - propogate interruptions which occur during cache loading ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28832819|0|0|2|299|2636|228|33|12|71|6|0|
5cc3b0b33392b02ff95a4ce5f291c439b5b1406e|Fri Mar 30 01:31:04 CEST 2012|Broken people using c.g.c.base.Strings in Android (1.5?) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28833864|0|0|1|299|2636|228|33|15|9|6|0|
1977a32ec0f261459baf7a7f2a647c8a7f4d04ed|Fri Mar 30 01:35:51 CEST 2012|Add missing @since tags. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28834851|0|0|4|299|2636|228|33|13|55|5|0|
250b3d6fa7ba65ba225be4f7670adc8b1e64eb9c|Fri Mar 30 14:40:01 CEST 2012|@since tweaks: - ForwardingSet.standardRemoveAll is an override of ForwardingCollection.standardRemoveAll, so, as binary compatibility goes, it "inherits" @since 7.0 from its parent.  Still, it's good document what we changed. - ImmutableSortedMap changed to implement NavigableMap.  That seems worth documenting. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28850312|0|0|2|299|2636|228|33|13|41|8|0|
2c0541982e091da5455373d4f3b66cfc9a8f6d52|Fri Mar 30 14:55:24 CEST 2012|Fix unchecked warnings. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28850534|0|0|3|299|2636|228|33|16|62|8|0|
034bd999f5a00e7657dc48d9a4c50597a351697f|Fri Mar 30 15:14:18 CEST 2012|Queues was released in 11.0 but is missing from package-info. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28850827|0|0|1|299|2636|228|33|17|9|4|0|
a50cb403ce1dc80a3dbd002fd82a829b7f743208|Mon Apr 02 18:00:59 CEST 2012|Remove open-source project and code which provides a backported Java6-style ExecutorService for Java5 compatibility, with all the extra build steps involved in using it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28854629|0|0|0|299|2636|228|33|18|1|4|0|
b31535bc7551c8debf7ed27f7b98ec17df6cff4e|Mon Apr 02 18:02:19 CEST 2012|Remove unnecessary dependency.  This modules doesn't contain any tests - the tests for this module are in guava-tests, where this is more appropriately specified. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28859438|0|0|0|299|2636|228|33|12|1|4|0|
f39ad80f7783ba8a1d019ce99046c267fec71bb8|Mon Apr 02 18:03:38 CEST 2012|- fix @links to point to LoadingCache - internally move LoadingCache methods out of LocalManualCache - clarify use of weight in maximumWeight ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28862370|0|0|3|299|2636|228|33|12|83|4|0|
e69bde4dda3b309dcc164aa7f4ab50cfe89e9193|Mon Apr 02 18:07:18 CEST 2012|fix version numbers on Guava for non-release trunk to fit with maven version numbering standards. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28904802|0|0|0|299|2636|228|33|17|1|5|0|
ee40820afb25d447acfce175d41246495d1e6db2|Wed Apr 04 00:16:37 CEST 2012|Add parseUnsignedByte, toString, and MAX_VALUE to UnsignedBytes. From Louis: http://codereview.appspot.com/5907072/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28921581|0|0|1|299|2640|229|33|12|13|4|0|
63c7f635199b45982c9bbd7d06a286a0bc3d1fba|Wed Apr 04 00:20:48 CEST 2012|Guava issue 955: orderKeysBy shouldn't conflate keys that compare as equal. From Louis: http://codereview.appspot.com/5969066/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28922962|0|0|2|299|2640|229|33|14|53|6|0|
42422ccbd626e58696bc7bf6e4cf89142aeb0df4|Wed Apr 04 00:24:55 CEST 2012|Optimize DoubleMath rounding implementations, avoiding branches and expensive floor/ceiling operations where possible. From Louis: http://codereview.appspot.com/5976057/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28923961|0|0|2|299|2640|229|33|16|10|4|0|
c8ac5329685569a07cb2a64bcb684a80823affa2|Wed Apr 04 22:44:55 CEST 2012|Fix old pom wording that contains a reference to sub-packages that is a 2 year old woopsie. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28979425|0|0|0|299|2640|229|33|13|2|5|0|
77eed532e9313671b16449facccbb3938cc9ecff|Wed Apr 04 22:49:10 CEST 2012|Make FindBugs marginally happier. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28982197|0|0|2|299|2640|229|33|13|69|6|0|
35e669642cecbe40f32ad4b0c2b18b9ff10f6e89|Wed Apr 04 22:57:11 CEST 2012|Add DoubleMath.fuzzyEquals and DoubleMath.fuzzyCompare (Guava issue 725). From Louis: http://codereview.appspot.com/5924043/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=28988303|0|0|2|299|2642|229|33|15|13|4|0|
901f4f7d624b998471ccaeebf4aefcc1012d43bc|Thu Apr 05 21:34:33 CEST 2012|Some minor tweaks of TypeToken javadoc. While I was reading the release note, these occurred to me as calling for improvement. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29016235|0|0|1|299|2642|229|33|13|50|5|0|
3cf8d5fab0278aa203c31908e2c6fc5eefea145c|Fri Apr 06 00:14:41 CEST 2012|add CacheBuilder.recordStats ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29024502|0|0|1|299|2643|229|33|13|48|8|0|
7e9e59b1074eb585bc39fc1c4341c090f69f3ebc|Fri Apr 06 17:45:46 CEST 2012|Some javadoc tweaking to NullPointerTester. Please comment away, I have absolutely no confidence in my wordsmithing ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29029545|0|0|0|299|2643|229|33|12|1|5|0|
1cac97e676f58cfb8a9e92d28aed9c080bd590d4|Fri Apr 06 17:48:32 CEST 2012|Address issue 952 on public guava: don't make spaces in parameters mandatory. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29032281|0|0|1|299|2643|229|33|12|52|5|0|
525c016d108a33bd148036a7afef01cd73709a03|Fri Apr 06 17:49:55 CEST 2012|Address comments left on CL 28921581 and CL 28923961. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29039515|0|0|3|299|2643|229|33|14|19|7|0|
c50f528b2b4648dc472545c6671f44c1b9145bf3|Fri Apr 06 17:51:13 CEST 2012|turn of CacheStats collection by default ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29039525|0|0|1|299|2643|229|33|16|46|5|0|
98db310a151c40ca2b044d062a6d1ef230a8d6eb|Tue Apr 10 20:52:44 CEST 2012|Fix Guava GWT module: - Issue 961: Release java.nio.charset.Charset module to Guava. - Remove bogus @GwtCompatible annotation from ForwardingDeque... and remove commented annotation from MinMaxPriorityQueue.  (IIRC, we have a hack in one of our many levels of processing that just looks for the literal string "@GwtCompatible.") ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29041128|0|0|2|299|2643|229|33|15|35|5|0|
6d9be3db16361b8389f30bbb4aea94c36d0bf81d|Tue Apr 10 20:53:40 CEST 2012|Fix Guava Javadoc warnings. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29041212|0|0|8|299|2643|229|33|17|92|11|0|
75225d640fa4d95f602a1b6060e37ec9ef4d8373|Tue Apr 10 20:54:35 CEST 2012|Improve ImmutableCollection.asList(), making more asList views delegate contains() queries to the backing collection. From Louis: http://codereview.appspot.com/5785044/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29041788|1|0|11|299|2643|229|33|27|65|9|0|
813d692929d7ce614a073ebf22c0c1a2669b43eb|Tue Apr 10 20:56:27 CEST 2012|don't allow garbage collected values to be "copied" ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29043800|0|0|3|299|2643|229|33|21|86|7|0|
06cbdb1ed84f235b51fec6acc740d8261357545d|Tue Apr 10 20:57:21 CEST 2012|migrate from AtomicLong to LongAdder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29046868|2|0|2|299|2643|229|33|19|55|4|0|
8662c5586dee7b68ebc6b02c3511e802dbd89a08|Tue Apr 10 20:58:14 CEST 2012|Deprecated NPT.ignore(Member); added ignore(Method) overload as the new preferred method. No one ignores constructor in []. And the code to ignore constructor would read less meaningful. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29094202|0|0|0|299|2643|229|33|14|2|5|0|
e2ba499f902b786d4f6a8243acfc120c165b2b7d|Tue Apr 10 20:59:09 CEST 2012|Eliminate test that uses systemNanos() but expects nano precision, which will break on platforms that only have micro precision.  The test isn't really testing anything, so rather than fix it, I'm removing it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29095913|0|0|0|299|2643|229|33|12|1|4|0|
96059782ccf3c780d6f137eb3a56ae5bdfe9bd80|Tue Apr 10 21:00:04 CEST 2012|Inline Itera*s#getLast into FluentIterable#last due to performance issue in GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29097188|0|0|1|299|2643|229|33|12|42|5|0|
cab6f3f08d31bb3f492eeeabdda767a191dbf0ef|Tue Apr 10 21:00:58 CEST 2012|Make HashCode implementations serializable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29100445|0|0|1|299|2643|229|33|13|9|4|0|
d6acf74526efee51bd12df6329afc7968e019945|Tue Apr 10 21:02:45 CEST 2012|include CacheBuilderSpec example in external javadoc ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29120699|0|0|1|299|2643|229|33|11|49|5|0|
2c1b904fc0063b220f8e1a5c0e5ac513e496cf3c|Tue Apr 10 21:03:40 CEST 2012|Fix Splitter to handle patterns that have empty matches, like boundaries and look-behind/ahead patterns, without exploding. From Louis: http://codereview.appspot.com/5901060/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29124245|0|0|1|299|2643|229|33|15|12|7|0|
23e2a99b4112dee10b6d0ff3ca3dc02483958eb5|Tue Apr 10 21:04:28 CEST 2012|Fix UnsignedLongs/UnsignedInts join method. The first argument wasn't treated as unsigned. http://code.google.com/p/guava-libraries/issues/detail?id=966 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29126150|0|0|2|299|2643|229|33|16|16|4|0|
7a795c36f53c13d8fd93a1b031a5c13be31160d0|Fri Apr 13 19:26:23 CEST 2012|Use a binary release of Truth. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29129847|0|0|0|299|2643|229|33|13|1|4|0|
97f00f81899c0faf6e63f45a92715f9797ab5b82|Fri Apr 13 19:28:54 CEST 2012|Open-source RangeSet/RangeMap classes so that Louis can rebase his http://code.google.com/r/wassermanlouis-guava/source/detail?r=fb106087948b2c0da9f5f6ed610d2df3ebb0240a&name=rangemap on top of them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29159225|3|0|0|299|2643|229|33|13|39|5|0|
fa351948dbb3937cf046b6a05dc11c1113544963|Fri Apr 13 19:30:11 CEST 2012|Silence GWT serialization warnings:|0|0|0|299|2643|229|33|13|1|4|0|
fe4882f94d139d287dcbb44d86c883bb52d43210|Fri Apr 13 19:31:30 CEST 2012|Adding Converter<String, String> CaseFormat.this.converterTo(CaseFormat). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29167278|0|0|0|299|2643|229|33|12|2|3|0|
ed38ec2fbd739995c79ca020bfcaf04d47082e42|Fri Apr 13 19:32:46 CEST 2012|Fix non-fatal GWT compilation errors: [ERROR] Errors in 'generated://1DCFAC23BE2D8C9BC205377978109764/com/google/common/collect/ForwardingImmutableList_FieldSerializer.java' [ERROR] Line 12: The method deserialize(SerializationStreamReader, ForwardingImmutableList) is undefined for the type ImmutableList_CustomFieldSerializer [ERROR] Line 17: The method serialize(SerializationStreamWriter, ForwardingImmutableList) is undefined for the type ImmutableList_CustomFieldSerializer See snapshot: /export/hda3/tmp/gwttJezSA/com.google.common.collect.ForwardingImmutableList_FieldSerializer7338663414191156255.java [ERROR] Errors in 'generated://678D18D6E583C7FF092AA10F8A0D52A6/com/google/common/collect/ImmutableAsList_FieldSerializer.java' [ERROR] Line 12: The method deserialize(SerializationStreamReader, ImmutableAsList) is undefined for the type ImmutableList_CustomFieldSerializer [ERROR] Line 17: The method serialize(SerializationStreamWriter, ImmutableAsList) is undefined for the type ImmutableList_CustomFieldSerializer See snapshot: /export/hda3/tmp/gwttJezSA/com.google.common.collect.ImmutableAsList_FieldSerializer2670401979529327298.java Sneak in a little internal cleanup. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29200972|0|0|1|299|2643|229|33|13|30|4|0|
4347ab06e201f5de8d58624acbf914ee9015b6c6|Fri Apr 13 19:34:03 CEST 2012|Fix coverage runs by excluding FinalizableReferenceQueue ClassLoader-unloading tests from the normal suites. (I've confirmed that the test does still run despite the suppression, which applies only to suites.) I've also edited our project definition to exclude the new target from coverage runs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29201526|0|0|0|299|2643|229|33|15|1|6|0|
24f9088a97ecac44bb2d3e9669ccfcdd2b0a2775|Fri Apr 13 19:35:24 CEST 2012|Fix a build issue in FRQ tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29211136|0|0|0|299|2643|229|33|12|1|4|0|
439d752bc1402011b4d6d92092011b9f91fb4edf|Fri Apr 13 19:38:05 CEST 2012|Work around GWT overflow problems in IntMathTest. This lets us stop skipping one case of testDivNonZero, and it lets us run testCheckedPow and thus have the confidence to make checkedPow @GwtCompatible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29228136|0|0|1|299|2643|229|33|13|14|4|0|
2169c86ef5ddd350b1a48aed7f917d6c555a7602|Mon Apr 16 13:10:06 CEST 2012|Update poms to support properly generated OSGI metadata and signing with GPG ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29254221|0|0|0|299|2643|229|33|13|1|5|0|
091f6b3accc118312859cdd744c5586d1bc47219|Mon Apr 16 14:15:11 CEST 2012|Add public filter() example to FluentIterable docs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29275867|0|0|1|299|2643|229|33|12|39|4|0|
4077f6011814ef7db2a36671864beed21034ecdb|Wed Apr 18 14:45:01 CEST 2012|Update CharMatcher.java INVISIBLE for Unicode 6.1, u0604 added, new char, gc = format u17b4, u17b5 removed, changed gc from Cf to Mn ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29327732|0|0|1|299|2643|229|33|15|11|4|0|
24dbee52488621b0529ed0caa0b7128c050f32da|Mon Apr 23 17:15:21 CEST 2012|Rewrite TreeMultiset in terms of a traditional AVL tree, significantly increasing speed and reducing allocation. From Louis: http://codereview.appspot.com/5700055/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29480735|0|15|3|299|2640|229|33|17|44|4|0|
ca91565c0f3692f8efabec10dd1febf5cf4fc97d|Mon Apr 23 18:28:01 CEST 2012|Delete the unnecessary DoubleUtils.fastAbs, preferring the JVM-intrinsified Math.abs. From Louis: http://codereview.appspot.com/5992076/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29482263|0|0|2|299|2640|229|33|14|15|4|0|
548f8698683cb282d8a8d5f5a140af63562cc740|Mon Apr 23 22:33:46 CEST 2012|Minor simplifications to the ArrayTable implementation. From Louis: http://codereview.appspot.com/6057048/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29492178|0|0|1|299|2640|229|33|12|40|4|0|
5089436ca0707f57d9bd3b8e568012ad36a365e8|Tue Apr 24 16:57:26 CEST 2012|Remove reference of getGenericInterfaces() from javadoc, it's @GoogleInternal; Added mention of getTypes() and resolveType(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29506914|0|0|1|299|2640|229|33|12|49|4|0|
5c0fcc82692e2691ee821612f785656bf18a0a9e|Tue Apr 24 20:11:39 CEST 2012|Use get() as the example method call on a synchronized Multimap. This is probably the most common case, so using a different method as an example was misleading. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29524021|0|0|1|299|2640|229|33|15|56|5|0|
7d5825f96a618f0b7edf3054019e22dfd1910902|Wed Apr 25 20:57:39 CEST 2012|CharMatcher space improvements (Small = same trick used for Whitespace, Medium = traditional hash table, large = what we do now). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29564154|2|0|1|299|2640|229|33|17|11|3|0|
3ef229071cacbf3559efc65a977955ec0c8612af|Wed Apr 25 23:39:43 CEST 2012|Guava issue 783: Fix handler finder w.r.t. subclasses and interfaces. From Louis: http://codereview.appspot.com/5389041/|0|0|1|299|2640|229|33|15|41|4|0|
1d10d2732792c001603c6050dfcba72e65e847e8|Fri Apr 27 19:04:40 CEST 2012|Mark the two deprecated digesting methods as @GoogleInternal. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29595646|0|0|2|299|2638|229|31|18|18|6|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.getDigest(java.io.File,java.security.MessageDigest), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.getDigest(com.google.common.io.InputSupplier<? extends java.io.InputStream>,java.security.MessageDigest), newSymbol=]
fc5979f45d14e21d61c52f2adf9d292d2d605dc4|Fri Apr 27 19:06:02 CEST 2012|Cleanup grab bag: - Findbugs warnings - compiler warnings (cast, generic array, unchecked) - Javadoc warnings - unnecessary @Beta tags for package-private classes - unnecessary Platform.newArray(Class, int) indirection - Guava copyrights - exception message typo - DerivedGenerator documentation - parameterized instanceof - import sorting in files already changed ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29598347|0|0|24|299|2638|229|31|33|139|9|0|
577ff976b6c1fda0f0582ec445599e4ae9998f73|Fri Apr 27 19:07:26 CEST 2012|Adding some performance remarks/warnings regarding recursive constructions of Iterators#concat and Sets#union ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29609623|0|0|2|299|2638|229|31|30|51|9|0|
60ddd24e73fb9ee45a13907caf3a7ce219864297|Fri Apr 27 19:08:50 CEST 2012|Export more guava-testlib tests to Guava, and move already-exported guava-testlib tests under guava-testlib.|0|0|0|299|2638|229|31|20|1|4|0|
51a41aae5c2ca166a5838bcf27e99cda04d30fab|Tue May 08 16:40:42 CEST 2012|Fix broken comment. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29637759|0|0|1|299|2638|229|31|13|14|4|0|
a3a6f115f2cb06a4cf3cfd9c5f8558c89d59b0bb|Tue May 08 16:44:47 CEST 2012|Document the purpose of the or() compilation tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29679858|0|0|0|299|2638|229|31|13|1|6|0|
02eeaf9198ad979905a44e418522831bc0cd5671|Tue May 08 16:48:48 CEST 2012|Add HashFunction#hashFoo shortcuts for AbstractNonStreamingHashFunction. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29681822|0|0|1|299|2638|229|31|12|6|4|0|
e166b1d9e79afd12149a5141b32426666355ac84|Tue May 08 16:56:54 CEST 2012|Skip gpg signing by default, which can be overridden on the command-line at release time with -Dgpg.sign=false ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29698293|0|0|0|299|2638|229|31|13|2|3|0|
4e65ce73450ce04a77f6c03757de26210bf7622f|Tue May 08 17:05:05 CEST 2012|More assorted cleanup: - reenable Multiset NullPointerTester tests - fix @Nullable annotations and add checkNotNull as necessary to get them to pass - remove email addresses from @author tags - update explanation of why we can't use Arrays.copyOfRange - remove completed TODO from fuzzyEquals - fix out-of-date AbstractMapBasedMultiset comment ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29718341|0|0|27|299|2638|229|31|30|87|7|0|
a36dbdaa5863d986cba3f68ceee27e9715490ccc|Tue May 08 17:09:13 CEST 2012|Optimize DenseImmutableTable so that it doesn't rebuild rows and columns on the fly. From Louis: http://codereview.appspot.com/6066046/|7|0|6|299|2638|229|31|40|58|7|0|
3cd12b26e3ecb8955699cf409167ad05ccf908c6|Tue May 08 17:13:21 CEST 2012|Stop importing ImmutableFoo.Builder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29722333|0|0|0|299|2638|229|31|20|1|4|0|
5773fa27ae83c17723ba3a8002c8eab2b89b1977|Tue May 08 17:26:01 CEST 2012|Fix another non-fatal GWT compile error I introduced: [ERROR] Errors in 'generated://FD81516CE6734FC4CAA6FA770EC8D576/com/google/common/collect/ForwardingImmutableSet_FieldSerializer.java' [ERROR] Line 12: The method deserialize(SerializationStreamReader, ForwardingImmutableSet) is undefined for the type ImmutableSet_CustomFieldSerializer [ERROR] Line 17: The method serialize(SerializationStreamWriter, ForwardingImmutableSet) is undefined for the type ImmutableSet_CustomFieldSerializer ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29727380|0|0|0|299|2638|229|31|13|1|4|0|
200c82944815465525ad87c759012b1ea7efc9f6|Tue May 08 17:47:15 CEST 2012|Serialization scaretext for Lists.transform. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29756113|0|0|1|299|2638|229|31|16|50|5|0|
82d26584d7c6aeeaa29a478ee4c9f2f0af80c5c4|Tue May 08 17:59:46 CEST 2012|Implement basic capacity control for immutable collection builders.  We don't expose them yet, though, until the API is agreed upon. This will likely pay off with the in-progress immutable collection rewrites, which make much more use of each other's builders internally. From Louis: http://codereview.appspot.com/6092044/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29762640|0|0|2|299|2638|229|31|15|43|6|0|
f44e4418cf4acd6b2744eb7e4c4586d415545e2b|Tue May 08 18:03:58 CEST 2012|Add an optimization for CompoundOrdering to avoid iterator allocation.  On my benchmarks, for the common two-comparator case, the speedup is ~30%. From Louis: http://codereview.appspot.com/6092047/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29762878|0|0|1|299|2638|229|31|15|32|6|0|
4541b6c424325ecc1382fe31eff5ea2f743e24a8|Tue May 08 18:16:28 CEST 2012|Internal-only changes with some spillover. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29790005|0|0|0|299|2638|229|31|14|1|4|0|
1b909536f390cb3f5814cea4440f935e16091af6|Tue May 08 18:20:39 CEST 2012|Internal-only changes with some spillover. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29798181|0|0|1|299|2638|229|31|15|14|5|0|
86812e5acf9c82d9c3627bc4d956086759703023|Tue May 08 18:29:01 CEST 2012|Admit that the TestSuiteBuilder classes aren't *really* GWT-compatible, despite our hacks to make them appear so. Move the derived generators into separate classes that *are* GWT-compatible. Also acknowledge that a bunch of suite() aren't GWT-compatible; GWT has been ignoring them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29798619|0|0|0|299|2638|229|31|20|1|4|0|
3a0ce24946eeb83239615dea83011672ccbd6c5c|Tue May 08 18:37:25 CEST 2012|Issue 972: Ordering.allEqual(). From Emily: http://codereview.appspot.com/6061053/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29799363|1|0|1|299|2639|229|31|18|39|5|0|
57fe4b972a19dcbef798880f3de4559e5a6ea956|Tue May 08 18:41:41 CEST 2012|Switch BiMap tests all the way over to BiMapTestSuiteBuilder. From Louis: http://codereview.appspot.com/6127058/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29799739|0|0|1|299|2639|229|31|16|66|9|0|
e630857e486cc8f8e4599b3c6de26e202044cd4e|Tue May 08 18:46:02 CEST 2012|Introduce MultimapTestSuiteBuilder, hoping to eventually migrate from AbstractMultimapTest. From Louis: http://codereview.appspot.com/6123061/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29800810|0|0|0|299|2639|229|31|25|2|4|0|
ce8e387fa8d181d508af459148c0d3b1cb2a56f5|Tue May 08 18:50:18 CEST 2012|AUTHORS += Emily Soldal ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29801283|0|0|0|299|2639|229|31|17|1|5|0|
e6f43bf9ea8ecaf79920fd2349fc16cedd82dd89|Tue May 08 18:58:51 CEST 2012|Remove obsolete JavaDoc referring to a sun.net dependence I removed years ago. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29830593|0|0|1|299|2639|229|31|11|19|3|0|
02a6ca4b4753c2ec922b7acc8c4ab8f9444bed4f|Tue May 08 19:07:29 CEST 2012|Optimize Ordering.immutableSortedCopy. From Louis: http://codereview.appspot.com/6202050/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29881848|0|0|2|299|2639|229|31|13|42|7|0|
ba8284bdfab78f544222410ffd6c0598dd125496|Tue May 08 19:11:56 CEST 2012|Remove the unnecessary "bulk" operation Features from the TestSuiteBuilders. From Louis: http://codereview.appspot.com/6196048/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29883364|0|0|0|299|2639|229|31|22|2|6|0|
726047f845374b9d1514f6a88a9eb70f5ced721e|Tue May 08 19:16:18 CEST 2012|Guava issue 988: improve error messages in ImmutableMap. From Louis: http://codereview.appspot.com/6192047/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29885493|0|0|1|299|2639|229|31|18|40|8|0|
5e647120f16fd087f04ac2630bdc3b03af527e09|Tue May 08 19:20:45 CEST 2012|Don't depend on the precise format of the failure message, only that it contains the expected string. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29887759|0|0|0|299|2639|229|31|15|1|4|0|
3ec0620713e3d6b82397067d5b2b1e8e4e6ccb48|Tue May 08 19:29:39 CEST 2012|Fill in some missing javadoc. Only checked a small number of files. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29888245|0|0|4|299|2639|229|31|13|47|6|2|BC[kind=CONSTRUCTOR_NOW_PROTECTED, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.<init>(), newSymbol=com.google.common.util.concurrent.AbstractFuture.<init>()],BC[kind=CONSTRUCTOR_NOW_PROTECTED, impactedSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.<init>(), newSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.<init>()]
9203df3996481fc701c47300eb35d2a9c57cdeae|Tue May 08 19:34:06 CEST 2012|Made the size of RegularImmutableMap more conservative. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29893278|0|0|1|299|2639|229|31|13|37|3|0|
1f1ce1726ec4495eb5562d0d6cd0560aef4f706f|Tue May 08 19:42:49 CEST 2012|Make Truth accessible to all of testlib, not just its tests, now that it's used by the collection-suite builders. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29915599|0|0|0|299|2639|229|31|13|1|4|0|
8b78348ab5c5305c838a9e7d13e260becc311aa1|Tue May 08 20:46:57 CEST 2012|Optimize BigIntegerMath.binomial to use long arithmetic for as much as possible. From Louis: http://codereview.appspot.com/6170043/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29924844|0|0|1|299|2639|229|31|13|11|4|0|
188d2dd30d8c41cd8ea7d0087bd105ad78c450d4|Fri May 11 15:28:20 CEST 2012|Add one or two missing tests. From Louis: http://codereview.appspot.com/6190059/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29931664|0|0|0|299|2639|229|31|15|2|5|0|
46b4996a7851b808d0faca9eb90472910feaeead|Fri May 11 15:30:58 CEST 2012|Many small improvements in common.collect. From Louis: http://codereview.appspot.com/6205045/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29932528|0|0|10|299|2639|229|31|18|53|4|0|
c9547ca5b186ae058e75547a95899b33274b1483|Fri May 11 15:33:35 CEST 2012|Export files that were missing from Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29933483|0|0|0|299|2639|229|31|18|1|4|0|
bbb0cffbdeabc78dd212f2320bb8e1799f895c2e|Fri May 11 15:38:48 CEST 2012|NullPointerTester hasn't thrown Exception in a while, so stop declaring that all its users throw it. (My search for users was just plain grep, so I'm sure I missed some, but this is a good start, and I'm not sure it's worth the effort to seek out more, since that will take more than 30 seconds.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=29954788|0|0|0|299|2639|229|31|38|2|7|0|
96032ce84e8a955c9d0e30abbdf16a7c7e46b1b5|Fri May 11 15:44:10 CEST 2012|Remove @GoogleInternal from FluentIterable#transformAndConcat (and add @since 13.0) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30005337|0|0|1|299|2640|229|31|28|38|3|0|
01b3c9f52e316dd40b379432174d3b5a817ab141|Fri May 11 15:46:55 CEST 2012|Use Joiner in Iterators#toString. Add tests for null element handling. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30005349|0|0|1|299|2640|229|31|16|39|4|0|
d7b563b0142912022e61160081b4a7f99f08d2c2|Fri May 11 15:49:43 CEST 2012|Assorted followups from past reviews/discussions: - Comment the places where we avoid Iterator allocations. - Reintroduce assertion failure message. - Reduce comments in Ordering.allEqual. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30005462|0|0|3|299|2640|229|31|17|40|6|0|
066090e6909db7ca3741c0d9fdae1a0c87b40af6|Fri May 11 15:52:31 CEST 2012|Add Iterable#toString implementation for Splitter#split. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30006050|0|0|1|299|2640|229|31|17|12|4|0|
234690321682b0fdbbee5e3ae02e06a95c95e275|Fri May 11 15:58:01 CEST 2012|Exploit my years of hard-earned skill to devise a unit test for Equivalence.wrap().get(). Almost got it right, but luckily Colin was here to help me. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30014813|0|0|0|299|2640|229|31|14|1|4|0|
76cb1603231a610b201a97bdbbee76f7f4376a08|Fri May 11 19:50:16 CEST 2012|GWT/Guava maintenance: - Rename com.google.common.collect.testing.testing-gwt to com.google.common.collect.testing.Testing, and actually use the existing Testing.gwt.xml file. - Annotate classes with @GwtCompatible. - Open-source GWT files. - Stop stripping some GWT modules that have since become open-sourced. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30035555|0|0|0|299|2640|229|31|50|1|6|0|
f2aac46b0dfd4d77358e2f3b26223a55563621b2|Mon May 21 17:45:10 CEST 2012|Use callbacks on ListenableFutures to implement invokeAny on AbstractListeningExecutoreService rather than an ExecutorCompletionService. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30127153|0|0|1|299|2640|229|31|25|37|4|0|
b7c9182e370d1f1f8e3cf43d675a961d7b3c0790|Mon May 21 17:48:34 CEST 2012|bug fix: don't decrement count and send spurious notification when refresh+get are concurrent with invalidate ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30128702|0|0|1|299|2640|229|31|15|72|5|0|
6de50d39a296a3d5f00779dbeaf3b520791b9cda|Mon May 21 17:55:06 CEST 2012|Move the invokeAny implementation to a static method that can be used by ListentingExecutorService that don't extend AbstractListeningExecutorService. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30136643|0|0|2|299|2640|229|31|17|39|6|0|
68cc7d92bb0335af1b58f0037fbe5270cc0155ba|Mon May 21 21:34:44 CEST 2012|Copy Equivalences methods to Equivalence. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30304467|0|0|2|299|2642|229|31|14|34|4|0|
5abb71a345d73c3b7d670edf40b0ff564d767163|Mon May 21 21:28:44 CEST 2012|#intFunnel() and #longFunnel() funnels, and a PrimitiveSink --> OutputStream wrapper. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30307214|0|0|1|299|2645|229|31|15|7|4|0|
acc41e104e59a78b8ce8d2469e97ece32055b995|Mon May 21 21:53:59 CEST 2012|Adds ContiguousSet.create(Range, DiscreteDomain).  Follow-up CLs will remove Range.asSet(DiscreteDomain). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30308145|0|0|2|299|2646|229|31|14|43|6|0|
84e94a821e997f96f5eff8e8c7b3595ab4a787db|Mon May 21 22:38:55 CEST 2012|Fix name spelling in pom.xml. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30309935|0|0|0|299|2646|229|31|14|1|4|0|
a2f0856bfd7a9c3a70306c3cd91906a9ebb768d8|Mon May 21 23:28:19 CEST 2012|De-betaify c.g.c.annotations.Beta De-betaify c.g.c.base.Ascii ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30310396|0|0|2|299|2646|229|31|12|8|4|0|
06e76c06ea93a4c39f4e823a6ba8e0c4b3f67c97|Tue May 22 19:25:08 CEST 2012|Rewrite the ImmutableSortedMultiset implementation for improved efficiency and reduced memory consumption. From Louis: http://codereview.appspot.com/6203097/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30340746|0|0|5|299|2646|229|31|15|50|4|1|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableSortedMultiset.elementSet(), newSymbol=com.google.common.collect.ImmutableSortedMultiset.elementSet()]
c1ccc3e2d0fb52c351d9ae5ebdc097d334de4731|Wed May 23 21:22:46 CEST 2012|Exposing an estimate of how the BF performs (without it, it's hard for the user to know when the BF degenerates) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30342458|0|0|2|299|2647|229|31|16|12|6|0|
309d177e3fde9d5823a45128b36e93cb603a7a05|Wed May 23 21:25:34 CEST 2012|Add an executor service that automatically retries tasks on failure.  (A continuation of cl/24643522) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30345739|0|0|1|299|2647|229|31|14|40|3|0|
cb72618c27773e8aa91238eca87b5e63f08b010f|Wed May 23 21:28:31 CEST 2012|Equivalences -> Equivalence.|0|0|6|299|2647|229|31|18|110|10|0|
a33efc80075ea37c3f76db14d71c7b0609b10bd7|Wed May 23 21:31:18 CEST 2012|MOE insert public for the Equivalences class. @Deprecate the 2 methods in Equivalences. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30352883|0|0|1|299|2647|229|33|24|7|4|0|
f4c4b50a822b1870c266ed8b76108b336fe47ad8|Wed May 23 21:34:09 CEST 2012|Improved the code coverage of OrderingTest and removed an unused constructor. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30356104|0|0|2|299|2647|229|33|14|34|4|0|
7cc5d5d6e121f1fe72aeabb9dc70d96648186384|Wed May 23 21:36:57 CEST 2012|Internal shuffling in FluentIterable with some public spillover. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30372447|0|0|1|299|2647|229|33|14|35|6|0|
1354c73c9b78c480db46799934c587950a26a189|Wed May 23 21:39:46 CEST 2012|Reduce default values per key for LinkedHashMultimap from 8 to 2. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30373088|0|0|1|299|2647|229|33|16|49|4|0|
25fd8b3c09917cd7b66a4eb01cde57ca83db478f|Wed May 23 21:42:24 CEST 2012|s,(){,() {,g in {java,javatests}/com/google/common/... ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30381316|0|0|5|299|2647|229|33|23|71|7|0|
c7af92815a2ba50e1b4f46538cdd20f3a2da93d6|Thu May 24 20:35:43 CEST 2012|A few small cleanups to the Murmur3 HashFunctions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30419610|0|0|2|299|2647|229|33|19|11|6|0|
5383fe9dc29195da481d2b60f4b1911d5fc3f938|Fri May 25 16:44:47 CEST 2012|De-@Betaify Optional. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30422058|0|0|1|299|2647|229|33|14|8|4|0|
4d4a0737b3e2b0a4edf9443a98a54ca1a0941cef|Fri May 25 23:05:01 CEST 2012|Eliminate redundant fields and code from SingletonImmutableMap. From Louis: http://codereview.appspot.com/6211080/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30462649|0|0|1|299|2647|229|33|13|31|4|0|
e5a6ae44b6313b40fb1ec94686af9e632a642752|Fri May 25 23:31:53 CEST 2012|Use TypeToken in EventBus to avoid the duplicated superclass-finding logic. From Louis: http://codereview.appspot.com/6195089/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30463039|0|0|1|299|2647|229|33|13|39|5|0|
4f95e6ed7442be451a49207e103aa6a917d9737f|Wed May 30 00:42:17 CEST 2012|Remove a redundant RegularImmutableSortedSet workaround for comparators that are inconsistent with equals(). The workaround, added in CL 13880333, existed to support ImmutableSortedAsList. However, it turned out that the workaround was needed for other types, too, and it was added to ImmutableSortedAsList itself (but not removed from RegularImmutableSortedSet) in CL 29041788. This CL removes the redundant RegularImmutableSortedSet copy, moving its comments into the ImmutableSortedAsList copy. Additionally, it adds a test to demonstrate that the redundant copy, which is no longer used only by asList(), was causing problems. Our existing tests caught a similar problem when I applied Louis's pending http://codereview.appspot.com/6218056/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30530740|0|0|2|299|2647|229|33|14|38|4|0|
54577caba118a72b35be0bf73f2d4453ee026523|Wed May 30 00:45:16 CEST 2012|Simplify ImmutableSortedMap, reducing memory consumption and simplifying code. From Louis: http://codereview.appspot.com/6218056/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30531807|2|0|1|299|2646|229|33|20|48|8|5|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableSortedMap.keySet(), newSymbol=com.google.common.collect.ImmutableSortedMap.keySet()],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableSortedMap.tailMap(K,boolean), newSymbol=com.google.common.collect.ImmutableSortedMap.tailMap(K,boolean)],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableSortedMap.get(java.lang.Object), newSymbol=com.google.common.collect.ImmutableMap.get(java.lang.Object)],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableSortedMap.values(), newSymbol=com.google.common.collect.ImmutableSortedMap.values()],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableSortedMap.headMap(K,boolean), newSymbol=com.google.common.collect.ImmutableSortedMap.headMap(K,boolean)]
30dddd15001899b7500f6445d820a6419e3f38f3|Wed May 30 00:48:16 CEST 2012|Make LongAdder and SimpleStatsCounter final. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30534531|0|0|2|299|2646|229|33|16|36|6|8|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.recordEviction(), newSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.recordEviction()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.recordLoadException(long), newSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.recordLoadException(long)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.incrementBy(com.google.common.cache.AbstractCache$StatsCounter), newSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.incrementBy(com.google.common.cache.AbstractCache$StatsCounter)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.recordLoadSuccess(long), newSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.recordLoadSuccess(long)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.snapshot(), newSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.snapshot()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.recordMisses(int), newSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.recordMisses(int)],BC[kind=CLASS_NOW_FINAL, impactedSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter, newSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.recordHits(int), newSymbol=com.google.common.cache.AbstractCache$SimpleStatsCounter.recordHits(int)]
d5bfc481b8204e5c2072998a1e2ce9139d910b24|Wed May 30 00:51:07 CEST 2012|Basically: sed "s,{ },{},g" ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30535233|0|0|3|299|2646|229|33|15|46|4|0|
46fa75fb9486ccd18c4674d00a2e002224a98c74|Wed May 30 00:54:03 CEST 2012|Add method to parse a prefixed unsigned long, e.g. 0xHEX, decimal, #HEX, and 0octal ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30539666|0|0|1|299|2647|229|33|18|13|4|0|
3634bd3831742e5edd5c58c0cf77bb36cd67617d|Wed May 30 00:56:50 CEST 2012|Fix up a few odd style nits in the UnsignedLongsTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30541742|0|0|0|299|2647|229|33|13|2|4|0|
389a868730c09be1b33a36518f41ad35e11b4385|Wed May 30 16:09:12 CEST 2012|Adding wml media type. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30545427|0|0|1|299|2647|230|33|14|51|4|0|
c1bce61b17ac2ed6d4c8b492df5594de40b3ce04|Wed May 30 16:11:58 CEST 2012|Multimap is up next in my quest to write new classdocs for every important class we own. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30550395|0|0|4|299|2647|230|33|14|44|4|0|
d59c3da61ed7746e8b5cb36b668b1991343ff2ec|Thu May 31 19:05:34 CEST 2012|Added TypeToInstanceMap, ImmutableTypeToInstanceMap and MutableTypeToInstanceMap, mirroring ClassToInstanceMap. One major difference, is that put() and putAll() aren't supported. This is because there is no way to check isInstance() for generic types at runtime. In addition: 1. I added ImmutableTypeToInstanceMap.of() for empty map. I've wanted similar thing for ClassToInstanceMap in the past. 2. Omitted MutableTypeToInstanceMap.create(). With diamond operator coming along soon, do we still benefit from hiding default constructor and exposing static factory? For one thing, default constructor works better with reflection-based frameworks, such as ArbitraryInstances. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30580364|3|0|2|303|2666|230|33|16|58|6|0|
254bde6e0064981420de3d2aa3b888934bda6df8|Thu May 31 19:06:56 CEST 2012|Widen presentInstances parameter type to Iterable<? extends Optional<? extends T>>. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30607561|0|0|1|303|2666|230|33|14|8|10|1|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.base.Optional.presentInstances(java.lang.Iterable<com.google.common.base.Optional<T>>), newSymbol=com.google.common.base.Optional.presentInstances(java.lang.Iterable<? extends com.google.common.base.Optional<? extends T>>)]
e2e3183e4029103d8ecca116b23dc9d207bc4e42|Thu May 31 21:02:46 CEST 2012|Fixed recursion in toArray for a couple ConcurentMultimap view collections. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30610815|0|0|0|303|2666|230|33|13|1|4|0|
26b9a4da08e4ee8002c527195121c2741fa43f29|Fri Jun 01 23:37:02 CEST 2012|Stop depending on an ImmutableSortedSet quirk in getTypes(): ImmutableSortedSet.copyOf() currently assumes, for a Set input, that there is no need to deduplicate inputs. This is true if the given Comparator if consistent with equals (really, consistent with the original Set's definition of equality). However, if it's not, we can get a set with "duplicates" according to the Comparator. getTypes() depends on this behavior because it sorts by type-hierarchy depth, which is no reason to treat objects as "equal." An upcoming CL will change ImmutableSortedSet.copyOf() to remove this behavior. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30617067|0|0|2|303|2666|230|33|14|47|5|0|
bd6ab7f3f7c31eedd57449f9f003152f34653a54|Fri Jun 01 23:38:40 CEST 2012|Cache the 32-bit and 128-bit hash functions used in Hashing#goodFastHash ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30634030|0|0|1|303|2666|230|33|15|17|7|0|
a1b8356ef94c66fdd805dbf7d92e7de5feec0909|Fri Jun 01 23:40:08 CEST 2012|Add "stateless and thread-safe" to the HashFunction javadocs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30634203|0|0|1|303|2666|230|33|14|11|5|0|
03afbea918471a1b536c0754b10719adc0317135|Fri Jun 01 23:41:37 CEST 2012|Optimize ImmutableList,Set,SortedSet builders.  In particular, uniquify ImmutableSet/SortedSet contents in-place, and make it so that if an ImmutableSet/SortedSet is initialized to the correct size and has all unique elements, then no copying is done at all.|0|0|6|303|2666|230|33|16|49|8|0|
61e6a48a69ba09f65499d6e0394d448e9313777c|Wed Jun 06 20:40:15 CEST 2012|Graduate Striped out of labs ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30662139|1|0|0|304|2676|230|33|19|46|4|0|
3be93d556159d99bc186497da6ad558c013f3972|Wed Jun 06 20:44:16 CEST 2012|Release Futures.dereference() into Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30701037|0|0|1|304|2677|230|33|16|46|4|0|
2c92ede0ed264b70e19e2edc01b9b66e9b090713|Wed Jun 06 20:48:09 CEST 2012|I believe our snapshots should be called 13.0-SNAPSHOT now. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30703852|0|0|0|304|2677|230|33|16|1|4|0|
965e65f7cd47fa659931e4094c72b291c065969d|Wed Jun 06 20:52:00 CEST 2012|Marks the methods in Longs regarding byte array conversions as GWT compatible, and adapts the LongsTest to run the tests in GWT mode.|0|0|1|304|2677|230|33|15|16|4|0|
50aa85dbbbea3e3826a9d7e4c9de0fd3669c625d|Wed Jun 06 22:48:20 CEST 2012|Replace the use of AbstractSet with a new Sets.ImprovedAbstractSet that is less susceptible to quadratic-time removeAll() calls, as in Guava issue 1013.|0|0|7|304|2677|230|33|17|99|8|0|
0c5eab22a7165f89ce52dc1da692983cd2521f88|Mon Jun 11 19:48:42 CEST 2012|More extensive testing for murmur hashing (in prep for shortcut speedups). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30798282|0|0|0|304|2677|230|33|23|2|6|0|
80fa49a2680e9e7331e959ad9ec8b85337584f7f|Mon Jun 11 19:49:22 CEST 2012|Changed TypeToken.getTypes().rawTypes() to not rely on getGeneric*() methods, to work around the GenericSignatureFromatError.|0|0|1|304|2677|230|33|14|46|4|0|
c888c6bbb226998980f3fe84587f1f0606578c88|Mon Jun 11 19:50:02 CEST 2012|Reimplement LinkedHashMultimap with a custom, memory-efficient implementation. From Louis: http://codereview.appspot.com/6250063/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30828656|0|0|1|304|2678|230|33|15|48|5|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.clear(), newSymbol=com.google.common.collect.LinkedHashMultimap.clear()]
8aa1ffe7c36a9f19c052dde74f6368da998e822f|Mon Jun 11 19:50:44 CEST 2012|Implement UnsignedInts.decode, corresponding with UnsignedLongs.decode. From Louis: http://codereview.appspot.com/6285043/ (after which I extracted a common method on Kurt's suggestion) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30829538|1|0|2|304|2679|230|33|19|16|8|0|
0f3b2f226115503ebde95479822c6f64a12f63aa|Mon Jun 11 19:51:20 CEST 2012|Optimize Ordering.sortedCopy, eliminating one gratuitous copy. From Louis: http://codereview.appspot.com/6306046/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30917998|0|0|1|304|2679|230|33|15|41|4|0|
e98dd10dee2935c433e8447a7831bc6692f9b503|Tue Jun 12 15:47:31 CEST 2012|Assorted cleanup:|0|0|1|304|2679|230|33|14|47|3|0|
21e01b8f8f207558c47d97cc3a2c091d318d8441|Tue Jun 12 15:48:57 CEST 2012|Make methods of Ordering no longer arranged as if by Ordering.arbitrary(). (Ok, it wasn't *that* bad.) Improve class docs a tiny bit. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30928085|0|0|1|304|2679|230|33|16|43|8|0|
5c2ee466c3d270bf498e352c081bad27f074344b|Tue Jun 12 15:49:41 CEST 2012|Add @Nullable annotations to computing map/cache implementations to satisfy Findbugs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30931750|0|0|3|304|2679|230|33|16|83|4|0|
5aee9aff734cd508a742e1714d311b70888c4b0a|Wed Jun 13 22:00:55 CEST 2012|Make LinkedHashMultimap.ValueSet extend ImprovedAbstractSet, tying up the last loose end from Guava issue 1013. From Louis: http://codereview.appspot.com/6304067/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30956797|0|0|1|304|2679|230|33|17|49|6|0|
4424ba34bb857f158a81770b7f4a0741e5f0e114|Wed Jun 13 22:01:35 CEST 2012|Bake the 1.0 load factor into LinkedHashMultimap, eliminating redundant fields for a savings of 8 bytes/distinct key. From Louis: http://codereview.appspot.com/6308061/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30957194|0|0|1|304|2679|230|33|13|51|5|0|
f44ab11f78a1b9f86bb37de45bb6dfb1e0516507|Wed Jun 13 22:02:13 CEST 2012|Implement Hashing.weightedConsistentHash(). See: [] ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30960525|0|0|1|304|2679|230|33|15|14|4|0|
e09a9e3dca9880fe6c5a665d7a1824c823531512|Wed Jun 13 22:02:51 CEST 2012|Add shortcut overload for Murmur3_32HashFunction#hashInt. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30962091|0|0|1|304|2679|230|33|13|9|4|0|
6e11793e4d66f896082e54707de3e76607bc2fa2|Wed Jun 13 22:03:30 CEST 2012|Implement HashFunction#hashLong shortcut for murmur3_32 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30967967|0|0|1|304|2679|230|33|14|10|3|0|
2ab9e938a833221d2da456a5107c2ea27cb73cb4|Wed Jun 13 22:04:51 CEST 2012|Added Iterators.advance and deprecated Iterators.skip. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30972849|0|0|1|304|2680|230|34|13|44|5|0|
a9c5facd9a1f73763a3245f58d91c82e1a650e3b|Wed Jun 13 22:05:34 CEST 2012|Implement HashFunction#hashString shortcut for murmur3_32 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30974860|0|0|1|304|2680|230|34|18|11|4|0|
ee0a59572b9185e82474919c32a2d6a858efc33a|Wed Jun 13 22:06:12 CEST 2012|Attempt to improve Ordering.allEqual() documentation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30975026|0|0|1|304|2680|230|34|14|43|4|0|
7fb563e8edb365b8bd941b76eb94ca3bf091b090|Wed Jun 13 22:06:51 CEST 2012|Just a little reformatting. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30976931|0|0|31|304|2680|230|34|26|124|7|0|
63bbd7b239879a96614e03f3986f2c83f56850dd|Wed Jun 13 22:07:30 CEST 2012|Added min, max, lexicographical comparator tests to primitives.UnsignedInts ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30995925|0|0|0|304|2680|230|34|25|2|10|0|
b01348bb5a1cee6848b64e52032c96bf3dc605a1|Wed Jun 13 22:08:09 CEST 2012|Removed debug printlines ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=30996792|0|0|0|304|2680|230|34|12|1|3|0|
730a302debc8b19c49bd84f57df7ba7d2534cc34|Wed Jun 13 22:08:48 CEST 2012|Mark Hashing#weightedConsistentHash tests as @GoogleInternal ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31002683|0|0|0|304|2680|230|34|13|1|3|0|
49791e17582dcd77a73ebbc930e2109922231e29|Wed Jun 13 22:09:35 CEST 2012|Comment out assertions that fail during mvn testing. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31007060|0|0|0|304|2680|230|34|13|1|3|0|
507da39b4b26d3b0abde85045dc2345e9f2f8c6e|Thu Jun 14 20:04:52 CEST 2012|Added min, max, lexicographicalComparator tests ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31034294|0|0|0|304|2680|230|34|13|1|4|0|
aba87338f827f9ee79a69f3638933c54a8afaeb4|Thu Jun 14 20:05:31 CEST 2012|Fix copyright notice, other Guava things on Striped. From Louis: http://codereview.appspot.com/6306084/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31038311|0|0|1|304|2680|230|34|12|48|4|0|
706c81f7021b5cb06419e25671f4ee4216784ca2|Fri Jun 15 17:10:39 CEST 2012|Changed callers of Iterators.skip to call Iterators.advance. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31044719|0|0|1|304|2680|230|34|15|43|4|0|
ff2b5c0897d02d726d803b8103d12ad823c5c4b9|Mon Jun 18 16:15:03 CEST 2012|Take Iterators.advance out of @Beta. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31078297|0|0|1|304|2680|230|34|14|42|4|0|
3f72054d6997c9a80e83cb2657dd8c96e6cf1fac|Mon Jun 18 16:17:58 CEST 2012|Replace another instance of supertype-finding code in EventBus with TypeToken. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31082777|0|0|1|304|2680|230|34|15|59|5|0|
c8a6b01dfdc58b8f1eab1d7e369656dc2981029f|Mon Jun 18 21:13:55 CEST 2012|Remove erroneous statement about inability to unregister from eventbus package Javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31129205|0|0|0|304|2680|230|34|13|2|7|0|
33ba073c98f56b4918bf539af8b70c3f272b8943|Tue Jun 19 18:19:28 CEST 2012|Map *Benchmark.java files into guava-tests/benchmark (they aren't buildable externally yet, but will be some day). Open source a few Set-related benchmarks as a preliminary test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31143691|0|0|0|304|2680|230|34|14|1|4|0|
c2baa95a5dd23a4e0f061bcf17766e6619d5aadd|Tue Jun 19 18:25:08 CEST 2012|Make protected methods of EventBus package-private, hiding the package-private EventHandler type.|0|0|2|304|2675|230|35|13|56|4|5|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.eventbus.EventBus.dispatch(java.lang.Object,com.google.common.eventbus.EventHandler), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.eventbus.EventBus.enqueueEvent(java.lang.Object,com.google.common.eventbus.EventHandler), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.eventbus.AsyncEventBus.dispatch(java.lang.Object,com.google.common.eventbus.EventHandler), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.eventbus.EventBus.newHandlerSet(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.eventbus.AsyncEventBus.enqueueEvent(java.lang.Object,com.google.common.eventbus.EventHandler), newSymbol=]
18fb2a20cfc43d5e17b93fd2e683aeda468abf84|Tue Jun 19 18:28:05 CEST 2012|Open source lots of Caliper benchmarks! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31147973|0|0|0|304|2675|230|35|23|1|5|0|
93a4d360168b51e1e32c0f31632bfde787e115e2|Tue Jun 19 18:34:21 CEST 2012|Give a readable name to the thread used by a delayed shutdown hook. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31171327|0|0|1|304|2675|230|35|18|44|4|0|
716d731cd8998a812db23750edeb8244c35bf1cd|Tue Jun 19 21:21:03 CEST 2012|Add caliper as a dependency. Force build of 'benchmark' ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31177762|0|0|0|304|2675|230|35|13|1|4|0|
3e6a1dff154c407fd38a45796a7c0caf28966ba1|Tue Jun 19 21:24:07 CEST 2012|Migrate local MediaType constants to the class MediaType ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31178318|0|0|1|304|2675|233|35|12|48|4|0|
1fff815a61e85ea84ab45b353a15058320c6ba9f|Tue Jun 19 21:26:50 CEST 2012|Implement Maps.asMap(Set, Function) view.|0|0|1|304|2675|233|35|17|66|10|0|
5744fecd922893e8238373812559a6a8ea61adc4|Tue Jun 19 22:12:58 CEST 2012|Remove @Beta from Iterator-accepting methods in Joiner (except for the Map.Entry related methods because the Iterable-accepting versions are still @Beta themselves). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31180145|0|0|1|304|2675|233|35|20|9|4|0|
3d6b39c2ccdec6a7866f894d1ffa394f1967dfd5|Tue Jun 19 22:15:59 CEST 2012|Remove @Beta from Strings.common{Pre,Suf}fix. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31180208|0|0|1|304|2675|233|35|13|7|3|0|
fe6576f7e5a83876db44f4f91374b8d04e24175a|Tue Jun 19 22:18:43 CEST 2012|Remove @Beta from Lists.newCopyOnWriteArrayList() and Sets.newCopyOnWriteArraySet() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31180601|0|0|2|304|2675|233|35|13|58|6|0|
5e9171ed66da2e445431b0197a358196cb41eb1b|Tue Jun 19 22:33:06 CEST 2012|Release FluentIterable##toSortedImmutableList. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31181172|0|0|1|304|2676|233|35|16|39|4|0|
156690e48fee2fc602be0b0df9d9cb2544f9c328|Tue Jun 19 22:35:49 CEST 2012|Remove @Beta from Multisets methods: containsOccurrences(), retainOccurrences(), and removeOccurrences() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31181488|0|0|1|304|2676|233|35|16|43|6|0|
0f400b0ddb59279c5dbf5427e336b47bb8bdd89d|Tue Jun 19 23:18:04 CEST 2012|Allow expectedInsertions == 0 for BloomFilters. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31182172|0|0|1|304|2676|233|35|13|10|4|0|
cb140e39acac7da75a7f28bcf406c9ff9086c7cf|Tue Jun 19 23:21:07 CEST 2012|Release RateLimiter as @Beta after cleaning up the todos a bit. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31183139|1|0|0|305|2685|233|35|15|13|5|0|
1a22643a2cf10bf98dccf516828f7d0d8617afdd|Tue Jun 19 23:24:03 CEST 2012|Fix comment reference to "toImmutableSortedList." ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31183592|0|0|1|305|2685|233|35|14|40|7|0|
ca176c9481ed7e447a4207efd821da338fd0b6b5|Tue Jun 19 23:26:55 CEST 2012|Remove @Beta from c.g.c.base.Equivalence (leave it on #equivalentTo). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31183871|0|0|1|305|2685|233|35|17|35|4|0|
b0aa4a41db1715aa95f1eb03965ab4b13c860b4c|Tue Jun 19 23:29:39 CEST 2012|De-@Betaify the c.g.c.collect.Tables class Leave @Beta on newCustomTable(), transformValues(), and unmodifiableRowSortedTable(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31184139|0|0|1|305|2685|233|35|14|41|4|0|
e9f938f5698467f14e43c48f3b9a7db4a5d00dde|Wed Jun 20 00:16:13 CEST 2012|Make HostAndPort serializable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31186303|0|0|1|305|2685|233|35|16|12|6|0|
3d812f0b4dd11b055b5b372e4947b1cab21caa7b|Wed Jun 20 00:13:09 CEST 2012|Add a state transition listening mechanism to Service and implement in AbstractService.|0|0|6|306|2702|233|35|18|47|4|2|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.util.concurrent.Service, newSymbol=com.google.common.util.concurrent.Service.failureCause()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.util.concurrent.Service, newSymbol=com.google.common.util.concurrent.Service.addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor)]
7c773aad63e3433cdd128dc99b947439e5f678b5|Wed Jun 20 17:40:07 CEST 2012|Release HostAndPortTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31209654|0|0|0|306|2702|233|35|15|1|4|0|
99c2135a38efa787e2b85bb0ca24ffb0244d21a4|Wed Jun 20 17:42:52 CEST 2012|Add @Beta to Optional#or(Supplier) and Optional#or(Optional). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31210314|0|0|1|306|2702|233|35|12|8|4|0|
179325f2eda54c77305bced834a2d87a9255dc85|Wed Jun 20 18:29:36 CEST 2012|Begin migrating methods from Navigable{Maps,Sets} to {Maps,Sets}. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31212696|2|0|3|306|2706|233|35|17|88|9|0|
84848fe1bdfa9ff2da7b708fe5cd1885d20f7f7f|Wed Jun 20 18:32:23 CEST 2012|Make findbugs a provided dependency to avert dep conflicts when using findbugs 2.0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31212790|0|0|0|306|2706|233|35|22|2|4|0|
451329ade0540ba0f84bc27ef107169ce81b9ae7|Wed Jun 20 22:14:20 CEST 2012|VisibleForTesting Javadoc tweaks. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31220800|0|0|1|306|2706|233|35|13|3|3|0|
8d87436505e80d6a275afde82224b182e31d816f|Wed Jun 20 23:52:18 CEST 2012|Fix a minor issue in TypeToInstanceMap javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31226970|0|0|1|306|2706|233|35|12|37|7|0|
09582e5bebf124e27336568e8539efb2c0fcae3d|Thu Jun 21 00:24:12 CEST 2012|Add Eclipse .metadata/ folder to .gitignore.|0|0|0|306|2706|233|35|13|1|4|0|
36d07cffd58bc09fe7caff77dd1ea7d3dc64bf45|Thu Jun 21 00:47:23 CEST 2012|Graduate Sets.filter (SortedSet overload) from @Beta. Graduate Maps.filter* (SortedMap overloads) from @Beta. Graduate Multimaps.filter* from @Beta. Release CycleDetectingLockFactory as @Beta. Release UnsignedLong_CustomFieldSerializer to make UnsignedLong GWT-serializable in Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31229567|1|0|3|311|2721|236|35|17|95|11|0|
8cc93151a9fa7d3c86bd5a1ec7e4665147493f8c|Thu Jun 21 17:37:48 CEST 2012|Addded reference of TypeToInstanceMap to ClassToInstanceMap javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31252218|0|0|1|311|2721|236|35|22|35|8|0|
cdc0a08dc8f4b65b1a0597ce7c3cd1b3ef96c969|Fri Jun 22 16:31:03 CEST 2012|Delete Navigable* and Navigable*Test. Move transformEntries and transformValues implementations into Maps. Move synchronizedNavigable* implementations into Synchronized. Move unmodifiableNavigable* tests into MapsTests/SetsTests. Also, open-source synchronizedNavigable{Set,Map} tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31268670|0|2|3|311|2721|236|35|18|72|8|0|
749abea7237ad23efc4f0099619dcacfba411667|Fri Jun 22 16:33:55 CEST 2012|Update to latest Mozilla PSL.|0|0|1|311|2721|236|35|23|39|6|0|
ce1247246c30ea7c29787c126a531e6ad9e0689c|Fri Jun 22 16:36:51 CEST 2012|Fix a few minor issues in cache javadocs. Some of this patched from fry. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31272683|0|0|3|311|2721|236|35|15|53|4|2|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.cache.LoadingCache, newSymbol=com.google.common.cache.Cache.putAll(java.util.Map<? extends K,? extends V>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.cache.Cache.getAllPresent(java.lang.Iterable<? extends K>), newSymbol=com.google.common.cache.Cache.getAllPresent(java.lang.Iterable<? extends java.lang.Object>)]
52694674ed5a4fcdeb6fc4b2b7c8878b5a5db632|Fri Jun 22 16:39:38 CEST 2012|Fix a deadlock in the new addListener implementation and also tweak the docs on stopAndWait which are out of sync with reality. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31289338|0|0|2|311|2721|236|35|15|43|8|0|
8634dfafb850b8150c14de0fc9c24cfcd05093cc|Fri Jun 22 22:00:08 CEST 2012|Explicitly test that NullPointerTester uses null as a default for @Nullable parameters. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31300698|0|0|0|311|2721|236|35|14|1|4|0|
21e013010b9de96f6a14107bd2ffc6da71bdcb26|Mon Jun 25 18:14:32 CEST 2012|Fix the formatting of the javadoc in j/c/g/c/util/concurrent/Service.  Rewrap everything to 100 cols. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31314728|0|0|1|311|2721|236|35|15|10|6|0|
d1000f80b04267f9d562fec407612f0a856d4a7d|Tue Jun 26 19:56:36 CEST 2012|Add @since to Striped. Add @GI to Service#failureCause. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31355804|0|0|2|311|2720|236|35|14|48|7|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Service.failureCause(), newSymbol=]
4d4704e384b5505e058665d9620cd80dd05ad806|Tue Jun 26 19:57:16 CEST 2012|Add Guava copyright header to files that were missing it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31355899|0|0|1|311|2720|236|35|15|48|5|0|
a364f16500ab36088ce75aa86945c978ee2da3ff|Tue Jun 26 19:58:08 CEST 2012|Expose TypeResolverTest; various internal reshuffling. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31366061|0|0|2|311|2720|236|35|16|51|4|0|
4327836ddd40eb1b047d071f0f34a54a4db1c8e5|Tue Jun 26 19:58:55 CEST 2012|Fix more Guava copyright headers. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31366544|0|0|5|311|2720|236|35|26|41|7|0|
77b68bd49407cfc419cdffcc2b8b1590a4e23daf|Tue Jun 26 19:59:42 CEST 2012|Add Guava copyright. Other no-op changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31368650|0|0|1|311|2720|236|35|19|34|5|0|
7827f648225f88d47470d272f7b56b543f78d21d|Tue Jun 26 20:01:15 CEST 2012|Optimize {Int,Long}Math.log10 with techniques from Hacker's Delight. From Louis: http://codereview.appspot.com/6303085/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31396705|0|0|2|311|2720|236|35|18|17|6|0|
f280c64ba31c0e5271cfeac606713ab829416d81|Tue Jun 26 20:02:19 CEST 2012|Optimize BigIntegerMath.log10 by using the log2 to get an initial approximation of the log10. From Louis: http://codereview.appspot.com/6329066/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31397137|0|0|1|311|2720|236|35|17|12|8|0|
a76694863c256747a32c19b6752d457f4759a0d1|Tue Jun 26 20:03:08 CEST 2012|Remove some email addresses from @author tags. Add a test to try to keep them from creeping in in the future. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31397324|0|0|1|311|2720|236|35|15|48|4|0|
46c545d7a79d375e37cc077aff8df7f72fd8a126|Tue Jun 26 20:03:57 CEST 2012|Optimize GCD implementation to use fewer branches for ~25% speedup. From Louis: http://codereview.appspot.com/6306091/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31398961|0|0|2|311|2720|236|35|15|15|5|0|
3da9b56d5a58247c15f1c55b5d9dd17d123d6163|Tue Jun 26 20:04:36 CEST 2012|Add @GI to failureCause overrides. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31400072|0|0|5|311|2715|236|35|17|45|7|5|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractIdleService.failureCause(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractScheduledService.failureCause(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.failureCause(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractService.failureCause(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.ForwardingService.failureCause(), newSymbol=]
8c535423fcdeeacaa2c62600db3e88a52b92ddb0|Tue Jun 26 22:26:57 CEST 2012|Fix javadoc warnings. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31406210|0|0|2|311|2715|236|35|17|49|4|0|
d4e7d7b6ffd6967264e907a73cb5fe709e20c8bd|Thu Jun 28 17:50:16 CEST 2012|Simplify implementation of ByteStreams.hash(); add direct tests for it and getChecksum(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31456068|0|0|1|311|2715|236|35|15|10|4|0|
feb65a5d30e43d8b4198c150c764b588aa337bd9|Thu Jun 28 21:30:51 CEST 2012|Open source a few more of the benchmarks. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31487288|0|0|0|311|2715|236|35|14|2|7|0|
59e0fa707b40686406ea2c9812785391beb13367|Fri Jun 29 17:08:02 CEST 2012|A few small cleanups to the murmur3 hash functions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31507627|0|0|2|311|2715|236|35|17|11|5|0|
8d5659ad0e137d3a594014793264292a75b48bb9|Mon Jul 02 18:35:48 CEST 2012|Fix 2 bugs in the AbstractService implementation of listeners. 1. Ensure that the futures are updated before listeners are called consistently 2. Fix a bug that would cause the running() callback to be invoked when the Service was transitioning from STARTING -> STOPPING directly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31519336|0|0|2|311|2715|236|35|15|46|4|1|BC[kind=CONSTRUCTOR_NOW_PROTECTED, impactedSymbol=com.google.common.util.concurrent.AbstractService.<init>(), newSymbol=com.google.common.util.concurrent.AbstractService.<init>()]
0361f84dc72d8e55d458cb814f9397fb3a980cba|Mon Jul 02 18:36:29 CEST 2012|Change the AbstractService so that listeners are called without the lock held. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31519707|0|0|1|311|2715|236|35|14|40|6|0|
4f08e59ad9541f9d3f8fad6addbc9fed7aaf00cb|Mon Jul 02 18:37:10 CEST 2012|Remove c.g.c.base.Stopwatch#toString(int). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31520651|0|0|1|311|2715|236|36|14|9|4|0|
7eec09ede5fa6ccdb1cb19558833c6857b037171|Mon Jul 02 18:37:51 CEST 2012|Introduce an immutable object to encapsulate the mutable state of AbstractService.  This will allow us to perform state queries (isRunning, failureCause, state()) without grabbing a lock.|0|0|1|311|2715|236|36|14|43|5|0|
bc763c57d382eb75023dd146ca1df2c6a88d4eda|Mon Jul 02 18:38:41 CEST 2012|Add MediaType for Google "Sketchup" ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31546185|0|0|1|311|2715|237|36|14|52|6|0|
ada07d6dc56625211c39c8e8a2ba36f4330dbedb|Mon Jul 02 18:39:22 CEST 2012|Remove the use of MoreAsserts from the AbstractServiceTest.  Apparently it breaks the maven build. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31573774|0|0|0|311|2715|237|36|13|1|4|0|
d5481a89a15bc7c73d45d847e317ade586293a0a|Mon Jul 02 23:28:27 CEST 2012|Remove Iterables#reverse ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31578998|0|0|1|311|2714|237|35|14|44|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Iterables.reverse(java.util.List<T>), newSymbol=]
d2459d24049953b290409312a3e1ac4a624063a3|Mon Jul 02 23:29:23 CEST 2012|Remove MapMaker#expiration (scheduled for deletion in July 2012). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31579076|0|0|2|311|2712|237|33|20|56|6|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapMaker.expiration(long,java.util.concurrent.TimeUnit), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.GenericMapMaker.expiration(long,java.util.concurrent.TimeUnit), newSymbol=]
a7e1248b491f0e5067686555e33e45e2ffc60a0a|Mon Jul 02 23:30:38 CEST 2012|Strip out comments pertaining to maximumSize() and expireAfterWrite() (which are no longer public). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31579977|0|0|1|311|2712|237|33|14|50|4|0|
db5977647f55e4e8065d3971d216f0a0d1a42541|Mon Jul 02 23:31:19 CEST 2012|Remove MapMaker: strongKeys(), strongValues(), and valueEquivalence() from MapMaker and friends. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31583111|0|0|3|311|2712|237|33|15|69|4|0|
e40ccefdad7c12f708c27890ca01cc27e894a7ea|Tue Jul 03 19:49:40 CEST 2012|Fixed dropping of CharMatcher description when precomputing.|0|0|3|311|2712|237|33|21|13|6|0|
889fd40211f549885b93060e761afed80468b920|Thu Jul 05 19:08:10 CEST 2012|Fix tests for IntMath.isPowerOfTwo and LongMath.isPowerOfTwo. The existing tests copied the implementation code and therefore were not really testing the code. The tests now use BigInteger. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31628328|0|0|0|311|2712|237|33|17|1|4|0|
2be6eaab8c09eaa54debe3a6622d2ce68b0768d0|Thu Jul 05 19:12:27 CEST 2012|Ensure Cache.get expands hash table appropriately ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31657582|0|0|1|311|2712|237|33|13|66|4|0|
e85b9465b6f28055b31e0f36720c7525432730bc|Thu Jul 12 16:53:40 CEST 2012|Make Suppliers.compose(Function, Supplier).toString() return something useful.|0|0|1|311|2712|237|33|16|10|6|0|
d5ae395da2e15d222db7a4e36145d375843e0c05|Thu Jul 12 16:55:03 CEST 2012|Improve toString() for Supplier/Function implementations in Suppliers. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31718621|0|0|1|311|2712|237|33|14|9|5|0|
9fe3f63fdfabcfd57676fc709928ae2ccb891cd2|Thu Jul 12 16:56:27 CEST 2012|Add SortedSet overload for Maps.asMap(SortedSet, Function).|0|0|1|311|2712|237|33|15|64|7|0|
69c6b9390a317db716efc164115ae5dad1775477|Thu Jul 12 16:57:08 CEST 2012|Force ArbitraryOrdering to handle nulls consistently.|0|0|1|311|2712|237|33|19|44|4|0|
0ab2a58836b5a5a1b8e9154920faf8b279710b1d|Thu Jul 12 16:57:51 CEST 2012|Special-case Immutable{List,Set}.copyOf(Iterator) for 0 or 1 elements, as per Guava issue 691.|0|0|2|311|2712|237|33|16|47|8|0|
eebb4d038a9fa2b9780e5c5d0fc046aeadb08c9b|Thu Jul 12 16:58:35 CEST 2012|Update the handling of gwt.xml files. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31782922|0|0|0|311|2712|237|33|17|2|4|0|
314727b81a4f45210ab53ebd46b695150ea36f8c|Thu Jul 12 17:00:04 CEST 2012|Fix a bug with CharStreams.copy not clearing its buffer after reading.|0|0|1|311|2712|237|33|17|11|4|0|
68862d7803ca58a2c73d87a7e866152dc1444826|Thu Jul 12 17:01:27 CEST 2012|Rollback gwt.xml change.|0|0|0|311|2712|237|33|16|1|4|0|
b019312572c43b100a5ad12b0a92c606469c5bcc|Thu Jul 12 17:02:16 CEST 2012|Add IntMath.mean and LongMath.mean. It's an efficient implementation resilient to overflow which is useful when computing midpoints. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31799895|0|0|0|311|2712|237|33|14|1|4|0|
36a9b4eca8ce849672ffe4522b4f8a90818efc70|Fri Jul 13 17:32:08 CEST 2012|Update the handling of gwt.xml files. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31818898|0|0|0|311|2712|237|33|16|1|7|0|
654a760c3ce4cef00bef066602bc2c10400982fd|Fri Jul 13 17:49:11 CEST 2012|Decrease tasks again for get() basher, which currently takes 4x as long as any other cache test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31820210|0|0|0|311|2712|237|33|15|2|4|0|
52f8d08af67b86d479498bfac62d1915c6c0d1c9|Fri Jul 13 17:50:04 CEST 2012|Add tests that the custom hash table implementations expand correctly. From Louis: http://codereview.appspot.com/6351075/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31822084|0|0|1|311|2712|237|33|15|52|4|0|
9a351e61a59c83dd4ec00adc0a1518b7731c1ff3|Fri Jul 13 17:50:55 CEST 2012|Rephrase to stop suggesting that there are only two overloads of transform(). Also, publicly release a comment in the Future.addListener Javadoc about addCallback, which was publicly released in Guava 10 (and already mentioned publicly elsewhere in the ListenableFuture doc). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31833262|0|0|2|311|2712|237|33|17|45|6|0|
514296296fb73c8bb5821beec3a9089801313de0|Fri Jul 13 17:51:37 CEST 2012|Made TypeResolver @Beta and added clearer document. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31858151|0|0|1|312|2714|237|33|15|45|5|0|
f7c152e19c6df9a7b28ee3a41f1a1c3d71491a23|Mon Jul 16 20:29:51 CEST 2012|Remove unused code. From Louis: http://codereview.appspot.com/6343051/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31920587|0|1|6|312|2714|237|33|20|56|5|0|
f51d8fa33a59b6f817fabffbe729a8992359e15f|Mon Jul 16 20:30:34 CEST 2012|Remove unused char[] instance in CharMatcher.inRange. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31924666|0|0|1|312|2714|237|33|19|10|6|0|
f2242dbc8a99accda1f70c0f178cfa5f5b847dc8|Tue Jul 17 20:15:48 CEST 2012|Updating putString(String) spec and default implementation, to avoid forcing implementations to inefficiently deal with unpaired surrogate characters. This is an incompatible change for inputs with such characters. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31932872|0|0|3|312|2714|237|33|16|7|4|0|
db6b2b695c608202912299f7356eafb82ff0cf69|Tue Jul 17 22:28:02 CEST 2012|Remove public from TypeResolver in Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=31969908|0|0|1|311|2712|237|33|15|44|5|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.reflect.TypeResolver, newSymbol=]
89fe504cd733010850beaa6f0dcdbec6c032244a|Mon Jul 23 20:17:33 CEST 2012|Remove unused methods from c/g/common/collect ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32009861|0|0|3|311|2712|237|33|17|80|9|0|
fc666e2d5e42da15a9255bc56a09d232ad32723b|Mon Jul 23 20:20:30 CEST 2012|Fix comment to refer to InternetDomainName.isValid instead of deprecated isValidLenient. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32011124|0|0|1|311|2712|237|33|21|41|5|0|
8011045a11d102e65f36c94a5174b3bd39067516|Mon Jul 23 20:23:44 CEST 2012|HashIterator fix for LocalCache Remove a few unused chunks of code from common.cache ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32015573|0|0|2|311|2712|237|33|16|74|6|0|
de9ae15bdc975de69a96c317d7a01a588f2dbeef|Mon Jul 23 20:42:04 CEST 2012|Remove unused methods in c/g/c/{hash,reflect}/... ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32056245|0|0|3|311|2712|237|33|15|48|5|0|
13d60bc213fc30852b9b0bef93d15ecd116f91d3|Mon Jul 23 20:45:13 CEST 2012|Fix a comment on AbstractScheduledService.Scheduler that implied that you could create subclasses of Scheduler (that are not subclasses of CustomScheduler).  This is impossible since Scheduler has a private constructor. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32059988|0|0|1|311|2712|237|33|14|39|6|0|
e019451e44495ec1c7da56be5d4aa94df04139f6|Mon Jul 23 20:54:30 CEST 2012|Add serialization tests to the Multimap test suites. From Louis: http://codereview.appspot.com/6421047/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32082297|0|0|0|311|2712|237|33|15|2|6|0|
1064c5d855ac917767c29081028c8f43d2ec6847|Mon Jul 23 21:08:36 CEST 2012|Deprecate mutator methods on immutable/unmodifiable classes in common.collect.  It can't possibly be correct to invoke a method that mutates a collection on an immutable object and this will help catch those errors at compile time.  It also has the benefit that IDEs set up to filter deprecated methods from the auto-complete suggestions will filter out the unsupported methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32083827|0|0|15|311|2712|237|77|22|76|11|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardValues(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardKeySet(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardEntrySet(com.google.common.base.Supplier<java.util.Iterator<java.util.Map$Entry<K,V>>>), newSymbol=]
1e229a23f23394f70bf6bcb32c772a36ae6cc832|Mon Jul 23 21:14:16 CEST 2012|Making exception more descriptive when someone tries to proxy a class ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32142551|0|0|1|311|2712|237|77|20|11|5|0|
bd4ca938834ce904684319f13732d898ad41c96b|Mon Jul 23 21:20:14 CEST 2012|Make comments javadocs so MOE correctly strips them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32142622|0|0|0|311|2712|237|77|14|2|7|0|
cc36cdedb53cc4d2fb3efb897c2d3c4a30535b0e|Tue Jul 24 00:27:02 CEST 2012|Improve ImmutableMap.of(K, V) error message re: Guava issue 988.|0|0|1|311|2712|237|77|15|38|6|0|
2fdf6321178d99e7a13fd9ce31de7b459c95957a|Tue Jul 24 00:44:21 CEST 2012|Assorted cleanup: - Remove out-of-date CharMatcher comment. - Merge ContiguousSetNonGwtTest into ContiguousSetTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32157893|0|0|0|311|2712|237|77|14|1|4|0|
51ce6ddf7a1c10a558a534789ee5027e4a3edc01|Tue Jul 24 16:32:18 CEST 2012|A few small cleanups to Reflection. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32159687|0|0|1|311|2712|237|77|14|10|7|0|
7bb7ca9ab7e5b4ce7f43249c57b58a16f8c4bc4f|Tue Jul 24 16:35:15 CEST 2012|Remove c.g.c.base.Equivalences. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32160887|0|1|0|310|2710|237|75|15|2|6|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.base.Equivalences, newSymbol=]
07ab8b8b83c38feddcaf1da53912fe2f5338554b|Tue Jul 24 23:42:57 CEST 2012|Add some toString tests for CharMatcher.anyOf(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32185623|0|0|0|310|2710|237|75|15|2|4|0|
ecac7768c22ab1d4093b6a00b16aca1d067e5f08|Wed Jul 25 00:14:34 CEST 2012|Remove NullPointerTester#ignore(Member). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32198797|0|0|0|310|2710|237|75|15|2|5|0|
28ad89ad97af3800cdb335d973e8f2064a1137e4|Wed Jul 25 00:15:34 CEST 2012|Remove AbstractLinkedIterator. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32198902|0|1|0|309|2707|237|74|14|1|6|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.AbstractLinkedIterator, newSymbol=]
9dcde66ab9bfcdbe007b69d4912a297894bece59|Wed Jul 25 00:06:24 CEST 2012|Remove Iterators.skip. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32199129|0|0|1|309|2706|237|73|13|39|4|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Iterators.skip(java.util.Iterator<? extends java.lang.Object>,int), newSymbol=]
81abc0864e77e320c47d16b7da00097c6c87c677|Wed Jul 25 19:49:29 CEST 2012|Fix Findbugs warnings. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32228105|0|0|1|309|2706|237|73|15|44|5|0|
41301671896d0755f6f04b2b61e7e9a2a8b86410|Wed Jul 25 19:52:22 CEST 2012|Expose {Int,Long}Math.mean in Guava 14.0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32230548|0|0|2|309|2708|237|73|16|18|6|0|
bf177f504cc8732d7259980bb067e12f72cd114a|Wed Jul 25 21:19:04 CEST 2012|Make the remaining protected method in EventBus package-private. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32234236|0|0|1|309|2707|237|72|15|55|4|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.eventbus.EventBus.dispatchQueuedEvents(), newSymbol=]
84f2f1c4e6ffb73f97705ca6b22feecd178748e5|Wed Jul 25 21:38:33 CEST 2012|Use normal, compile-time @GwtIncompatible stripping instead of unusual, runtime UOE throwing for getMethod calls. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32236275|0|0|0|309|2707|237|72|26|2|6|0|
92d87c98a24b147a4290e970288fc1cd4d040e0f|Thu Jul 26 18:35:01 CEST 2012|Minor formatting changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32270753|0|0|0|309|2707|237|72|21|1|6|0|
7b176de81383878df912e715a2f308550e05d2d1|Thu Jul 26 18:32:16 CEST 2012|Add Maps.asMap(NavigableMap, Function) to complete the set of asMap views.|0|0|2|309|2707|237|72|19|66|9|0|
525b9e540acdef1dbccc7f51aa16a6592e57d5e0|Thu Jul 26 21:21:13 CEST 2012|Make Maps.asMap and toMap public and @Beta. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32271388|0|0|1|309|2711|237|72|22|64|11|0|
c19946804421d2319eab08987f914dd6536c3beb|Thu Jul 26 21:48:50 CEST 2012|Document some possibly surprising semantics of Files.copy(File, File).|0|0|1|309|2711|237|72|21|15|5|0|
dfc51048f5493eb483f323bb427eef3d76e4685f|Fri Jul 27 21:44:46 CEST 2012|Changes implementation of emulated CacheBuilder and instead emulated LocalCache. Features added include recordStats, expireAfterAccess, ticker, and removalListener. RefreshAfterWrite was implemented but removed due to reliance on reload() and returned futures. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32318049|0|0|6|309|2711|237|72|17|71|6|0|
107f0ade32cf19661befb9359159227464ab4065|Fri Jul 27 22:57:20 CEST 2012|Automated rollback of dfc51048f549.|0|0|6|309|2711|237|72|19|79|12|0|
464b0cfab7c3b6713c35e6f3ae7426542668c77b|Fri Jul 27 23:15:19 CEST 2012|Guava issue 1049: minor optimizations for CharMatcher|0|0|3|309|2711|237|72|21|13|5|0|
6d877d9216c9687a4c2065201b3c18e8d43f7e39|Fri Jul 27 23:17:57 CEST 2012|Rename expectedFalsePositiveProbability to expectedFpp. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32320997|0|0|1|309|2712|237|73|20|10|4|0|
52e80110a3beaf786167ab689ae52aa24f4f4b68|Fri Jul 27 23:59:52 CEST 2012|More tests for ObjectArrays. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32321913|0|0|0|309|2712|237|73|14|1|6|0|
60b819dc1291788a3dce17cd95d8f4a7d0a8b9bf|Wed Aug 01 03:30:14 CEST 2012|Total rewrite of emulated CacheBuilder to emulated LocalCache. Features added include recordStats, expireAfterAccess, ticker, and removalListener.|0|0|6|309|2712|237|73|18|76|7|0|
26eace75a0b5cb8ce765b4f3f5ebcedaf198bfb4|Wed Aug 01 03:30:56 CEST 2012|Open source FluentIterable.addTo. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32438496|0|0|1|309|2713|237|73|20|39|5|0|
49eb0f4d7efcd9f2e1c07c4b19f9342457943aec|Fri Aug 03 00:49:40 CEST 2012|6799892: Add FinalizableReferenceQueue.close method. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32452934|0|0|2|309|2714|237|73|17|11|4|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.internal.Finalizer.startFinalizer(java.lang.Class<? extends java.lang.Object>,java.lang.Object), newSymbol=]
0b11aaacc0a7623675755a30aa1b172ad1150644|Fri Aug 03 00:51:55 CEST 2012|Move ComputingMapAdapter to MapMaker. This seems to work around the JDK bug that causes http://code.google.com/p/guava-libraries/issues/detail?id=950 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32499454|0|0|2|309|2714|237|73|16|59|4|0|
8318503d8f7d225f6b98abed7a411a6064144741|Fri Aug 03 00:52:44 CEST 2012|Update Guava version to 14.0-SNAPSHOT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32500914|0|0|0|309|2714|237|73|21|1|4|0|
6510d48005dd21d67f7655eae0689a6104117642|Fri Aug 03 00:53:25 CEST 2012|Add Maps.toMap(Iterator, Function). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32512136|0|0|1|309|2715|237|73|18|70|6|0|
aa3ae3bec18db352d23ff77672d066e5b022f056|Fri Aug 03 19:26:05 CEST 2012|Expire entries at insertion+duration instead of insertion+duration+1 to be consistent with the GWT emulation and, we hope, with common sense. Update tests that rely on the current expiration behavior (as identified by global TAP). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32533539|0|0|1|309|2715|237|73|21|74|5|0|
31149b438ec49d6f98123e11d1666c545ba18f90|Mon Aug 06 20:36:11 CEST 2012|The number of bits can reach Integer.MAX_VALUE now, rather than Integer.MAX_VALUE/64 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32540182|0|0|2|309|2715|237|73|18|17|6|0|
ecfa6f67f323c23f10a1ceed7596e095618fa044|Mon Aug 06 20:37:12 CEST 2012|Copy factory methods from Ranges to Range. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32544574|0|0|1|309|2729|237|73|15|36|4|0|
2b9233884efbf6b5e79a77c61c043a58403157be|Tue Aug 07 20:12:40 CEST 2012|The number of bits can reach Integer.MAX_VALUE now, rather than Integer.MAX_VALUE/64 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32540182|0|0|0|309|2729|237|73|16|1|4|0|
5fe4eb68ef980694d8cbbeb34a6914c05696cee7|Tue Aug 07 20:29:07 CEST 2012|A few small cleanups to BloomFilter. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32612086|0|0|1|309|2729|237|73|14|10|6|0|
d045e1350b720df1ef880ef855051ad7878d2d1c|Tue Aug 07 20:33:11 CEST 2012|Move c.g.c.collect.testing.GwtPlatform to guava-gwt. Eventually it may end up in a new guava-testlib-gwt. For the moment, though, let's just get it out of guava-testlib so that we don't need a GWT dependency there. This CL also removes that dependency.|0|0|0|309|2729|237|73|14|1|4|0|
ae1843743b5771b69961e118ef9b845ef5549c51|Thu Aug 09 23:37:15 CEST 2012|Copy NullOutputStream to ByteStreams.nullOutputStream(). Deprecate NullOutputStream. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32648796|0|0|2|309|2730|237|74|15|12|4|0|
7a4dbb34caf46ab31b18ba9d944d5c5a86c1baf1|Thu Aug 09 23:41:24 CEST 2012|Split CloseablesTest into CloseablesTest and FlushablesTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32662484|0|0|0|309|2730|237|74|15|1|6|0|
cc58fac6cd000bcf73f5544d9eb3e23d00573863|Thu Aug 09 23:45:57 CEST 2012|Add missing c.g.c.collect.testing manual emulations. Withdraw c.g.c.escape manual emulations. Add internal tests that make it less likely that we'll miss manual emulations in the future. (It's still pretty likely, though, since the error occurs only if someone creates the fileset and associated test but forgets to update the build rule....) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32681009|0|0|0|309|2730|237|74|16|2|7|0|
4c88a393a8ea0ca9c96ff7b441211326b9379424|Thu Aug 09 23:50:17 CEST 2012|Further CharMatcher optimizations, eliminating more unused code and especially identifying when the negation is better to precompute than the matcher directly.|0|0|3|309|2730|237|74|20|12|4|0|
85cc9fd3ab8fff110d00436778ad3aeb6cfb21da|Thu Aug 09 23:54:24 CEST 2012|Adds Queues.synchronizedQueue (@Beta) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32690991|0|0|2|309|2731|237|74|19|48|4|0|
5e983f3030df67659b3f5ea48dd659173f6cd0a4|Thu Aug 09 23:58:30 CEST 2012|Use File API for getting extension rather than simple string parsing. Add NullPointerTester and fixed the surprising number of casings where we weren't checkNotNull'ing. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32708936|0|0|1|309|2731|237|74|19|16|6|0|
bc9b186d3bffa15e775cb4592c5c9ac4a03eb45b|Fri Aug 10 00:02:39 CEST 2012|Fix comment bug.|0|0|1|309|2731|237|74|16|47|4|0|
bc8ae3f1994aaa292ca23bba7ea10b3c392ee186|Fri Aug 10 00:07:16 CEST 2012|Rename FluentIterable.addTo to copyInto. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32731689|0|0|1|309|2731|237|74|15|36|4|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.FluentIterable.addTo(C), newSymbol=]
f7382c77eed0cb9231b73cbe0378987bee18bc5e|Fri Aug 10 00:15:38 CEST 2012|Add Files.getNameWithoutExtension ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32734609|0|0|1|309|2732|237|74|18|17|7|0|
b9a4d75354aa1e45021d152e82e6797f84d2e3f4|Mon Aug 13 16:30:27 CEST 2012|Add to[Set, etc.] methods to replace the toImmutable[Set, etc.] methods on FluentIterable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32739379|0|0|1|309|2736|237|74|15|41|4|0|
6e66293b8d3899ef3b3b3445123a5fe6cb065595|Mon Aug 13 16:34:52 CEST 2012|Add exception unit tests for AbstractIdleService. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32745827|0|0|0|309|2736|237|74|18|1|4|0|
557bd5139be6ab5575a8674caa10a2cb54b23ae0|Mon Aug 13 22:26:40 CEST 2012|Added tests for stop-while-starting and stop-before-start to AbstractExecutionThreadServiceTest ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32766077|0|0|0|309|2736|237|74|13|1|5|0|
4135d369da714b34a293f52bbe81ca28eaab3423|Mon Aug 13 22:30:41 CEST 2012|Use object equality instead of reference equality for the Funnel in BloomFilter.equals(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32766357|0|0|1|309|2736|237|74|14|10|4|0|
ee75797a03415a1f42c0237fd140691ce9249deb|Mon Aug 13 22:34:43 CEST 2012|Fixed a race deadlock bug in AbstractServiceTest: when notifyStopped() is called after getStateHistory(), the latter takes the synchronization lock and also waiting on the latch; the former cannot count down the latch because it can't grab the synchronization lock. Also added missing tests for throwing exception from doStart(), doStop(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32768098|0|0|0|309|2736|237|74|13|1|5|0|
10165243c859057a926263a9bffa31d5127881a7|Mon Aug 13 22:38:45 CEST 2012|Change callers of FluentIterable.toImmutableSet(), toImmutableSortedSet() and toSortedImmutableList() to call toSet(), toSortedSet() and toSortedList() instead.|0|0|1|309|2736|237|74|16|51|6|0|
99d4056a60fb19b277518bac594bac3415d881c5|Mon Aug 13 22:46:48 CEST 2012|Added idempotence test to ExecutionListTest ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32776278|0|0|0|309|2736|237|74|15|2|5|0|
a2504dc46823bec501971201c75fe225c05eb02d|Mon Aug 13 22:50:51 CEST 2012|Deprecate FluentIterable.toImmutable*. Change a few references to toImmutableList in FluentIterable javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32777184|0|0|1|309|2736|237|78|14|36|4|0|
d8bba0411227ef89ec2a0553e1a33a3a9f8f6559|Mon Aug 13 22:54:58 CEST 2012|Make FluentIterable.toImmutable* package-private and clean up more callers. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32827565|0|0|1|309|2736|237|78|13|40|6|0|
963e8a39ace0e027d2544a5c19c8ca75ee3334c6|Mon Aug 13 22:59:26 CEST 2012|Add tryParse implementation for Doubles and Floats.|0|0|2|309|2738|237|78|20|18|5|0|
c9c7b8d84251b04c7cc05fe74a32ce062a22fbff|Mon Aug 13 23:03:28 CEST 2012|Used TearDownStack instead of TearDownTestCase for AbstractExecutionThreadServiceTest ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32830069|0|0|0|309|2738|237|78|17|2|4|0|
08a93dd79f9b45c50a450e94d3d7c29a8d60166d|Tue Aug 14 19:18:51 CEST 2012|Format visibility keywords. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32838713|0|0|1|309|2738|237|78|14|36|4|0|
83779d1f9b3791811063f486d8742f63d040c57d|Tue Aug 21 06:12:12 CEST 2012|Fix a few typos in the javadocs of Queues#synchronizedQueue ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32876603|0|0|1|309|2738|237|78|17|35|4|0|
fb8059d8e01b69600ec5f489543742cd09ddae63|Tue Aug 21 06:12:58 CEST 2012|Improve Funnel javadocs about using an enum. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32878801|0|0|1|309|2738|237|78|16|6|5|0|
e276741577ff69f2bd37de5abe4369df65a14edb|Tue Aug 21 06:13:45 CEST 2012|Added some tests covering some edge cases in Futures. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32879297|0|0|0|309|2738|237|78|16|2|4|0|
4ff74fe7e9378cf3de1ec5c164ba50dd9db654d8|Tue Aug 21 06:15:15 CEST 2012|Delegate the Ranges implementations to Range.  (I don't know why I didn't do this in the first place.)  Also clean up common.collect code to use Range and update the docs throughout.|0|0|4|309|2738|237|78|22|50|5|0|
776dbe60960fc16412142001804a427131d9ba05|Tue Aug 21 06:15:59 CEST 2012|Add ByteStreams#limit(InputStream, long) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32916484|0|0|1|309|2739|237|78|20|12|4|0|
e8959ed0f4f1617c22668e55a7f4989b751b776a|Tue Aug 21 06:16:44 CEST 2012|Store the stack trace of the thread that called cancel in AbstractFuture and attach it to CancellationExceptions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32921728|0|0|1|309|2739|237|78|15|15|4|0|
1af87fe81cd282cf8593066ca2f9fa690092bd78|Tue Aug 21 06:17:30 CEST 2012|Rewrite Futures.immediate*Future with simple immutable Future implementations, and change Futures.immediateFailingFuture to not rethrow on Error.  This speeds up the creation of immediate futures by a factor of 10, which is significant for, e.g. the upcoming asynchronous cache, which uses many more immediate futures, particularly for the translation layer between CacheLoader and AsyncCacheLoader. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32923067|0|0|1|309|2740|237|78|16|53|4|0|
a0069d290f4fb061bd9c8a918357389a25e0025a|Tue Aug 21 06:18:58 CEST 2012|Some more tests for MoreExecutors ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32929661|0|0|1|309|2740|237|78|17|40|4|0|
09c626ed9f63b409692c81c65febedd45e362a14|Tue Aug 21 06:19:43 CEST 2012|Point from Function to Functions and from Predicate to Predicates. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32953252|0|0|2|309|2740|237|78|15|9|4|0|
a62c8082b9cd897becaf67550667e427c09efd5a|Tue Aug 21 06:20:27 CEST 2012|Add toMap, index and uniqueIndex to FluentIterable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32953942|0|0|1|309|2743|237|78|16|51|6|0|
89227baf2fbd3d29c019e3b1daeea49eb1851a70|Tue Aug 21 06:21:13 CEST 2012|Swallow unchecked exceptions in immediate future listeners ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32958093|0|0|1|309|2743|237|78|20|47|4|0|
24e4d09cbd725d76734f10a449d3e2bc60ee62f8|Tue Aug 21 06:21:58 CEST 2012|Remove @Beta from Queues (and all of the static factory methods). Add @link tags from Lists and Sets to Queues. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32963365|0|0|3|309|2743|237|78|16|61|6|0|
1548d6345c99114613030ba50bf9ec774846555b|Tue Aug 21 06:22:44 CEST 2012|Fix remaining callers of NullOutputStream in c/g/common. MOE insert public for c.g.common.io.NullOutputStream. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32965282|0|0|1|309|2743|237|78|20|7|5|0|
68f5f79508a87fae6505af9b95d55bb16e005e06|Tue Aug 21 06:23:28 CEST 2012|Add @Nullable to methods which take a @Nullable default value. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32966990|0|0|2|309|2743|237|78|16|52|4|0|
1161d53ad0b9da0e9fc14a97607c78f1a0b555eb|Tue Aug 21 06:24:13 CEST 2012|Add enough @Nullable annotations to make Findbugs happy. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32971318|0|0|1|309|2743|237|78|16|44|6|0|
3bb7e198e8a73f4932fa92c679e7a0861480a9d3|Tue Aug 21 06:26:28 CEST 2012|Fix CacheBuilderSpecTest (issue 6453130) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32994791|0|0|0|309|2743|237|78|15|2|4|0|
bece04b513ab288376d66fbf6e9999091e364d25|Tue Aug 21 06:27:13 CEST 2012|Add method to CaseFormat enum instead of using a switch. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=32995795|0|0|1|309|2743|237|78|15|10|4|0|
08d3526fc19293cf099e0c50dbf3bbc915f2e3f2|Tue Aug 21 06:27:59 CEST 2012|Copy LimitInputStream implementation to ByteStreams. Deprecate LimitInputStream. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33000215|0|0|2|309|2743|237|79|15|11|4|0|
6005ac6c861ca93c8c57239522357318d6cec894|Tue Aug 21 06:28:43 CEST 2012|Added null check from NullPointerTester-generated proxies.|0|0|0|309|2743|237|79|30|1|5|0|
c399bb5be8c6b477656a31927545dbd46eafbc7d|Tue Aug 21 06:30:13 CEST 2012|Fix incorrect @SuppressWarnings annotations:|0|0|0|309|2743|237|79|23|1|4|0|
fa58649127265dd91f3b2b947b4fc27a7fd89c59|Tue Aug 21 06:30:58 CEST 2012|Remove final switch from CaseFormat. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33061765|0|0|1|309|2743|237|79|13|9|4|0|
f99a2cbe13cfce32b86d2a37f4ee03e11cffe0da|Tue Aug 21 06:34:05 CEST 2012|Fixed JoinerTest by adding back the old setDefault(Object) call. The previous deletion was not tested against moe. Changed the test to cover package-private methods so that moe is covered; changed Joiner to add a missing @Nullable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33083585|0|0|1|309|2743|237|79|15|11|6|0|
007bd95bc27a0c10bf59bb0076ec55bd9f18b80b|Tue Aug 21 19:48:31 CEST 2012|Migrate callers from Ranges.* to Range using automated search and replace.  The following commands were used: 1) sed -i 's/\([^a-zA-Z]\)Ranges\./\1Range\./g' 2) []-bin/java/com/google/devtools/javatools/imports/ImportTool --remove=com.google.common.collect.Ranges --add=com.google.common.collect.Range|0|0|0|309|2743|237|79|16|2|5|0|
9dc16bbe746faf499add4aba449887414888bc21|Tue Aug 21 19:49:18 CEST 2012|Added tryAcquire() and tryAcquire(int) to match with semaphore and to simplify client code when wanting to attempt to acquire a permit with zero wait time. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33098174|0|0|1|309|2745|237|79|16|15|4|0|
1101d3ffa6fb2a74c00258ee9bda9e1b4df0ed1d|Fri Aug 24 01:41:55 CEST 2012|Update BloomFilter to implement Predicate. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33114990|0|0|1|309|2746|237|79|15|11|7|0|
3b9b68187965f2c16f7f3e85ae3cbbff36431dae|Fri Aug 24 01:42:40 CEST 2012|Added ForwardingWrapperTester to test forwarders. It lacks guava annotations. Please advise. Thanks ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33116315|0|0|0|309|2746|237|79|15|2|4|0|
595d06ebec81b7b695e557f57f5f754e06d390db|Fri Aug 24 01:43:26 CEST 2012|Add Futures.allAsMap and Futures.successfulAsMap as analogues to {all,successful}AsList. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33120330|0|0|1|309|2746|237|79|14|53|5|0|
a8c3b26d3da826429c1d4b1291d1cc55a5f13123|Fri Aug 24 01:44:12 CEST 2012|Sorry, forgot to add @since to the methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33141201|0|0|1|309|2746|237|79|17|15|4|0|
ce1cff2cc01e8914af1085c0c41ccc4352f22555|Fri Aug 24 01:44:57 CEST 2012|Deprecate Ranges now that the majority of callers have been migrated. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33144339|0|0|1|309|2746|237|80|17|32|4|0|
e0e16abaa961f819426bea28743841222679d4dd|Fri Aug 24 01:45:43 CEST 2012|Added forwarder tests for various Forwarding* classes in util/concurrent. Added ForwardingObjectTester to test any subclass of ForwardingObject. Since it has to use EasyMock partial mock, I had to place it under javatests/. Along the way, fixed a few oversights in ForwardingWrapperTester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33148165|0|0|0|309|2746|237|80|17|1|5|0|
aa476d6a91520d3e52f652a3974bce3ac4fb805d|Fri Aug 24 01:47:18 CEST 2012|Add an autoIncrementStep to FakeTicker, similar to the autoIncrementStep in FakeClock|0|0|0|309|2746|237|80|15|1|4|0|
f765a77000e4a65abadb7073e5282f08c3bc99fb|Fri Aug 24 01:48:04 CEST 2012|Implement ServiceManager, the new better CompositeService. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33185556|0|0|0|309|2746|237|80|14|1|5|0|
d13f68f9a102bfacedb7bbbc6837b63342966633|Fri Aug 24 01:48:49 CEST 2012|Make ServiceManagerTest @GoogleInternal. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33204393|0|0|0|309|2746|237|80|12|1|5|0|
42855c535047107bd550a28e30fe5d40f400a97d|Mon Aug 27 17:53:27 CEST 2012|Release permutations()-based test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33236453|0|0|0|309|2746|237|80|15|1|4|0|
917b46b8e54e554524555e547e9c9c2373104f1a|Mon Aug 27 17:56:38 CEST 2012|Trivial fallout from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33239275|0|0|0|309|2746|237|80|17|1|7|0|
e0dfd519ba1f707f517e5423634371f2f15fcb2b|Tue Aug 28 20:23:43 CEST 2012|Added ClassPath for exploring class path from a given ClassLoader. The class.path system property is what the system class loader uses. The 'meat' of the code is actually copied from AbstractModulePackageInfoSource from test suite builder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33345052|1|0|0|311|2754|237|80|16|46|4|0|
20ffd6da5a0dbdea592cc9db648bb10ece5941a8|Wed Aug 29 00:39:17 CEST 2012|Benchmark Splitter#on char vs String length==1, char wins by a bit ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33356556|0|0|0|311|2754|237|80|14|1|4|0|
7eefee3cd54fa686e617f1446e1b329c5a23cf24|Wed Aug 29 19:50:04 CEST 2012|Add getClasses(package) to ClassPath. IO now happens at the time ClassPath.from(ClassLoader) is called, rather than getClasses(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33383562|0|0|1|311|2756|237|80|13|44|7|2|BC[kind=METHOD_NOW_THROWS_CHECKED_EXCEPTION, impactedSymbol=com.google.common.reflect.ClassPath.from(java.lang.ClassLoader), newSymbol=com.google.common.reflect.ClassPath.from(java.lang.ClassLoader)],BC[kind=METHOD_NO_LONGER_THROWS_CHECKED_EXCEPTION, impactedSymbol=com.google.common.reflect.ClassPath.getClasses(), newSymbol=com.google.common.reflect.ClassPath.getClasses()]
f1970452c00ab6b8599c2444681b10f19b8dbc68|Wed Aug 29 19:52:53 CEST 2012|Fix small javadoc typo in Stopwatch#elapsedMillis. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33384805|0|0|1|311|2756|237|80|16|9|7|0|
8f48177132547cee2943c93837d76b898154d722|Wed Aug 29 22:40:35 CEST 2012|Change Splitter#on(String) to Splitter#on(char) for single character strings - Results in a 10-25% performance improvement see bug for details|0|0|0|311|2756|237|80|16|2|4|0|
b84265625c1f685c855cca2458ee99f418f2845d|Thu Aug 30 00:01:57 CEST 2012|Graduate labs.reflect.Invokable and labs.reflect.Parameter. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33397919|3|0|0|313|2773|237|80|17|38|4|0|
7603bab156d498339a2468d24c2917e7ee58f72e|Thu Aug 30 18:42:50 CEST 2012|Add ClassPath#getClassesRecursive().|0|0|1|313|2773|237|80|15|45|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.reflect.ClassPath.getClasses(java.lang.Package), newSymbol=]
6995e685d84ad06cb8632517fdbc487246183a95|Thu Aug 30 20:40:12 CEST 2012|Assorted cleanup: - Fix bogus "ImmutableMap.keySet" name for ImmutableMap test. - Remove unused FeatureUtil manual GWT emulation. - Remove one odd whitespace occurrence. - Fix Closeables Javadoc code formatting, plus other tweaks. - Change @link to @linkplain and Equivalances to Equivalence in Equivalence. - Fix various Javadoc warnings. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33430865|0|0|4|313|2773|237|80|18|47|5|0|
d024c5066fb410169350f8a62668d9fbf075a3e4|Fri Aug 31 17:06:55 CEST 2012|Added  TypeToken#method() and constructor() to return Invokable<> with types resolved;|0|0|4|313|2776|237|80|20|49|6|5|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.reflect.Invokable.getParameters(), newSymbol=com.google.common.reflect.Invokable.getParameters()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.reflect.Parameter.getType(), newSymbol=com.google.common.reflect.Parameter.getType()],BC[kind=TYPE_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.reflect.Parameter, newSymbol=com.google.common.reflect.Parameter],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.reflect.Element.getDeclaringClass(), newSymbol=com.google.common.reflect.Invokable.getDeclaringClass()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.reflect.Invokable.from(java.lang.reflect.Method), newSymbol=com.google.common.reflect.Invokable.from(java.lang.reflect.Method)]
9e56171b52b8a6019f488974dfef05603903ee21|Fri Aug 31 17:09:54 CEST 2012|Changed NullPointerTester to use Invokable ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33440442|0|0|0|313|2776|237|80|15|2|5|0|
ae758e0347c5ca9cee84c5738411852c4960bd2f|Fri Aug 31 22:03:30 CEST 2012|Add tests for ConcurrentSkipList{Map,Set} and for a TreeMap with no comparator. The latter requires suppressions for the same reason that our no-comparator TreeSet tests do: The first element is wrongly permitted to be inserted even if it's null. Also, fix up a few misnamed methods and a copy-pasted doc comment. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33468471|0|0|0|313|2776|237|80|18|2|5|0|
cce57e79b54651567f0fede33f2ad4348a30ff60|Fri Aug 31 22:06:36 CEST 2012|Reconcile the cancellation semantics for Futures.combine, successfulAsList, allAsList, and withFallback to be consistent with Futures.transform.  Now, all cancellations are back-propagated to the input futures.  We also expose the interruption state in AbstractFuture with a protected method.  To ensure the interruption state is correct and threadsafe, we add an additional state to AbstractFuture's inner Sync class to atomically distinguish between cancelled and interrupted. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33468640|0|0|2|313|2777|237|80|19|55|7|0|
764dc1c8004cf1ddd9e8571323b54259ce90d0a3|Fri Aug 31 22:09:35 CEST 2012|Release Futures.withFallback to Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33473424|1|0|1|314|2780|237|80|17|49|4|0|
76357ba760c72630dcba79c0164fdbb6b963ff05|Fri Sep 07 22:14:55 CEST 2012|Changed AbstractInvocationHandler#equals() and hashCode() to delegate to the invocation handler, to allow customization. I needed it to create dynamic proxies that works for SerializableTester.reserializeAndAssert(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33639720|0|0|1|314|2782|237|80|16|6|4|0|
6e54496483e64309430a0d54cbf24d9440e77bb3|Fri Sep 07 22:18:29 CEST 2012|Added AbstractPackageSanityTests to apply automated sanity tests for an entire package.|0|0|3|314|2782|237|80|19|51|7|0|
4fa019eb30ecddc4790c890dcd2e0992cb8d6806|Fri Sep 07 22:22:06 CEST 2012|Fix thread-safety of EventBus.|0|0|1|314|2782|237|80|16|55|5|0|
96bf55c5668041ce99b9dbd33d79128304acc2fe|Fri Sep 07 22:25:28 CEST 2012|Allow synchronous calls to EventBus.post().|0|0|1|314|2782|237|80|14|60|6|0|
ec5a8f11d23c88d9dcac9a7c361e3f5bc7281dce|Mon Sep 10 20:15:23 CEST 2012|Extracted FreshValueGenerator from ForwardingWrapperTester to a stand-alone class so it can be reused for automated equals testing.|0|0|1|314|2783|237|80|16|40|7|0|
60fabfb89bccd3921779226746546a76e9a31c20|Mon Sep 10 20:18:20 CEST 2012|Experimental EventBus CL that reduces the overhead of reflection in the case where a lot of EventBus instances are created and the same type of objects are registered on all of them. This makes a difference of about 4x in one app. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33742203|0|0|2|314|2783|237|80|15|54|4|0|
c8730f9ef8e5e767e7d6331dcce8ba6ddb808326|Tue Sep 11 18:29:45 CEST 2012|Clarify the wording of the exception messages in Optional subclasses. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33759112|0|0|2|314|2783|237|80|14|8|6|0|
54a16dda14ba2892574f50016a37947784d668b7|Tue Sep 11 18:33:21 CEST 2012|Change the default executor of the AbstractScheduledService so that it is shutdown when the service reaches a terminal state.  This ensures that a stopped service cannot prevent the JVM from exiting. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33759240|0|0|1|314|2783|237|80|14|41|7|0|
758d908c92b5a5e0dad3ad7d68a054520d5ee72c|Tue Sep 11 19:07:44 CEST 2012|Simplify places in CharMatcher where StringBuilder is used unnecessarily. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33785205|0|0|1|314|2783|237|80|15|11|5|0|
da6c492852c22d8defb38ecba2e001172dc0ed8b|Tue Sep 11 21:33:16 CEST 2012|A number of small changes and fixes in EventBus: - flattenHierarchy was catching an exception that couldn't be thrown because the CacheLoader doesn't throw a checked exception. Fix it to catch the right exception type. - Change eventsToDispatch to use non-thread safe queues since it's a ThreadLocal. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33790152|0|0|1|314|2783|237|80|16|56|4|0|
3c7ed82d766b4629e08efe894f2701adbfdb93c3|Tue Sep 11 21:36:51 CEST 2012|Update javadocs to suggest using a PQ or MMPQ if the entire iterator cannot be held in memory at once. Add test for leastOf including null elements (the reason we can't use an ImmutableList as a return type). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33790169|0|0|1|314|2783|237|80|14|50|5|0|
665f712923fcd30e8a35a883ca204a63c356b5e5|Thu Sep 13 19:55:50 CEST 2012|Add a single parity test with known output from SMHasher (python). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33886930|0|0|0|314|2783|237|80|18|1|5|0|
c9eb4073459cad31ebdf3b843790c2dd3afa301f|Fri Sep 14 02:10:17 CEST 2012|Remove Eclipse-based compiler error "The method set(int, Optional<V>) in the type List<Optional<V>> is not applicable for the arguments (int, Optional<capture#66-of ? extends V>"|0|0|1|314|2783|237|80|15|49|4|0|
f26b23aa417b94b872daf38845bca572da8f69ab|Fri Sep 14 02:11:00 CEST 2012|External Guava issue 1148: avoid explicitly copying ImmutableEnumSets ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33899746|0|0|1|314|2783|237|80|16|50|5|0|
83c46e7ab4ee48c8a6edc697327ecf2c15ef7ee9|Fri Sep 14 02:11:43 CEST 2012|Document the NPE in UnsignedLongs.parseUnsignedLong ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33899913|0|0|1|314|2783|237|80|17|14|5|0|
92cd0cca7e9fb9707a7a853de1e3832bc8445184|Fri Sep 14 02:12:26 CEST 2012|Rename expandFor in Immutable builders. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33900350|0|0|2|314|2783|237|80|16|49|9|0|
5016694c81a5f486bb77446e2b97a572bb9c2ceb|Fri Sep 14 02:13:09 CEST 2012|Fix a compile error in Java 7:|0|0|0|314|2783|237|80|16|1|5|0|
fe2df24495ad435f4ae0012e0f0aca8a5f09346f|Fri Sep 14 02:15:30 CEST 2012|define strict ordering over ClassInfo so that ordering is deterministic. Also renamed getClasses() to getTopLevelClasses() to be more explicit. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33904815|0|0|1|314|2783|237|80|15|44|4|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.reflect.ClassPath.getClasses(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.reflect.ClassPath.getClassesRecursive(java.lang.String), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.reflect.ClassPath.getClasses(java.lang.String), newSymbol=]
93f3c9edf377e7bebc55a412c9087abceaba075b|Fri Sep 14 18:02:49 CEST 2012|Remove an unused import. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=33904446|0|0|0|314|2783|237|80|17|2|4|0|
7579aa7a96bae1951f1cc06cb2819b0d98ef588e|Wed Sep 19 02:01:12 CEST 2012|Add documentation in Iterables.getNext(Iterable, Object) that says that if no default value is desired, to use iterable.iterator().next() instead.|0|0|1|314|2783|237|80|16|55|4|0|
a990ff7317596a86537fbe78f5ee513c05f23c07|Wed Sep 19 02:02:20 CEST 2012|Add toString() to DiscreteDomains ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34006016|0|0|1|314|2783|237|80|16|28|4|0|
d8f98873aa2449c056dc1b145e35e898d128e544|Wed Sep 19 02:03:28 CEST 2012|Eliminate EmptyImmutableMap, using ImmutableBiMap.of() everywhere instead. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34006338|0|1|4|314|2774|237|80|16|41|8|2|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableBiMap.get(java.lang.Object), newSymbol=com.google.common.collect.ImmutableMap.get(java.lang.Object)],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableBiMap.size(), newSymbol=java.util.Map.size()]
76a9837992dbb4e4509e3445129521cb440db7da|Wed Sep 19 02:05:47 CEST 2012|Move a comment that had become out of place. This bothered me when I noticed I'd accidentally done it, so what the heck. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34035516|0|0|0|314|2774|237|80|17|2|5|0|
b59f363f5a3d8ce18637f4ad1b53a559ad2c5643|Wed Sep 19 02:07:54 CEST 2012|Refactor RangeSet into an interface and an abstract skeleton ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34047917|1|0|2|314|2774|237|80|17|40|4|0|
4ab9205558043640770fa5888c56ff3e639903df|Thu Sep 20 20:20:35 CEST 2012|Added testEquals() to AbstractPackageSanityTests.|0|0|4|314|2774|237|80|20|48|6|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.reflect.Parameter.getInvokable(), newSymbol=]
9d265ad9f7814355df061a4a897c95c4544d611d|Thu Sep 20 20:22:59 CEST 2012|Fix typo in code sample for ForwardingWrapperTester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34069677|0|0|0|314|2774|237|80|13|2|4|0|
c49086946f6bc82689d6b1d273de4e7e02091d7f|Mon Sep 24 18:59:49 CEST 2012|Optimize Ordering.leastOf().|0|0|1|314|2775|237|80|15|51|4|0|
0cad3f743ebf787cd50d762ca024fc6995df3c40|Mon Sep 24 19:03:14 CEST 2012|Add Ordering.greatestOf(Iterator, int) overload, and fix the doc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34132823|0|0|1|314|2776|237|80|16|46|6|0|
a3df035531ff51546466335635e72500a7a95348|Mon Sep 24 19:06:25 CEST 2012|Makes FreshValueGenerator more friendly to collection types especially immutable collection types. This reduces false positives and also reduces the need to set sample instances for collection types. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34163462|0|0|0|314|2776|237|80|17|1|4|0|
ea1dee6d01bc1dea52cc2a09140be28f15c7967d|Mon Sep 24 19:09:21 CEST 2012|Fix Ordering.leastOf for very large k ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34196765|0|0|1|314|2776|237|80|17|49|4|0|
515808097d372fbc3cbb1ea8a42097722ab86707|Mon Sep 24 19:35:24 CEST 2012|Add Multisets.sum and Multisets.difference. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34223499|0|0|1|314|2778|237|80|18|48|6|0|
3b5931ebc2b2e385cf7fa5925b97ba53377c70ec|Mon Sep 24 19:51:57 CEST 2012|Add Multisets.union. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34224294|0|0|1|314|2779|237|80|15|44|4|0|
dd22f0902a1a5dcd04d4d6d997faa486c923627d|Mon Sep 24 22:00:31 CEST 2012|Improve consistency of Javadoc for Multisets.union/intersection/sum/difference, highlighting how they differ and the mathematical operation each is based on.|0|0|1|314|2779|237|80|16|47|4|0|
cc5366d288560046ba808761a70b8844db0f4115|Tue Sep 25 00:14:07 CEST 2012|Applied package sanity test to common/collect. Had to add publicApiOnly() because there are a lot of package-private classes that should either not be tested (the shim classes) or are already covered by another test, like the various *ContiguousSet classes covered by ContiguousSetTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34235956|0|0|9|314|2779|237|80|28|63|7|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.AbstractCollection.retainAll(java.util.Collection<? extends java.lang.Object>), newSymbol=com.google.common.collect.Sets$ImprovedAbstractSet.retainAll(java.util.Collection<? extends java.lang.Object>)]
2b0034fa7fbc6803a6db7bd2d64a85bf26ef4fe8|Tue Sep 25 16:04:45 CEST 2012|Change the HostAndPort.java to support case like "hostname:" Here's the string does include a ":" but does not have the port number, before this CL, HostAndPort.java tries to parse the empty string after ":" to a number and throws a NumberFormatException. In this case, it should treat the port is undefined instead. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34245642|0|0|1|314|2779|237|80|20|12|5|0|
79f5075f169470c9b0ea42824ff2cfee521db54e|Tue Sep 25 18:41:56 CEST 2012|Change ImmutableClassToInstanceMap#getInstance() to reject null Class ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34262782|0|0|1|314|2779|237|80|16|45|6|0|
86aa9f060deed8a128608e1b16e25a8e188aba7e|Wed Sep 26 19:40:39 CEST 2012|Implement Sets.cartesianProduct to iterate in lexicographical order.  In the process, Lists.cartesianProduct has been implemented on a package-private basis. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34279184|1|0|2|314|2779|237|80|19|58|5|0|
0cc8b996680f45a294ed3417571a9900c2bb66f9|Thu Sep 27 18:12:14 CEST 2012|Applied package sanity tests to common/base ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34319507|0|0|2|314|2779|237|80|20|11|5|0|
835a7397fabb05a764a8008f4151c97f821a29ef|Thu Sep 27 18:15:16 CEST 2012|Implement ImmutableEnumMap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34322860|1|0|1|314|2780|237|80|20|75|10|0|
decf2b13fab3d23d8aac179c877d2329178a81aa|Fri Sep 28 18:11:40 CEST 2012|Remove <E extends Enum<E>> from GWT ImmutableEnumMap, reducing code bloat. We still don't really know why this happens, but the difference is huge. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34349121|0|0|0|314|2780|237|80|22|1|5|0|
cd251bcba76af57b67994869c770793955aaeb1b|Fri Sep 28 19:11:52 CEST 2012|Guava issue 1154: use the new String(byte[], Charset) constructor directly ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34385923|0|0|1|314|2780|237|80|14|14|5|0|
b2a154664ce880b2ccf77ddb00f6a655437ebdf1|Fri Sep 28 23:27:05 CEST 2012|Some minor further optimizations to Ordering.leastOf. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34392353|0|0|1|314|2780|237|80|16|50|8|0|
783fca80052b1be76ca83150f982eeabfbc821f8|Fri Sep 28 23:33:03 CEST 2012|Replace SingletonImmutableMap with SingletonImmutableBiMap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34396548|1|1|3|314|2780|237|80|21|41|6|0|
2f93b7811a6d05b6c18522f8b0e1f3e9d63bcfad|Mon Oct 01 15:40:38 CEST 2012|Added PackageSanityTest to common/primitive ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34437463|0|0|0|314|2780|237|80|18|2|4|0|
b3b6b1d3ceb35de964d6403c5cc291c980f5478f|Tue Oct 02 19:09:57 CEST 2012|Implement ImmutableRangeSet. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34454241|1|0|0|314|2780|237|80|15|42|7|0|
2539c7862c5a2c9c11827a618ee34bb272f397f3|Tue Oct 02 19:11:41 CEST 2012|applied package sanity tests to common.hash ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34460278|0|0|2|314|2780|237|80|19|11|5|0|
79821ec75ca4f431331acbd10b095ed0d38e52f8|Tue Oct 02 19:12:29 CEST 2012|Applied package sanity test to common.cache. I had to add some checkNotNull() to LocalCache and CacheLoader, based on my understanding of the javadoc. Though it does change the contract: some didn't throw NPE on null, some threw UncheckedExecutionException. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34462784|0|0|4|314|2780|237|80|19|74|5|0|
0896afdf582d0dc281f8419f24c1faa4916c010b|Tue Oct 02 19:13:18 CEST 2012|Changed ClassSanityTester to not to attempt to instantiate the class if no instance method needs to be tested for nulls. This avoids unnecessary test failures for classes that don't need null check after all. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34466316|0|0|0|314|2780|237|80|19|2|7|0|
7a1afaf1673aceddb8eca2e34a04a3ead0c2ed34|Tue Oct 02 19:15:33 CEST 2012|Make ArrayTable gwt compatible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34495130|0|0|1|314|2780|237|80|17|49|5|0|
8a1f32cb22777269b18a4111e8bfb7bea71f6814|Tue Oct 02 21:00:24 CEST 2012|Remove serializable=true from ArrayTable ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34500078|0|0|1|314|2780|237|80|17|47|5|0|
54c7c7039143abfd983c4a30b70d37c714d0d715|Wed Oct 03 00:04:32 CEST 2012|Applied package sanity tests to common.eventbus ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34501606|0|0|4|314|2780|237|80|18|59|5|0|
9880403b7b975f377fa4f550ed3239a7cc7b6aa7|Wed Oct 03 00:06:25 CEST 2012|Applied package sanity tests to common.io ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34502521|0|0|8|314|2780|237|80|19|21|6|0|
507e694274947e3ef4dcecc45695a447330e6456|Wed Oct 03 00:07:17 CEST 2012|Fix a bug so we actually store the cause of cancellation in cancelled futures. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34502625|0|0|1|314|2780|237|80|19|15|5|0|
e6c7968848997ad1e4ed64db0fd8d22e276b16b8|Wed Oct 03 00:08:11 CEST 2012|Applied package sanity tests to common.math ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34503919|0|0|1|314|2780|237|80|17|5|5|0|
ff2ca013a982d14b7faa229d2d93b35efb2331bf|Wed Oct 03 00:09:11 CEST 2012|Add Splitter.withKeyValueSeprator(char) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34504065|0|0|1|314|2781|237|80|16|11|4|0|
00ca4574869439d67450b0cc85e45026386be4df|Wed Oct 03 00:09:53 CEST 2012|Add Java Checksums (CRC32, Adler32) to Hashing.|2|0|3|314|2783|237|80|17|19|4|0|
567ba59e507379edffd48e29b0de52bd8e79e378|Wed Oct 03 17:56:52 CEST 2012|A few miscellaneous changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34536148|0|0|2|314|2783|237|80|17|57|5|0|
15cef0c1be23bc6e878b79837174e6674017baa0|Wed Oct 03 20:09:07 CEST 2012|Speed up notably slow math tests for GWT's sake. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34540675|0|0|0|314|2783|237|80|16|2|4|0|
9b424fd157bb41fab42b4625766f593880e30b1c|Thu Oct 04 17:30:53 CEST 2012|Add HashCode.padToLong() to replace Hashing.padToLong(HashCode). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34550858|0|0|3|314|2784|237|80|15|17|4|1|BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.hash.HashCode, newSymbol=com.google.common.hash.HashCode.padToLong()]
e860c9f37af77c882572bb13361cbf089e22d613|Thu Oct 04 17:31:35 CEST 2012|Fix typo in comment about where test constant came from. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34551664|0|0|0|314|2784|237|80|14|1|6|0|
7d27d54759407ece6af40e20658066f4bf90bc30|Thu Oct 04 17:32:22 CEST 2012|Make ListenableFutureTask non-final but not subclassable externally. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34552583|0|0|1|314|2785|237|80|15|9|5|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.concurrent.FutureTask.done(), newSymbol=com.google.common.util.concurrent.ListenableFutureTask.done()]
dbf40d91e623fd213fb2ea1b6c34910908a923c6|Thu Oct 04 17:33:04 CEST 2012|Add equals/hashCode to Suppliers, and tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34552771|0|0|1|314|2785|237|80|16|9|5|0|
e8dcf56da6705e92cad635a31348ca5e13bb59c3|Thu Oct 04 17:33:51 CEST 2012|add equals/null tests for HashCodes ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34563347|0|0|1|314|2785|237|80|15|10|6|0|
9e8aa945fd57deec53d37756d0cb14707bf5e4fb|Thu Oct 04 17:34:39 CEST 2012|Deprecate Hashing.padToLong(HashCode). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34579256|0|0|1|314|2785|237|81|14|11|4|0|
47ab2d51c2d3bf4e72e85f597162f987f4702d1f|Fri Oct 05 22:32:39 CEST 2012|Specify exact CPP equivalents for murmur3 hashing. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34580858|0|0|1|314|2785|237|81|13|12|4|0|
90c5b3cd41a7fb26f3ab6e8d27e6d330944806f3|Fri Oct 05 22:34:51 CEST 2012|Add a microbenchmark for c.g.common.base.Joiner and other common implementations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34581745|0|0|0|314|2785|237|81|14|1|4|0|
419a8d3fa864f78997eaba0b25627e6d894f9339|Fri Oct 05 22:36:20 CEST 2012|Applied package sanity tests to common.util.concurrent|0|0|8|314|2785|237|81|20|67|5|0|
6b97b7b4e2f2b8ab00fe81d7236324a52ab1daf9|Fri Oct 05 22:37:04 CEST 2012|Added new API to allow filtering methods by return types:|0|0|1|314|2785|237|81|19|34|5|0|
190e4d8c9124ea68131e7d33898910d5f4876055|Fri Oct 05 22:46:39 CEST 2012|Some javadoc improvement of AbstractPackageSanityTests and ClassSanityTester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34624992|0|0|0|314|2785|237|81|17|1|6|0|
529b84581685a6ee66d6325f725f60d1e416515a|Fri Oct 05 22:48:27 CEST 2012|Added getSimpleName() to ClassPath.ClassInfo because some users might want to check on the class name prefix? There is already user who checks on the suffix. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34629374|0|0|1|314|2786|237|81|15|49|4|0|
45feb0e0aeffa0b8f325f25ecf7bd4567fb30d89|Mon Oct 08 18:11:34 CEST 2012|Rewrite TreeRangeSet implementation to use its own, smarter complement implementation.  Most notably, complement().encloses(Range) is now a logarithmic-time operation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34639480|0|0|4|314|2786|237|81|17|47|4|0|
0713c76d622ff2bc814fcf80d46fee281d53e706|Mon Oct 08 18:12:18 CEST 2012|Eliminate Iterators.unmodifiableListIterator, which was package-private but never used. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34641948|0|0|1|314|2786|237|81|17|40|5|0|
067c6a6a70ef7247869cd66e658f2a42047e4f3c|Mon Oct 08 18:14:11 CEST 2012|Delete TransformedImmutableSet, which was a skeleton abstract class with only one subclass anyway. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34859558|0|1|3|314|2786|237|81|18|41|7|0|
403eedc3226a59bb362269d5bbe27a1e3d8c1b79|Tue Oct 09 17:25:04 CEST 2012|Remove ImmutableSetMultimap.SortedKeyBuilderMultimap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34927857|0|0|1|314|2786|237|81|18|52|5|0|
62dbc59f8ddc0ab9d29be7637f650452605da26c|Tue Oct 09 17:25:51 CEST 2012|Implement DescendingImmutableSortedSet, a skeleton implementation of ImmutableSortedSet.descendingSet(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34936379|1|0|5|314|2788|237|81|18|43|7|3|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableSortedSet.descendingIterator(), newSymbol=com.google.common.collect.ImmutableSortedSet.descendingIterator()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.SortedSet.last(), newSymbol=com.google.common.collect.ImmutableSortedSet.last()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.SortedSet.first(), newSymbol=com.google.common.collect.ImmutableSortedSet.first()]
f3ea6b8cc3ce10b4cc825b77592720c6f6b726e9|Tue Oct 09 17:27:19 CEST 2012|Add a benchmark comparing CRC32 and Adler32 hashing using the Checksum API directly and using the common.hash API. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=34984248|0|0|0|314|2788|237|81|15|1|4|0|
ec36ee10cd3b2e9d30b851de9ad8c98cbf194150|Wed Oct 10 00:22:09 CEST 2012|Miscellaneous cleanup. - Fixed Findbugs @Nullable problems. - Fixed Javadoc warnings. - Fixed Unsigned* doc copypasta, and generally made it more consistent. - Documented exceptions in Uninterruptibles. - Used NPT.setDefault instead of an checkNotNull call for newEnumSet. - Added Abstract*Service explicit constructors and docs. - Fixed <p><b>Note</b></p> in SourceCodeEscapers. - Fixed "to be be" in cartesianProduct. - Fixed }} in RetryingCallable doc. - Fixed weird indent on call to createTestSuite. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35230825|0|0|10|314|2788|237|81|20|88|6|2|BC[kind=CONSTRUCTOR_NOW_PROTECTED, impactedSymbol=com.google.common.util.concurrent.AbstractIdleService.<init>(), newSymbol=com.google.common.util.concurrent.AbstractIdleService.<init>()],BC[kind=CONSTRUCTOR_NOW_PROTECTED, impactedSymbol=com.google.common.util.concurrent.AbstractScheduledService.<init>(), newSymbol=com.google.common.util.concurrent.AbstractScheduledService.<init>()]
a91d5ce5b93688a9ec9c1e156fa52c26a959a25d|Wed Oct 10 00:26:29 CEST 2012|Remove obsolete maven configuration which used to merge in METADATA.MF files into the jar, but no longer needs to, since maven will just scoop up the created METADATA.MF produced by the osgi bundle generator. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35231748|0|0|0|314|2788|237|81|25|2|4|0|
fedcbe374bd92d99b27f4c398b16fa01292adb78|Wed Oct 10 00:30:45 CEST 2012|Remove scope=provided for jsr305. http://code.google.com/p/guava-libraries/issues/detail?id=1152|0|0|0|314|2788|237|81|14|1|4|0|
e025e50d47345efec091ebca84e001143105430d|Wed Oct 10 16:49:34 CEST 2012|Add a special case for ImmutableSet.copyOf(EnumSet) delegating to Sets.immutableEnumSet. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35258318|0|0|3|314|2788|237|81|15|60|6|0|
70087c1ce633f5339d709c3ad6335dc37274edd9|Fri Oct 12 18:45:26 CEST 2012|Added null tests against return values of MoreExecutors and Futures|0|0|2|314|2788|237|81|24|53|4|0|
ad86ba28f20b0ea39ed2f8accf1b956422809f0d|Fri Oct 12 18:50:03 CEST 2012|Add LegacyHashing.fprint96() (aka, the first 12 bytes of the SHA-1 hash). Allow a MessageDigestHashFunction to return a subset of it's digest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35289881|0|0|1|314|2788|237|81|17|10|4|0|
d9bff98af8483d76a52fbfd7228a656532aa4532|Fri Oct 12 18:54:29 CEST 2012|Try to improve Multimap class docs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35290017|0|0|2|314|2788|237|81|16|59|7|0|
31eea6c64a866768951935652d824429aeba3e9f|Fri Oct 12 18:59:13 CEST 2012|Fix javadoc of ClassSanityTester by replacing 'public' with 'non-private'. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35290790|0|0|0|314|2788|237|81|20|1|5|0|
72a25f66b25db2c957bf8f287c2e54baf418d514|Fri Oct 12 19:03:36 CEST 2012|Rewrite HashBiMap to share entries between the forward and backward maps, yielding ~38% savings on memory.|0|0|1|314|2798|237|81|17|48|9|14|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardHashCode(), newSymbol=],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ForwardingMap.containsKey(java.lang.Object), newSymbol=com.google.common.collect.HashBiMap.containsKey(java.lang.Object)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardIsEmpty(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardContainsKey(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardRemove(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardToString(), newSymbol=],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ForwardingMap.get(java.lang.Object), newSymbol=com.google.common.collect.HashBiMap.get(java.lang.Object)],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.collect.HashBiMap, newSymbol=com.google.common.collect.HashBiMap],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardEquals(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardContainsValue(java.lang.Object), newSymbol=],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ForwardingMap.size(), newSymbol=com.google.common.collect.HashBiMap.size()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardClear(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.AbstractBiMap.delegate(), newSymbol=]
3bf993770c365d6b77688efcd679539a4285e3d5|Fri Oct 12 19:08:07 CEST 2012|fix toString, which was missing maximumSize (reported by François Vinassac) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35325729|0|0|1|314|2798|237|81|18|49|6|0|
457c2bc7ff83e9b10d8ece8a53d0dd7d3d734f6f|Fri Oct 12 19:21:03 CEST 2012|Give CharMatcher.apply() the same treatment as Range.apply() etc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35346388|0|0|1|314|2798|237|81|18|13|5|0|
f46a285c91b2b08771d3c5e07e1050fc78d4bde1|Mon Oct 15 17:53:30 CEST 2012|Basic implementation of ImmutableMap.asMultimap() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35373012|0|0|1|314|2799|237|81|17|49|7|0|
b9e7802ee61a79dac3a698beab94fd5a72ee5cdd|Wed Oct 17 19:47:19 CEST 2012|Add GWT src-super for HashBiMap change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35367257|0|0|0|314|2799|237|81|16|1|6|0|
4e9879bdc324a84617872f9cc2a321b7cde5bce1|Wed Oct 17 19:48:43 CEST 2012|Add MoreExecutors.platformThreadFactory(), an AppEngine-aware version of Executors#defaultThreadFactory.|0|0|3|314|2800|237|81|15|49|8|0|
2769e8fed843ff5fb701fda510d3012bff63e495|Wed Oct 17 19:49:25 CEST 2012|Minor javadoc cleanup. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35431916|0|0|0|314|2800|237|81|19|2|6|0|
e23af4d40fb9d2951888369d7ba27f58f64775fa|Wed Oct 17 19:50:06 CEST 2012|Give the thread running in the default ScheduledExecutorService for the AbstractScheduledService a name.  This follows the pattern that AbstractExecutionThread uses. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35433849|0|0|1|314|2801|237|81|17|39|7|0|
b14568dd0d3facf181727b99ffd3950925d2e6cb|Wed Oct 17 19:51:30 CEST 2012|Update Mozilla PSL. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35437775|0|0|1|314|2801|237|81|26|37|4|0|
c7151beeaf6399cfe596775f8eab36e4e1640cc3|Wed Oct 17 19:54:16 CEST 2012|Rollback MoreExecutors.plaformThreadFactory(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35478665|0|0|3|314|2800|237|81|31|52|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.MoreExecutors.platformThreadFactory(), newSymbol=]
59bf3c9e069e17a3f28dc0ca5d6bb807014deaa3|Wed Oct 17 19:56:23 CEST 2012|Add ignoreClasses(Predicate) to AbstractPackageSanityTests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35488015|0|0|0|314|2800|237|81|23|8|37|0|
15b7359c9765ab222c34e35d20ffde5dc3dc5c2b|Wed Oct 17 19:57:03 CEST 2012|A few small cleanups to use utility classes in c.g.c.collect ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35489898|0|0|3|314|2800|237|81|18|60|5|0|
53a2bbfe463d7e91148b206b6debd3caaad93d2f|Wed Oct 17 19:57:43 CEST 2012|Adding the IDN ccTLD for Kazakhstan that is implemented by IANA (http://www.iana.org/domains/root/db) but not yet in the Mozilla names file. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35492306|0|0|1|314|2800|237|81|20|44|5|0|
e31d42fe93b278a4f44665802e692f5b9e7f7426|Wed Oct 17 19:59:12 CEST 2012|Special-case ImmutableMap.copyOf(EnumMap). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35504772|0|0|3|314|2800|237|81|20|73|7|0|
bd0f0134d2b14d8126f91a14d7c1ef98302a0741|Wed Oct 17 20:00:05 CEST 2012|Rename AbstractExecutionThreadService.getServiceName to serviceName to be more consistent with other Service methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35510047|0|0|1|314|2800|237|81|24|12|4|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.getServiceName(), newSymbol=]
ba0c31c14a7c689334b0f4843b7929eac447679f|Wed Oct 17 20:00:48 CEST 2012|Two small service cleanups. 1. Make AbstractIdleService.getServiceName protected (instead of private) and rename to serviceName 2. Have serviceManager log service failures at SEVERE and also log service terminations at INFO level. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35524121|0|0|1|314|2801|237|81|15|11|5|0|
0e74ad0a205a9dc9925a097ccd4c831af10aea2d|Wed Oct 17 20:41:32 CEST 2012|Remove README.maven, which is no longer relevant.|0|0|0|314|2801|237|81|14|1|6|0|
f75fbdcc8c66deb3da30f809780850a2612de4d8|Thu Oct 18 20:47:04 CEST 2012|Remove the State parameter from AbstractIdleService.executor.  This parameter is redundant with the value of the state() method at the times the method is called.  So it can be removed without removing functionality and it brings this method (more) in line with AbstractExecutionThreadService.executor and AbstractScheduledService. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35573254|0|0|1|314|2801|237|81|14|9|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractIdleService.executor(com.google.common.util.concurrent.Service$State), newSymbol=]
1d7e8094c834ba5468a887e947f1fed941bf35d2|Thu Oct 18 20:47:51 CEST 2012|Cancelling a successfulAsList() Future should not produce an exception (even if that exception is merely logged). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35580495|0|0|2|314|2801|237|81|15|47|4|0|
372aa2bc1636fb197107a10452c21dc5d7ff2b49|Thu Oct 18 20:48:40 CEST 2012|Add more thorough tests to MultimapTestSuiteBuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35614504|0|0|0|314|2801|237|81|23|2|6|0|
21b1788ae0640a3c7f12bb6246c7a68b7c9f698e|Thu Oct 18 20:50:07 CEST 2012|Second try at adding MoreExecutors.platformThreadFactory(). Now if ThreadManager.currentRequestThreadFactory() throws, we fall back to Executors.defaultThreadFactory(). In particular, this happens when AppEngine is running in this JVM, but there is no AppEngine context for the current thread (i.e. we're "outside" appengine).|0|0|4|314|2802|237|81|20|52|5|0|
54a6c77084316f6783f9552fa4dc48a631e15327|Fri Oct 19 20:14:22 CEST 2012|Revert GWT emulation of HashBiMap to simpler version using two HashMaps that's better for GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35829480|0|0|0|314|2802|237|81|15|1|4|0|
f25703b0aac57d3a5fa290d87e90bfe54e635dc2|Mon Oct 22 21:48:12 CEST 2012|Allow ImmutableSortedMap.naturalOrder() to accept a <K extends Comparable<? super K>>, since the javac bug appears to be fixed? ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35876909|0|0|2|314|2802|237|81|17|49|8|4|BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.collect.ImmutableSortedSet.reverseOrder(), newSymbol=com.google.common.collect.ImmutableSortedSet.reverseOrder()],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.collect.ImmutableSortedSet.naturalOrder(), newSymbol=com.google.common.collect.ImmutableSortedSet.naturalOrder()],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.collect.ImmutableSortedMap.reverseOrder(), newSymbol=com.google.common.collect.ImmutableSortedMap.reverseOrder()],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.collect.ImmutableSortedMap.naturalOrder(), newSymbol=com.google.common.collect.ImmutableSortedMap.naturalOrder()]
b0cbbf5aa492b86d67963e3be730164ad8857536|Mon Oct 22 21:49:26 CEST 2012|Migrate BiMap-filtering methods out of Labs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35880650|0|0|1|314|2805|237|81|24|72|9|0|
dec6db5cab54c56d7ebb86bd309dc49f103b3894|Mon Oct 22 21:52:53 CEST 2012|Adding ForwardingBlockingDeque, as it's a natural fit for Guava and something which is currently missing from the library. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35939897|1|0|0|315|2821|237|81|23|30|6|0|
59dbf4eaf7dcf4c07cb6d876c1d7c12e6ef8ba6a|Wed Oct 24 01:13:57 CEST 2012|Guava issue 1012: Sets.filter for NavigableSet ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35956146|0|0|2|315|2822|237|81|18|57|6|0|
807bf518b883ee1e2fe0d6b859c046e96471f5bc|Wed Oct 24 01:15:05 CEST 2012|Make ListeningScheduledExecutorService.schedule* return a ListenableFuture (Originally from CL 23008243 by way of CL 22474051) Make FakeScheduleExecutorService a ListeningScheduledExecutorService ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35973933|1|0|2|316|2826|237|81|21|47|4|4|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.schedule(java.util.concurrent.Callable<V>,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.util.concurrent.Callable<V>,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)]
7a6f520ee11370fd5e27f4ac0f87f65ebbbd5e7f|Wed Oct 24 01:16:51 CEST 2012|Tiny cleanups after cl 35973933. Fixed a spurious character that snuck in and extra spacing. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=35980335|0|0|2|316|2826|237|81|15|44|4|0|
08ea2736b4529e3ca5b6bc01b6c580c8c480f3ea|Wed Oct 24 01:17:51 CEST 2012|Break up Collection test suites and put tests for a class in...the tests for that class.|0|0|0|316|2826|237|81|21|1|4|0|
ff722c806fd9a7a5710b9b4d30dca4f615b6e0cf|Wed Oct 24 01:18:56 CEST 2012|Automated g4 rollback of changelist 35980335.|0|0|2|316|2826|237|81|21|47|5|0|
0be8ed786405c18b16722621a25219aa3ea95a7c|Wed Oct 24 01:19:46 CEST 2012|Automated g4 rollback of changelist 35973933.|0|1|2|315|2822|237|81|16|46|4|5|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.ListenableScheduledFuture, newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.util.concurrent.Callable<V>,long,java.util.concurrent.TimeUnit), newSymbol=java.util.concurrent.ScheduledExecutorService.schedule(java.util.concurrent.Callable<V>,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit), newSymbol=java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit), newSymbol=java.util.concurrent.ScheduledExecutorService.schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit), newSymbol=java.util.concurrent.ScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)]
cc85d09a69713574da89f12ff881cb91fa15185b|Wed Oct 24 01:22:28 CEST 2012|Guava issue 1120. Remove ThreadLocal value in EventBus rather than setting to false. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36161462|0|0|1|315|2822|237|81|14|55|4|0|
e75a42193e415add82f5249605254e1a430978ff|Wed Oct 24 01:24:15 CEST 2012|Fix up javadocs to say "{@link Foo} instances" instead of "{@link Foo}s". (Same with {@code ...}). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36168403|0|0|8|315|2822|237|81|19|71|8|0|
8e98c0f9af588a9a6458a68c2d9ddba5452d4f64|Wed Oct 24 01:25:51 CEST 2012|Add a message to EOFExceptions thrown by ByteStreams.readFully and skipFully. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36182453|0|0|1|315|2822|237|81|18|14|4|0|
e0d14af3151259d3f93ab503099d012c2f90537e|Wed Oct 24 01:27:55 CEST 2012|Allow for arbitrary orderings in tests for lists, rather than assuming insertion order. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36192794|0|0|0|315|2822|237|81|17|1|4|0|
d8aed8e6507f34de33c89434bcb64f7137112f64|Wed Oct 24 01:29:02 CEST 2012|Add tests for ImmutableMap.{keySet,entrySet,values}.asList ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36194340|0|0|0|315|2822|237|81|16|1|6|0|
410a86e7c3abb43af53cfbe2be2b706d91ff141a|Wed Oct 24 01:29:47 CEST 2012|Sanity test for a known bloom filter and false positives. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36200843|0|0|0|315|2822|237|81|16|2|5|0|
9c9cb7da27bfcabd87931b46dbd48858ceefb5e7|Thu Oct 25 00:04:54 CEST 2012|Fix precondition error message to use %s instead of %d (which is not supported by the preconditions formatter). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36322003|0|0|1|315|2822|237|81|15|54|4|0|
3c7fe205b0bef1eae7a4ce013ae909164bbe9874|Thu Oct 25 00:05:40 CEST 2012|Add ImmutableMultiset.asList() tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36363737|0|0|0|315|2822|237|81|16|1|6|0|
5d1830f735d38e545fdc495886e66e903f5ad53e|Thu Oct 25 21:02:29 CEST 2012|Specify the behavior of Hashers after Hasher#hash() has been called. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36368626|0|0|1|315|2822|237|81|14|5|4|0|
60a4fc580248199add9059979578f757f32d0b88|Thu Oct 25 21:03:20 CEST 2012|Add an InternetDomainName test that confirms proper behavior when "under" TLD patterns overlap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36371550|0|0|0|315|2822|237|81|13|1|4|0|
7ab7f86540743a8cfa199c79e7725c3423fc7f73|Thu Oct 25 21:04:09 CEST 2012|Add tests for ImmutableSortedMap.{entrySet,keySet,values}.asList.|0|0|0|315|2822|237|81|15|1|4|0|
954fb51d70bd165c73f646cc1405ccbeef911c8e|Thu Oct 25 21:04:58 CEST 2012|Improve Hasher docs about Hasher.putChar('a').putChar('b').hash() being equivalent to Hasher.putString("ab").hash(). Add a test that demonstrates this behavior. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36383791|0|0|1|315|2822|237|81|17|6|6|0|
a526a03775b030d15ad29e0629871bf1bbd306ca|Thu Oct 25 21:09:08 CEST 2012|Deprecate Closeables.closeQuietly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36487308|0|0|1|315|2822|237|82|15|7|5|0|
012065203b428fff0b5a464ba878216805b5da43|Thu Oct 25 21:09:56 CEST 2012|Add ImmutableListCreationBenchmark to help evaluate the utility of pre-sized builders. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36498026|0|0|0|315|2822|237|82|15|2|5|0|
f877b7159836ffeb3a66f86e1308bd0b58ae2f8e|Thu Oct 25 21:11:00 CEST 2012|Change ImmutableRangeSet.Builder to reject overlaps ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36498240|0|0|1|315|2822|237|82|16|39|6|0|
a52dd72a0537366f7a96a9f6ab9e042af1d80ae1|Thu Oct 25 21:11:45 CEST 2012|Add elementSet and entrySet tests to MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36498472|0|0|1|315|2822|237|82|17|49|4|0|
85d2e6894a747bbcc39ac5feaecec89226446499|Fri Oct 26 22:12:57 CEST 2012|Migrate IRangeMap into RangeMap's position.|2|0|1|319|2857|237|82|21|43|4|0|
ca5b04277d9c2b0606dc6974078ce3b06bab1967|Fri Oct 26 22:14:12 CEST 2012|Test SortedMultiset.elementSet() with a SortedSetTestSuiteBuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36535008|0|0|0|319|2857|237|82|20|1|5|0|
acf7e99424c7eecbb85d5e6d64fb76be6f8fb994|Fri Oct 26 22:15:31 CEST 2012|Split MultisetCollectionTest suites into the appropriate test classes ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36537481|0|0|0|319|2857|237|82|16|1|4|0|
0bc1a0c0710670c9ef940086c61e70bc4a67f429|Fri Oct 26 22:16:43 CEST 2012|Add tests for ImmutableSortedMultiset asList views ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36537737|0|0|0|319|2857|237|82|15|1|4|0|
be52ad577ab4a5c0ad8aec2a828d611c5bed2516|Fri Oct 26 22:18:02 CEST 2012|Write the initial, skeletal BaseEncoding API. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36544759|1|0|0|320|2870|237|82|16|14|6|0|
6fb125be7d839839562d3e9a19c8dc40d6e54265|Fri Oct 26 22:19:19 CEST 2012|Make TreeMultiset.elementSet() return a NavigableSet (albeit not in GWT).  Dependent on cl/36499908. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36545396|0|0|2|320|2871|237|82|18|50|5|1|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.AbstractSortedMultiset.elementSet(), newSymbol=com.google.common.collect.TreeMultiset.elementSet()]
8008df3b0276365523a71e164bf95d84017adb75|Fri Oct 26 22:21:55 CEST 2012|Avoid allocating for Multimap.removeAll(absentKey) implementations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36667564|0|0|4|320|2871|237|82|20|49|4|0|
ba9aa6be61a9de6096a0d571ae9fde97e57d539a|Fri Oct 26 22:23:10 CEST 2012|Add RangeMap.getEntry method.|0|0|5|320|2874|237|82|17|49|7|1|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.RangeMap, newSymbol=com.google.common.collect.RangeMap.getEntry(K)]
b76ffbeab2394774f8e0efc13205b38f63d1513e|Fri Oct 26 22:24:13 CEST 2012|Add Closer as package-private in common.io. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36681931|1|0|0|320|2874|237|82|17|13|5|0|
c1a62df76bea4d050765c6ccdbe2bfe7ec4b748d|Mon Oct 29 19:01:54 CET 2012|Release a couple io test methods.|0|0|0|320|2874|237|82|18|1|5|0|
450095182d466a46e67763af2fbfd98399ccb566|Mon Oct 29 19:05:19 CET 2012|Remove ImmutableRangeSet.all() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36698163|0|0|1|320|2874|237|82|16|37|6|0|
fde657f56c4d75717ffcce670230782d84906c89|Mon Oct 29 19:08:46 CET 2012|Change ByteStreams, CharStreams and Files to use Closer.|0|0|4|320|2874|237|82|16|21|5|0|
9dee58b8207f65d4fc9c98ec49417c91fca3a792|Mon Oct 29 19:12:03 CET 2012|Make BaseEncoding @GwtCompatible. NOTE: This CL accidentally removes test data files, breaking tests. We will fix this shortly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36707785|0|0|1|320|2874|237|82|19|19|5|0|
d96e425a451ee861b29ac9ef50a14513e2d57b44|Mon Oct 29 19:15:22 CET 2012|Reorganize tests for filter methods on Iterables, Collections, Sets, etc. NOTE: This CL introduces an empty FilteredCollectionsTest class, which Maven's test runner doesn't like. We'll fix it shortly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=36708171|0|0|1|320|2874|237|82|21|55|7|0|
d980bcf3ccbe39f699637839ad33a69ede574501|Mon Oct 29 19:19:02 CET 2012|Comment seemingly-unnecessary bitwise mask in UnsignedInteger. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37025851|0|0|1|320|2874|237|82|20|11|4|0|
5efaa21fd4c318104bd5ef29f9979651f78fc3ba|Mon Oct 29 19:22:11 CET 2012|Add copyright information to ported Murmur hash functions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37032710|0|0|2|320|2874|237|82|14|12|5|0|
8613d366c1f379a4b75ec16a6e6ed03bb8f9ab4f|Mon Oct 29 20:08:56 CET 2012|Rename com.google.common.io.Io-gwt to "com.google.common.io.Io" to follow the pattern used in our other packages. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37045666|0|0|0|320|2874|237|82|16|2|7|0|
b7bcb4eb4d45aa80136785809f4f92de4c6c6c91|Mon Oct 29 20:12:00 CET 2012|Try to improve Splitter documentation ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37048099|0|0|1|320|2874|237|82|17|12|5|0|
feba326ca105f08f51b9b2f018859b82d8e6586d|Mon Oct 29 20:15:56 CET 2012|Some javadoc improvement of Invokable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37049407|0|0|2|320|2874|237|82|17|42|5|0|
92b1048dd979e3af613cb5df38c508cbeeab71bc|Mon Oct 29 21:10:46 CET 2012|Make FilteredCollectionsTest pass under Maven. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37049722|0|0|0|320|2874|237|82|13|1|6|0|
d81f0133c0a334c381956cc67f595f4a03d0b07e|Mon Oct 29 22:21:48 CET 2012|Re-export testdata files into Guava after CL 36707785. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37065032|0|0|0|320|2874|237|82|22|1|5|0|
9857139e4732897f1e269f16bdf1d5a9a513062e|Mon Oct 29 22:25:01 CET 2012|Forbid empty ranges in ImmutableRangeMap.Builder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37065199|0|0|1|320|2874|237|82|44|41|4|0|
0dbf979ceacfa3006bd48330aff35e8c4e7fe02f|Mon Oct 29 22:28:02 CET 2012|Add a package-private pollNext helper, using it for a few pollFirst/pollLast methods here and there ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37066519|0|0|3|320|2874|237|82|17|52|10|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.AbstractCollection.retainAll(java.util.Collection<? extends java.lang.Object>), newSymbol=com.google.common.collect.Sets$ImprovedAbstractSet.retainAll(java.util.Collection<? extends java.lang.Object>)]
4dfc92182081e9695d38772ba528faf7fef75ff6|Mon Oct 29 22:56:40 CET 2012|Add RangeMap.span(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37068105|0|0|3|320|2877|237|82|18|43|6|1|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.RangeMap, newSymbol=com.google.common.collect.RangeMap.span()]
69ad96b719d7cd3d872a948d7454f17b816a21c2|Tue Oct 30 16:14:01 CET 2012|Change Hashing.smear to use MurmurHash3's mixK1, which appears slightly faster and more effective for use in open-addressed hash tables. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37090965|0|0|1|320|2877|237|82|18|31|6|0|
961b89eb28dc4bb7eb38efe9cbbb4202c859980c|Thu Nov 01 21:01:49 CET 2012|Add TestingExecutors.noOpScheduledExecutor to common/util/concurrent/testing. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37540391|0|0|1|321|2884|237|82|15|9|5|0|
e9d5cc93fe6c07b927bede3dee356030494529e3|Thu Nov 01 21:45:25 CET 2012|Export TestingExecutorsTest to Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37556826|0|0|0|321|2884|237|82|14|1|8|0|
fa5250485121df9c316831f37b44d6ece7dfbec9|Fri Nov 02 17:46:42 CET 2012|This CL fixes method calls that incorrectly ignore the return value. Method calls with no side-effect are pointless if you ignore the value returned. Also, this error is triggered if the return value of a method that has been annotated with @CheckReturnValue is ignored. This an automated fix using error-prone.|0|0|1|321|2884|237|82|13|13|6|0|
c50a94587b677f2d6f50c41c2d2913b272e6505b|Fri Nov 02 18:35:33 CET 2012|Add RangeSet.span() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37651646|0|0|3|321|2884|237|82|18|46|5|0|
2fceef62aa2a37e656e91993676738233fe0bfda|Mon Nov 05 17:33:44 CET 2012|This CL fixes method calls that incorrectly ignore the return value. Method calls with no side-effect are pointless if you ignore the value returned. Also, this error is triggered if the return value of a method that has been annotated with @CheckReturnValue is ignored. This an automated fix using error-prone.|0|0|1|321|2884|237|82|18|69|8|0|
765ec48ae280f38b1e7996445d9db9914dcdfb3c|Mon Nov 05 17:36:57 CET 2012|Fix generics in Cache which are breaking the MOE build. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=37779427|0|0|1|321|2884|237|82|16|76|7|0|
7c886b3a863bbd418b8eadab7915618b2cc9abd8|Fri Nov 09 16:56:39 CET 2012|This CL fixes method calls that incorrectly ignore the return value. Method calls with no side-effect are pointless if you ignore the value returned. Also, this error is triggered if the return value of a method that has been annotated with @CheckReturnValue is ignored. This an automated fix using error-prone.|0|0|0|321|2884|237|82|16|2|7|0|
7a8e4a867899c77e535eb88250e2df0015b704ed|Fri Nov 09 16:59:56 CET 2012|Eliminate an unchecked cast from ImmutableSortedSet that previously generated unsuppressed warnings. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38034277|0|0|1|321|2884|237|82|15|40|4|0|
043e4f75cc56f564a0d0ca3345176e637de8469e|Fri Nov 09 17:06:51 CET 2012|Implement ImmutableRangeSet.asSet(DiscreteDomain). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38034818|0|0|3|323|2902|237|82|16|51|5|0|
bc8d4dfa32c015c67d0057ce66fc66ac8121b551|Fri Nov 09 17:16:38 CET 2012|Add Google-internal memory consumption tests for all top-level Multiset implementations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38035186|0|0|0|323|2902|237|82|17|2|5|0|
ae42810de5790eb2d4e91807e37dd50eb6582c98|Fri Nov 09 17:19:53 CET 2012|Add Google-internal memory consumption tests for Immutable{List,Set,Map,BiMap,SortedMap,SortedSet}. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38036087|0|0|0|323|2902|237|82|17|2|7|0|
960729e6012e9b310ba8407f85b31243f2679529|Fri Nov 09 17:23:05 CET 2012|Avoid the fragile assumption in SortedMapTestSuiteBuilder that all tested maps are Map<String, String> ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38041962|0|0|0|323|2902|237|82|20|2|4|0|
c9413a3729c7d86c36d1f28d14cda3a55360755e|Fri Nov 09 17:26:21 CET 2012|Add Google-internal memory consumption tests for all top-level Multimap implementation types. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38042089|0|0|0|323|2902|237|82|18|1|6|0|
d04f8d430879c4496fb6d7be64000df164dbceb0|Fri Nov 09 17:30:01 CET 2012|renames array fields with positive-length values, which are mutable, from ALL_CAPS to camelCase ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38043270|0|0|4|323|2902|237|82|18|18|6|0|
a4bd0dd6fbcc7cd349ebd7c2ded2f5509f7d2ca6|Fri Nov 09 17:33:20 CET 2012|Add HashFunction#hashObject() shortcut. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38044012|0|0|3|323|2903|237|82|17|18|4|1|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.hash.HashFunction, newSymbol=com.google.common.hash.HashFunction.hashObject(T,com.google.common.hash.Funnel<? super T>)]
4ce0db5ed152547ba298324fbe32cd087cdfd8c7|Fri Nov 09 17:36:41 CET 2012|Add Google-internal memory consumption tests for {Immutable,HashBased,TreeBased}Table. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38048228|0|0|0|323|2903|237|82|16|2|5|0|
36abf9172e9abe2eb736cc5cec10d100dbcd0450|Fri Nov 09 17:40:04 CET 2012|Add TreeRangeSet.create(RangeSet) "copy factory method" ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38049043|0|0|1|323|2903|237|82|17|38|6|0|
f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d|Fri Nov 09 17:43:50 CET 2012|Return a NavigableSet from TreeMultimap.get ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38054420|0|0|2|323|2904|237|82|17|50|4|2|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractSortedSetMultimap.get(K), newSymbol=com.google.common.collect.TreeMultimap.get(K)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.AbstractSortedSetMultimap.get(K), newSymbol=com.google.common.collect.TreeMultimap.get(K)]
6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd|Fri Nov 09 17:56:47 CET 2012|Make TreeMultimap.asMap() and keySet() return NavigableMap/NavigableSet, falling back to SortedMap/SortedSet on GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38143211|1|0|2|323|2904|237|82|17|55|4|2|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.TreeMultimap.asMap(), newSymbol=com.google.common.collect.TreeMultimap.asMap()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.TreeMultimap.keySet(), newSymbol=com.google.common.collect.TreeMultimap.keySet()]
c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b|Fri Nov 09 18:00:09 CET 2012|Rewrite ImmutableBiMap to save ~35% on memory consumption, following the ideas of our HashBiMap rewrite.|0|0|3|323|2904|237|82|21|50|4|0|
91634b6c9c2d65eae7bdd3928c884e58b86393f7|Fri Nov 09 18:03:28 CET 2012|Add streaming encoding and decoding to BaseEncoding. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38154034|1|0|1|323|2908|237|82|19|15|4|0|
fd40e3a91e6ef695a5d9db92a386842354b7cfca|Fri Nov 09 18:07:00 CET 2012|Compute CharMatcher constants lazily whenever possible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38170514|0|0|1|323|2908|237|82|17|11|5|0|
4ebac77ec8dc2ef20d9c86d829312e673e78df2a|Fri Nov 09 18:13:37 CET 2012|Add @since for withFallback. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38255463|0|0|1|323|2908|237|82|17|56|4|0|
9b9e688986783d94d61065dfe33bd780f3512d5b|Fri Nov 09 18:17:01 CET 2012|Guava issue 555: EnumMultiset.create(Iterable, Class) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38260896|0|0|1|323|2909|237|82|17|39|5|0|
9bfd9e929776a109b30b8796a23cf61d85165ba9|Fri Nov 09 18:20:19 CET 2012|Add a speculative size check to Iterables.elementsEqual, as per Guava issue 1183. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38262433|0|0|1|323|2909|237|82|18|53|6|0|
4cd9ad88cf9b2522561c1ed69f8f0f673d98897e|Fri Nov 09 18:33:59 CET 2012|This CL fixes method calls that incorrectly ignore the return value. Method calls with no side-effect are pointless if you ignore the value returned. Also, this error is triggered if the return value of a method that has been annotated with @CheckReturnValue is ignored. This an automated fix using error-prone.|0|0|0|323|2909|237|82|18|2|6|0|
017a5145ed8eaeac92ce997c679061b129f06ef4|Fri Nov 09 18:43:47 CET 2012|Add Maps.filter{Keys,Values,Entries}(NavigableMap, Predicate), since we added Sets.filter(NavigableSet, Predicate). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38357323|0|0|3|323|2912|237|82|21|71|9|0|
f0859c91b3e7740ba0423198d9c44ac9df72824a|Fri Nov 09 18:46:43 CET 2012|Changed Invokable to always return the source-view of parameters, even for non-static inner class constructors. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38361864|0|0|1|323|2912|237|82|24|41|7|0|
633d594394afc9f2da5b1e005bc39c7cb8b10044|Fri Nov 09 21:03:50 CET 2012|Add Crc8HashFunction to compute the CRC8. Relax restriction of >= 4 bytes for a HashCode instance. Add HashCode#padToInt Add HashCodes#fromByte ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38451830|1|0|4|323|2913|237|82|19|21|5|0|
074d64df15d82609b430a79b551b8378fb822128|Fri Nov 09 22:32:48 CET 2012|Add new UnsignedLong methods that we will shortly migrate to. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38454126|0|0|1|323|2919|237|82|17|13|4|0|
1365550fd8e9eb3d2f94cf38085c65cbfe447376|Fri Nov 09 22:36:10 CET 2012|Use HashFunction#hashObject shortcut. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38455777|0|0|1|323|2919|237|82|16|15|7|0|
c61612cdab133e819a311f488f4df5b732d22631|Fri Nov 09 22:39:24 CET 2012|Add ByteSource, ByteSink, CharSource and CharSink abstract classes and factory methods for creating various implementations of them.|5|0|4|328|2958|238|82|25|58|5|0|
33581e9571eb53d1052bf587c9f925092830b721|Mon Nov 12 19:22:09 CET 2012|Rewrite CacheBuilder removalListener docs a bit, removing some stale verbiage accidentally left over from GenericMapMaker, and being more clear about the requirement to use the returned reference. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38477912|0|0|1|328|2958|238|82|21|56|6|0|
2bbd22b0fecd010b73abc423f59879ea9a0679d9|Mon Nov 12 19:26:22 CET 2012|Use MessageDigest#clone() instead of MessageDigest#getInstance(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38480581|0|0|1|328|2958|238|82|16|11|4|0|
e477a21822c16eeea92195fbd07351a32e2b7263|Mon Nov 12 19:29:51 CET 2012|Adds com.google.common.hash.Crc32cHashFunction. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38480998|0|0|1|328|2957|238|82|15|12|4|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.Hashing.crc8(), newSymbol=]
d32629fa8393113714fe7aba16a84c9a5c90a285|Mon Nov 12 19:33:22 CET 2012|Re-write MessageDigestAlgorithmBenchmark using multiple @Params instead of different timeFoo() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38484757|0|0|0|328|2957|238|82|14|1|4|0|
b7878163534069f6811e55148629f4d8af820a1d|Mon Nov 12 19:40:19 CET 2012|Prepare for the same renamings for UnsignedInteger as in UnsignedLong ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38558333|0|0|1|328|2963|238|82|17|12|5|0|
d1d18c945c64c236642223ab0f915ef87597562b|Mon Nov 12 19:43:32 CET 2012|Remove HashCode#padToInt (package-private) and override HashCode#hashCode() instead ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38560921|0|0|3|328|2963|238|82|16|17|5|0|
9e63a9a917369de06ed131c15dccc686808c6cc8|Mon Nov 12 20:49:09 CET 2012|UnsignedLong.asUnsigned => UnsignedLong.fromLongBits ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38564991|0|0|0|328|2963|238|82|17|2|5|0|
2b769e0543155ac35b0edb98448d5d2cf4fa4018|Mon Nov 12 20:52:12 CET 2012|Make Crc8HashFunction @GoogleInternal, since Hashing.crc8 already is. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38565967|0|1|0|328|2963|238|82|14|1|6|0|
54ce130a2f1438cd94277d72e5deed843115def5|Thu Nov 15 18:33:53 CET 2012|Avoid rebuilding alphabet lookup tables, etc. in BaseEncoding ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38575425|0|0|1|328|2963|238|82|14|15|4|0|
aa602bf241c73f33a7a49cb42916960b52c57375|Thu Nov 15 18:38:28 CET 2012|Test default Charset. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38579676|0|0|0|328|2963|238|82|16|1|4|0|
0f3e338f705291b1f2fad2216fe6dd2bdd3d553a|Thu Nov 15 19:01:34 CET 2012|Stop recommending the use of delimiters when hashing strings. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38631621|0|0|1|328|2963|238|82|15|5|6|0|
7396830c4c179496b2cc81d3c2fe86bd6bf675e3|Thu Nov 15 19:06:09 CET 2012|replace UnsignedInteger.asUnsigned() with UnsignedInteger.fromIntBits()|0|0|0|328|2963|238|82|16|2|4|0|
da4ca2f9535ccf93454ad7dc75165651f1c7e2c6|Thu Nov 15 19:10:53 CET 2012|Add useful toString() for BaseEncoding ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38649483|0|0|1|328|2963|238|82|17|19|5|0|
0330f712f56cc53633874e95bdc1203cf881eb85|Thu Nov 15 19:15:37 CET 2012|Fix bug in TreeRangeMap.asMapOfRanges().get(absentRange) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38651843|0|0|2|328|2963|238|82|19|70|9|0|
e231a8d44703c9e741a8ddd219929807341e6197|Thu Nov 15 19:20:16 CET 2012|Document the current behavior of ImmutableRangeSet.Builder, even if we might change that behavior later. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38653539|0|0|1|328|2963|238|82|22|48|5|0|
ae8b5739d3b7650808887b88104e0ed606d0bf7a|Thu Nov 15 19:24:55 CET 2012|Fix up Iterators#cycle(E...) docs. Add equality tests for HexString#encode, ByteArrays#toHexString, and HashCode#toString ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38654669|0|0|1|328|2963|238|82|18|44|6|0|
4c86ebcbb6d410a405de53a0940065819f1aeaf0|Thu Nov 15 19:30:00 CET 2012|Minor re-ordering of gwt module declarations|0|0|0|328|2963|238|82|17|1|5|0|
4fa056813cc1db3c594f0d0d8560d65c63c81b7d|Thu Nov 15 19:35:29 CET 2012|Add Longs.tryParse. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38720107|0|0|1|328|2964|238|82|15|20|4|0|
5b96fd5a6377e0d0a01b2f2da39196882043e62c|Thu Nov 15 19:46:21 CET 2012|Refactor AbstractMultimap into a separate AbstractMultimap and AbstractMapBasedMultimap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38726867|1|0|8|328|2958|238|82|21|83|6|10|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.containsEntry(java.lang.Object,java.lang.Object), newSymbol=com.google.common.collect.AbstractMultimap.containsEntry(java.lang.Object,java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.keys(), newSymbol=com.google.common.collect.AbstractMultimap.keys()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.hashCode(), newSymbol=com.google.common.collect.AbstractMultimap.hashCode()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.remove(java.lang.Object,java.lang.Object), newSymbol=com.google.common.collect.AbstractMultimap.remove(java.lang.Object,java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.isEmpty(), newSymbol=com.google.common.collect.AbstractMultimap.isEmpty()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.toString(), newSymbol=com.google.common.collect.AbstractMultimap.toString()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>), newSymbol=com.google.common.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.containsValue(java.lang.Object), newSymbol=com.google.common.collect.AbstractMultimap.containsValue(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.putAll(com.google.common.collect.Multimap<? extends K,? extends V>), newSymbol=com.google.common.collect.AbstractMultimap.putAll(com.google.common.collect.Multimap<? extends K,? extends V>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.keySet(), newSymbol=com.google.common.collect.AbstractMultimap.keySet()]
28bad546ee6c6944269622dff02150967cfbe669|Thu Nov 15 19:56:06 CET 2012|Deprecate UnsignedInteger methods that have been renamed. Add @CheckReturnValue to the arithmetic methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38728022|0|0|1|328|2958|238|88|20|12|4|0|
50be29b83f7567a13f995dfa1377d315051ebd42|Thu Nov 15 20:00:57 CET 2012|Deprecate old UnsignedLong methods ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38728092|0|0|1|328|2958|238|94|14|13|5|0|
f6e694d95fab9147bdc4cef7cd608623d3e6a3de|Thu Nov 15 20:05:47 CET 2012|Cache the upperCase() and lowerCase() results in the Encoding object itself, not the alphabet, so as to save an allocation from each call to lowerCase() or upperCase() after the first. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38731220|0|0|1|328|2958|238|94|16|17|6|0|
a45095a38959a46331f3bdcb18ec37fec835e4f4|Thu Nov 15 20:10:28 CET 2012|Implement Multisets.filter(Multiset, Predicate) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38740003|0|0|2|328|2959|238|94|17|57|4|0|
f2055926f98703f09e4f5ef9a6a78f3fca09ddc9|Thu Nov 15 20:14:52 CET 2012|Delete of(E[]) from the GWT copy of ImmutableList. The "plain Java" copy has been gone for a long time. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38793793|0|0|0|328|2959|238|94|17|1|4|0|
6f169cccf745b91875f33d33bef993d6ce224dc7|Mon Nov 19 12:41:58 CET 2012|Add more class-level documentation and examples for RangeSet. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38862063|0|0|2|329|2974|238|94|15|43|6|0|
76067938a74d86021f3577b45b366390c34c4cf4|Mon Nov 19 12:46:31 CET 2012|Clarify what does and doesn't count as a lookup in CacheStats. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38862581|0|0|1|329|2974|238|94|18|41|4|0|
5cf5612479b79c6c9ddb76024229119b4dfdf250|Mon Nov 19 12:51:05 CET 2012|LinkedHashMultimap rewrite ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=38863555|0|0|1|329|2974|238|94|15|50|7|0|
19d312977252b2f494f6997d5dd881f349af6292|Mon Nov 19 12:55:29 CET 2012|Changed Futures.addCallback() not to call onFailure() when onSuccess() throws.|0|0|1|329|2974|238|94|17|50|5|0|
1d10f562e30a1d314ced9d3bdf510891878baad5|Wed Nov 21 20:30:54 CET 2012|Rewrite Multimaps.transform* in terms of AbstractMultimap, and use MultimapTestSuiteBuilder on it directly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39050523|0|0|1|329|2974|238|94|18|64|4|0|
c1d642e0ceb6106b0e9b35583069e3831b966abf|Wed Nov 21 20:32:27 CET 2012|Make CharMatcher.toString() consistently format characters as \uXXXX. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39158530|0|0|1|329|2974|238|94|20|11|6|0|
d982bee516bf929e9d45cd9fe699cbaf72cf62ac|Fri Nov 23 22:01:50 CET 2012|Optimize LongMath.sqrt.|0|0|1|329|2974|238|94|17|14|5|0|
5e2f597c1f2de49630a82c5488da7d5a406b69bd|Fri Nov 23 22:02:48 CET 2012|Minor cleanups: remove a gratuitous StringBuilder in CharMatcher, and up the ImmutableSortedMultiset memory consumption limit, which is causing flaky failures ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39204961|0|0|1|329|2974|238|94|15|12|5|0|
e69bcbf33dcbf5680d232c8f2193a9eb671ffc74|Fri Nov 23 22:03:41 CET 2012|Optimize LongMath.binomial by accumulating into separate numerator and denominator variables whenever overflow is known to be impossible, as in the BigIntegerMath implementation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39205160|0|0|1|329|2974|238|94|17|16|6|0|
1404ead2c8e86628e4a4f3cea9441d80d220bb96|Mon Nov 26 18:06:55 CET 2012|Further LongMath.sqrt optimizations, to show that a simple truncation is in fact sufficient.  (This actually simplifies the proof.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39276105|0|0|1|329|2974|238|94|17|18|5|0|
6fe6d5c28d561ad6b830d0945769c8e0a1322b57|Tue Nov 27 16:08:21 CET 2012|Clarify docs on UnsignedLong.fromLongBits/UnsignedInteger.fromIntBits.  Add UnsignedLong.valueOf(long), which rejects nonnegative values. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39281179|0|0|2|329|2975|238|94|16|13|4|0|
6506c4d1e0237dc5a3c875d2d10c329e902c5523|Wed Nov 28 19:13:47 CET 2012|Implement ImmutableRangeMap.subRangeMap(Range) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39333730|0|0|1|329|2976|238|94|15|37|6|0|
35fbd05c6f9d09db66b98285b00b77bccd3fc468|Wed Nov 28 19:20:04 CET 2012|Add subRangeMap to the RangeMap interface, and an implementation for TreeRangeMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39377500|0|0|4|329|2978|238|94|19|82|9|1|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.RangeMap, newSymbol=com.google.common.collect.RangeMap.subRangeMap(com.google.common.collect.Range<K>)]
f0943b868f667f8f8f2207373eea30989db6e2d0|Wed Nov 28 19:21:19 CET 2012|Implement ImmutableRangeSet.subRangeSet(Range). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39377650|0|0|1|329|2979|238|94|21|44|7|0|
406d0d589b20a5fea174d5163e4671df18bc04ec|Thu Nov 29 18:35:31 CET 2012|Swap out truth 0.7 (and older source version) and swap in 0.10 with gwt support Lots of import changes poached from: replace_string "import org.junit.contrib.truth" "import org.truth0" replace_string "import static org.junit.contrib.truth" "import static org.truth0" manual search/replace containsAnyOrder() -> has().allOf() manual search/replace containsInOrder() -> has().allOf().inOrder() sometimes s/r contains*Order() -> has().item or has().allFrom(){.inOrder()} as appropriate other manual fixes|0|0|0|329|2979|238|94|49|1|5|0|
2eabf213074afc5b2483c687598e6a3762c0ec5f|Thu Nov 29 18:37:08 CET 2012|Rewrite Multimaps.filter implementations, factoring out a significantly more efficient Multimaps.filterKeys implementation in the process. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39394883|3|0|2|329|2979|238|94|45|83|7|0|
dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f|Thu Nov 29 18:38:54 CET 2012|Opensource ServiceManager!|1|0|6|331|2999|238|94|29|79|5|1|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.util.concurrent.Service, newSymbol=com.google.common.util.concurrent.Service.failureCause()]
160a3a2362b8a76a6b832f1ed7a894a18158190f|Thu Nov 29 18:40:19 CET 2012|Add an example to the javadocs for ThreadFactoryBuilder#setNameFormat ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39429195|0|0|1|331|2999|238|94|20|15|8|0|
2459638f76d1e57824acfc013a3b7a018ba74de1|Fri Nov 30 20:37:46 CET 2012|Change (most) methods in common.io that either return or take Input/OutputSuppliers to delegate to Sources/Sinks by wrapping suppliers as sources/sinks and vise versa. This also deprecates ByteStreams.getChecksum() and Files.getChecksum(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39480085|0|0|4|331|2999|238|96|18|55|8|0|
444e072ffe3c91da19f6e09474e05cc06536e024|Mon Dec 03 18:09:39 CET 2012|Change HashCode from 32-bit to 8-bit minimum in docs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39493754|0|0|1|331|2999|238|96|16|10|5|0|
ebdcde108db6ebb6c92537c36a86eaa71a429ea1|Mon Dec 03 18:13:11 CET 2012|Forwarding classes out of @Beta (except standardFoo() methods). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39494356|0|0|3|331|2999|238|96|17|52|12|0|
997ea518b02d5fc82d749355873830ecc5da2a67|Mon Dec 03 18:16:40 CET 2012|Small fixes to some incorrect @since tags. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39494615|0|0|1|331|2999|238|96|19|59|7|0|
824a535f4fec7e2c9dedfd6b4192bb76a362a2a5|Mon Dec 03 18:20:24 CET 2012|Remove @Beta from: -Ordering.{lea,greate}stOf(Itera{ble,tor}) -Ordering.max/min(Iterator) -Sets.synchronizedNavigableSet -Maps.synchronizedNavigableMap -Maps.filter{Values,Keys,Entries} -Maps.transform{Values,Keys,Entries} ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39495484|0|0|3|331|2999|238|96|21|93|12|0|
147609aad19beeb4e98e8d19a258101e62d05833|Mon Dec 03 18:24:02 CET 2012|Remove @Beta from: -BoundType -FluentIterable (except toSortedList()) -Range (except asSet()) -SortedMapDifference -Immutable{Set,List,}Multimap.inverse() -ImmutableMultimap.Builder.order{Value,Key}sBy ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39495506|0|0|7|331|2999|238|96|27|63|8|0|
170f192dea1a2b232b7fae8f5230a1dd502b441b|Mon Dec 03 18:27:16 CET 2012|Remove @Beta from: -Objects.ToStringHelper#omitNullValues -Optional.or(Optional) -Optional.transform ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39495606|0|0|2|331|2999|238|96|20|11|5|0|
8e124bdca98fd41cae908fe07cf1fecfc8625379|Tue Dec 04 16:32:01 CET 2012|Reformatting from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39581002|0|0|0|331|2999|238|96|16|2|6|0|
31d35bb6dd5cbb958d71bf5e0a38fc19aa35eb80|Tue Dec 04 16:35:28 CET 2012|Merge DiscreteDomains into DiscreteDomain, in advance of migration. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39581939|0|0|1|331|3001|238|96|17|33|7|0|
42eec0d2dfb20f5695babe0583bf27a248391c98|Tue Dec 04 16:38:32 CET 2012|Improve exception message for Stopwatch start() and stop(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39593299|0|0|1|331|3001|238|96|16|8|5|0|
52bef6730688f74c0312ab396fcc6c6931070af6|Tue Dec 04 17:12:33 CET 2012|Mention "hexadecimal" in BaseEncoding.base16(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39617876|0|0|1|331|3001|238|96|15|17|6|0|
f7bcd87198cdbaf9cad86ff9f5619654ac7d02ec|Tue Dec 04 23:39:48 CET 2012|Add Stopwatch#elapsed in prep for migration from elapsedTime() and elapsedMillis(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39620819|0|0|1|331|3002|238|96|16|8|8|0|
7002f6efa3a10d614063c8e4333c249c89425247|Tue Dec 04 23:42:49 CET 2012|Remove @Beta annotations from definitely stable standardXXX methods from ForwardingXXX classes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39629391|0|0|9|331|3002|238|96|20|51|10|2|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.AbstractSet.removeAll(java.util.Collection<? extends java.lang.Object>), newSymbol=com.google.common.collect.Sets$ImprovedAbstractSet.removeAll(java.util.Collection<? extends java.lang.Object>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.AbstractCollection.retainAll(java.util.Collection<? extends java.lang.Object>), newSymbol=com.google.common.collect.Sets$ImprovedAbstractSet.retainAll(java.util.Collection<? extends java.lang.Object>)]
133ffd3dd0d4967cb7f2d6f745b6661585c67b6b|Wed Dec 05 22:14:56 CET 2012|Add GWT compilation test. Separate testlib GWT files into guava-testlib/blackhole-gwt, where they can be ignored for the time being. (testlib already doesn't work under GWT.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39671586|0|0|0|331|3002|238|96|36|2|9|0|
824719231c4358700e669014a86987dea7341e3e|Wed Dec 05 22:17:59 CET 2012|Mark ServiceManager as Beta.  Service is Beta so it makes sense for this class.|0|0|1|331|3002|238|96|17|62|8|0|
5add864185a9582bebbb30f2566a6a466cbd75ea|Thu Dec 06 15:40:09 CET 2012|Add SetMemoryBenchmark ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39700123|0|0|0|331|3002|238|96|16|2|5|0|
6136894f7de5e93cfc355dd25f8174c2abc363f7|Thu Dec 06 15:43:00 CET 2012|New implementation of Objects.ToStringHelper:|0|0|1|331|3002|238|96|16|9|8|0|
57b068ec5d8cc962be3e90e173710091620ac626|Fri Dec 07 15:33:32 CET 2012|Shuffling in benchmark classes due to internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39747316|0|0|0|331|3002|238|96|16|2|4|0|
b4cf74aa3a56751f25ae09eb79b68e0656d40618|Fri Dec 07 15:36:41 CET 2012|Optimize collapseFrom and trimAndCollapseFrom so that they only allocate if necessary.  Add a few tests.  Remove the GWT workarounds for GWT bug 4491 since it appears to be fixed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39757514|0|0|1|331|3002|238|96|17|12|5|0|
581bda3236c66b003cbf834f5aeb8dcf3a6dbe1a|Mon Dec 10 18:14:03 CET 2012|Add SuppressWarnings for a couple places where a return value that shouldn't normally be ignored is ignored. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39777104|0|0|0|331|3002|238|96|17|2|6|0|
83c496dd2363e839b582d73dd41f4d869abd3f7e|Mon Dec 10 18:15:34 CET 2012|De-Betaify a slew of APIs in math, net and util/concurrent. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39793528|0|0|11|331|3002|238|96|22|71|5|0|
2cd9a6a7dc9b9097de02838ec25957a2234ae934|Mon Dec 10 18:17:30 CET 2012|Add MapMemoryBenchmark and SortedMapMemoryBenchmark. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39793649|0|0|0|331|3002|238|96|17|2|7|0|
1baad1a2de7635fbe22c273d3cec83c72a1e795f|Mon Dec 10 18:18:18 CET 2012|Add TableMemoryBenchmark implementation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39795607|0|0|0|331|3002|238|96|14|2|8|0|
8b5f8e0945ee9e0bbd7048945f17d2fdc2b108e0|Mon Dec 10 18:20:33 CET 2012|De-@Betaify AtomicDouble and AtomicDoubleArray. Fix javadoc typo in a href tag. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39797368|0|0|2|331|3002|238|96|18|11|5|0|
bf0fb34c412629d8f2b32095ee0524b732ed6410|Mon Dec 10 18:21:18 CET 2012|Make SortedMultiset.elementSet() return a NavigableSet outside GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39834726|3|0|5|331|3001|238|96|21|60|6|1|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.SortedMultiset.elementSet(), newSymbol=com.google.common.collect.SortedMultiset.elementSet()]
130a4f835c313d73158365aed80a2c0195d91472|Mon Dec 10 18:22:05 CET 2012|Change uses of DiscreteDomains methods to DiscreteDomain. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39844275|0|0|0|331|3001|238|96|18|2|9|0|
eefaec7200fc869e750ae6faa19d13885f757ee0|Mon Dec 10 18:23:31 CET 2012|Remove logging from ServiceManager.isHealthy. People who want the detailed information can easily get it from servicesByState(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39860721|0|0|1|331|3001|238|96|16|61|8|0|
fe6043a4eb4f665b235c0faca9710dbee4ab3bd8|Mon Dec 10 22:20:42 CET 2012|SuppressWarnings for more tests ignoring return values. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39866774|0|0|0|331|3001|238|96|16|2|8|0|
00444687b364f0d7cb3d6111767169e5646d4462|Mon Dec 10 22:21:34 CET 2012|De-betaify lots of methods in Futures. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39869967|0|0|1|331|3001|238|96|16|51|9|0|
caf4fc4fe94090803e9c7e634d9004d82b60fe3e|Mon Dec 10 22:22:25 CET 2012|Expand Ascii.to{Lower,Upper}Case to take a CharSequence instead of a String ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39870574|0|0|1|331|3003|238|96|15|10|5|0|
e3dccb37908923f7bb6c88421082ce0ebccaac6d|Mon Dec 10 22:23:32 CET 2012|Deprecate DiscreteDomains. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39870832|0|0|2|331|3003|238|97|18|33|6|0|
4e32ac7716d2e0fcd66eb0ba0cad320a1dcfd827|Mon Dec 10 22:24:12 CET 2012|Remove @Beta from UnsignedInteger and UnsignedLong. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39871896|0|0|2|331|3003|238|97|21|14|8|0|
f50cb14843d77c4bd58bfe920a103cb7f6fec8a6|Tue Dec 11 17:37:19 CET 2012|Minor cleanups to BaseEncoding ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39881805|0|0|1|331|3003|238|97|15|15|6|0|
43a8a98499e2782c31e489de7df682fe9def4bf5|Tue Dec 11 18:32:27 CET 2012|Add ByteStreams.readBytes(InputStream, ByteProcessor). It was requested by a Guava user and I actually already added the equivalent to CharStreams for LineProcessor. It also is a case where we should provide an InputStream equivalent so that users don't create single use InputSuppliers/ByteSources.|0|0|2|331|3004|238|97|17|54|8|0|
5a2e0bc809a9ea9801364595f1c7681a9ac7f509|Thu Dec 13 21:57:49 CET 2012|Hides the mutex that is used by RateLimiter, so clients can't interfere with it. Note that the only current (and accidental) exposure of the fact that the RateLimiter uses "this" for synchronization, is the setRate/getRate methods, which have "synchronized" in their signatures. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39921152|0|0|1|331|3004|238|97|19|15|8|0|
d87ab445579e88079f321dc8af79d8688fec7b2c|Thu Dec 13 21:59:11 CET 2012|Reorganize LinkedListMultimap to avoid the three redundant hash maps, saving a fair amount of memory. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39925816|0|0|1|331|3004|238|97|17|48|4|0|
01223bd8c610024f743b1759fc64b2e0c01ff9ff|Thu Dec 13 22:00:07 CET 2012|Reducing some critical sections ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39926253|0|0|1|331|3004|238|97|17|13|5|0|
a1cecc41594dd2b63c474337d3cf922b6d184854|Thu Dec 13 22:01:25 CET 2012|Add MultisetMemoryBenchmark. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39931320|0|0|0|331|3004|238|97|16|2|6|0|
7218498c1e19a789a5064ae750db7e929e2e8287|Thu Dec 13 22:02:32 CET 2012|Optimize CharMatcher as described in Guava issue 1223. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39931458|0|1|3|331|3004|238|97|21|16|5|0|
2e0a1563c8d7f3197f76180ff9e905243aceede2|Thu Dec 13 22:03:31 CET 2012|Rollback LinkedListMultimap change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=39937742|0|0|1|331|3004|238|97|21|53|6|0|
39b6a72246fcde454321b03823f4981f6394a63f|Thu Dec 13 22:04:51 CET 2012|Rewrite TreeRangeSet.complement() to be implemented in the same way as TreeRangeSet itself -- as a NavigableMap<Cut<C>, Range<C>> mapping lower bounds to ranges.|1|0|5|332|3014|238|97|18|61|5|1|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.RangeSet, newSymbol=com.google.common.collect.RangeSet.clear()]
ca36f308785f8a9780a10ea48a76bd026b202fa9|Thu Dec 13 22:05:39 CET 2012|Add subRangeSet to the RangeSet interface, and add the TreeRangeSet implementation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40028620|0|0|7|332|3016|238|97|22|87|10|2|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.RangeSet, newSymbol=com.google.common.collect.RangeSet.subRangeSet(com.google.common.collect.Range<C>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.RangeSet.subRangeSet(com.google.common.collect.Range<C>), newSymbol=com.google.common.collect.TreeRangeSet.subRangeSet(com.google.common.collect.Range<C>)]
7eb5783b70ffe7a5a2b47717327d78ef104f9aff|Thu Dec 13 22:07:25 CET 2012|Deprecate Stopwatch#elapsedTime, Stopwatch#elapsedMillis, and Range#asSet. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40031578|0|0|5|332|3016|238|100|26|95|5|0|
85efe36d23543385541fd76b44833cd35c9283bb|Fri Dec 14 19:30:31 CET 2012|Add more doc to BaseEncoding ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40048053|0|0|1|332|3016|238|100|24|17|7|0|
4b29948bbb7a21754223dba744ceec22a162abe4|Fri Dec 14 23:16:47 CET 2012|Revert accidental doc changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40085671|0|0|2|332|3016|238|100|17|13|8|0|
d6da7d86a2cab91bb3d33d983ccf5b07de14cc20|Tue Dec 18 21:56:02 CET 2012|Ensure that recordStats works on Android, GWT, and environments which may restrict the use of sun.misc.Unsafe, as per Guava issue 1228. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40113906|2|0|3|332|3016|238|100|18|48|7|0|
6162f3a87e733aed4308f5110528c2e4da89ed18|Tue Dec 18 21:57:06 CET 2012|Minor optimizations for BaseEncoding.|0|0|2|332|3016|238|100|17|20|5|0|
ca5d718d02f2dfc04bb09937f12a58267f4781cb|Tue Dec 18 21:58:05 CET 2012|Add BiMapMemoryBenchmark ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40154710|0|0|0|332|3016|238|100|15|2|7|0|
b3cb0e6ae8c8525323014263a0561d33958efc16|Tue Dec 18 21:59:41 CET 2012|Add {Byte,Char}{Source,Sink} streaming APIs to BaseEncoding. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40155178|0|0|1|332|3018|238|100|16|19|5|0|
31b9eb2653a5cc398eec53a4b1b8ef1cf011a657|Tue Dec 18 22:00:28 CET 2012|Make our code a little closer to obeying the "every switch must have a default" rule. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40165739|0|0|3|332|3018|238|100|16|46|4|0|
2e04ac2c85300d5a95c142c402199125b466ed1a|Tue Dec 18 22:01:18 CET 2012|Add default clause to every switch statement in our code. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40168064|0|0|3|332|3018|238|100|19|53|9|0|
1bfbc64ee02ecb3b03c2d19c5bd3bebcda19c67a|Tue Dec 18 22:02:58 CET 2012|Reorganize LinkedListMultimap to avoid the three redundant hash maps, saving a fair amount of memory. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40210587|0|0|1|332|3018|238|100|22|50|6|0|
dba37ce4fc0444ba2640eb66f4552cb3bc4bea23|Wed Dec 19 18:52:36 CET 2012|Put that coffee down. Coffee's for closers only. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40220880|0|0|1|332|3018|238|100|17|12|6|0|
d0186c29fa50b3cbf5823ba7c6d6e02e0b6eb9d9|Wed Dec 19 18:53:22 CET 2012|Add tests for known defaults for all HashFunctions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40223497|0|0|0|332|3018|238|100|15|2|6|0|
39d3234f2e2130fd0f3725d4f545bf97638be412|Thu Dec 20 05:50:37 CET 2012|Override HashFunction#toString() where possible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40255702|0|0|5|332|3018|238|100|18|20|5|0|
619211e04c130fbee8bdb57ebe39f296c2920ba9|Thu Dec 20 06:19:04 CET 2012|Remove extraneous semicolon. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40263424|0|0|1|332|3018|238|100|17|9|7|0|
b1b0baa96f590f462acdeb19d436045c2c285512|Thu Dec 20 06:23:29 CET 2012|Undeprecate Closeables.closeQuietly for the moment. We'll deprecate it on the 14.0 release branch. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40268076|0|0|1|332|3018|238|99|16|7|10|0|
75085833f67d07b9dcc071e0703cb1027e6c0b28|Thu Dec 20 23:08:53 CET 2012|Take steps to fix Cache.refresh race condition.  Specifically, do a racy check outside the lock to see if the value is already being refreshed, and do an optional check inside the lock to eliminate the race condition entirely. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40301328|0|0|1|332|3018|238|99|16|77|7|0|
af568193e6ee1015f38fb7c2bfed6228529f43b9|Thu Dec 20 23:13:21 CET 2012|Make Closer public and @Beta. Also, change Closer.rethrow(Throwable) to propagate IOExceptions by default and change all calls to rethrow(e, IOException.class) to rethrow(e). Add a pointer from Closeables.closeQuietly deprecation text to Closer. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40308996|0|0|9|333|3024|238|99|22|61|8|0|
84f80c5e683af7f2ed69e7f47a41e858fe62f413|Thu Jan 03 22:04:46 CET 2013|Add base.StandardSystemProperties ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40325631|1|0|0|334|3024|266|99|17|7|6|0|
9ede30c33a1ad7e79b54a601a79af53526a40d4f|Thu Jan 03 22:08:07 CET 2013|Changed ClassSanityTester.testEquals() to check against use of == on objects. We assume that the implementations should call equals()|0|0|0|334|3024|266|99|16|1|5|0|
be47eb2c23d8a47d92b471618007e283a0289e31|Thu Jan 03 22:09:25 CET 2013|Fix comment in AbstractMapBasedMultiset reported in Guava issue 1234. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40349870|0|0|1|334|3024|266|99|16|45|9|0|
7e10a8b03b0a87508de4beb78e427fd5ac409bbc|Thu Jan 03 22:12:42 CET 2013|Add a method to Uri that allows us to get the port (via HostAndPort). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40360770|0|0|1|334|3024|266|99|19|13|9|0|
dfa609596b9a92a1df96f53b5252b080b6763185|Thu Jan 03 22:14:55 CET 2013|StandardSystemProperties -> @GI ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40464798|0|1|0|333|3024|238|99|16|2|8|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.base.StandardSystemProperties, newSymbol=]
fd6e6dc5922fcbf058911c6b72e21bf8c9c4ed50|Thu Jan 03 22:15:57 CET 2013|Give removal date for Stopwatch deprecation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40466574|0|0|1|333|3024|238|99|14|8|7|0|
864435a71cd9e8b0dec4150284ee43372167b091|Thu Jan 03 22:18:00 CET 2013|Fix calls to deprecated Stopwatch.elapsedMillis() by inlining that method's implementation ("elapsed(MILLISECONDS)"). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40472379|0|0|0|333|3024|238|99|14|2|8|0|
313f93c8c4ec073158317473dfbfb2aff29b1d65|Thu Jan 03 22:20:56 CET 2013|Fix calls to deprecated Stopwatch.elapsedTime(TimeUnit) by inlining that method's implementation ("elapsed(TimeUnit)"). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40480378|0|0|0|333|3024|238|99|14|1|8|0|
f237e1e015fecb13e34739858300508dac235117|Thu Jan 03 22:23:59 CET 2013|Write a more compact ImmutableTable implementation.|0|0|1|333|3024|238|99|15|55|8|0|
b97963f83cb44583ec31104b517215a8e6cb195a|Thu Jan 03 22:25:35 CET 2013|Deprecate ForwardingService. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40646316|0|0|1|333|3024|238|100|17|41|4|0|
a54825110de5b5238304280a3be259d9e237e0a7|Thu Jan 03 22:27:06 CET 2013|Add application/xml to MediaType. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40684914|0|0|1|333|3024|239|100|15|53|4|0|
32e00d4c8b2359c36d43d1945bd822c688b444fb|Mon Jan 07 17:37:54 CET 2013|Add Invokable.isVarArgs(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40749218|0|0|1|333|3025|239|100|18|44|7|1|BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.reflect.Invokable, newSymbol=com.google.common.reflect.Invokable.isVarArgs()]
73836461de66c6b4c973947871d5192610852d01|Mon Jan 07 17:41:22 CET 2013|See http://code.google.com/p/guava-libraries/issues/detail?id=1215 Catch IOException thrown by new JarFile(). Sometimes there may be non-jar files in the class path, for example, .jnilib files ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40754214|0|0|1|333|3025|239|100|17|48|6|0|
6a27957798dc10be458dcd617579a5f61a82b846|Mon Jan 07 17:44:53 CET 2013|added tests to cover non-jar file case ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40779626|0|0|0|333|3025|239|100|14|1|6|0|
0a848bd9a88aaba5f5a69d7dde0989e501d5fb3a|Mon Jan 07 22:47:56 CET 2013|Add new MediaTypes for use by WebFinger (https://code.google.com/p/webfinger). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40829323|0|0|1|333|3025|241|100|14|60|10|0|
eeba07cda24c0e85198dd52a071991377f695b61|Wed Jan 09 16:33:20 CET 2013|Guava issue 1245: fix generics for BaseEncoding streaming encoding/decoding ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40878894|0|0|1|333|3025|241|100|17|18|6|2|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.io.BaseEncoding.decodingStream(com.google.common.io.InputSupplier<java.io.Reader>), newSymbol=com.google.common.io.BaseEncoding.decodingStream(com.google.common.io.InputSupplier<? extends java.io.Reader>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.io.BaseEncoding.encodingStream(com.google.common.io.OutputSupplier<java.io.Writer>), newSymbol=com.google.common.io.BaseEncoding.encodingStream(com.google.common.io.OutputSupplier<? extends java.io.Writer>)]
9cdeded80d341af98160f8a877fca628c12f247a|Wed Jan 09 16:36:28 CET 2013|Fix OSGI metadata creation in Guava build. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40892296|0|0|0|333|3025|241|100|15|1|6|0|
c9a720a063fa22d293dcbb329eef97402ea0319d|Thu Jan 10 17:05:01 CET 2013|Use a for loop instead of a switch in Murmur3_32. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40945029|0|0|1|333|3025|241|100|14|11|8|0|
28f3cd2759061207c89c25a2635154c3adaabc2b|Fri Jan 11 16:58:03 CET 2013|Added ClassPath.getResources(). See http://code.google.com/p/guava-libraries/issues/detail?id=1214 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40960937|0|0|1|334|3029|241|100|16|53|7|0|
61c6b00569b9dbe5e9d042bb106c1ca03c5a288f|Fri Jan 11 17:04:13 CET 2013|Cleans up HashingTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40973196|0|0|1|334|3029|241|100|18|13|7|0|
9398520c291d579463240f5d0be1d7fd32127a98|Fri Jan 11 17:11:08 CET 2013|Include test.txt in Guava to fix ClassPathTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40980832|0|0|0|334|3029|241|100|15|1|8|0|
471a8d749b1b4bf64877907077f767a0024697bb|Fri Jan 11 17:14:34 CET 2013|Fix typo in UsingToStringOrdering javadocs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40988923|0|0|1|334|3029|241|100|14|35|6|0|
d8a45836174deafb860c0bba74faa673ba3c5ca0|Fri Jan 11 17:20:35 CET 2013|Added javadoc to ClassSanityTester about a pattern to test builder equality. Added invokable.setAccessible(true) to allow public factories of non-public classes to be tested. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40993798|0|0|0|334|3029|241|100|16|2|6|0|
02e6a77a1f6d8e40002209236ea237ae47e7da24|Fri Jan 11 17:24:00 CET 2013|TypeParameter reshuffling. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40994611|0|0|1|334|3029|241|100|17|42|8|0|
c423bec3cc53943b947e13ceb81c527fb3b8e1c2|Fri Jan 11 17:34:06 CET 2013|Trim gratuitous code from ImmutableList implementations ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40997992|0|0|4|334|3029|241|100|17|40|6|0|
a7456bd0f0059e6ed9e99d5157550adaff96d601|Fri Jan 11 17:37:35 CET 2013|Simplified attempt to fix common issues with Unsafe in common libs ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40999025|0|0|2|334|3029|241|100|16|18|4|0|
3b460f53252fc3331703da458648d4e33795ed00|Fri Jan 11 17:40:56 CET 2013|Remove unnecessary code from *Immutable*Map implementations ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=40999290|0|0|7|334|3029|241|100|19|58|6|0|
ba826a40b92a03e26d03b497a0cc01ab24c886a0|Fri Jan 11 17:44:30 CET 2013|Add "application/binary" media type. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41002328|0|0|1|334|3029|242|100|18|54|6|0|
f4f946ad3cf7c34f8934d469319805c5c5e0b3b1|Fri Jan 11 17:47:55 CET 2013|Excluded META-INF/ from ClassPath ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41003993|0|0|1|334|3029|242|100|15|49|8|0|
b1b1560643ddbbb315a05164be60fc2e1dd32caf|Fri Jan 11 17:51:29 CET 2013|Added Invokable#getOwnerType() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41008711|0|0|2|334|3030|242|100|18|55|5|0|
601991395f9ec427d999ffd739984052807f5688|Fri Jan 11 18:26:22 CET 2013|Reduce unnecessary code in Multisets and Multimaps ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41030309|0|0|5|334|3030|242|100|19|71|6|0|
01c33a7487d8c3f90608ae5cd05debf62794c25b|Fri Jan 11 18:47:01 CET 2013|Rollback of controversial c423bec3cc53 ("Trim gratuitous code from ImmutableList implementations"). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41031096|0|0|4|334|3030|242|100|21|44|7|0|
f39c916b07d47fb4633e9c7603f093acae1735da|Fri Jan 11 21:02:14 CET 2013|Fix toString() of some Source/Sink implementations to match method names. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41036419|0|0|3|334|3030|242|100|19|52|6|0|
90a75c93246f0a403fc20275cb80d60e79978933|Fri Jan 11 21:38:54 CET 2013|MOE stripping fixes: - Put "MOE:{begin,end}_intracomment_strip" in HTML comments so that it does not appear in internal Javadoc. - Turn scrub_sensitive_comments off so that MOE gives errors instead of silently stripping comments that contained sensitive words. - Where necessary, manually strip out sensitive words, remove them, or replace them with non-sensitive words. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41038153|0|0|7|334|3030|242|100|19|86|8|0|
95cf7a7e14c39fda1585127b83dd2e5ee974875d|Fri Jan 11 23:47:19 CET 2013|It's January 2013! - Remove MapMaker.softKeys. - Remove AsynchronousComputationException (slated for November 2012 deletion). - Change Unsigned* methods' expiration from a month to a version, since "one version" is what we try to do, anyway, and we had scheduled them for "January" rather than "15.0." ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41046796|0|1|5|333|3028|242|97|26|73|7|3|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.AsynchronousComputationException, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapMaker.softKeys(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.GenericMapMaker.softKeys(), newSymbol=]
8485330b17d5cd0b93fbb2f1429c09bf2a4155ab|Sun Jan 13 00:32:51 CET 2013|Trim lots of unused and redundant code.  In particular,|0|0|18|333|3028|242|97|29|117|14|0|
33c8b01c890c778c1b18c260c7b83001a587e5b4|Mon Jan 14 20:24:00 CET 2013|check that forAllPublicStaticMethods() at least covers one method, ot avoid the case that user forgets to add public static modifiers to the factory methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41125051|0|0|0|333|3028|242|97|25|2|4|0|
02e459aacc3b534a580cd656b2e5d167b8b45026|Mon Jan 14 23:04:55 CET 2013|Reconcile @GwtIncompatible (and @GoogleInternal) annotations with the build-system lists of GWT-compatible (and GWT-compatible emulated) files. The main effect of this is to make InternetDomainName available under GWT in Guava. (It somehow seems to have worked anyway inside Google.) http://code.google.com/p/guava-libraries/issues/detail?id=1253 It's also necessary to make UnsignedInteger.multiply() (which is already deprecated) unavailable under GWT, since it is a simple passthrough to the times() method, which is also unavailable under GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41134674|1|0|6|333|3028|242|97|18|63|4|0|
f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc|Wed Jan 16 20:13:15 CET 2013|Minor simplifications to Multimaps. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41184579|0|0|2|333|3028|242|97|23|64|5|0|
0071d72213c47537f79355468eb7b855af532340|Wed Jan 16 20:14:48 CET 2013|Simplify Iterators and Iterables. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41186453|0|0|2|333|3028|242|97|23|57|5|0|
a072275f7ec6cd71835baef23020a766ba0497e6|Wed Jan 16 20:15:36 CET 2013|Simplify ImmutableCollection implementation and related code.  Specifically:|0|0|7|333|3028|242|97|22|53|10|0|
b99b83e93dd3f0a448db8f0284c14b0ae759d85b|Wed Jan 16 20:16:26 CET 2013|Split off Multimaps.filterXXX overloads for SetMultimap (and filterKeys(ListMultimap)). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41190071|4|0|4|333|3032|242|97|23|62|7|0|
40ab4e481cfab78b02a6a1d41c66ff7d4c79462e|Wed Jan 16 20:17:54 CET 2013|Simplify Maps.  Specifically,|0|0|8|333|3032|242|97|25|97|12|0|
af28f2bdd449716c4d6f6206873a356d99253f11|Wed Jan 16 20:18:38 CET 2013|Add documentation to the remaining isPartialView methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41191330|0|0|3|333|3032|242|97|23|62|6|0|
bfbd39e75b56c8bc552c2c83960afbf81eeffcb0|Wed Jan 16 20:20:19 CET 2013|Optimize Monitor.leave.|0|0|1|333|3032|242|97|17|43|8|0|
2a29d59da0266a6e5401e5a32ab30e812dd898c6|Wed Jan 16 20:21:53 CET 2013|Broaden Maps.immutableEnumMap generics ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41237787|0|0|1|333|3032|242|97|18|76|11|1|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Maps.immutableEnumMap(java.util.Map<K,V>), newSymbol=com.google.common.collect.Maps.immutableEnumMap(java.util.Map<K,? extends V>)]
1da5e0cf3f30aa1eeee8c0160977b00e0a9f58e6|Thu Jan 17 18:07:43 CET 2013|Bias CharMatcher.precomputed() implementation towards BitSetMatcher, as per http://code.google.com/p/guava-libraries/source/detail?r=7218498c1e19a789a5064ae750db7e929e2e8287 comments ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41247243|0|0|1|333|3032|242|97|19|11|7|0|
f90d07978c10519b3c73e8a0801df30122ad06b9|Thu Jan 17 22:17:46 CET 2013|Complete a TODO to avoid redundant copies of entry arrays in ImmutableMap construction pathways. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41289454|0|0|7|333|3032|242|97|19|63|11|0|
883fcd89d25adcc0f6e8ab7655c99b9f5b790b61|Thu Jan 17 22:18:35 CET 2013|Fix ImmutableMap.copyOf's null checking on a singleton map with a null key or value. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41297381|0|0|4|333|3032|242|97|23|53|6|0|
16eac2df5395257ad039cad1c336c41bb55bb42a|Thu Jan 17 22:20:01 CET 2013|Minor bug fix and simplifications in common.collect, including:|0|0|4|333|3032|242|97|22|69|9|0|
5f3e5b82ce5e62b9d52041c79f2f3b997f0f68be|Thu Jan 17 22:39:49 CET 2013|Hide deprecated FluentIterable.toImmutable* methods internally. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41302220|0|0|1|333|3032|242|97|24|55|6|0|
61ac739d660eaeeec397938a6879c0c10f94a279|Tue Jan 22 18:55:01 CET 2013|Migrate benchmarks from SimpleBenchmark to Benchmark and update the runner to accept Benchmark. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41343581|0|0|0|333|3032|242|97|30|2|5|0|
cc34329792125a962b7b5f800fdb1d1874631aa7|Tue Jan 22 18:56:23 CET 2013|Add automatic subSet tests in {Sorted,Navigable}SetTestSuiteBuilder, and override various SortedMap implementations in common/collect to return SortedSet keySets. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41348783|0|0|4|334|3032|242|97|27|82|13|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardValues(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardKeySet(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardEntrySet(com.google.common.base.Supplier<java.util.Iterator<java.util.Map$Entry<K,V>>>), newSymbol=]
f1dfc6181adb562966a7937d64e1d4b0e8c48099|Tue Jan 22 18:57:23 CET 2013|Change Sources/Sinks to implement Input/OutputSupplier temporarily, to make migration of usages easier (make it possible to change an InputSupplier to a ByteSource without changing an API that takes an InputSupplier at the same time). The getInput/Output methods are @Deprecated since they shouldn't be called directly. Also make public methods for viewing Input/OutputSuppliers as Sources/Sinks.|0|0|6|334|3046|242|101|28|52|5|0|
f0321c523ce5450b3c8c22af39a6eaefbada0a40|Tue Jan 22 18:58:53 CET 2013|Disable compilation of benchmarks, which have been updated to require a version of Caliper that has not been publicly packaged. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41469652|0|0|0|334|3046|242|101|17|2|8|0|
1d11559a8d86ee5f7909a293e5063689fb8b0f30|Tue Jan 22 18:59:43 CET 2013|Guava issue 1001: stop reimplementing Sets.newSetFromMap, now that the backport is in place. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41471300|0|0|2|334|3046|242|101|16|55|7|0|
81b34a9fee52a8e4f4c878aeabbb404f5dd5337a|Tue Jan 22 21:01:04 CET 2013|Make ImmutableMap.Builder fail atomically on null keys or values ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41476478|0|0|1|334|3046|242|101|18|52|10|0|
d08905e9fc562c1f4d1ae0acfe6f9fb98d10f4f8|Wed Jan 23 23:24:57 CET 2013|Deprecate name() and make toString() return name of domain. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41514739|0|0|1|334|3046|242|102|18|40|6|0|
6addb1f214c02b8f1de65cc564f5fa1e29da59ea|Wed Jan 23 23:26:00 CET 2013|Make ImmutableTable serializable. Also, reduce duplication across existing Table serializers. http://code.google.com/p/guava-libraries/issues/detail?id=1264 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41522037|2|0|2|334|3046|242|102|18|58|9|0|
445460f37ae3ceddd43e18cac7fade59640f2347|Wed Jan 23 23:27:00 CET 2013|Remove redundant tests and open source it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41527580|0|0|0|334|3046|242|102|20|2|10|0|
f8a94b9999e42a2eb1431948ebb57ab8533eaaa5|Wed Jan 23 23:30:15 CET 2013|Simplify and organize various Map implementations.  Specifically:|0|0|10|334|3046|242|102|21|71|7|0|
372a94bfa7992a98698affc08fc523d0b77e1bc3|Fri Jan 25 19:53:25 CET 2013|Rollback|0|0|10|334|3046|242|102|20|81|15|0|
d08271f2cb67c1c659247327f0e5ca3bfe04b48e|Fri Jan 25 19:54:27 CET 2013|Added cw to TldPatterns.java ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41558410|0|0|1|334|3046|242|102|23|39|6|0|
1a518b598b43486cd36cc510bf89d5b60720a4c4|Fri Jan 25 19:55:28 CET 2013|Migrate callers of caliper.Runner to caliper.runner.CaliperMain directly.|0|0|0|334|3046|242|102|29|2|7|0|
61d7db20077933bfac8ba1aec1965383a5da262a|Fri Jan 25 19:57:36 CET 2013|Incorporate latest mozilla tld changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41590242|0|0|1|334|3046|242|102|20|43|7|0|
a0c67ad3ac5ace5960e422abf3d4b103075521b2|Fri Jan 25 19:59:14 CET 2013|Fix toString() of Resources.asByteSource to match method name. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41591180|0|0|1|334|3046|242|102|18|15|7|0|
1dc60fa85852708754ba0c394d223f5eef6f7f97|Fri Jan 25 20:00:17 CET 2013|Rollback|0|0|1|334|3046|242|102|17|52|9|0|
fc6a72e81f6cbf81de64105105f296f0c84abdd0|Fri Jan 25 20:01:18 CET 2013|- Fix scheduleWithFixed(DelayRate). As originally implemented, scheduleWithFixed(DelayRate) would submit a Callable/Runnable wrapped in a FutureTask to the delegate ScheduledExecutorService and fail to run more than once due to run-once nature of FutureTask. - Implement cancel(boolean) on the returned LSFuture. - Omit FakeScheduledExecutorService changes.|1|0|2|335|3050|242|102|17|45|5|4|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.schedule(java.util.concurrent.Callable<V>,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.util.concurrent.Callable<V>,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)]
f8783704cc3d1b72a2def5cda476ac9a62e4a8f3|Fri Jan 25 20:02:19 CET 2013|Fix sourceDirectory, restoring compiled serializers to guava-gwt jar. I accidentally removed the serializers ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41634343|0|0|0|335|3050|242|102|17|2|6|0|
4674468e300cb6242762228402733fda1ab3e7ee|Fri Jan 25 20:03:11 CET 2013|Enable command-line filtering of tests with, e.g., -Dtest.include=**/ClassPathTest.java ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41635188|0|0|0|335|3050|242|102|16|2|7|0|
7ecd1184ef08c07a1130f2949773a1760708b654|Mon Jan 28 17:44:19 CET 2013|Move timeout start to before tryLock(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41700665|0|0|1|335|3050|242|102|16|45|6|0|
2be342881ace329a9ebdc31990f719301de5f7c0|Thu Jan 31 00:22:49 CET 2013|Add NullPointerTester.acceptIllegalArgumentException(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41744871|0|0|0|335|3050|242|102|15|2|5|0|
86cc26487f7e57201b0ac9a6d3c64571ac9f7bd3|Thu Jan 31 00:24:02 CET 2013|Rollback|0|0|9|335|3050|242|102|19|79|11|0|
c8131b0236c38b19a9fd6ab8b5f7be94918239e0|Thu Jan 31 00:24:47 CET 2013|Optimize IntMath and LongMath by using a branch-free helper implementation of the expression (foo < bar) ? 1 : 0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41793002|0|0|2|335|3050|242|102|25|16|6|0|
964373863f66752a8d653926e7733dc9ff7fa579|Thu Jan 31 00:25:32 CET 2013|Correct two typos in IDN doc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41796838|0|0|1|335|3050|242|102|17|41|7|0|
249afc740edc8a3dcff81ccf35f334ef6e2dd946|Thu Jan 31 00:29:46 CET 2013|Allow FluentIterable.transformAndConcat() to accept a Function<A, Iterable<? extends B>>. http://code.google.com/p/guava-libraries/issues/detail?id=1260 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41841084|0|0|1|335|3050|242|102|15|52|6|1|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.FluentIterable.transformAndConcat(com.google.common.base.Function<? super E,? extends java.lang.Iterable<T>>), newSymbol=com.google.common.collect.FluentIterable.transformAndConcat(com.google.common.base.Function<? super E,? extends java.lang.Iterable<? extends T>>)]
ce8e7a22b5486e77888a4b4bb54af693fb59184e|Thu Jan 31 00:30:40 CET 2013|Add a simple test that shows why US_ASCII is usually a bad choice. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41853734|0|0|0|335|3050|242|102|18|2|6|0|
82c959fe44eb4af14e44229c2c4ad6fface6defb|Thu Jan 31 00:31:21 CET 2013|Change EventBus to remove the thread local Queue after dispatching events. (Guava issue 1263: https://code.google.com/p/guava-libraries/issues/detail?id=1263) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41857158|0|0|1|335|3050|242|102|16|67|5|0|
73946cea36084dd24100b93ef0dee54cbd632fc7|Mon Feb 04 18:55:40 CET 2013|Added support for META-INF back. Now any resource loadable from a ClassLoader should be returned by ClassPath.getResource(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41869216|0|0|1|335|3050|242|102|15|48|6|0|
86bcc6fc5c9ddb872cdc345145ddfc4bd60ca297|Mon Feb 04 18:59:42 CET 2013|Add a simple unit test for AbstractCache#aggregate. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41904843|0|0|0|335|3050|242|102|17|2|9|0|
5fd69e2b6cb3b9e6748dea92099ee319ba46a187|Mon Feb 04 19:00:54 CET 2013|Scythe //java/com/google/common again. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41918585|0|0|3|335|3048|242|101|19|77|7|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ArrayTable.create(com.google.common.collect.ArrayTable<R,C,V>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.net.InternetDomainName.isValidLenient(java.lang.String), newSymbol=]
6687d01aee3a8485fa33b9b98c16d8d2fdccb244|Mon Feb 04 19:02:59 CET 2013|Log the default charset once during Charsets class initialization. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41959970|0|0|1|335|3048|242|101|19|7|6|0|
c65fdbc3f931b34da5d7261609ad88bbefb7afd4|Mon Feb 04 19:03:45 CET 2013|Conservatively simplify Tables and ImmutableTable implementations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=41963659|0|0|7|335|3054|242|101|17|68|6|7|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.Table.containsValue(java.lang.Object), newSymbol=com.google.common.collect.ImmutableTable.containsValue(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.Table.values(), newSymbol=com.google.common.collect.ImmutableTable.values()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.Table.values(), newSymbol=com.google.common.collect.ImmutableTable.values()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.Table.containsRow(java.lang.Object), newSymbol=com.google.common.collect.ImmutableTable.containsRow(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.Table.contains(java.lang.Object,java.lang.Object), newSymbol=com.google.common.collect.ImmutableTable.contains(java.lang.Object,java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.Table.isEmpty(), newSymbol=com.google.common.collect.ImmutableTable.isEmpty()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.Table.containsColumn(java.lang.Object), newSymbol=com.google.common.collect.ImmutableTable.containsColumn(java.lang.Object)]
39524718ff5f501d5333955715c4bf02fd155a33|Mon Feb 04 19:04:36 CET 2013|Automated g4 rollback of changelist 41959970.|0|0|1|335|3054|242|101|17|8|6|0|
9129e5e50020f84c7a859726b42ce211d2e37e5f|Mon Feb 04 19:05:16 CET 2013|Miscellaneous documentation fixes and internal cleanups. - Remove potentially misleading "it cannot be started/stopped more than once" from Stopwatch exception messages. - Fix TreeTraverser ASCII art. - Remove inaccurate @GwtCompatible annotation from FeatureUtil. - Fix mistaken duplicate words ("the the," etc.). - Strip *all* of benchmark running instructions from CharMatcherBenchmark, and preemptively strip instructions from internal escapers benchmarks. - Remove test <echo> from ant section of pom.xml. - Add @Nullable to StandardBaseEncoding's other constructor's paddingChar parameter. - Remove stale comment from Futures. (UninterruptibleFuture is long dead.) - Update name of Truth GWT module. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42036409|0|0|11|335|3054|242|101|25|110|20|0|
638fcb8c799c53f55471201a639e001120b19815|Thu Feb 07 16:19:06 CET 2013|Don't use exceptions in the control flow of AnnotatedHandlerFinder.  (Related: public Guava issue 1196.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42040968|0|0|1|335|3054|242|101|27|63|4|0|
acca567031e047e14f965de4bfa3e2c0f80d43b6|Thu Feb 07 16:20:28 CET 2013|Guava Issue #1276 http://code.google.com/p/guava-libraries/issues/detail?id=1275|0|0|1|335|3054|242|101|15|62|9|0|
a37ebc6eb5f242ccfa90cc11eef369979e932685|Thu Feb 07 16:22:56 CET 2013|Use specialized entry types for ImmutableMap, and use these in the builders to avoid redundant copying of entries. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42095809|0|0|5|335|3054|242|101|19|60|8|0|
07d29cba7e7efe70525b8ca94641fbc031f56939|Mon Feb 11 20:27:01 CET 2013|Complete a TODO to write a proper ImmutableSet view for ImmutableSetMultimap.entries() rather than doing a full ImmutableSet copy of the entries. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42243829|0|0|1|335|3054|242|101|17|51|6|0|
f69200fa67f143bc9fbe4bbdb36650e6aa57a8fc|Mon Feb 11 20:30:28 CET 2013|Make ImmutableMultimap.values().contains() redirect to ImmutableMultimap.containsValue, which for e.g. ImmutableSetMultimap takes O(#keys) time, instead of the old implementation, which takes O(#entries) time. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42243991|0|0|1|335|3055|242|101|17|60|6|0|
5fd86618cac019676e7fab7cce847c1fd29198ff|Mon Feb 11 20:37:38 CET 2013|Rewrite ImmutableMultimap.values().iterator() not to go via the entries, so as to avoid allocating entries that promptly get discarded for the corresponding values. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42275929|0|0|1|335|3055|242|101|17|53|6|0|
4c376a212781ad5f8afe1e901e3668f7db50b395|Mon Feb 11 20:41:20 CET 2013|Promote EvictingQueue from labs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42276397|1|0|0|336|3061|242|101|17|35|8|0|
35ca2ccdb761de615df2f32b30ef497595f93a68|Mon Feb 11 20:44:47 CET 2013|Rewrite the ImmutableCollection.toArray() methods in terms of a package-private "copyIntoArray" method, which also lets e.g. ImmutableMultimap.values().toArray() use arraycopies, etc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42276632|0|0|17|336|3061|242|101|25|77|7|0|
6950e2c5f033d256910e615ad701b969b07dbd9a|Mon Feb 11 20:48:19 CET 2013|Don't rewrite Multisets.equalsImpl in ImmutableMultiset ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42277117|0|0|1|336|3061|242|101|20|42|6|0|
bb91f4e888b438d2c6bb071bfb826b229dc09faf|Mon Feb 11 20:58:17 CET 2013|A rewrite of Monitor internals. - use a linked list of active guards instead of an ArrayList - never signal next waiter while this thread still counted in active guards - optimize away excess signals - other stuff rewritten to Martin's taste|0|0|1|336|3059|242|101|18|18|6|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Monitor$Guard.equals(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Monitor$Guard.hashCode(), newSymbol=]
efc75f97069f3cfff48cad998801ba99c126908b|Mon Feb 11 21:01:29 CET 2013|Fix typo in MoreExecutors#listeningDecorator ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42369458|0|0|1|336|3059|242|101|18|53|7|0|
9062bf938fde15436adddd8daf9359b033205081|Tue Feb 12 00:09:54 CET 2013|Optimize AbstractMapBasedMultimap.values().iterator() to avoid going via entryIterator() and allocating entries which get immediately discarded. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42383138|0|0|5|336|3059|242|101|19|67|10|0|
56cc7ff9d3ffd4f3e5510fdd56cf1535d884a4d1|Tue Feb 12 03:19:28 CET 2013|Simplify implementation of Multimaps.unmodifiableMultimap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42395522|0|0|2|336|3059|242|101|26|90|10|0|
779fd55bd1de1e9408beca88c773298331cceccd|Wed Feb 13 01:09:36 CET 2013|Simplify Multimaps.transform logic by sharing more implementation with Maps. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42445381|0|0|2|336|3059|242|101|23|86|23|0|
26c72b73505e1f45ffdd25614d4c9bfc165b5b3d|Wed Feb 13 18:34:49 CET 2013|Factor out more common code in Maps.filter and Multimaps.filter implementations ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42449971|0|0|2|336|3059|242|101|26|70|8|0|
8f9ff19c23591e1371b96ae2076239cc2a28e812|Thu Feb 14 00:38:59 CET 2013|listenInPoolThread didn't use to support a custom executor, but it has for a while. Unfortunately, I never updated it to acknowledge that an InterruptedException is now possible. We don't really have any good options, so we'll go with "keep blocking." ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42487946|0|0|1|336|3059|242|101|19|42|10|0|
8c8c78960c5b01053c2771c3576f6931bb507ebf|Thu Feb 14 20:04:50 CET 2013|Add a test that ensures any new HashFunctions must have an entry in KNOWN_HASHES. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42508143|0|0|0|336|3059|242|101|17|2|5|0|
50eb4ccbae5cb9366f689db4e52c67b55549fe1c|Thu Feb 14 20:08:03 CET 2013|Hashing.consistentHash: Add more tests to test that the C++ and Java implementations are equivalent. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42533999|0|0|0|336|3059|242|101|16|2|4|0|
7699e6c883a0d17e6ca129d8636d5437805a9c6d|Thu Feb 14 20:14:30 CET 2013|Open-source known hashes for crc32, triggered by our new automated test that expects to find them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42547175|0|0|0|336|3059|242|101|16|2|9|0|
392d2a538ddc28a69d37759a1328677cc124e046|Fri Feb 15 18:43:15 CET 2013|Fix flaky test: Wait for the Future listeners to execute and not just for the Future to complete. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42581734|0|0|0|336|3059|242|101|15|2|6|0|
3775da660d35229a7574e5ef8b131293e3305269|Sat Feb 16 04:10:20 CET 2013|Move Byte/CharStreams.concat into Byte/CharSource. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42657113|0|0|4|336|3059|242|101|17|51|6|6|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.concat(java.util.Iterator<? extends com.google.common.io.CharSource>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.concat(com.google.common.io.ByteSource[]), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.concat(java.lang.Iterable<? extends com.google.common.io.ByteSource>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.concat(java.util.Iterator<? extends com.google.common.io.ByteSource>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.concat(com.google.common.io.CharSource[]), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.concat(java.lang.Iterable<? extends com.google.common.io.CharSource>), newSymbol=]
e66c84b101f674401ffd4c5264b15a980f48e749|Mon Feb 18 22:16:00 CET 2013|Open source some more benchmarks. The Monitor benchmarks were left as internal when the class was migrated from Labs. My guess is that that was nothing more than "Caliper benchmarks can't be open-sourced yet." I notice that earlier CLs didn't open-source them, either. My guess is that that's just because they were excluded from the BUILD rule entirely and not merely marked with @GoogleInternal. My guess is that the same is true of the EventBus benchmark. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42749026|0|0|0|336|3059|242|101|19|2|8|0|
756d91f4b64a573328cbbb6b8d507669af6dbc58|Thu Feb 21 16:49:44 CET 2013|Replace "Throwables.propagate(alreadyTriedToPropagate)" with equivalent "throw new RuntimeException(alreadyTriedToPropagate)." ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42782638|0|0|1|336|3059|242|101|17|14|5|0|
47e9a30a4a4388458127caadeb9b6318dfea509c|Thu Feb 21 16:53:09 CET 2013|Replace "throw Throwables.propagate(checkedEx)" with equivalent "throw new RuntimeException(checkedEx)." ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42786068|0|0|1|336|3059|242|101|16|7|5|0|
8b930104c5944d019536f7f419fc9c89ab2b9046|Thu Feb 21 16:59:56 CET 2013|Update truth to 0.11 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42845267|0|0|0|336|3059|242|101|16|1|7|0|
8751ff625db5cf46db0abb0a680b6dbb194ce21d|Thu Feb 21 17:10:25 CET 2013|Migrate users of deprecated Range#asSet(DiscreteDomain) to ContiguousSet#create(Range, DiscreteDomain). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42868160|0|0|1|336|3059|242|101|17|47|7|0|
3e4c4a3affbc1be871dcfa503f5fd1c5da260626|Thu Feb 21 17:13:52 CET 2013|Hide Constraint+Constraints internally, deprecating them in Guava. Update remaining callers in a behavior-preserving way. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42901728|0|0|2|336|3059|242|103|21|51|5|0|
1740aac1bae09f0a2b8e7345ddfc90a10a84709b|Thu Feb 21 17:17:11 CET 2013|Deprecate softValues. Make makeComputingMap package-private in Guava, and stop using it in the example code. (It is the only method scheduled for deletion in February or March.) Reimplement out-of-package Guava makeComputingMap callers with the traditional putIfAbsent pattern. Remove methods scheduled for deletion in Guava 15. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42902921|0|0|8|336|3050|242|96|22|98|6|9|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.Hashing.padToLong(com.google.common.hash.HashCode), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.FluentIterable.toImmutableSet(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.getChecksum(com.google.common.io.InputSupplier<? extends java.io.InputStream>,java.util.zip.Checksum), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.getChecksum(java.io.File,java.util.zip.Checksum), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.GenericMapMaker.makeComputingMap(com.google.common.base.Function<? super K,? extends V>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.FluentIterable.toImmutableSortedSet(java.util.Comparator<? super E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapMaker.makeComputingMap(com.google.common.base.Function<? super K,? extends V>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.FluentIterable.toSortedImmutableList(java.util.Comparator<? super E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.FluentIterable.toImmutableList(), newSymbol=]
45db748d4c1ac8cd1215256ebbf3a1d645461cef|Thu Feb 21 23:16:19 CET 2013|Make ExecutionList smaller and faster by using a manual queue instead of a LinkedList.|0|0|1|336|3050|242|96|19|40|7|0|
3765a143332e3989589dc5a789d4cfc4225c9266|Thu Feb 21 23:19:42 CET 2013|Remove reference to UTF_16LE equivalence. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42919674|0|0|1|336|3050|242|96|17|15|6|0|
abedc669bf43491e5c723576e014a35b6259fd2d|Thu Feb 21 23:23:09 CET 2013|Deprecate softValues, not weakValues. I got this right in GenericMapMaker but wrong in MapMaker. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42924061|0|0|1|336|3050|242|96|16|55|5|0|
a06826b92b151b3e4229eff9ceeeaf69031b9451|Fri Feb 22 20:20:02 CET 2013|Reduce visibility of Range#asSet (internally). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42968510|0|0|1|336|3050|242|96|17|45|7|0|
f6defe0ba1f27626e7373b080bd407465b08735f|Fri Feb 22 20:56:44 CET 2013|Fix serialization of GWT SingletonImmutableBiMap.inverse(). There is a self-assignment that went undetected because (a) we don't run error-prone against GWT-only code and (b) we can't use a final field without breaking serialization even worse. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42969994|0|0|0|336|3050|242|96|19|2|8|0|
6487f52fabf979c6260ea652660e49ded05bbba3|Fri Feb 22 20:57:25 CET 2013|Deprecate GenericMapMaker. Remove unused loadFactor() from GWT MapMaker (removed from non-GWT version in 1.0-rc4!), and make the class final (as the non-GWT version is). Update ConcurrentHashMultiset to accept MapMaker instead of GenericMapMaker. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42970216|0|0|2|336|3050|242|97|16|58|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ConcurrentHashMultiset.create(com.google.common.collect.GenericMapMaker<? super E,? super java.lang.Number>), newSymbol=]
7f6596b3fa7472c23d0de18f8e509bbbb60f964b|Fri Mar 01 17:48:57 CET 2013|Add two static MediaTypes ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=42979449|0|0|1|336|3050|244|97|18|61|8|0|
6b6e0dd3e1bf1bf5ae32838490b0b6942ea237b4|Fri Mar 01 17:50:50 CET 2013|Adds @CheckReturnValue to chainable methods of FluentIterable. Thanks to error-prone, this will cause [] to refuse to build any code that doesn't store the return value from these methods.|0|0|1|336|3050|244|97|17|51|6|0|
6f061fe5defc9b45957be13e86052c2db3cb0bbf|Fri Mar 01 17:51:43 CET 2013|Minor collections cleanups. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43079662|0|0|4|336|3050|244|97|60|74|7|0|
843916e3258925b14ec8a1f97514f45c9b4692c0|Fri Mar 01 17:53:30 CET 2013|Fix a bug where if Service.stop() was called multiple times while the Service was in the STARTING state the stopping() listeners would fire once for every call to stop() violating the contract that listener methods should be called at most once. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43133059|0|0|1|336|3050|244|97|22|44|7|0|
48efcd7ce82737d88abd2f8cb9db2c32f0878ce5|Fri Mar 01 17:55:13 CET 2013|Manually check for nulls in more places. Our GWT tests would flag some of these, but it's looking like some of them aren't running. []will fix that, breaking the tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43133605|0|0|1|336|3050|244|97|16|48|7|0|
208def9719a79cf22f2788e808c33893726a1fbd|Fri Mar 01 17:56:16 CET 2013|Make a few small changes to ServiceManager 1. use the Monitor.enterWhen* instead of Monitor.waitFor* methods, as they are more efficient. 2. rewrite servicesByState to sort a list of Map.Entries instead of constructing a Map and sorting a copy of the EntrySet 3. Add an addListener convenience overload for when you want to use the sameThreadExecutor. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43135325|0|0|1|336|3051|244|97|17|62|8|0|
7766079f27aa546315dc59a2742350e136060c7e|Fri Mar 01 17:57:10 CET 2013|Add DecodingException and decodeChecked to BaseEncoding ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43138785|0|0|1|337|3051|244|97|15|17|7|0|
d78a229d82448bb5dacf5f58b3c60a2b7d029843|Fri Mar 01 17:59:49 CET 2013|Delete the Ordering.from(Comparator) and Ordering.natural() overrides of sortedCopy and immutableSortedCopy, since benchmarks suggest any speed increases are minimal at best. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43178753|0|0|2|337|3051|244|97|16|36|5|0|
d2cfd91e0d557bba565e2c8dadd0b5b3f475f790|Fri Mar 01 18:01:30 CET 2013|Remove Stopwatch#toString(int) as promised in Guava 15.0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43194646|0|0|1|337|3050|244|96|18|9|10|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Stopwatch.toString(int), newSymbol=]
b2f0d0fad93f11bb86a2ce1770bcb43fd014fa06|Fri Mar 01 18:02:43 CET 2013|Delete EmptyImmutableList, replacing it with a singleton instance of RegularImmutableList.  This makes the common case for ImmutableList bimorphic instead of trimorphic, resulting in significant improvements to benchmarks. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43197187|0|1|5|337|3050|244|96|20|63|6|0|
a8e4dd38cfae3e31ddd270e7f97ce283bf2c15f2|Fri Mar 01 18:03:38 CET 2013|Promote StandardSystemProperty to @Beta in 15.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43197237|1|0|0|338|3055|272|96|21|8|8|0|
a7e66bb0852eba579b7b3dc8228b55e2a8124c7c|Fri Mar 01 18:04:33 CET 2013|Remove com.google.common.io.{LimitInput,NullOutput}Stream. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43198122|0|2|0|336|3047|272|94|15|2|7|2|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.io.LimitInputStream, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.io.NullOutputStream, newSymbol=]
8a6a477c15925ac0af861bb18cca13a1cec24d0a|Fri Mar 01 18:05:28 CET 2013|Remove the following methods from com.google.common.primitives.UnsignedInteger and UnsignedLong: add, subtract, multiply, divide, remainder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43201569|0|0|2|336|3037|272|84|16|14|5|10|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedLong.subtract(com.google.common.primitives.UnsignedLong), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedInteger.add(com.google.common.primitives.UnsignedInteger), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedLong.remainder(com.google.common.primitives.UnsignedLong), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedInteger.multiply(com.google.common.primitives.UnsignedInteger), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedInteger.remainder(com.google.common.primitives.UnsignedInteger), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedLong.add(com.google.common.primitives.UnsignedLong), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedInteger.subtract(com.google.common.primitives.UnsignedInteger), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedInteger.divide(com.google.common.primitives.UnsignedInteger), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedLong.divide(com.google.common.primitives.UnsignedLong), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedLong.multiply(com.google.common.primitives.UnsignedLong), newSymbol=]
791e34c93f643597c70b747e615d9ac41c8d7f21|Fri Mar 01 18:06:24 CET 2013|Delete EmptyImmutableMultiset, which isn't clearly worth the code complexity. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43202169|0|1|2|336|3037|272|84|19|47|8|0|
ee32a2dd64cce9318cef8b2a0e2c582118a2d236|Fri Mar 01 18:07:15 CET 2013|Delete EmptyImmutableTable, which isn't clearly worth the code complexity. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43207266|0|1|3|336|3037|272|84|19|50|7|0|
cb54c20bedf257f2eeec7e9f61105b2585ab0752|Fri Mar 01 18:09:06 CET 2013|More simplification and refactoring of common code in common.collect. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43236585|0|0|15|336|3037|272|84|30|118|10|0|
ccbc3f6770998e4f795cf6ee4887120e5a2b81ab|Fri Mar 01 18:10:54 CET 2013|Deoptimize Lists methods where overrides aren't clear wins. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43250163|0|0|1|336|3037|272|84|27|60|6|0|
252e992199fdb7735e6303b289c7afde4fb2d797|Fri Mar 01 18:11:46 CET 2013|Add AbstractTable, a skeleton implementation-agnostic Table implementation, and factor out code in common between Table implementations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43250483|1|0|9|336|3021|272|84|22|71|6|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.Table.get(java.lang.Object,java.lang.Object), newSymbol=com.google.common.collect.AbstractTable.get(java.lang.Object,java.lang.Object)]
39942eb70a09fbc879892fe4b240b6974843abc3|Fri Mar 01 18:12:40 CET 2013|Deoptimize Iterators methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43251260|0|0|1|336|3021|272|84|19|50|7|0|
155728d070ac6f2d2ca22644f5c5affea72d7feb|Fri Mar 01 18:13:31 CET 2013|Simplify filter() implementations in common.collect ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43252637|0|0|6|336|3021|272|84|24|89|10|0|
e17ee922de0d2285ff8bf8212823c33d8589512d|Fri Mar 01 18:16:02 CET 2013|Simplify and deoptimize LinkedListMultimap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43258188|0|0|1|336|3011|272|84|21|50|6|0|
a1858510da0d99dfc3e3622741d2134fb22e18c1|Fri Mar 01 18:16:56 CET 2013|Adds BloomFilter#mergeWith(BloomFilter). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43265147|0|0|2|336|3012|272|84|20|17|8|0|
6122e688a7549b4e164ed23720f2a5b5ac0a266c|Fri Mar 01 18:17:51 CET 2013|Automated g4 rollback of changelist 43258188.|0|0|1|336|3022|272|84|17|50|6|0|
0f5ac1191e8b258e747328b82f633938595e43cc|Sun Mar 03 03:10:04 CET 2013|Remove Unsigned{Integer,Long}#asUnsigned from Guava 15.0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43292361|0|0|2|336|3020|272|82|17|12|4|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedLong.asUnsigned(long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.primitives.UnsignedInteger.asUnsigned(int), newSymbol=]
3bd2dd34618a38a7f823dd72a603c5a47905b5b1|Sun Mar 03 03:11:21 CET 2013|Add BloomFilter#size, which returns the number of bits in the underlying bit array. Finally remove BloomFilter#expectedFalsePositiveProbability ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43298086|0|0|1|336|3020|272|81|15|11|6|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.BloomFilter.expectedFalsePositiveProbability(), newSymbol=]
1a3a560da39ad9c737af0d22df34ce7e42817546|Sun Mar 03 03:12:35 CET 2013|Eliminate nondeterminism in memory consumption tests by forcing lazily computed views of the empty immutable collections. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43298195|0|0|4|336|3020|272|81|18|59|11|0|
3f948ef892b1207193cd73b213fb06e55bd30178|Sun Mar 03 03:13:45 CET 2013|Automated g4 rollback of changelist 43265767.|0|0|1|336|3010|272|81|18|47|6|0|
bff94c6599b1a1a53cfadcc11bb2829ff244e430|Sun Mar 03 03:14:49 CET 2013|Extend AbstractCollection where appropriate in common.collect ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43309776|0|0|3|336|3007|272|81|18|52|8|0|
fea5c4ad7429590a49cce01ce6ff226b6f15dc18|Sun Mar 03 03:15:56 CET 2013|Common out ImmutableMapEntrySet implementations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43310565|0|0|8|336|3003|272|81|23|80|8|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.size(), newSymbol=com.google.common.collect.Maps$ImprovedAbstractMap.size()]
21d3cddf5a11f2f708f1d6a94f3536d907da95d5|Sun Mar 03 03:16:56 CET 2013|Automated g4 rollback of changelist 43310565.|0|0|8|336|3007|272|81|23|85|12|1|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.Maps$ImprovedAbstractMap.size(), newSymbol=java.util.Map.size()]
9a37e924161f131c79a814da407601d0a88e0b46|Fri Mar 08 22:04:35 CET 2013|Add BloomFilter#canMergeWith(BloomFilter) which determines whether the given bloom filter can be safely merged into this one. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43357881|0|0|1|336|3008|272|81|23|11|6|0|
50a7e39a635b6e60332810eb286c4967c3849a4a|Fri Mar 08 22:07:46 CET 2013|Automated g4 rollback of changelist 42665747.|0|0|1|336|3008|272|81|14|59|7|0|
3bc46110f41082510dff11df9c9fef8d514acad1|Fri Mar 08 22:08:50 CET 2013|Add Content-Security-Policy header. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43393773|0|0|1|336|3008|273|81|17|7|10|0|
56df0274a4a5ab8f37789eabaec0a419a4aed98a|Fri Mar 08 22:09:48 CET 2013|18 months from Guava 15 will be September, not August. We'll see if we end up needing to bump it to October because *somebody* doesn't get his Escapers work done in time for a March release ;) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43398394|0|0|1|336|3008|273|81|16|57|6|0|
9056840286b235c0a9bef8ca757e0817c954d6ba|Fri Mar 08 22:10:57 CET 2013|Simplify and refactor the logic to ensure that Immutable(Bi)Map.Builder and friends create entries that can be reused by RegularImmutable(Bi)Map to avoid redundant copies. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43407355|1|0|5|336|3008|273|81|17|57|10|0|
ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d|Fri Mar 08 22:11:55 CET 2013|Factor out common logic in ImmutableMultiset.EntrySet implementations ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43407517|0|0|6|336|3008|273|81|21|67|6|0|
83eeba6538e1b871a2f522fc2a9570eaf029bc41|Fri Mar 08 22:13:01 CET 2013|Open source Files#isDirectory and Files#isFile ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43409856|0|0|1|336|3010|273|81|18|44|6|0|
a1940dd06109feacb7b72fed17726c329a3f54f5|Fri Mar 08 22:14:07 CET 2013|Simplify Multimaps.AsMap implementation, pulling up common logic from its subclasses ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43412108|0|0|3|336|3010|273|81|18|91|12|0|
b8282012c5e03e349c926eebd68e16800e5f56f4|Fri Mar 08 22:15:22 CET 2013|Open source Sets#newConcurrentHashSet() and Sets#newConcurrentHashSet(Iterable). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43412565|0|0|1|336|3012|273|81|23|50|8|0|
60509b7d4f785b4b3dded5a1dcfeb51b28a9ad97|Fri Mar 08 22:16:26 CET 2013|Release ForwardingSortedMultiset into Guava 15.0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43412779|1|0|0|339|3028|273|81|19|38|11|0|
e6949fd57066ac483f173c71af32ff266258e69f|Fri Mar 08 22:17:23 CET 2013|Open source ServiceManagerTest ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43414005|0|0|0|339|3028|273|81|19|2|9|0|
3e2950b1da46e4c976d2f79907bf61373770587e|Fri Mar 08 22:21:48 CET 2013|Automated g4 rollback of changelist 43314514.|0|0|8|339|3024|273|81|21|80|13|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.size(), newSymbol=com.google.common.collect.Maps$ImprovedAbstractMap.size()]
a07134858ae51e4caee1ff56fc475b0a4a0dc8cb|Fri Mar 08 22:22:50 CET 2013|De-GoogleIternalify some APIs for Guava 15.0: -c.g.c.collect.TreeTraverser -c.g.c.collect.BinaryTreeTraverser -c.g.c.io.File#fileTreeTraverser ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43443966|2|0|1|341|3033|273|81|26|67|7|0|
e89537bade715f1962b8f358c53b3cb36899ab10|Fri Mar 08 22:23:50 CET 2013|Improve exception messages for HostAndPort.fromParts ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43445669|0|0|1|341|3033|273|81|20|11|6|0|
6ff6acf5bb62084118b6a613928643138b7cf731|Fri Mar 08 22:24:53 CET 2013|Simplify the implementation of LongMath.sqrt.|0|0|1|341|3033|273|81|16|14|10|0|
6b0f80d75843cd7b8623861198a9b7eee4d3eb6b|Fri Mar 08 22:25:59 CET 2013|Automated g4 rollback of changelist 43443903.|0|0|8|341|3037|273|81|20|87|10|1|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.Maps$ImprovedAbstractMap.size(), newSymbol=java.util.Map.size()]
c86668adacd756bc040c3fb668a96757290e268e|Fri Mar 08 22:28:02 CET 2013|Open source Futures#nonCancellationPropagating ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43477677|0|0|1|341|3038|273|81|21|49|20|0|
d6b1760bff541fb6935748ffcdb10c00ead2b4b0|Fri Mar 08 22:31:05 CET 2013|Expose Lists.cartesianProduct inside Google. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43553359|0|0|1|341|3038|273|81|19|56|7|0|
65b963bd5333df6ea04884d62afc548364223c13|Fri Mar 08 22:32:04 CET 2013|Fix presidential history, a.k.a. - the Multimap javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43563199|0|0|1|341|3038|273|81|18|47|8|0|
ad8f5749d69b6590303d1b68175d2b0d90631415|Fri Mar 08 22:33:08 CET 2013|Minor javadoc touchups. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43575540|0|0|1|341|3038|273|81|15|10|7|0|
9a762763962df4b2f5011857f317237a2bff5763|Fri Mar 08 22:37:48 CET 2013|Open source Splitter#splitToList. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43611289|0|0|1|341|3039|273|81|16|12|8|0|
fb46f84b0b91ee35aa9b3e9f7beddc01a649e35f|Fri Mar 08 22:40:47 CET 2013|Actually run some tests that claim to be @GwtCompatible under GWT, stripping out the @GwtIncompatible parts. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43617179|0|0|0|341|3039|273|81|18|2|10|0|
c959e7d9bac0ee88adad17be15cc237ac1ba4608|Fri Mar 08 22:41:36 CET 2013|Rename BloomFilter#mergeWith to #putAll Rename BloomFilter#canMergeWith to #isCompatible Rename BloomFilter#size to #bitSize ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43618412|0|0|2|341|3038|273|81|17|16|6|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.BloomFilter.size(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.BloomFilter.canMergeWith(com.google.common.hash.BloomFilter), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.BloomFilter.mergeWith(com.google.common.hash.BloomFilter), newSymbol=]
e7d0000cb29ff9f2b9cbbb98b2964aeeef3fcf63|Mon Mar 11 18:16:18 CET 2013|Document the simplest way to get a List<ListenableFuture> from ListeningExecutorService.invokeAll. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43643475|0|0|1|341|3038|273|81|17|37|7|0|
5ab1057e772803f72c168db4e3c9efc461410fdc|Wed Mar 13 00:27:05 CET 2013|Add calls to flush() after writing to streams in ByteSink and CharSink.|0|0|2|341|3038|273|81|16|11|9|0|
656d79bc8b0b7b4320367c9b30606db98a19944d|Wed Mar 13 00:29:45 CET 2013|Add Funnels.sequentialFunnel, an Iterable funnel wrapper, to Funnels. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43840825|0|0|1|341|3038|273|81|17|8|4|0|
aac56f9bb9f71a5cee93888663de0a63e469da3e|Wed Mar 13 00:30:39 CET 2013|Fix FunnelsTest to @GI Funnels.sequentialFunnel tests ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43846130|0|0|0|341|3038|273|81|16|2|5|0|
0202617129f4c0132f3285ac9d5db36439b73dd8|Wed Mar 13 00:31:22 CET 2013|Add benchmarks to determine the overhead of the various stats calculation algorithms. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43849595|0|0|0|341|3038|273|81|18|2|8|0|
becf0f62ce7620fc5b76c307527e5863ba231c9e|Thu Mar 14 19:56:53 CET 2013|Simplify StandardTable implementation in common.collect. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43866642|0|0|2|341|3038|273|81|16|56|5|0|
e624382dadd8eb2b1bcf66c30572a8d519e5d8c8|Thu Mar 14 19:58:23 CET 2013|Test and document LoadingCache's behavior in the face of InterruptedException (mostly by linking to the new <http://code.google.com/p/guava-libraries/wiki/CachesExplained#Interruption>). Also, update some unrelated broken links: http://web.archive.org/web/20090301165914/http://java.sun.com/docs/books/jls/third_edition/html/lexical.html#101089 => http://docs.oracle.com/javase/specs/jls/se7/html/jls-3.html#jls-3.10.6|0|0|1|341|3038|273|81|19|50|9|0|
357053240d33103fb8a4669ebd2d4cf26789bd18|Thu Mar 14 19:59:08 CET 2013|Make GwtPlatform available to server-side applications. It's not actually used there, but dev mode clients do use it, and it won't be available to them unless it's compiled by javac as part of our GWT targets.|0|0|0|341|3038|273|81|19|2|5|0|
9418fd9a18a0aedc38033fd6d967c34b5467c6e0|Thu Mar 14 19:59:53 CET 2013|Remove Google specific headers from HttpHeaders. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43894977|0|0|1|341|3038|273|81|16|6|5|0|
68591abad922e0fc89c96c52ed5be39ecac09365|Thu Mar 14 20:00:38 CET 2013|Fix SafeTreeSet so delegate.tailSet() is wrapped by a new SafeTreeSet as is headSet() and subSet() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43905970|0|0|0|341|3038|273|81|15|1|8|0|
c8a3113091ba181971969da60898439e18812b6b|Thu Mar 14 20:01:28 CET 2013|Add Funnels.stringFunnel(Charset) overload. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43908416|0|0|1|341|3039|273|81|16|7|4|0|
adc8f1c5585c43023390030bc056465cac18b921|Thu Mar 14 20:02:56 CET 2013|Deprecate ForwardingSortedMap.standardRemove, which has been discovered to interact badly with a bug in JDK6, and was never used in Google. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43914919|0|0|1|341|3039|273|82|16|45|8|0|
ecf812dffbaa93ac9e4bf7e8484b24f02abb05ae|Thu Mar 14 20:03:51 CET 2013|Refactor out some common functionality in the HttpHeadersTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43918498|0|0|0|341|3039|273|82|17|2|14|0|
d0a148bac00eebe5659bd9a33871b3a878237611|Thu Mar 14 20:04:49 CET 2013|Update version number, factor out common config, plus a few nits, specifically: * 15.0-SNAPSHOT is the new release target * Plugin-management for commonly configured plugins moved into the parent. * Dependency management into the parents (for version and scope) * Make findbugs/javax.inject from provided to default (compile) scope, but mark optional. * Move Resources and sources paths into parent leaving exceptions in children. * Add a few helper comments for maintenance. * Add exclusions from Truth and Caliper to force use of guava being built.|0|0|0|341|3039|273|82|17|2|11|0|
c4a6f8f55e0f07b2413540371025bb9aacee15eb|Thu Mar 14 20:06:30 CET 2013|Add boolean parser to cache builder. add flag for record stats. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=43956416|0|0|2|341|3039|273|82|18|70|6|0|
29bcd86f4fbb1ef2a47cf96ef2b6ec941843ba0d|Fri Mar 15 20:25:02 CET 2013|Remove the synchronized keyword from the ServiceManager.ServiceListener.startupTimes() method.  It is unnecessary and potentially dangerous (I'm pretty sure it could actually cause a deadlock due to lock ordering!).|0|0|1|341|3039|273|82|17|65|11|0|
d8b765c09c121ba16994df9084002bad6c620d57|Fri Mar 15 20:26:03 CET 2013|Make ImmutableMap extend ImprovedAbstractMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44002262|0|0|2|341|3036|273|82|18|76|10|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.size(), newSymbol=com.google.common.collect.Maps$ImprovedAbstractMap.size()]
a94293f5e2b131267792bd3af67af71c019ebc79|Fri Mar 15 20:27:36 CET 2013|Automated g4 rollback of changelist 44002262.|0|0|2|341|3039|273|82|22|78|10|1|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.Maps$ImprovedAbstractMap.size(), newSymbol=java.util.Map.size()]
81cc624e0695dcf5133f57256e3263abbe18266c|Mon Mar 18 16:08:37 CET 2013|Update the hashing benchmark to include all of the different hash functions.|0|0|0|341|3039|273|82|22|2|6|0|
b9fb572927249d885c631ceba20a2198da53de3d|Mon Mar 18 16:12:02 CET 2013|Modify recordStats to not accept a value in same manner as setWeakKey ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44016270|0|0|1|341|3039|273|82|15|73|7|0|
776e8a68fb9180f23abfe9cb508b3cd6f856e56e|Mon Mar 18 18:11:14 CET 2013|Add Hasher#putUnencodedChars and HashFunction#hashUnencodedChars. Deprecate Hasher#putUnencodedChars and HashFunction#putUnencodedChars. Update callers to add overries/delegations where necessary. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44090897|0|0|7|341|3042|273|85|21|20|7|3|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.hash.PrimitiveSink, newSymbol=com.google.common.hash.PrimitiveSink.putUnencodedChars(java.lang.CharSequence)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.hash.Hasher, newSymbol=com.google.common.hash.Hasher.putUnencodedChars(java.lang.CharSequence)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.hash.HashFunction, newSymbol=com.google.common.hash.HashFunction.hashUnencodedChars(java.lang.CharSequence)]
597cceece45bb4f7e05fe1bb764064f472febd35|Wed Mar 20 21:08:06 CET 2013|Add Resource Timing CORS header: Timing-Allow-Origin. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44198561|0|0|1|341|3042|274|85|15|6|8|0|
7fc6a0651ad62ff8670a6f0b5cce74af50d8f4f1|Wed Mar 20 21:11:28 CET 2013|Migrate users of the deprecated HashFunction#hashString(CharSequence) to HashFunction#hashUnencodedChars(CharSequence). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44204656|0|0|0|341|3042|274|85|14|1|6|0|
04314940cc5cf73c9aa638764edfd4261d2ebe17|Wed Mar 20 21:18:55 CET 2013|Release Funnels.sequentialFunnel in Guava 15.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44211868|0|0|1|341|3043|274|85|14|7|6|0|
80d067b049456d9c13951bd7726e69a65e635d65|Wed Mar 20 21:22:19 CET 2013|Typos. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44212313|0|0|1|341|3043|274|85|15|11|6|0|
0013fd3b1536ee4fc6ae5b4028f9e750a66b8729|Wed Mar 20 21:25:33 CET 2013|Guava issue 1337: fix potential race with Cache.refresh. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44213416|0|0|1|341|3043|274|85|18|85|6|0|
8f7edd23d144c9886a3258c95e1915b598cd95fe|Fri Mar 22 15:37:32 CET 2013|Updated AbstractPackageSanityTests javadoc to replace 'public' with 'visible' since by default package-visible classes and methods are also tested. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44268725|0|0|0|341|3043|274|85|17|2|6|0|
7bcb8e4836be241f88b4467a39cf8a0a686afdf2|Fri Mar 22 15:40:53 CET 2013|Hasher#putString(CharSequence) to Hasher#putUnencodedChars(CharSequence) HashFunction#hashString(CharSequence) to HashFunction#hashUnencodedChars(CharSequence) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44304885|0|0|1|341|3043|274|85|15|7|6|0|
58fc10825fd1add23d5631aa1d587de942363507|Fri Mar 22 15:47:24 CET 2013|Change Futures.allAsList and .successfulAsList to return an unmodifiable list. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44306369|0|0|1|341|3043|274|85|16|50|9|0|
56244f6d37cc6d99cd9b68cfd50445e556b8f4de|Mon Mar 25 15:50:58 CET 2013|Fix bug in statistics benchmarks implementation of Knuth algorithms. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44319466|0|0|0|341|3043|274|85|17|1|8|0|
3212103020bedd2abf04927204f61f87bfcf8745|Mon Mar 25 16:01:49 CET 2013|Make TypeResolver public in Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44329762|0|0|1|342|3045|274|85|16|49|6|0|
5401a778bfddd5ff34a3902d6c756479149602e4|Wed Mar 27 21:20:01 CET 2013|Some more refactoring of TypeResolver.TypeTable. I was in a hurry. The TypeTable code wasn't in a form I'd LGTM. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44403308|0|0|1|342|3045|274|85|14|44|7|0|
525185ecd37d23e9f509faad549a248243b97137|Wed Mar 27 21:20:50 CET 2013|Fix up some javadoc in TypeToken re: TypeLiteral. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44411479|0|0|1|342|3045|274|85|15|54|8|0|
90a9774f3bfde1d0354368592e36814235cb12d5|Wed Mar 27 21:21:50 CET 2013|Add static factory methods to Stopwatch: createStarted() and createUnstarted(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44465501|0|0|1|342|3049|274|85|17|9|6|0|
8914ff92b9e8e788a16b56f95dc0f0377c43f5c0|Wed Mar 27 21:22:43 CET 2013|Throws UOE in MutableTypeToInstanceMap Entry#set() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44465568|0|0|1|342|3050|274|85|17|45|8|2|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ForwardingMap.entrySet(), newSymbol=com.google.common.reflect.MutableTypeToInstanceMap.entrySet()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.ForwardingMap.entrySet(), newSymbol=com.google.common.reflect.MutableTypeToInstanceMap.entrySet()]
c6c66536dc903ef9e870d3c8562d25808bbe66b2|Wed Mar 27 21:23:53 CET 2013|Add Class-Path cycle detection to avoid StackOverflowError ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44466033|0|0|1|342|3050|274|85|15|53|6|0|
2643ac3c65213b1bb222d6eb971d1f282c6d2e8e|Wed Mar 27 21:26:27 CET 2013|Copy ByteStreams.asByteSource(byte[]) to ByteSource.wrap(byte[]). Copy CharStreams.asCharSource(String) to CharSource.wrap(CharSequence).|1|0|2|342|3052|274|85|21|49|6|0|
09997a5005a53577084dd70da30e46bdf608d0a1|Wed Mar 27 21:27:36 CET 2013|Nullability fixes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44514905|0|0|2|342|3052|274|85|18|72|10|0|
6066b33620f52cb4a8d30c272527f8118c94881f|Wed Mar 27 21:28:29 CET 2013|Replace new Stopwatch().start() with Stopwatch.createStarted(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44515274|0|0|1|342|3052|274|85|20|81|6|0|
0eafd7694a41c40f3dee6c3e8c1cae0acd6a2dc7|Wed Mar 27 21:29:19 CET 2013|Change ByteStreams.asByteSource calls to ByteSource.wrap and deprecate it. Change CharStreams.asCharSource calls to CharSource.wrap and deprecate it. Change both deprecated methods to delegate to the replacement method. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44516201|0|0|2|342|3052|274|87|18|19|6|0|
dbfb72a685141c6f5aab70fb9d1ba64428a2ac36|Thu Mar 28 17:14:57 CET 2013|new Stopwatch(); -> Stopwatch.createUnstarted(); ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44556107|0|0|2|342|3052|274|87|16|87|7|0|
470f9b72db9a335df1b17146898caef346bc814f|Thu Mar 28 22:51:58 CET 2013|Reduce redundant iterator creation in Multimap.putAll(K, Iterable<? extends V>) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44559924|0|0|1|342|3052|274|87|20|49|4|0|
6e7895aefec0dc661ee8caf10c73da7f45ec080e|Thu Mar 28 22:53:08 CET 2013|Deprecate the constructors in com.google.common.base.Stopwatch and Stopwatch#elapsedMillis and #elapsedTime. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44568679|0|0|1|342|3052|274|87|17|8|6|0|
9775718339e7cfe0c0c562230eef10ff5c08a070|Thu Mar 28 22:54:12 CET 2013|A few small hash changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44571077|0|0|1|342|3052|274|87|17|12|7|0|
5f2671256b389097c0712875936df4f29a1b7237|Mon Apr 01 16:48:08 CEST 2013|Fix typo in javadoc: the name of the method to override is "compare", not "compareTo". ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44580155|0|0|1|342|3052|274|87|16|54|6|0|
59e9ebc364323a38926869268f0528cdc94bbf2a|Mon Apr 01 16:51:32 CEST 2013|Add isPrimitive(), wrap(), and unwrap() methods to TypeToken ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44620879|0|0|1|342|3055|274|87|18|54|5|0|
357dea3f21b11b054727df3a6e551b7988ec3b70|Mon Apr 01 16:53:58 CEST 2013|Fix a copy/paste mistake in CharSource javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44648058|0|0|1|342|3055|274|87|16|42|8|0|
36bdd84d73ea42ce598240bd3167a8660d7f66e8|Mon Apr 08 18:27:00 CEST 2013|Convert GWT-only tests into normal tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44698403|0|0|0|342|3055|274|87|15|2|4|0|
efa4d2b38592c8ab69b560733eac47d3914e78e7|Mon Apr 08 18:28:12 CEST 2013|remove the queuedListeners lock from both ServiceManager and AbstractService.|1|0|2|342|3055|274|87|18|70|6|0|
edbbda5f140e5347819e6202de274f353dac8ffd|Mon Apr 08 18:34:30 CEST 2013|Fall back to countByReading if InputStream available always returns zero. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44796829|0|0|1|342|3055|274|87|20|43|7|0|
0863294405ea8c7ba302e25626703cf8db318c14|Mon Apr 08 18:35:46 CEST 2013|Mention the use of slice(offset, length) for viewing a range in the array to the ByteSource.wrap javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44798251|0|0|1|342|3055|274|87|15|43|5|0|
8768c424f9809dd34ded53b222610ff4d0992b86|Mon Apr 08 18:37:02 CEST 2013|Add nullWriter(), a Writer that discards everything written to it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44805209|0|0|1|342|3056|274|87|16|15|6|0|
4c27d5012bf6cb2605bcc9f5fca398351c72cb7e|Mon Apr 08 18:39:41 CEST 2013|Add ByteSource.empty() and CharSource.empty(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44815909|0|0|2|342|3058|274|87|18|48|7|0|
09f11c0477dc918147cafbc70268d7b4f9f4df5c|Sat Apr 13 20:31:40 CEST 2013|Convert GWT-only tests into normal tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=44698403|0|0|0|342|3058|274|87|30|2|4|0|
f8d47319ee710ecbf55eab44016a8f3355c6d7b1|Sat Apr 13 20:52:20 CEST 2013|Internal refactoring to make it easy to expose a factory method that configures the burst size ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45016791|0|0|1|342|3058|274|87|20|17|5|0|
cf569f9cdea18b258aade8a268603fa6113cb184|Sat Apr 13 20:53:23 CEST 2013|Closer.register supports null closeable ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45058002|0|0|1|342|3058|274|87|17|13|5|0|
8cc057266b0704e98678df6d595affca17b59299|Sat Apr 13 20:56:59 CEST 2013|Apply test.include to testlib tests as well as main tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45103307|0|0|0|342|3058|274|87|17|2|8|0|
e4ddb97b0403cf90f18ea70823e2224c93234d8b|Sat Apr 13 20:58:16 CEST 2013|Provide ExecutorService decorators that will rename the threads in which its tasks run for the duration of the task.|2|0|2|342|3058|274|87|18|48|5|0|
f03c9d816c1c5d149a983db8097543ad845dafff|Sat Apr 13 20:59:20 CEST 2013|Use the renamingDecorator to ensure that Services always run in appropriately named threads.|0|0|3|342|3058|274|87|17|46|5|0|
31978328af5af66bc67bcbdda12b20710c2cfcad|Sat Apr 13 21:02:12 CEST 2013|Run "normal" GWT tests in public Guava. We still don't run the suite-builder tests, so the run is incomplete, but at least it's fairly quick: Tests run: 6667, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 155.218 sec|0|0|0|342|3058|274|87|93|2|7|0|
fb49505b676b1ec84eda8dd430ee04d848f17f62|Mon Apr 15 20:36:42 CEST 2013|add csiro.au as TLD since is not listed on Mozilla PSL ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45307952|0|0|1|342|3058|274|87|65|39|8|0|
74f261f7f205ed04e528a6591e85cd6b11eb238f|Tue Apr 16 18:46:52 CEST 2013|fix some docs in ExecutionQueue ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45311589|0|0|1|342|3058|274|87|21|46|6|0|
a257c66ce0695b9052cccfffd51d5dc063d4b092|Tue Apr 16 18:49:18 CEST 2013|Added code example to AbstractInvocationHandler to suggest users to use Reflection.newProxy(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45317940|0|0|1|342|3058|274|87|17|6|7|0|
0beafad032035936df0898c71229d63acd57a0ac|Mon Apr 22 16:06:23 CEST 2013|Release base escaper classes, HTML escapers, XML escapers, and URL escapers into Guava. Keep the source-code escapers internal until we figure out which ones to recommend and what to name them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45374049|13|0|0|355|3094|274|87|31|17|5|0|
f331dcf67a97ab7853076e56cd62a1d6bbeb25c1|Mon Apr 22 16:44:21 CEST 2013|Reshuffling from removal of internal-only method. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45408398|0|0|0|355|3094|274|87|24|2|15|0|
18cb0eeb06aadd86101b6fe20be7f7d896231bd7|Mon Apr 22 16:49:27 CEST 2013|Remove Platform.clone(), along with various supersource versions. The last non-test caller was removed in CL 45290173. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45408889|0|0|1|355|3094|274|87|24|51|8|0|
2f3fc9c4c2952acad8ba0159cbf426528de5631c|Mon Apr 22 16:54:07 CEST 2013|Add tests for common aliases of SHA1. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45427688|0|0|0|355|3094|274|87|22|2|5|0|
cafb21d020445be9819d047961b2c8c3d8b956db|Mon Apr 22 16:58:58 CEST 2013|Added TypeVisitor to make it easier to navigate type hierarchy, and used it to replace a few code duplications.|1|0|3|355|3094|274|87|20|59|6|0|
953e11352bbcb297987c81d1158f0c46f16cc054|Mon Apr 22 17:04:04 CEST 2013|Fixed a bug in rejectTypeVariable() where we failed to account for the owner type's type variables. For example:|0|0|1|355|3094|274|87|23|55|9|0|
580fdcd57e5b1eb7fe860be0fe7c03f41d39b267|Mon Apr 22 17:09:14 CEST 2013|Add a test to demonstrate that hashBytes(Ints.toByteArray(i)) == hashInt(Integer.reverseBytes(i)). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45476839|0|0|0|355|3094|274|87|20|2|6|0|
134fe75cbcfc2fbc319ab31d0a4a1e7dcd372bba|Mon Apr 22 17:23:04 CEST 2013|Add links to the hash function comparisons to the Hashing javadocs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45527021|0|0|1|355|3094|274|87|18|12|6|0|
e5097404cee4415cb39185dc157b311f017c6c76|Mon Apr 22 18:10:50 CEST 2013|Fix @since for EscaperAsserts. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45601740|0|0|0|355|3094|274|87|18|2|8|0|
4a0a5de238d5f562133552f7ee01a521771a061f|Mon Apr 22 20:41:53 CEST 2013|Remove unused HTML dependency. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45608957|0|0|0|355|3094|274|87|20|2|9|0|
b1cd575950858c4c831e9260b4a710ca79de9c1a|Mon Apr 22 21:41:48 CEST 2013|Fix apparently harmless but still incorrect references to module name. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45613704|0|0|0|355|3094|274|87|19|2|6|0|
6c3884a677d2e4194be338367cd5d3b0da4ee73a|Tue Apr 23 00:15:50 CEST 2013|Change FileByteSource.read() to not unnecessarily copy the byte array in the normal case where the file size doesn't change.|0|0|1|355|3094|274|87|20|50|6|0|
e758192597c410ffed5ff2603ed15f6e6fdb74dc|Tue Apr 23 22:25:26 CEST 2013|CHANGE: Make HostAndPort GwtCompatible by getting rid of a regex. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45669298|0|0|1|355|3094|274|87|19|12|8|0|
24b19640d83ad02145e6cef5d6adf1d87e912ed4|Wed Apr 24 23:41:45 CEST 2013|Allow HashCode#padToLong to work with hashs that have <32 bits. Fix a small typo in Hasher javadocs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45717814|0|0|3|355|3094|274|87|22|16|8|0|
7a844bbe7806a613d3500df616f7283d72f85453|Fri Apr 26 20:26:42 CEST 2013|Sort and removed unused imports in com/google/common. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45827926|0|0|2|355|3094|274|87|24|16|7|0|
3a03624df74595b4dd953a4ca9fed43408249ca4|Tue Apr 30 01:53:04 CEST 2013|Changed Invokable.from(constructor).getReturnType() to return ParameterizedType instead of raw class when the class is parameterized. This makes constructor invokable more consistent with factory method invokable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45912432|0|0|1|355|3094|274|87|22|41|5|0|
9a36716497512f94c99c88d3c2c17c995ea0348b|Wed May 01 20:29:22 CEST 2013|Remove incorrect test using UTF_16LE. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45985871|0|0|0|355|3094|274|87|20|2|8|0|
826bfdcdcb4d07dc7483a03de70b09a37c5d4024|Wed May 01 20:33:20 CEST 2013|Use hashFoo() shortcuts instead of newHasher().putFoo().hash(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=45995812|0|0|0|355|3094|274|87|19|2|6|0|
1b9f08d9523a9999f95d340863d91b010d010088|Wed May 01 20:34:55 CEST 2013|Allow a max size of 0 for EvictingQueue ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46003229|0|0|1|355|3094|274|87|21|37|6|0|
dedbc1ba5baa4f6210323e78587cf23651a185f3|Wed May 01 20:35:59 CEST 2013|Change Service.Listener from an interface to an abstract class with no-op implementations of all the callbacks. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46026613|0|0|4|355|3094|274|87|21|64|8|1|BC[kind=CLASS_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.Service$Listener, newSymbol=com.google.common.util.concurrent.Service$Listener]
69f6172fe06f1d48036bfbe20c99a7616b299353|Mon May 06 17:29:14 CEST 2013|Fix typo in Maps.immutableEnumMap. See https://code.google.com/p/guava-libraries/issues/detail?id=1397 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46145330|0|0|1|355|3094|274|87|24|76|10|0|
dc931f9621ab1865e67fbf026590b6371e4a19f3|Mon May 06 17:30:17 CEST 2013|Guava issue 1322: deal with a potential overflow issue in ImmutableTable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46160775|0|0|1|355|3094|274|87|23|39|6|0|
c565dcbdafed1ccc65582e6bf1f2245c8a6be7d0|Tue May 07 02:26:31 CEST 2013|Change ServiceManager.Listener to be an abstract class with empty implementations of its callbacks instead of an interface. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46244288|0|0|1|355|3094|274|87|25|67|6|1|BC[kind=CLASS_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ServiceManager$Listener, newSymbol=com.google.common.util.concurrent.ServiceManager$Listener]
50c376c305a85881acb049b09dd5edeb854739ba|Sat May 11 01:52:36 CEST 2013|Add a test for hashInt() vs. a loop w/ putByte(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46295877|0|0|0|355|3094|274|87|19|2|6|0|
ceadf9a57ade329799f0bb61fafe77c5dc98d1dc|Sat May 11 01:55:35 CEST 2013|Remove the rethrow Error behavior from AbstractFuture. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46315153|0|0|3|355|3094|274|87|20|85|6|0|
1e3cad3fb5bfce262e045a852591d886f7801afd|Sat May 11 01:57:04 CEST 2013|Add Funnels#unencodedCharsFunnel (and deprecate Funnels#stringFunnel()). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46350462|0|0|1|355|3095|274|88|25|9|8|0|
65be1c541649612d6fe3aeac68da57a24521efe3|Sat May 11 01:58:31 CEST 2013|Add some missing dependencies in a GWT module.|0|0|0|355|3095|274|88|21|2|4|0|
ab384d44a6e6c14671d5c5a5345a9ddd14052162|Sat May 11 02:00:39 CEST 2013|Update Mozilla PSL. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46368166|0|0|1|355|3095|274|88|19|38|6|0|
049475ece6864ddcff3f337373e33a0c49d719df|Sat May 11 02:02:34 CEST 2013|Some whitespace edits|0|0|1|355|3095|274|88|19|7|9|0|
0aa888b199bc12eae29633c71a424bd28750961b|Sat May 11 02:07:53 CEST 2013|Fix the logging in Futures.CombinedFuture such that:|0|0|1|355|3095|274|88|20|56|5|0|
8a7df009f544f19f7538cfdd03e9dabed2660e51|Sat May 11 02:09:26 CEST 2013|fixed NPE caused by inaccessible directory, as reported by Guava issue 1407. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46478011|0|0|1|355|3095|274|88|23|49|6|0|
7a4b20a23965944cdcf97bc67643be5672816df2|Mon May 13 21:07:36 CEST 2013|Use com.google.caliper.legacy.Benchmark instead of com.google.caliper.Benchmark. This CL facilitates the move from a superclass-based API to an annotation-based API. Benchmark and legacy.Benchmark are equivalent classes, so this is NOT a behavior changing CL.|0|0|0|355|3095|274|88|30|2|8|0|
d5f00005a2215ecbee0f8e1efc5eb90417c7a604|Thu May 16 22:27:58 CEST 2013|Change SynchronizedEventHandler to use a synchronized block rather than just synchronizing the method. Since the method body does nothing but call the super method, it (and its synchronization) was apparently being optimized away under a certain JVM: https://code.google.com/p/guava-libraries/issues/detail?id=1403 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46627764|0|0|1|355|3095|274|88|26|6|5|0|
15ed775e5e27bf12b6ffe7cf49debd2029295672|Thu May 16 22:29:39 CEST 2013|Add reference to Funnels from Funnel javadocs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46629147|0|0|1|355|3095|274|88|20|10|7|0|
5a7005987321b0392484f7bd42385c8b5c3826f9|Thu May 16 22:30:59 CEST 2013|Give removal dates (releases) for HashFunction#hashString(CS) and Hasher#putString(CS). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46638784|0|0|2|355|3095|274|88|19|14|4|0|
542600dcff42f6846f662ac3a946348a7cf8ed3c|Fri May 17 23:19:07 CEST 2013|Override ImmutableBiMap.containsValue() to use the O(1) implementation, as per Guava bug 1416. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46744049|0|0|2|355|3095|274|88|20|52|8|0|
7f1c522ef811e207367e974bf1c93e327e9b4dfb|Fri May 17 23:20:41 CEST 2013|Implement Object#equals() and #hashCode() for stateful HashFunctions. Add tests to verify the behavior. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46751376|0|0|3|355|3095|274|88|24|20|6|0|
007c622ab7d2e691172cc6b3251d79c4411efd6f|Fri May 17 23:23:54 CEST 2013|Improve error messaging in EqualsTester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46753546|0|0|0|355|3095|274|88|21|2|6|0|
4c48f32b7a9edb93de049ea2ca2b4bad83d386f2|Fri May 17 23:25:25 CEST 2013|Give removal dates for Stopwatch ctors. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46791249|0|0|1|355|3095|274|88|19|8|7|0|
4855582f6264aa7bae5b430d9ebf79f40235b35e|Mon May 20 19:31:06 CEST 2013|Shuffling from internal-only changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46844311|0|0|0|355|3095|274|88|18|2|6|0|
21f726080b3d6d5ce8662271364b0971b2dc6734|Tue May 21 16:20:45 CEST 2013|Reshuffling from internal-only changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46885542|0|0|0|355|3095|274|88|20|2|6|0|
04f34ed3e87104aaefb17d3da6ef57ca9aa720a4|Tue May 21 18:22:17 CEST 2013|Change return type of openBufferedStream() on ByteSource, ByteSink and CharSink to the base stream type rather than the Buffered* type to allow implementations to avoid unnecessarily adding additional buffering to streams that do not benefit from it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46926342|0|0|3|355|3095|274|88|23|49|6|3|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.io.ByteSource.openBufferedStream(), newSymbol=com.google.common.io.ByteSource.openBufferedStream()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.io.ByteSink.openBufferedStream(), newSymbol=com.google.common.io.ByteSink.openBufferedStream()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.io.CharSink.openBufferedStream(), newSymbol=com.google.common.io.CharSink.openBufferedStream()]
f585a2ee4c14ddcdcee3f48b370c05a6fe5ecc2b|Tue May 21 22:07:49 CEST 2013|Add tests to the asMap() views of ListMultimap, SetMultimap, and SortedSetMultimap to verify that the asMap().values() are of the correct type (List, Set, SortedSet) at runtime. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46939057|0|0|0|355|3095|274|88|22|2|7|0|
a829dfef2d7ef2df54212d8fca416f4a3efdcef4|Tue May 21 22:12:30 CEST 2013|Add Multimaps.asMap() helpers that return a Map with more strongly-typed values than ListMultimap#asMap(), etc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46939830|0|0|4|355|3099|274|88|23|59|6|0|
2aa76241fb4d27b78d4eaa074c6f1f502e68056a|Tue May 21 22:16:37 CEST 2013|Delete tests from AbstractMultimapTest that duplicate tests in MultimapSizeTester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46940075|0|0|0|355|3099|274|88|31|2|6|0|
ad6a935e15ca12b3c429b753efa6876e549a7c29|Tue May 21 22:43:06 CEST 2013|Remove tests of Multimap.get() from AbstractMultimapTest that are duplicated in MultimapGetTester ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46942143|0|0|0|355|3099|274|88|30|2|8|0|
1feb7a1a7bc73ca4b23ce576559775ffb8ff364c|Tue May 21 23:35:16 CEST 2013|Add the TestSuiteBuilder for Multimap.values(), and fix Multimaps.filterXXX to pass those tests properly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46945446|1|0|2|355|3099|274|88|26|50|6|0|
2b96e112a9383ee72c957a15012ece829abbbbec|Tue May 21 23:39:26 CEST 2013|Replace Multimap.putAll(K, Iterable) tests from AbstractMultimapTest with more exhaustive tests in MultimapPutIterableTester ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46945862|0|0|0|355|3099|274|88|25|2|7|0|
16cbef3e29addf218fa6872282575c7840eb8ca4|Wed May 22 00:00:59 CEST 2013|Add tester to MultimapTestSuiteBuilder for Multimap.putAll(Multimap) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46946989|0|0|0|355|3099|274|88|30|2|9|0|
6a80b2ed3b2f841dbb67e73bd268af21b5cf651a|Wed May 22 00:05:40 CEST 2013|Migrate all remaining Multimap.replaceValues tests from AbstractMultimapTest to MultimapReplaceAllTester ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46948091|0|0|0|355|3099|274|88|30|2|6|0|
9faddd05f325ad1e885abafc9f6d96eb9844bd58|Wed May 22 00:27:06 CEST 2013|Delete tests from AbstractMultimapTest of the multimap views in isolation, that is, tests that initialize the multimap, get the view, and don't reference the multimap afterwards.|0|0|0|355|3099|274|88|26|2|6|0|
af700bf70e22351bacafea3525b9d3bb494b3559|Wed May 22 00:48:13 CEST 2013|Remove tests from AbstractListMultimapTest that are redundant with ListMultimapPutTester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46950561|0|0|0|355|3099|274|88|25|2|8|0|
80f11e8ca15c1080d962c372f3a30457a8649671|Wed May 22 00:49:47 CEST 2013|Delete Multimap.contains{Key,Value} tests from AbstractMultimapTest that are redundant with MultimapContains{Key,Value}Tester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46951020|0|0|0|355|3099|274|88|28|2|10|0|
12f610ed3f6e78289505fe102b27075954f941f4|Wed May 22 00:50:54 CEST 2013|Add explicit type parameters in FilteredMultimapValues to make JDK6 happy. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46951071|0|0|1|355|3099|274|88|27|37|8|0|
91305e4d1ebee9da5de58e1fac09293db154f1eb|Wed May 22 15:13:01 CEST 2013|Remove get().subList() tests from AbstractListMultimapTest that are redundant with ListSubListTester in the derived test suite for ListMultimapTestSuiteBuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46951757|0|0|0|355|3099|274|88|22|2|6|0|
ae2c37b1ba5de61df02e1f018e294f255c071c32|Wed May 22 15:17:39 CEST 2013|Add MapToStringTester and MultimapToStringTester, and fix ForwardingNavigableMap.StandardDescendingMap.toString() to correctly iterate in descending order. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46952541|0|0|1|355|3099|274|88|28|76|13|0|
73365e53f81c02e231c9e3a68276d74a61408373|Wed May 22 20:43:51 CEST 2013|Remove tests from AbstractMultimapTest that overlap with MultimapRemoveTester and MultimapRemoveAllTester in MultimapTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46986379|0|0|0|355|3099|274|88|22|2|6|0|
d09f9c94653ae470050f55032df7ad81eb7aef3f|Wed May 22 20:48:26 CEST 2013|Migrate Multimap.clear() tests (and tests to clear Multimap views) to MultimapClearTester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46987144|0|0|0|355|3099|274|88|26|2|7|0|
ad68eedd50815c0b1f11aa5cdc26f6c033096979|Wed May 22 20:57:29 CEST 2013|Add test suites for Multimap.equals to MultimapTestSuiteBuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46989151|0|0|0|355|3099|274|88|30|2|10|0|
76f33bbfb9c0f5954461ce705a5c4b7f71e26ef9|Wed May 22 21:01:33 CEST 2013|Remove tests for Multimap.get from AbstractMultimapTest that duplicate tests in MultimapTestSuiteBuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=46990147|0|0|0|355|3099|274|88|33|2|6|0|
c84d0031c8af6e00a9bb25a86bade4cf1d5af9ed|Fri May 24 17:58:36 CEST 2013|Guava issue 1423: fix TreeMultimap.asMap().headMap to properly register inclusivity argument ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47004337|0|0|1|355|3099|274|88|29|52|6|0|
79d4012841dd3ec708a50b97924dd833ebed162d|Fri May 24 17:59:35 CEST 2013|Delete completely unused ConcurrentMapInterfaceTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47004919|0|0|0|355|3099|274|88|20|2|6|0|
b48bd8cb219892d07c40abef4fa11ac892b92d4b|Fri May 24 18:00:35 CEST 2013|Add application/protobuf mime type, from http://tools.ietf.org/html/draft-rfernando-protocol-buffers-00 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47014458|0|0|1|355|3099|275|88|18|60|7|0|
3d0bd8ca07c9bfd7605cc703e61c5637cf16e0c5|Fri May 24 18:05:09 CEST 2013|Trivial cleanups: - Remove stray paren in Ordering Javadoc. - Fix runnable/executor confusion in ExecutionQueue Javadoc. - Fix MockingModuleTester and FastStackTracer links that refer to type parameter T instead of its valid name, the erased type Object. Fix a few @see errors while there. - Remove "This class is GWT compatible" comments, which have been redundant since we began using @GwtCompatible in testlib code. - "unreasonable slow" => "unreasonably slow" - Fix continued-line indent in Invokable. - Insert spaces in cast expressions. - Add missing spaces before open braces. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47059317|0|0|13|355|3099|275|88|68|149|17|0|
b14e334fd2cc3377470e02dea7b7f189ef5be776|Tue May 28 07:00:11 CEST 2013|Add TestSuiteBuilder tests for Maps.transform* ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47098965|0|0|0|355|3099|275|88|46|2|9|0|
b95fcde29c1ab99cfd08fabeb1005bde6f060f94|Tue May 28 07:01:31 CEST 2013|Add MapTestSuiteBuilder tests for MapConstraints.constrainedMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47100566|0|0|0|355|3099|275|88|20|2|6|0|
791e4add29fa08a760816173a41a4e92b9a7f62d|Tue May 28 07:02:52 CEST 2013|Migrate AbstractMultimapTest tests for Multimap.entries() to a MultimapTestSuiteBuilder tester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47101119|0|0|0|355|3099|275|88|26|2|6|0|
bb81dac792bbbaa3072a0a49f91cb66d63e0894c|Tue May 28 07:04:24 CEST 2013|Somewhat trivial cleanups: - Use Sets.removeAllImpl in Maps.EntrySet.removeAll. - Work around bogus unchecked warning: "required: Iterator<?> / found: I" - Remove derived size field from ReverseImmutableList. - Override builder() in ContiguousSet to supply more appropriate Javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47102093|0|0|4|355|3100|275|89|31|85|13|5|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableSortedSet.descendingIterator(), newSymbol=com.google.common.collect.ImmutableSortedSet.descendingIterator()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.SortedSet.last(), newSymbol=com.google.common.collect.ImmutableSortedSet.last()],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.collect.ImmutableSortedSet.reverseOrder(), newSymbol=com.google.common.collect.ImmutableSortedSet.reverseOrder()],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.collect.ImmutableSortedSet.naturalOrder(), newSymbol=com.google.common.collect.ImmutableSortedSet.naturalOrder()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.SortedSet.first(), newSymbol=com.google.common.collect.ImmutableSortedSet.first()]
dd2d69a8eed71e0404350c31d6ba16cea496279d|Tue May 28 07:05:52 CEST 2013|Make sure all implementations being tested by SortedMapInterfaceTest are also tested with SortedMapTestSuiteBuilders, and remove tests from SMIT that are redundant with SortedMapNavigationTester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47103324|0|0|2|355|3100|275|89|28|77|10|0|
292320335ac395b15352881bb4f5f3a0e6d3e43b|Tue May 28 07:07:33 CEST 2013|Preserve SortedSet-ness of value collections across serialization. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47106820|0|0|2|355|3100|275|89|33|59|6|0|
36bef97796fa79d49a4d8592a599b520acdaf3e9|Tue May 28 07:10:16 CEST 2013|Migrate AbstractMultimapTest tests for Multimap.asMap() to much more exhaustive and detailed MultimapTestSuiteBuilder testers. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47111812|0|0|0|355|3100|275|89|29|2|7|0|
a912609acc77b5694c05d53270fcb00c61f4ad7b|Tue May 28 07:13:40 CEST 2013|Remove no-op main methods from Caliper benchmarks. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47194759|0|0|0|355|3100|275|89|39|2|7|0|
1eb9f7dc7ae032be53db39d107e0b74dbc810f26|Wed May 29 23:30:25 CEST 2013|Instead of suppressing iterator().remove() tests, make iterator.remove() support an independent property of a collection implementation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47238893|0|0|1|355|3100|275|89|41|54|7|0|
8e796ca3f7146f6929f711f35e03983e6e71f468|Wed May 29 23:31:24 CEST 2013|Migrate tests for Multimap.keys() from AbstractMultimapTest to MultimapTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47273152|0|0|0|355|3100|275|89|34|2|8|0|
2a0b2600f4a01d67856177c7a03fcd8b979dcb3f|Wed May 29 23:32:27 CEST 2013|Clean up the last Multimap.entries() test in AbstractMultimapTest ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47274767|0|0|0|355|3100|275|89|28|2|7|0|
ef05341d7de489e653e4abac4294ccff409704a2|Wed May 29 23:33:27 CEST 2013|Migrate Caliper benchmarks from the old, superclass-based API to the new, annotation-based API.|0|0|0|355|3100|275|89|39|2|8|0|
0cc0c30a58251b5e48655c368bde3b17867ef46e|Wed May 29 23:34:30 CEST 2013|Migrate tests for Multimap.keySet() from AbstractMultimapTest to MultimapTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47283976|0|0|0|355|3100|275|89|32|2|7|0|
2653e5bbecfee0dc8bf502c48975740e3a6453eb|Wed May 29 23:35:29 CEST 2013|Add CollectionFeature.SUPPORTS_ITERATOR_REMOVE to MapTestSuiteBuilder for MutableTypeToInstanceMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47287341|0|0|0|355|3100|275|89|26|2|6|0|
f9e80f84404a1bb1fcae31ee325e6661e74e6790|Mon Jun 03 18:03:25 CEST 2013|Deprecate BaseEncoding methods that use Input/OutputSupplier and hide them internally. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47292279|0|0|1|355|3100|275|91|18|17|5|0|
90b6dbd70736b4426170f8fbab2e4a3c0a5b5a10|Mon Jun 03 18:04:50 CEST 2013|Add FileBackedOutputStream.asByteSource(), a ByteSource-returning method to replace getSupplier(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47293826|0|0|1|355|3101|275|92|21|9|7|0|
4975140c1cf16da2ff3a25eabaed9adf4bb7701a|Mon Jun 03 18:06:13 CEST 2013|Use assertNotSame(x, y) in place of assertTrue(x != y) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47307058|0|0|0|355|3101|275|92|21|2|8|0|
f6a5641740f84e4dd08557061632c4d8325e3763|Mon Jun 03 18:07:47 CEST 2013|Remove tests from AbstractSetMultimapTest redundant with tests from SetMultimapPut(All)Tester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47338686|0|0|0|355|3101|275|92|22|2|6|0|
2118534d13aafd68eac74c43111b6cc6081f3dd8|Mon Jun 03 18:09:16 CEST 2013|Delete tests from AbstractListMultimapTest that duplicate ListTestSuiteBuilder tests automatically generated by MultimapTestSuiteBuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47341744|0|0|0|355|3101|275|92|23|2|5|0|
86f50adc5e6a3b1b9c39a02a162c1570942f473f|Mon Jun 03 18:11:46 CEST 2013|Clean up most usages of Input/OutputSupplier in tests in common.io. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47348463|0|0|0|355|3101|275|92|23|2|5|0|
bf56054562666d43b275579cd4012c3e82448dfc|Mon Jun 03 18:13:05 CEST 2013|Use a radix trie approach to serializing TLDs for TldPatterns.java to minimize code size. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47356985|1|0|1|355|3101|275|92|20|46|5|0|
2b3e4dc71d31eaf168d9881f23061e35f6b01d6d|Mon Jun 03 18:14:29 CEST 2013|Optimize UnsignedBytes.lexicographicalComparator() by using Long.numberOfTrailingZeros instead of an explicit binary search to identify the first byte where the two inputs differ.|0|0|1|355|3101|275|92|21|15|5|0|
ddf4239134e1ab7cf41560044bf782d900d1e762|Tue Jun 04 16:47:40 CEST 2013|Delete Multiset.count() tests from AbstractMultisetTest that are redundant with MultisetCountTester in MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47507664|0|0|0|355|3101|275|92|23|2|6|0|
21a6374ff7c3d2675e69795d8788c78714c2c5cd|Tue Jun 04 16:49:05 CEST 2013|Migrate Multiset.remove() tests from AbstractMultisetTest to MultisetRemoveTester, split off from MultisetWritesTester, as part of the MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47508469|0|0|0|355|3101|275|92|25|2|8|0|
e90e3c84968b4dd67ca4a07f8db0e645b43eedfc|Tue Jun 04 16:50:01 CEST 2013|Remove Multiset.iterator() tests redundant with the CollectionIteratorTester tests from MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47509316|0|0|0|355|3101|275|92|25|1|5|0|
de16613436dacf69aa5d1216da24ac3c5de7a569|Tue Jun 04 20:03:26 CEST 2013|Remove redundant Multiset.contains() tests from AbstractMultisetTest, which are already covered in CollectionContainsTester as part of MultisetTestSuiteBuilder, and add a couple more multiset-specific tests.|0|0|1|355|3101|275|92|24|44|5|0|
59c28bb1365a31cd22bf42b74764bd7508ee3fd1|Tue Jun 04 20:04:54 CEST 2013|Migrate tests for Multiset.add from AbstractMultimapTest to MultisetAddTester, split off from MultisetWriteTester as part of MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47542388|0|0|0|355|3101|275|92|26|2|5|0|
efdc4065a1c234beaa61120c753d0a8cc991c84e|Tue Jun 04 20:05:53 CEST 2013|Remove tests of Multiset.elementSet() that are redundant with the SetTestSuite generated for Multiset.elementSet() by MultisetTestSuiteBuilder.  (Some tests will still need to be migrated.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47543353|0|0|0|355|3101|275|92|23|2|5|0|
212e5bb0ab79a02ac3ccbfd306191730ef99e71e|Tue Jun 04 22:19:22 CEST 2013|Remove tests of Multiset.entrySet() from AbstractMultisetTest that just duplicate tests from the entrySet() SetTestSuite generated by MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47545853|0|0|0|355|3101|275|92|21|2|5|0|
1e53ba78519220d8780d7542471cb5a8698fc604|Tue Jun 04 22:21:08 CEST 2013|Finish migrating Multiset.remove() (and removeAll, and retainAll) tests to MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47547148|0|0|0|355|3101|275|92|24|2|6|0|
be16c8a4d33fa0e519f53bc07b66d514911c9ba6|Tue Jun 04 22:22:52 CEST 2013|Added support for days, hours, and minutes to chooseUnit and abbreviate methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47548131|0|0|1|355|3101|275|92|26|9|8|0|
92d3b5e287634d7254ae823544dcc1611bd0fade|Tue Jun 04 22:23:49 CEST 2013|Add MultisetEqualsTester to MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47550101|0|0|0|355|3101|275|92|22|2|5|0|
05bf2d68025bfd054f430ef02453c14ebbda9d4e|Wed Jun 05 20:00:25 CEST 2013|Migrate the remaining Multiset.entrySet() tests from AbstractMultisetTest to MultisetEntrySetTester, fixing a few genuine bugs encountered in the process. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47552716|0|0|2|355|3101|275|92|24|51|5|0|
6ca2091f598a6427b3075c7cc4a7ba00b31ebbb3|Wed Jun 05 20:02:11 CEST 2013|Migrate remaining Multiset.elementSet() tests to MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47554296|0|0|0|355|3101|275|92|28|2|5|0|
d085a922d99276ad5a965030ca6c5ffc58d228a1|Wed Jun 05 20:03:12 CEST 2013|Kill AbstractMultisetTest.  All its remaining tests are tested elsewhere by MultisetTestSuiteBuilder.|0|0|0|355|3101|275|92|27|2|8|0|
dac081ddbe0bffe8423bfd051ff03f90a558d401|Thu Jun 06 21:34:55 CEST 2013|Migrate Synchronized{,Navigable}SetTest to the SetTestSuiteBuilders and off of AbstractCollectionTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47662426|0|0|0|355|3101|275|92|25|2|4|0|
b8dc3cf5402498ec452f5d427122ae3686563ebc|Thu Jun 06 21:35:52 CEST 2013|Some internal changes in RateLimiter. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47663162|0|0|1|355|3101|275|92|19|14|5|0|
99754ca7d31a8f11cafb0b7fe72e84c3feb3d9e0|Thu Jun 06 22:28:45 CEST 2013|Delete AbstractCollectionTest, which is now only being used in multiset implementation tests, and which has no remaining tests that aren't already part of MultisetTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47666389|0|0|0|355|3101|275|92|24|2|7|0|
8e7d357e239696a1b7674447a72958027a1ec332|Fri Jun 07 20:08:33 CEST 2013|Delete AbstractListMultimapTest, which no longer has any tests not already part of ListMultimapTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47674443|0|0|0|355|3101|275|92|27|2|6|0|
a1c2b84baed4ba3a8c0fffa81765c24a17a55f47|Thu Jun 13 21:10:58 CEST 2013|Change x == x to equivalent isNaN() in preparation for making it a compile error. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47811494|0|0|1|355|3101|275|92|25|15|6|0|
ad581bedc004e942be77bab68d36fcd43a1edb99|Thu Jun 13 21:15:50 CEST 2013|Clarify statement in addListener documentation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47862236|0|0|1|355|3101|275|92|19|39|5|0|
208522b2022a967827ee6e26d989b29f51c73fb1|Thu Jun 13 21:25:44 CEST 2013|Add KEY_ARCHIVE. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47874734|0|0|1|355|3101|276|92|19|61|5|0|
230c68caf4e520c7de21facbdea55d5b9945cdd8|Thu Jun 13 21:39:28 CEST 2013|Annotate safeContains and safeRemove parameter as @Nullable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47980950|0|0|1|355|3101|276|92|20|48|4|0|
d34814fd4e8f13c1c78603bc620b251313ba10e9|Thu Jun 13 23:37:49 CEST 2013|Annotate FutureCallback.onSuccess parameter as @Nullable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=47989392|0|0|1|355|3101|276|92|20|38|5|0|
83cc342cfcea485f312baaeaa348970430e1db5c|Mon Jun 17 19:33:01 CEST 2013|Add @since for KEY_ARCHIVE. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48031735|0|0|1|355|3101|276|92|18|57|5|0|
b4c04c1ab7cd2804ff1f4d27aa8c3c857d76280f|Mon Jun 17 19:34:19 CEST 2013|Create sameThreadScheduledExecutor(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48036849|0|0|0|355|3101|276|92|22|2|4|0|
3374b1ace7fbb9f2780d506ccb2abd2fdd618008|Mon Jun 17 19:35:38 CEST 2013|Adding a helper class for adding Content Security Policy headers to a HttpServletResponse. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48037766|0|0|1|355|3101|277|92|20|6|5|0|
c3738d987ab1a481f8b9721bb33a9060a3a57526|Mon Jun 17 19:38:51 CEST 2013|Reduce the visibility of ForwardingService internally.|0|0|1|355|3101|277|92|18|35|6|0|
eed0c3203f42b170899c5a2237963a5b37123f0e|Mon Jun 17 19:40:22 CEST 2013|Fix rawtypes (and some unchecked) warnings. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48127404|0|0|0|355|3101|277|92|19|2|5|0|
03ae95e3f18d44bb9ae9b6fe4fd054b4ec8a78f1|Fri Jun 21 21:29:22 CEST 2013|Change MultiInputStream and MultiReader to work with ByteSource and CharSource rather than InputSuppliers. Change Byte/CharSource#concat to no longer delegate to Byte/CharStreams#join and change join to delegate to concat instead. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48146409|0|0|8|355|3101|277|92|21|64|5|0|
31b625a38cf0967e155ac1f4b1c288f31dd885ca|Fri Jun 21 21:33:44 CEST 2013|Typo fix. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48205733|0|0|1|355|3101|277|92|21|39|6|0|
5027441c818d9b1737982fce55e0bdb7973eef2b|Fri Jun 21 21:39:18 CEST 2013|Remove deprecated appendTo(Object&Iterable&Iterator) overloads. These methods existed only to support classes that implement both Iterator and Iterable. If you need to add such a call in the future, cast the argument explicitly to Iterator. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48293496|0|0|1|355|3095|277|86|20|9|6|6|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Joiner.appendTo(java.lang.StringBuilder,I), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Joiner$MapJoiner.appendTo(java.lang.StringBuilder,I), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Joiner.appendTo(A,I), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Joiner$MapJoiner.join(I), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Joiner$MapJoiner.appendTo(A,I), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Joiner.join(I), newSymbol=]
71e08b2de575c87e8f51f8e0cd678f782e87eb07|Tue Jun 25 23:19:54 CEST 2013|Remove JUnit4 @Test annotations from JUnit 3 tests, where they're no-ops. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48455067|0|0|0|355|3095|277|86|20|2|5|0|
7acf92913329c2df23f86402477a89e744e675b9|Tue Jun 25 23:24:04 CEST 2013|Add a mechanism to ForwardingWrapperTester for when the forwarded interface contains methods that are defined to 'return this'.  In this case straight delegation doesn't work since the wrapped methods should return the forwarding object and not the delegate object.|0|0|0|355|3095|277|86|22|2|7|0|
16829e682639508f5d018dddfab9c979bdf21434|Tue Jun 25 23:28:15 CEST 2013|Improve an error message. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48472965|0|0|0|355|3095|277|86|20|2|8|0|
cd9b3291a91b3b802930ebad062ed35b6d3d6347|Tue Jun 25 23:32:32 CEST 2013|Remove com.google.common.collect.Ranges (the static methods have been moved to com.google.common.collect.Range). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48509690|0|1|1|354|3081|277|85|20|38|6|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.Ranges, newSymbol=]
d20b08ea72dc8fc16e040fd9d86c3b307d826135|Tue Jun 25 23:36:47 CEST 2013|Update ClassPath to expose the URIs that comprise the classpath.  Also add an asClassPathString method that lets you quickly go from ClassLoader to a classpath suitable for Java's -classpath flag. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48519216|0|0|1|354|3083|277|85|19|53|6|0|
e9dc7846c13cec948c52099c2e8c25a7840275f6|Wed Jun 26 01:52:34 CEST 2013|Update open-source Guava to Truth 0.13, and tighten up tests from allOf->exactly and allFrom->exactlyAs.|0|0|0|354|3083|277|85|55|2|6|0|
1feb507ee7bc2febd26ab8af061c19741c72d01d|Wed Jun 26 02:15:59 CEST 2013|Migrate the remaining Multimap.values() tests from AbstractMultimap to MultimapTestSuiteBuilder, and delete AbstractMultimapTest, which no longer contains any tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48537940|0|0|0|354|3083|277|85|43|2|6|0|
fab8b9744496a0ebca5232863ab186b7ac63c8e0|Fri Jun 28 00:46:31 CEST 2013|The fact that ClassPath does a lot of I/O in its creation makes the two added methods unnecessarily expensive.  They still make sense, but perhaps not on this class.|0|0|1|354|3081|277|85|24|49|7|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.reflect.ClassPath.asClassPathString(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.reflect.ClassPath.getPathUris(), newSymbol=]
da6eb34410a1fb324a5d6c0655c6720dcc173f3f|Fri Jun 28 00:47:53 CEST 2013|Delete AbstractSetMultimapTest, whose remaining tests are all covered by SetMultimapTestSuiteBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48590510|0|0|0|354|3081|277|85|24|2|6|0|
7eb5f329410c413ca9d19fadf60cb18f294d4597|Fri Jun 28 00:49:09 CEST 2013|Get rid of usages of TestUtil from common.io test classes and open source most of FilesTest.|0|0|0|354|3081|277|85|24|2|5|0|
5aba95c099a945c9e7db23a991cee262ec0453f2|Fri Jun 28 00:51:40 CEST 2013|Re-document goodFastHash, with the (hopefully) appropriate amount of scaretext. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48602073|0|0|1|354|3081|277|85|19|12|7|0|
fb45d57b44e2efe2e746f223976c48109bd15cb6|Fri Jun 28 00:52:55 CEST 2013|Add EPUB MediaType ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48636026|0|0|1|354|3081|278|85|18|53|4|0|
065330f23b151aeeb9269cf202507107283f6db8|Fri Jun 28 19:03:17 CEST 2013|Score one for javac7's rawtypes warning: surely we just overlooked the proper generics on these signatures?|0|0|1|354|3081|278|85|20|12|9|2|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.hash.BloomFilter.putAll(com.google.common.hash.BloomFilter), newSymbol=com.google.common.hash.BloomFilter.putAll(com.google.common.hash.BloomFilter<T>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.hash.BloomFilter.isCompatible(com.google.common.hash.BloomFilter), newSymbol=com.google.common.hash.BloomFilter.isCompatible(com.google.common.hash.BloomFilter<T>)]
721f17976199f1636e86447370b2caa96a226a39|Fri Jun 28 19:04:18 CEST 2013|Fix low-hanging rawtypes warnings for common.collect. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48684234|0|0|1|354|3081|278|85|23|73|10|0|
7c3a7b17ff193720dc57ccf21aaa5525a75b3ffb|Sat Jun 29 21:49:59 CEST 2013|Add test for roundtripping HashCode#toString. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48688256|0|0|0|354|3081|278|85|24|2|4|0|
8ac2bbf85c9599ddbf553a8f06d531b573680d3c|Tue Jul 02 18:06:22 CEST 2013|Include failing parameter index in exception - useful for inherited classes where it's non-obvious which parameter is failing null check. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48801694|0|0|0|354|3081|278|85|19|2|8|0|
045be6e5700cfba46d8409459f7318138703607e|Tue Jul 02 18:10:37 CEST 2013|Change MediaType to add constants to the known types map as they're created, eliminating the need to explicitly add them all after they're created. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48801732|0|0|1|354|3081|278|85|19|56|5|0|
32859ffb8f3eb98771c6974b9c2208e1b84059a4|Tue Jul 02 18:14:26 CEST 2013|Some additional Multimap doc clarifications in re: Guava issue 1458:|0|0|1|354|3081|278|85|20|47|5|0|
10c89fa1f17a4f5d7b79318ccb8f8438d3d11222|Tue Jul 02 23:59:04 CEST 2013|Replicate CL 47862236's clarification to sameThreadExecutor-using methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48838767|0|0|1|354|3081|278|85|21|54|9|0|
9f7b2061de289f7167dbabf8fd48870b6f22f78d|Wed Jul 03 17:07:29 CEST 2013|Redo: Use the context class loader in Resources.getResource(String), instead of the class loader of the Resources class. Continue to use that loader if the context class loader is null, though. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48888869|0|0|1|354|3081|278|85|21|45|6|0|
3eb2b0066287b41687c0fbeb952675aec7aaf168|Mon Jul 08 15:28:26 CEST 2013|Fix some formatting in Closer javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=48904048|0|0|1|354|3081|278|85|19|12|6|0|
b4d0b679c1f67f895b92cc5ff456e22b55a9c03d|Tue Jul 09 18:13:11 CEST 2013|Verify that the RegularImmutableAsList constructor doesn't check for nulls, to help verify that ImmutableSet.asList() is O(1). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49062366|0|0|0|354|3081|278|85|20|2|7|0|
35df6e874f188730e5f16441607999715615760a|Tue Jul 09 18:14:34 CEST 2013|Open source Hashing#sipHash24() and Hashing#sipHash24(long, long). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49085958|1|0|1|354|3083|278|85|20|15|6|0|
9acc76ba49891400a3bca063eadae3e56759a731|Tue Jul 09 18:16:40 CEST 2013|Strip out weightedConsistentHash reference from public JavaDoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49100661|0|0|1|354|3083|278|85|21|13|7|0|
3db9f5251829ee55fec7974d0b90959069f980eb|Wed Jul 10 17:08:31 CEST 2013|Small formatting change from internal change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49112717|0|0|0|354|3083|278|85|18|2|5|0|
3d1299c5d302b7242d70103c1fc015b2baaf5776|Wed Jul 10 17:10:41 CEST 2013|Clarify the behavior of Map.size() in a MapMaker-built Map with weak or soft references, borrowing phrasing from CacheBuilder.|0|0|1|354|3083|278|85|18|62|9|0|
de8f4e8d1076b412a975f5ce940b49b1d1a45628|Wed Jul 10 17:32:43 CEST 2013|Add a beans.xml file disabling CDI bean discovery to META-INF/ in the guava jar. See guava issue: https://code.google.com/p/guava-libraries/issues/detail?id=1433 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49166428|0|0|0|354|3083|278|85|22|2|5|0|
6328442d5b19af1048f3ee2177f90f129df70520|Wed Jul 10 18:27:24 CEST 2013|Detect symbolic link cycles in ClassPath ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49168430|0|0|1|354|3083|278|85|20|49|7|0|
aa3881c473473b26c81100e04804769f414ba4f2|Thu Jul 11 20:52:37 CEST 2013|Miscellaneous cleanups. - Remove "final" from "static final" methods, as it has little meaning there. - In "Expired entries may be counted in Cache.size,", change "in" to "by" to match similar change to MapMaker. - Remove line-starting @ so that AbstractInvocationHandler code snippet isn't truncated. - Insert some spaces after casts in PopulatedCachesTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49192494|0|0|6|354|3083|278|85|22|68|9|0|
efb63c5b066f880d9b6a8482be5f291685f99b5f|Wed Jul 17 16:02:00 CEST 2013|Fix a small typo in Multimaps.transformValues Javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49382729|0|0|1|354|3083|278|85|28|61|7|0|
928b47f0c8d2a4112505e2759215de2b8fc220e3|Wed Jul 17 16:03:27 CEST 2013|Random javadoc spruces for Maps.asMap/toMap and Ordering. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49401524|0|0|2|354|3083|278|85|23|77|10|0|
c400582feea741917725f9d6e52242ff798a3419|Wed Jul 17 16:06:17 CEST 2013|Add isEmpty() to ByteSource and CharSource. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49444816|0|0|2|354|3085|278|85|26|53|7|0|
2c9f00e5b801ce69742712437b1bc50d2c2fbb93|Wed Jul 17 16:07:35 CEST 2013|Add explicit <p> at the start of paragraphs following an </ol> or </ul> tag in com/google/common javadoc. JDK7 javadoc without the <p> does not show a blank line after the list. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49461463|0|0|14|354|3085|278|85|27|134|9|0|
f8350ebc99849dc78d16580905dc9ed214606cf8|Wed Jul 17 16:10:50 CEST 2013|In com/google/common javadoc, add explicit <p> before paragraph text following other block level closing tags (</h*>, </pre>, </table>). Without the <p>, a blank line may not be added between the text and block level elements such as <ul> that follows it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49494081|0|0|49|354|3085|278|85|56|213|11|0|
ae6bc9be431d7601b1f4713679efea126673378e|Wed Jul 17 22:57:03 CEST 2013|- Move close of <pre>{@code} blocks (i.e. "}</pre>") that are on a separate line up to the last line of the block contents, eliminating an extra blank line between the pre block and what follows. - Change a number of <pre> blocks to <pre>{@code} blocks. - Remove @Override from methods inside several <pre>{@code} blocks. When they're preceded by a {, they cause javadoc to screw up by thinking they're an invalid javadoc tag, even though it doesn't interpret tags inside {@code} blocks.... ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49513507|0|0|13|354|3085|278|85|36|96|10|0|
952d4e85528e725a9e9851d4b262f4c9e1037d8d|Wed Jul 17 22:58:13 CEST 2013|Add Queues.synchronizedDeque(Deque<E>). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49514053|0|0|2|354|3086|278|85|28|55|7|0|
87c758892b137a647fdb975c79443519ff25828e|Wed Jul 17 22:59:10 CEST 2013|Fix a couple of issues with JDK7 javadoc style by using a slightly customized version of the default stylesheet in Guava. Specific issues this fixes:|0|0|0|354|3086|278|85|21|2|5|0|
fe3680db04a0874a86ebb6e91ce2b76c07380f06|Fri Jul 19 18:45:30 CEST 2013|Note that arrays get no special treatment in Objects.hashCode javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49561753|0|0|1|354|3086|278|85|18|9|6|0|
651c628d515dbfe6614d8b3e23b47a389a3d9d1c|Fri Jul 19 18:50:22 CEST 2013|Delete DiscreteDomains for Guava 15. Remove erroneous @since 15.0 on deprecated method InternetDomainName.name(). Unstrip a couple of classes that are now public in collect/package-info.java. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49570015|0|1|2|353|3084|278|84|22|53|8|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.DiscreteDomains, newSymbol=]
f2204c8fe19b973fc26d7e4ed2a147c08a538410|Fri Jul 19 18:55:00 CEST 2013|Removing unnecessary index bounds check for lazy striped when all bits of the hashcode are to be used. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49571072|0|0|1|353|3084|278|84|23|55|5|0|
6d51dfed9da1f104353eaa20cfb2940f274254c2|Fri Jul 19 19:00:03 CEST 2013|A few small Javadoc changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49575019|0|0|2|353|3084|278|84|20|40|6|0|
03cb97cf4d29f5daed7e89400e76ed2e6150299f|Fri Jul 19 19:04:50 CEST 2013|Add DiscreteDomain.bigIntegers(), which was in fact already implemented and tested. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49576220|0|0|1|353|3085|278|84|21|33|8|0|
d9a2e8c7539219651bc809a6d1d0c7086d464e9a|Fri Jul 19 19:14:17 CEST 2013|Add some missing @since 15.0 tags. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49577247|0|0|4|353|3085|278|84|21|78|6|0|
043300690bf6417534f6506e74493b91d599e4d6|Fri Jul 19 19:18:59 CEST 2013|Give a removal date for PrimitiveSink.putString(CS). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49578904|0|0|1|353|3085|278|84|22|7|6|0|
34f10a20f9610af1b3f1c05af981c34c96706e64|Fri Jul 19 19:28:27 CEST 2013|Add publicApiOnly (shuffling resulting from internal-only change). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49600551|0|0|0|353|3085|278|84|21|2|8|0|
196edb139d49d373abbce013008da0206b83f0ca|Fri Jul 19 19:37:06 CEST 2013|Provide JDK sources when generating Javadoc. This enables Javadoc to inherit documentation from JDK supertypes. http://code.google.com/p/guava-libraries/issues/detail?id=1181 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49615231|0|0|0|353|3085|278|84|20|2|4|0|
bfec5b3a3e7ab0cbb7202902378a2e7d9d4ee28e|Mon Jul 22 16:51:39 CEST 2013|Mark some of the worst-performing tests on GWT as @GwtIncompatible, to speed up tests slightly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49627900|0|0|0|353|3085|278|84|20|2|5|0|
0802228cd7df2c0c8fdcbb6c2fecea117cc2e74f|Tue Jul 23 22:55:14 CEST 2013|Change AbstractListeningExecutorService to extend AbstractExecutorService. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49779273|0|0|1|353|3083|278|84|21|9|6|0|
78a5053adfbe5fd3f6a166463bae40d1c51bbc66|Sat Jul 27 00:28:23 CEST 2013|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49835144|0|0|0|353|3083|278|84|20|2|8|0|
95466d0c4b6f4db596676de7fd9fc8004c8610c5|Sat Jul 27 00:50:11 CEST 2013|Overhaul of the Queues javadocs on the static factory methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49900450|0|0|1|353|3083|278|84|19|46|6|0|
3757a700a89638e5747d966bdaa8266b62c974c8|Sat Jul 27 00:54:29 CEST 2013|Fix BaseEncodingTest#testBase16UpperCaseIsNoOp to actually test what it's meant to test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49905873|0|0|0|353|3083|278|84|19|2|5|0|
5b3d25198e03796bb1db21f86be399413f759154|Sat Jul 27 00:58:55 CEST 2013|Added constant for Strict-Transport-Security header as defined in http://tools.ietf.org/html/rfc6797#section-6.1. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49905943|0|0|1|353|3083|279|84|18|5|8|0|
2a7b489484c763e5df5af678d9705a33af8b30e4|Sat Jul 27 01:07:26 CEST 2013|Added constants for HPKP (public key pinning) headers.|0|0|1|353|3083|281|84|19|6|5|0|
1b9eef548d75db78fb9edab1b2ad3449a0bbfbd7|Sat Jul 27 01:19:47 CEST 2013|Make generic type <E extends Comparable> instead of <E> for priority queues. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=49949075|0|0|1|353|3083|281|84|19|48|6|4|BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.collect.Queues.newPriorityBlockingQueue(java.lang.Iterable<? extends E>), newSymbol=com.google.common.collect.Queues.newPriorityBlockingQueue(java.lang.Iterable<? extends E>)],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.collect.Queues.newPriorityQueue(), newSymbol=com.google.common.collect.Queues.newPriorityQueue()],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.collect.Queues.newPriorityBlockingQueue(), newSymbol=com.google.common.collect.Queues.newPriorityBlockingQueue()],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.collect.Queues.newPriorityQueue(java.lang.Iterable<? extends E>), newSymbol=com.google.common.collect.Queues.newPriorityQueue(java.lang.Iterable<? extends E>)]
728c1d5d82ebd313d049831456585968ae32ab85|Tue Jul 30 00:17:11 CEST 2013|Tiny simplifications to HashBiMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50050765|0|0|2|353|3083|281|84|20|44|8|0|
af87e6536353841a280a1d73d6a70cc4460c2ead|Tue Jul 30 00:26:23 CEST 2013|Don't ignore exceptions thrown by tearDown() (unless they would mask exceptions from the test itself). This puts our generated GWT tests in line with what JUnit normally does. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50062431|0|0|0|353|3083|281|84|19|2|4|0|
8ea0f20aac47a603c01c1fe895777df0f3afbedf|Tue Jul 30 00:30:19 CEST 2013|Javadoc improvements: - Minimize the importance of "short circuiting" in ComparisonChain. - Fix copypasta ListenableFuture doc to refer to "this Future" instead of "the input Future." - Specify the exit status used by UncaughtExceptionHandlers.systemExit. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50066092|0|0|3|353|3083|281|84|21|49|7|0|
9e513787c859c6ea922574ef30c66f17eb9158f1|Tue Jul 30 00:58:04 CEST 2013|Elements of Sets.powerSet should support contains() in O(1). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50069151|0|0|1|353|3083|281|84|21|52|9|0|
69aef6bc78879184a48c767e1f9963464a1e1ca7|Tue Aug 06 18:22:04 CEST 2013|Small javadoc tweaks to Stopwatch based on external Guava issue #1492. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50384056|0|0|1|353|3083|281|84|22|9|6|0|
62fad0aca86ea8385261bb7ca62f023cf84d25f1|Tue Aug 06 18:26:58 CEST 2013|Add test demonstrating perhaps incorrect behavior of HashCode.hashCode(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50390060|0|0|0|353|3083|281|84|19|2|7|0|
5b19db451f68be2d4707174492ecad58467e6983|Wed Aug 07 17:32:41 CEST 2013|Copy static factory methods from HashCodes to HashCode. Deprecate the old methods in HashCodes. Update usages in com/google/common/hash to use new methods. Move the tests from HashCodesTest to HashCodeTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50448177|0|0|8|353|3086|281|87|25|23|6|0|
88e7a44f78968bcac26550166dec81a6176cb22d|Wed Aug 07 17:37:22 CEST 2013|Add HashCode.fromString(String). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50449901|0|0|1|353|3087|281|87|21|14|8|0|
8d2d036e4eab9730c22014083940e3c7c9c4d0af|Wed Aug 07 17:42:16 CEST 2013|Update javadocs for HashCode.fromString(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50463690|0|0|1|353|3087|281|87|18|18|6|0|
6e21d471651c79e182120605f3f795887d0e03a4|Thu Aug 08 17:37:50 CEST 2013|Add fragment escaper. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50515561|0|0|1|353|3088|281|87|20|7|7|0|
f7055ea833e87697ec0c42b5c25031a38a93b218|Fri Aug 09 18:19:50 CEST 2013|Fix small LocalCacheTest bug ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50580565|0|0|0|353|3088|281|87|22|2|7|0|
32113144f6be3fecf033f34f019d99c71a8f7778|Fri Aug 09 18:23:54 CEST 2013|MOE insert public for com.google.common.hash.HashCodes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50582094|0|0|1|353|3088|281|88|24|6|5|0|
5de36fdaf41f71d04478de0cb074ff83953dc2e3|Fri Aug 09 23:16:10 CEST 2013|Extract CollectPreconditions with some common checks. Use those checks more widely, especially checkRemove. More importantly, use checkEntryNotNull to include the key and value in "null key/value" NPEs of ImmutableMultimap and GWT-only ImmutableMap/ImmutableBiMap. (Non-GWT ImmutableMap/ImmutableBiMap already got this right.) Plus, make ImmutableMap.copyOf(enumMap) and ImmutableMultimap.put(Entry) resilient to entries whose keys or values become null midway through construction. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50631776|1|0|23|353|3088|281|88|33|131|11|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ForwardingObject.toString(), newSymbol=com.google.common.collect.Maps$DescendingMap.toString()]
da7157938e5ff11b46f9ffe713ee4dd96eb6a786|Fri Aug 09 23:21:04 CEST 2013|Move hashCode() implementation into abstract parent class instead of subclasses. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50632699|0|0|1|353|3088|281|88|32|19|7|0|
3c09dbf36b034c6b60f1ad9d0e1a30f6435e3756|Mon Aug 12 16:12:00 CEST 2013|Service rewrite!  Add new methods to service so that we can move users away from the confusing ListenableFuture based methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50634823|0|0|7|353|3124|281|112|21|67|5|6|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.util.concurrent.Service, newSymbol=com.google.common.util.concurrent.Service.awaitTerminated()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.util.concurrent.Service, newSymbol=com.google.common.util.concurrent.Service.stopAsync()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.util.concurrent.Service, newSymbol=com.google.common.util.concurrent.Service.awaitRunning(long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.util.concurrent.Service, newSymbol=com.google.common.util.concurrent.Service.startAsync()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.util.concurrent.Service, newSymbol=com.google.common.util.concurrent.Service.awaitTerminated(long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.util.concurrent.Service, newSymbol=com.google.common.util.concurrent.Service.awaitRunning()]
6b3dd12bb8960885afedb1807660d923fe3bfce8|Mon Aug 12 16:15:46 CEST 2013|Fix division bug in HashCode.writeBytesTo() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50635321|0|0|1|353|3124|281|112|23|21|6|0|
ac76a7e81f43e2a9394f3a935b1758b665e355de|Mon Aug 12 16:19:43 CEST 2013|Fix a race condition in AbstractServiceTest#testListenerDoesntDeadlockOnStopAndWaitFromTerminated.|0|0|0|353|3124|281|112|20|2|7|0|
c2a4be676394146b6416bea267d13c38d36fed8d|Wed Aug 14 17:20:38 CEST 2013|This CL fixes invalid self-referential collection operations (c.addAll(c), c.removeAll(c), c.retainAll(c), and c.containsAll(c)). Such cases are either no-ops, undefined behavior, or unnecessarily complicated, and often reveal bugs. This an automated fix using error-prone.|0|0|0|353|3124|281|112|20|2|5|0|
3a534d35b632476ca1a01520005a63914168d24c|Wed Aug 14 17:25:16 CEST 2013|Actually fix tearDown handling that was made worse in CL 50062431. - The behavior before that CL was to ignore exceptions thrown by tearDown. - The behavior currently is to exceptions thrown by tearDown unless there was another exception thrown by the test itself, in which case we overwrite the test's exception with the tearDown's exception. - The new behavior is to respect the exception from tearDown unless an exception from the test itself exists to override it. This matches the JUnit behavior. Really.|0|0|0|353|3124|281|112|19|2|6|0|
47afc85796c53a48f2ef6e236ee3f1ac41c0133e|Wed Aug 14 17:29:35 CEST 2013|Small simplifications to LocalCache to extend AbstractReferenceEntry where possible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50778090|0|0|1|353|3124|281|112|19|81|6|0|
29364e0193a91f91b62d8f08db771c1efd4194b0|Fri Aug 16 19:12:43 CEST 2013|Add documentation that SetMultimap and mutable values don't get along, as per Guava issue 357.  https://code.google.com/p/guava-libraries/issues/detail?id=357 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50924610|0|0|2|353|3124|281|112|22|52|4|0|
037c25513fd8a08b84778f5a7fe167a2bbf48d5e|Fri Aug 16 19:17:27 CEST 2013|Fix a wrong description in CharMatcher. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50956932|0|0|1|353|3124|281|112|21|14|5|0|
d1d35776eeda1a3441a0990b5764fabd637faec7|Fri Aug 16 19:22:14 CEST 2013|Ensure that CharMatcher.precomputed() doesn't change description. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50957795|0|0|1|353|3124|281|112|24|13|6|0|
9b6903b54fef23d73b62db546efd5ab772f2d8ef|Fri Aug 16 20:24:40 CEST 2013|Add "text/tab-separated-values; charset=utf-8" as constant MediaType.TSV_UTF_8 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50964188|0|0|1|353|3124|282|112|21|56|7|0|
be863aad5ebb288314281db5c3a45a0a5f04fbe3|Thu Aug 22 23:45:56 CEST 2013|Update Mozilla PSL. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50980142|0|0|1|353|3124|282|112|18|35|5|0|
6bd126800bda431b5c92031860a0218005281868|Thu Aug 22 23:58:19 CEST 2013|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51059733|0|0|1|353|3124|282|112|21|42|5|0|
9de0ce12f1648ee4f190e2ce706f26088727ff89|Fri Aug 23 00:09:12 CEST 2013|In the FinalizableReferenceQueue code, remove the unnecessary nested exception class Finalizer.ShutDown, which could cause problems if the URL for the classfile of Finalizer was not related in the obvious way to the URL for the classfile of Finalizer.ShutDown. This is Guava issue 1505 <https://code.google.com/p/guava-libraries/issues/detail?id=1505> reported by Jesse Glick <jglick@cloudbees.com>, and the fix is based on the patch he linked to there.|0|0|1|353|3124|282|112|21|4|7|0|
52e17592f42b4beed14e7f356616bc1ed7ef12e8|Fri Aug 23 00:14:36 CEST 2013|Fix TreeTraverser's class javadoc to the correct result for a breadth-first traversal. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51145407|0|0|1|353|3124|282|112|18|35|5|0|
1756a9478ef5c5545a72080d2db39db8a2bc6bc3|Thu Aug 22 23:38:00 CEST 2013|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51147719|0|0|1|353|3124|282|112|19|36|5|0|
53811089cf234fd2aacffa9d8f7aaa321f8c798c|Fri Aug 23 00:28:24 CEST 2013|Add DoubleMath.mean. (Includes a few drive-by lint fixes on DoubleMathTest.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51173415|0|0|1|353|3129|282|112|21|15|8|0|
047cb293a9b86494cbe1c712861aebf879886bea|Fri Aug 23 00:34:21 CEST 2013|This CL fixes usage of equality operators for subclasses of java.lang.Number. Comparing numeric objects using "==" tests for reference equality, when most likely value equality is intended. This an automated fix using error-prone.|0|0|0|353|3129|282|112|20|2|5|0|
5be6693339c4699cbb2856b799d2ef8b40ee3c34|Fri Aug 23 00:58:38 CEST 2013|Fix documentation for c.g.common.collect.Maps.transform{Values,Entries}.|0|0|1|353|3129|282|112|19|71|9|0|
1908e9db5c671f0ef95202b8b0aab1ade954bd0f|Fri Aug 23 01:04:03 CEST 2013|Make the supersource for GWT version of com.google.common.collect Java 7 compatible.|0|0|0|353|3129|282|112|25|2|8|0|
5844882acdeff159efcb40f5a9e7cb0f00910b5e|Fri Aug 23 04:39:27 CEST 2013|Make WrappingScheduledExecutorService's constructor protected, rather than package-private. (This is consistent with WrappingExecutorService.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51273229|0|0|1|353|3129|282|112|21|39|5|0|
9457b83c2e4498cdbe0346fc8e246f0ccb35aab6|Fri Aug 23 20:02:16 CEST 2013|Mark the new Service methods as final in AbstractService, AbstractExecutionThreadService, AbstractIdleService and AbstractScheduledService. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51305735|0|0|4|353|3129|282|112|19|47|5|26|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractIdleService.awaitTerminated(long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.AbstractIdleService.awaitTerminated(long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractService.startAndWait(), newSymbol=com.google.common.util.concurrent.AbstractService.startAndWait()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractIdleService.awaitRunning(long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.AbstractIdleService.awaitRunning(long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractService.stopAsync(), newSymbol=com.google.common.util.concurrent.AbstractService.stopAsync()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractScheduledService.awaitRunning(long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.AbstractScheduledService.awaitRunning(long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractIdleService.stopAsync(), newSymbol=com.google.common.util.concurrent.AbstractIdleService.stopAsync()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractService.awaitRunning(long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.AbstractService.awaitRunning(long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractIdleService.startAsync(), newSymbol=com.google.common.util.concurrent.AbstractIdleService.startAsync()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractScheduledService.stopAsync(), newSymbol=com.google.common.util.concurrent.AbstractScheduledService.stopAsync()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractIdleService.awaitTerminated(), newSymbol=com.google.common.util.concurrent.AbstractIdleService.awaitTerminated()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractIdleService.awaitRunning(), newSymbol=com.google.common.util.concurrent.AbstractIdleService.awaitRunning()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.awaitTerminated(), newSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.awaitTerminated()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractScheduledService.awaitTerminated(), newSymbol=com.google.common.util.concurrent.AbstractScheduledService.awaitTerminated()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.startAsync(), newSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.startAsync()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractService.awaitRunning(), newSymbol=com.google.common.util.concurrent.AbstractService.awaitRunning()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractScheduledService.awaitTerminated(long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.AbstractScheduledService.awaitTerminated(long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.awaitTerminated(long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.awaitTerminated(long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.stopAsync(), newSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.stopAsync()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractScheduledService.awaitRunning(), newSymbol=com.google.common.util.concurrent.AbstractScheduledService.awaitRunning()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.awaitRunning(long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.awaitRunning(long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractService.stopAndWait(), newSymbol=com.google.common.util.concurrent.AbstractService.stopAndWait()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractService.startAsync(), newSymbol=com.google.common.util.concurrent.AbstractService.startAsync()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractService.awaitTerminated(), newSymbol=com.google.common.util.concurrent.AbstractService.awaitTerminated()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.awaitRunning(), newSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.awaitRunning()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractService.awaitTerminated(long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.AbstractService.awaitTerminated(long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractScheduledService.startAsync(), newSymbol=com.google.common.util.concurrent.AbstractScheduledService.startAsync()]
ba0e833f2e84baa310583f75b71ae727bea5183a|Sat Aug 24 01:23:59 CEST 2013|Fix broken test name that prevents test from running. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51318709|0|0|0|353|3129|282|112|21|2|6|0|
c8fb5480bf698f28da3f1b3836d7c71e5e56d504|Sat Aug 24 01:24:57 CEST 2013|mark AbstractService.startAndWait()/stopAndWait() as non-final due to test breakages ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51323441|0|0|1|353|3129|282|112|20|52|5|0|
31e1f16989ec41b360b074caebdc58e0117ecf68|Wed Aug 28 23:51:52 CEST 2013|Replace CharMatcher.WHITESPACE by a much faster implementation as it doesn't deserve to be slowed down by division. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51342342|0|0|1|353|3129|282|112|21|11|5|0|
482848d14e77c09a3b91750b465ff599bcbd9915|Thu Aug 29 00:07:04 CEST 2013|Adding missing dependency. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51434507|0|0|0|353|3129|282|112|22|2|5|0|
04b19402351c764c7c8d915d98783db02444724c|Thu Aug 29 00:16:18 CEST 2013|Miscellaneous cleanups: - Add spaces between keywords and parentheses (e.g., "for(" -> "for ("), fixing up some indentation and missing braces along the way. - Declare Platform classes as final, and add private constructors. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51540900|0|0|2|353|3129|282|112|24|52|8|0|
1174bca02b652b051007b51c6a7b6ef44561e6de|Thu Aug 29 00:25:26 CEST 2013|Bring @GwtCompatible annotations into line with reality. Future CL 51540044 will add tests to verify this automatically. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51547670|0|0|2|353|3129|282|112|30|54|5|0|
e0909001c161a50dd4d1dbb754b12d15dfda99b6|Thu Aug 29 00:29:30 CEST 2013|Change ByteSource.concat and CharSource.concat to not blow up on infinite Iterables. This also helps users whose Iterables actually eagerly load data to create sources when iterated, though ideally they shouldn't be doing that.|0|0|4|353|3129|282|112|22|58|5|0|
cc75db0727f283900fe601fc2905fa0b220c46b2|Fri Aug 30 19:05:35 CEST 2013|Second guess CL 43477677's de-@Beta-fication of allAsList and successfulAsList. There are still issues to settle: http://code.google.com/p/guava-libraries/issues/detail?id=1519 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51620880|0|0|1|353|3129|282|112|22|54|6|0|
d0f71799a44d004a1ce837b2ffa434699dd59c4b|Wed Sep 04 23:44:53 CEST 2013|Avoid array allocation in HashCode.writeToBytes(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51848312|0|0|1|353|3129|282|112|19|18|5|0|
ef35fa6ce1d48e12c3e98fa8587758209cf6509c|Fri Sep 06 23:17:16 CEST 2013|Remove compare(boolean, boolean), which has been renamed to compareFalseFirst. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51892007|0|0|1|353|3128|282|111|19|35|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ComparisonChain.compare(boolean,boolean), newSymbol=]
f995641f6ef5f09c5484f5ce5bd2a805608491f9|Fri Sep 06 23:21:10 CEST 2013|Make it obvious that RateLimiter can handle < 1 qps. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51961102|0|0|1|353|3128|282|111|22|15|7|0|
12d6c72b83c3253b84d3c02e12be884d0930f5c3|Fri Sep 06 23:22:09 CEST 2013|Update Guava pom.xml files to version 16.0-SNAPSHOT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51967518|0|0|0|353|3128|282|111|22|2|5|0|
d56e501e83d6c17b3a2cf0524f797a4b5f38fdbd|Tue Sep 10 22:49:32 CEST 2013|Use @link and @linkplain in Objects.firstNonNull() javadocs.|0|0|1|353|3128|282|111|20|9|5|0|
23bdab2632a91b8a731f5ae977e617d5edb80d75|Tue Sep 10 22:53:41 CEST 2013|Change PathByteSource in MoreFiles to not use Files.readAllBytes() for its read() method, as Files.readAllBytes() creates 2 unnecessary copies of the byte array the file is read into in the normal case where the file doesn't change size.|0|0|2|353|3128|282|111|19|51|7|0|
578686226d7245be5f72dc3007c8e29217ecbfc8|Fri Sep 13 17:14:43 CEST 2013|Introduce the SubscriberExceptionHandler. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52250001|2|0|3|355|3133|282|111|22|69|5|0|
7d9ac453a5fdea0e0a0b99500814107b4fa47098|Fri Sep 13 19:00:12 CEST 2013|Add @since tags and nitpick Javadoc formatting from CL 52250001. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52286822|0|0|4|355|3133|282|111|21|62|7|0|
95f8cde53603cd02c212e279c64f87caa5c6dc94|Mon Sep 16 20:16:08 CEST 2013|Fix medium-hanging rawtypes warnings. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52391647|0|0|3|355|3133|282|111|20|60|9|0|
af79a1939d2900ecaae92a5538760369eaa60b9b|Wed Sep 18 20:57:58 CEST 2013|Change all the reference to event handler to event subscriber. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52404442|4|4|5|355|3133|282|111|26|64|5|0|
778a05680b6b0695214799dbb95f08d29223ec27|Mon Sep 23 21:19:45 CEST 2013|Make EvictingQueue serializable. See https://code.google.com/p/guava-libraries/issues/detail?id=1537 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52532527|0|0|1|355|3133|282|111|20|39|6|0|
9ac12a96ec8d14c925ee9ad145fe17dbc3078d63|Mon Sep 23 21:21:00 CEST 2013|Fix argument order in Futures sample code. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52670595|0|0|1|355|3133|282|111|22|53|6|0|
0df4992de1bb83630e13594410b0ad73409d1948|Mon Sep 30 15:56:45 CEST 2013|Optimize Ascii#toUpperCase and Ascii#toLowerCase. Don't recreate a String if the input String is already upper-cased/lower-cased. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53066382|0|0|1|355|3133|282|111|20|9|5|0|
c3c3bad0804af06d390856b5a6c468ca2b54ac2f|Mon Sep 30 16:06:29 CEST 2013|Verify that listeningDecorator does not decorate simple tasks submitted with execute(): http://stackoverflow.com/a/19009309/28465 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53264107|0|0|0|355|3133|282|111|20|2|5|0|
7fbd3fa9fa13234e1d11d69df0366125f2fdede2|Mon Sep 30 16:16:04 CEST 2013|Ensure that AbstractIterator does not hold onto its next reference after it has been returned by next(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53283705|0|0|2|355|3133|282|111|21|40|8|0|
e301bb7064b1c7f23485060408c48149cf9e8374|Mon Sep 30 16:25:51 CEST 2013|Make it possible to use class path to retrieve non-top level classes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53297583|0|0|1|355|3134|282|111|22|48|4|0|
f53fc5e4b2d8d53ba04cc4c07d1fd894b02f40ef|Mon Sep 30 16:30:37 CEST 2013|Followup javadoc changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53298273|0|0|1|355|3134|282|111|18|53|5|0|
8cabed4d21b40949aa6a9fd9f34ced54c6445a6a|Mon Sep 30 16:39:51 CEST 2013|Move htmlEscaper to the top. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53344665|0|0|1|355|3134|282|111|20|5|7|0|
ed3d044ad485fa09b424f26810b123b872a9270f|Mon Sep 30 19:00:25 CEST 2013|Update ChainingListenableFuture docs to explain why the UndeclaredThrowableException special case exists and why it is no longer necessary. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53489160|0|0|1|355|3134|282|111|19|53|5|0|
5979791fe88d3b5c6aaa265e20ad40701aa4aff4|Tue Oct 01 23:35:02 CEST 2013|Include common.xml's package-info in Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53568852|0|0|0|355|3134|282|111|20|2|5|0|
b29b2638d82f57433f2cc5fcf7ecf6d6b3f4c419|Thu Oct 03 17:01:27 CEST 2013|Add function to return the number of boolean values that are true from a variable length boolean input. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53643457|0|0|1|355|3135|282|111|19|13|5|0|
10e33c03a6d68fe1404aa721a4a7e37c1e63c43b|Fri Oct 04 18:10:45 CEST 2013|Add a couple @since tags for recent additions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53671037|0|0|2|355|3135|282|111|21|62|5|0|
d88df71d5ff0dfdda5e2cb557fca81164df0578b|Fri Oct 04 18:19:11 CEST 2013|Clone c.g.protobuf.Utf8 to c.g.common.io.Utf8 and add new utf8Length(String) static method. Callers will be migrated in future changes. It is currently unknown whether protobuf itself will be able to depend on Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53696008|1|0|0|356|3138|282|111|23|7|5|0|
8c7fbd6d742eefad76a61442f4d78d37d9e5079c|Fri Oct 04 18:24:08 CEST 2013|Remove or hide APIs scheduled for deletion in Guava 16. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53732502|0|1|18|352|3110|282|92|26|97|7|14|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.BaseEncoding.encodingStream(com.google.common.io.OutputSupplier<? extends java.io.Writer>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.asByteSource(byte[]), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain<C>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.asCharSource(java.lang.String), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.hash.HashCodes, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.PrimitiveSink.putString(java.lang.CharSequence), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.Constraint, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.Funnels.stringFunnel(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.FileBackedOutputStream.getSupplier(), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.Constraints, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.Hasher.putString(java.lang.CharSequence), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.BaseEncoding.decodingStream(com.google.common.io.InputSupplier<? extends java.io.Reader>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.HashFunction.hashString(java.lang.CharSequence), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.GenericMapMaker, newSymbol=]
1b81d3d68f71026fb81acc923e7424707ae50f95|Fri Oct 04 18:28:18 CEST 2013|Fix low-hanging rawtypes warnings in javatests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53733108|0|0|0|352|3110|282|92|28|2|7|0|
57e66d83a43c65827468ba2a7f5af550097d1bc3|Sat Oct 05 00:45:46 CEST 2013|Added more javadoc to AbstractPackageSanityTests for Guava bug 1535 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53743498|0|0|0|352|3110|282|92|21|2|5|0|
7f6521c18e86cc7467b9a8aed8fb6a77342fd8b9|Mon Oct 07 19:48:35 CEST 2013|Fix failure in MapsTest with coming-soon jdk. I couldn't restrain myself from renaming sizeOf.|0|0|0|352|3110|282|92|18|2|5|0|
d339b8b42b44c4f11f6a74cc127b38132d1034df|Mon Oct 14 18:48:26 CEST 2013|Delete ForwardingService.  it has been deprecated for two guava releases now so i think it is time to drive the stake through the heart of this beast. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53861773|0|1|0|351|3093|282|87|20|2|7|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.ForwardingService, newSymbol=]
ae827772191979fab74a46f64425187d747d1aa5|Mon Oct 14 18:54:08 CEST 2013|Rename methods in the new Utf8 class, rewrite some javadoc, and a few very small code improvements.|0|0|1|351|3093|282|87|18|8|5|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Utf8.isValidUtf8(byte[],int,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Utf8.utf8Length(java.lang.CharSequence), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Utf8.isValidUtf8(byte[]), newSymbol=]
1062b4a17750aff3005ce5a57ec6a8002cc840ad|Mon Oct 14 18:59:05 CEST 2013|Document compare() methods to point out their JDK equivalents. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=53930986|0|0|8|351|3093|282|87|27|33|5|0|
433f64828909352f32b20450880824b52f947e35|Mon Oct 14 19:14:09 CEST 2013|Port protobuf's UtfDecodingBenchmark for Utf8. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=54140446|0|0|0|351|3093|282|87|23|2|5|0|
a9ab3b8fcedba375d8f64e89a4aeba02a508de95|Mon Oct 14 19:19:13 CEST 2013|And let's rename Utf8.length() one more time, this time to Utf8.encodedLength(). From here on out we really should rename this method no more than once a week. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=54213513|0|0|1|351|3093|282|87|19|7|6|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Utf8.length(java.lang.CharSequence), newSymbol=]
a3c6d2e03dd0afa4d13574094611639675dbc576|Mon Oct 14 19:23:26 CEST 2013|Instead of just tracking our state via 2 integers in ServiceManager.State track all current service states via a Multimap<State, Service>.|0|0|1|351|3093|282|87|20|69|5|0|
aeeec807bd606f5db4845ec95a788857bb2cc4c9|Tue Oct 15 15:42:08 CEST 2013|Fixed the javadoc of RangeSet. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=54694622|0|0|1|351|3093|282|87|21|40|5|0|
0ca8ce566c15916295bd1301c32640be12192714|Wed Oct 16 00:53:32 CEST 2013|Remove the use of deprecated Service methods from the Abstract*Service test cases.|0|0|0|351|3093|282|87|19|2|6|0|
0200297294546709ca6d6c028651a297451046fd|Wed Oct 16 00:58:11 CEST 2013|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=54791037|0|0|1|351|3093|282|87|19|38|5|0|
f83bd3a20f06dd9b3ab788f8ae8f661555ba49c8|Thu Oct 17 19:04:50 CEST 2013|Mark CartesianList as RandomAccess. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=54897081|0|0|1|351|3093|282|87|19|40|5|0|
6b3b405c4a1da01f308851207970248803b6d807|Wed Oct 23 20:45:28 CEST 2013|Micro-optimize, especially for runs of ASCII. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=55130107|0|0|1|351|3093|282|87|21|9|7|0|
4ba03ac7acad8f1d24e88e65b2aa9c721e6f6d11|Wed Oct 23 20:55:28 CEST 2013|Add benchmarks for Utf8.length.|0|0|0|351|3093|282|87|20|1|4|0|
c01ebc3fc2df3b6fe1384fe987505def08c891f6|Wed Oct 23 21:00:31 CEST 2013|Fix a flaky test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=55362090|0|0|0|351|3093|282|87|18|1|5|0|
bc1f5d201af24828ddc3382003851f19bf6e5e3a|Wed Oct 23 21:10:20 CEST 2013|Improve the javadoc for mod. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=55370624|0|0|2|351|3093|282|87|19|16|5|0|
233bcf9e6e2f620d1ef1c25c019a09be66e73232|Wed Oct 23 21:15:06 CEST 2013|Improve mod javadoc even more. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=55375877|0|0|2|351|3093|282|87|20|18|7|0|
aacd053ab2b26b11fb35ee6384dc2ce39b386a05|Wed Oct 23 21:24:54 CEST 2013|Explicitly test that BREAKING_WHITESPACE is a subset of WHITESPACE. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=55422871|0|0|0|351|3093|282|87|21|2|5|0|
7f7904ad8ebab1cf62ec453a771e347cb831783a|Wed Oct 23 21:29:35 CEST 2013|Fix Equivalence#wrap documentation to match the appropriate usage of the method (and the javadoc on the Wrapper class) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=55467018|0|0|1|351|3093|282|87|21|38|5|0|
2e9fc05479a392533a4e048d00a9599a8bd71df6|Fri Oct 25 17:07:26 CEST 2013|Ensure that failures get logged before transitionService is called.|0|0|1|351|3093|282|87|19|63|8|0|
ec0554c2e39714da35a95615787645ad4b611337|Fri Oct 25 17:12:27 CEST 2013|Migrate from deprecated InternetDomainName.name() to equivalent toString(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=55556636|0|0|1|351|3093|282|87|23|8|6|0|
fc8c61cf703155f85b00b30cd11fc11b53947953|Fri Oct 25 23:54:19 CEST 2013|Warnings-related cleanup to c.g.c.base and its tests. Ruthlessly standardizing the comment we use so these can potentially be replaced with string constants one day. In some cases I have actually removed unjustified suppressions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=55637082|0|0|8|351|3093|282|87|31|50|5|0|
ba7eac07eb85fa67168c56b2c7aa0e8172f9c7e6|Sat Oct 26 00:16:33 CEST 2013|s/delimeter/separator/. We converged on "separator" a while ago, but missed fixing this one because it's misspelled.|0|0|1|351|3093|282|87|24|11|6|0|
27e38e746eec4835d71a94a83532e5a5d1bc8c6b|Tue Oct 29 22:32:18 CET 2013|Remove deprecated methods that had been hanging around without specified removal dates / Guava versions: - ImmutableSet.of(E[]), which has been replaced by copyOf(E[]) and which was removed from the "plain Java" code long ago but has hung around in the GWT version. - InternetDomainName.fromLenient() and name(), which have been replaced by from() and toString(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=55803460|0|0|1|351|3091|282|85|21|45|6|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.net.InternetDomainName.name(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.net.InternetDomainName.fromLenient(java.lang.String), newSymbol=]
516d029c5b65f833df58c3cc0cdd0f8e3b06c6a8|Tue Oct 29 22:36:35 CET 2013|Fixed incorrect placement of { in Iterables.contains method. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=55810948|0|0|1|351|3091|282|85|22|56|5|0|
53a99310959a8d91420162a1116225acce5082dd|Wed Oct 30 19:50:09 CET 2013|Remove the jsr-330 annotations from ServiceManager and remove javax.inject from the guava pom.xml since this was the only use.|0|0|1|351|3091|282|85|21|62|7|0|
cff5df6b48b892574975dc045f6ed3552d4b3d1d|Wed Oct 30 23:38:47 CET 2013|Remove beans.xml from Guava.|0|0|0|351|3091|282|85|20|2|5|0|
dece9b43b0fcaf9ffc509e7d9b348bd4e9ffd130|Tue Nov 05 21:06:23 CET 2013|Fix incorrect reference to in javadoc. Iterator should be iterable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=55950925|0|0|1|351|3091|282|85|22|58|4|0|
adc5bb87fb2948b24ec57d99f96f54140132890f|Tue Nov 05 21:11:33 CET 2013|Use CollectPreconditions.checkNonnegative more widely in common.collect. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56097311|0|0|12|351|3091|282|85|32|110|12|10|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.containsEntry(java.lang.Object,java.lang.Object), newSymbol=com.google.common.collect.AbstractMultimap.containsEntry(java.lang.Object,java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.keys(), newSymbol=com.google.common.collect.AbstractMultimap.keys()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.hashCode(), newSymbol=com.google.common.collect.AbstractMultimap.hashCode()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.remove(java.lang.Object,java.lang.Object), newSymbol=com.google.common.collect.AbstractMultimap.remove(java.lang.Object,java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.isEmpty(), newSymbol=com.google.common.collect.AbstractMultimap.isEmpty()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.toString(), newSymbol=com.google.common.collect.AbstractMultimap.toString()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>), newSymbol=com.google.common.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.containsValue(java.lang.Object), newSymbol=com.google.common.collect.AbstractMultimap.containsValue(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.putAll(com.google.common.collect.Multimap<? extends K,? extends V>), newSymbol=com.google.common.collect.AbstractMultimap.putAll(com.google.common.collect.Multimap<? extends K,? extends V>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.keySet(), newSymbol=com.google.common.collect.AbstractMultimap.keySet()]
e45d675657f1df34ceb9e84c5f998ee9856e8614|Wed Nov 06 20:29:20 CET 2013|Make ImmutableClassToInstanceMap serializable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56232403|0|0|1|351|3091|282|85|31|44|5|0|
db10165f367fe754b81731ff5ac87896b65f4823|Tue Nov 12 23:28:12 CET 2013|Lazy-initialize all the things (in Hashing). For some of these this may be overkill but we have reports of major <clinit> slowness on Android.|0|0|1|351|3091|282|85|19|13|5|0|
c04ce8993e4af2467e43636ec67068bf90b9a7fd|Tue Nov 12 23:29:16 CET 2013|Lots of minor cleanups and simplifications. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56467585|0|0|0|351|3091|282|85|29|2|7|0|
b33a527769bf0b2866289143879dbed7fcfe8fd3|Tue Nov 12 23:31:19 CET 2013|Add EvictingQueue.remainingCapacity(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56474670|0|0|1|351|3092|282|85|28|39|5|0|
8923e48737bb4dc5d4ceea7d09926cff1bc50af4|Tue Nov 12 23:32:23 CET 2013|Optimize Utf8.encodedLength even more, at the cost of increased complexity. I continue to be surprised by the size of the branch-mispredict penalty.|0|0|1|351|3092|282|85|21|9|6|0|
a22e901ee37aaa555d1351a48fe294f3b795c203|Tue Nov 12 23:34:33 CET 2013|Mark a test that uses StringBuilder.appendCodePoint as GwtIncompatible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56553406|0|0|0|351|3092|282|85|19|2|5|0|
9c85f48ed7ba09315feda7784f1d5f686dd63711|Tue Nov 19 01:58:17 CET 2013|Update Mozilla public suffix list from 2013-06-06 to 2013-11-07. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56847666|0|0|1|351|3092|282|85|21|35|7|0|
a4a491611174be8cfb37e816f06f32e32b3b4414|Tue Nov 19 02:03:51 CET 2013|Shuffling from internal-only changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56868933|0|0|0|351|3092|282|85|22|2|5|0|
7b006c485b0774137c05f17dbf29de7e59efd8ce|Tue Nov 19 17:22:12 CET 2013|Rewrite the Tld Pattern generator.|1|0|3|351|3092|282|85|23|46|5|0|
986b8f55615df073fd190e7dfd19c605dc4a3587|Tue Nov 19 17:27:14 CET 2013|Fix some typos in Equivalence. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56907469|0|0|1|351|3092|282|85|19|36|6|0|
95ce1df9aac3f643767db2a03f06bc1bd070ba66|Tue Nov 19 17:35:55 CET 2013|Remove Stopwatch.elapsedTime and elaspedMillis ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56909797|0|0|1|351|3090|282|83|20|9|5|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Stopwatch.elapsedTime(java.util.concurrent.TimeUnit), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Stopwatch.elapsedMillis(), newSymbol=]
f37e8d9ef242311094907d540616efc119879d3d|Wed Nov 20 01:09:28 CET 2013|Add warning to CharMatcher.DIGIT ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56937982|0|0|1|351|3090|282|83|22|13|6|0|
b9d7edb0aac03395ac2d5db55612462053f1c104|Wed Nov 20 18:39:37 CET 2013|Remove checkNotNulls in MapJoiner that existed to satisfy NullPointerTester before it accepted UnsupportedOperationException ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56953505|0|0|1|351|3090|282|83|21|10|5|0|
837d163fef75c1062d4c1d0becb31c7b54f01561|Wed Nov 20 18:44:46 CET 2013|Specify that behavior is undefined for non-ASCII input. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56954960|0|0|1|351|3090|282|83|21|9|5|0|
2bab5a67a8e074cfa17ce7737f5b393a9e5b9b11|Wed Nov 20 20:07:07 CET 2013|Belatedly add Justin's comments from an old email exchange. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56987273|0|0|1|351|3090|282|83|18|16|5|0|
7065d8d868f0794065a9472e7a93660fb17a5481|Wed Nov 20 20:17:56 CET 2013|Minor changes to TearDownStack: - Changed logger to be private and removed explicit static reference. - Removed t.getMessage() in logging statement as this is duplicated when t is printed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56992155|0|0|0|351|3090|282|83|19|2|5|0|
351689a60bfb2c754c7f24e5d673d5d3ef183856|Thu Nov 21 00:37:46 CET 2013|Don't use Preconditions.checkArgument in primitives checkedCast methods, as it boxes for what should be a very fast method. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56995761|0|0|5|351|3090|282|83|23|27|8|0|
5e6f89d817aa9d7f1c54c0fa7d17ce3bed5d7be8|Thu Nov 21 04:10:44 CET 2013|Rollback of changelist 56906311.|0|1|3|351|3090|282|83|23|42|5|0|
78f29ce2cc5a71253073a3ffb2c1ee52fb295429|Thu Nov 21 04:23:32 CET 2013|Add Ascii.truncate methods, which truncate a string to a maximum length, appending a string such as "..." as an indicator if the resulting string was truncated. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56998047|0|0|1|351|3092|282|83|21|9|5|0|
ae72667664a9da3940975b9bf04b2d7b794ea477|Thu Nov 21 04:32:02 CET 2013|Minor improvement to Ascii.truncate implementation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56999832|0|0|1|351|3092|282|83|21|10|6|0|
c9dbad0480d28e7cc5b3918945b0d14bd6ac3528|Thu Nov 21 04:40:32 CET 2013|Remove ByteBuffer usage in ConcatenatedHashFunction.makeHash() method and use HashCode.writeBytesTo instead. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57005557|0|0|1|351|3092|282|83|20|14|5|0|
6ffec35127b4004a5540c416c9ff66020c9287d0|Thu Nov 21 04:44:49 CET 2013|Inline checkNotNull call. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57011958|0|0|1|351|3092|282|83|21|12|4|0|
fbb1e5ed85319343489b13f233d8bea631a77bf9|Thu Nov 21 04:49:05 CET 2013|Retrying changelist 56687027. RateLimiter: make the acquire() methods return the time slept (instead of void). Rationale: allow clients to keep track of whether they are rate-limited; useful to update e.g. Varz/Streamz. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57014398|0|0|1|351|3092|282|83|18|14|5|2|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.RateLimiter.acquire(), newSymbol=com.google.common.util.concurrent.RateLimiter.acquire()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.RateLimiter.acquire(int), newSymbol=com.google.common.util.concurrent.RateLimiter.acquire(int)]
f799ed7f2fe50f259c29bf39fd0d26c2c537dfd0|Fri Nov 22 17:43:29 CET 2013|Make the constructors on Source/Sink classes protected. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57057612|0|0|4|351|3092|282|83|20|49|7|4|BC[kind=CONSTRUCTOR_NOW_PROTECTED, impactedSymbol=com.google.common.io.CharSink.<init>(), newSymbol=com.google.common.io.CharSink.<init>()],BC[kind=CONSTRUCTOR_NOW_PROTECTED, impactedSymbol=com.google.common.io.CharSource.<init>(), newSymbol=com.google.common.io.CharSource.<init>()],BC[kind=CONSTRUCTOR_NOW_PROTECTED, impactedSymbol=com.google.common.io.ByteSource.<init>(), newSymbol=com.google.common.io.ByteSource.<init>()],BC[kind=CONSTRUCTOR_NOW_PROTECTED, impactedSymbol=com.google.common.io.ByteSink.<init>(), newSymbol=com.google.common.io.ByteSink.<init>()]
4c91448410b3e4c8b566c0fa4bf9ae047f5294e6|Fri Nov 22 17:48:25 CET 2013|Some documentation improvements for Ascii.truncate.|0|0|1|351|3091|282|83|22|10|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Ascii.truncate(java.lang.CharSequence,int), newSymbol=]
73730b90eec6314b6c2dbf764bd2ccdf5d9c2a24|Fri Nov 22 17:52:40 CET 2013|Removed unnecessary static imports as they are pulled in through junit.framework.TestCase. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57073259|0|0|0|351|3091|282|83|20|2|5|0|
38586b409895a183f879831b0f1fede693bcbe3d|Mon Nov 25 19:19:54 CET 2013|Remove the ServiceManager constructor that used to be annotated with @Inject. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57132730|0|0|1|351|3091|282|83|18|60|7|0|
952ea2a5afa82239d572786eb62dc9758c0984eb|Tue Nov 26 21:59:54 CET 2013|Rewrite the Tld Pattern generator, take 2. This CL adds the possibility to reuse the pattern generator for other template files. Also now the generator keeps track about which tld patterns are from the official ICANN list, and which patterns are private. (Roll forward of CL 56906311, which was rolled back in CL 56996630, with a fix for the multiple internal-only GWT modules in com.google.common.net.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57258531|1|0|3|351|3091|282|83|20|47|5|0|
76288a4e5b510494d0991b43fb697bf24dd5f66e|Tue Nov 26 22:21:34 CET 2013|Deprecate implementations of Function.apply that should never be invoked directly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57308600|0|0|1|351|3091|282|84|22|50|5|0|
7de3cbca3854ae0d9e9f7973a8f3cfe855a2407a|Tue Nov 26 22:25:56 CET 2013|Javac 8 clean-up.|0|0|1|351|3091|282|84|18|43|8|0|
c2b87dfc444952ba159da9f16e26f1921e5367fc|Tue Dec 03 18:42:53 CET 2013|Adding equalsIgnoreCase for ASCII only. This exists because there's generally no good reason to use String.equalsIgnoreCase() with non-ASCII data (you should be using proper unicode normalization).|0|0|1|351|3092|282|84|21|11|5|0|
ab29b173055a1ff647516848b176265fc6792ba0|Tue Dec 03 19:26:41 CET 2013|Move GenerateTldPatterns to a new directory. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57607554|3|3|1|352|3092|285|84|24|46|5|0|
ed45f47ed0708b618055a9ec3574aed4c84d34b2|Sun Dec 08 16:36:55 CET 2013|Rename Splitter.spliterator to splittingIterator, to proactively prevent name shadowing with Java 8. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57671698|0|0|1|352|3092|285|84|20|11|6|0|
257148b2901c8b8ec1b06d9c10804300ac3d06d0|Sun Dec 08 16:38:32 CET 2013|Rename common.collect methods named removeIf, to prevent shadowing in JDK8. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57673689|0|0|3|352|3092|285|84|20|62|5|0|
7dace6d0ab8c850bca14c217dc4fc81592889bf2|Sun Dec 08 16:40:09 CET 2013|Make CombinedFuture stop logging identical exceptions multiple times ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57675851|0|0|1|352|3092|285|84|22|55|5|0|
d1270e046449afe3a12ac525de255f7a8e2bfb67|Sun Dec 08 16:48:10 CET 2013|Stop ignoring http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6529795 in iterators now that the bug has been fixed in the JDK for a while. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57745078|0|0|0|352|3092|285|84|20|2|6|0|
f86cc3b3fbabe619ece14621d543133b44933614|Sun Dec 08 16:51:16 CET 2013|Change toString() methods of returned Predicate instances to consistently use the "code-like" style. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57771110|0|0|1|352|3092|285|84|23|44|6|0|
80280954a43bfb813f8a019774e06c2a88842ede|Sun Dec 08 16:52:45 CET 2013|Automated g4 rollback of changelist 57771110.|0|0|1|352|3092|285|84|20|42|5|0|
d660cc4a89e987d3377a2e1aa81bee2953fda987|Sun Dec 08 16:55:24 CET 2013|Multimap method javadocs: a few improvements. This doesn't by any means complete the job of perfecting all the docs in this interface.|0|0|1|352|3092|285|84|19|47|5|0|
2501cceb9f8059153cacda024843b8969e2851d8|Thu Dec 12 17:25:09 CET 2013|Include the key in the recursive load exception, to make debugging easier. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57905649|0|0|1|352|3092|285|84|21|81|5|0|
5097fbaf1ae749d60864855982bff6b244acbe37|Thu Dec 12 17:35:42 CET 2013|Deprecate implementations of Predicate.apply that should never be invoked directly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57908208|0|0|3|352|3092|285|87|21|48|5|0|
a6c0a1babcde36af1010ef36a3aa9fa2bfc9e3c4|Thu Dec 12 17:46:02 CET 2013|the the -> the ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57915223|0|0|1|352|3092|285|87|22|15|7|0|
4787c23dce0f5ac856d8d398225828971a93a3ff|Thu Dec 12 17:51:05 CET 2013|Ensure that Lists.transform preserves IndexOutOfBoundsExceptions thrown by the transform function. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57916083|0|0|1|352|3092|285|87|23|55|5|0|
d266057ce4eff7a0ba1b5e0cf23c639ce803629b|Thu Dec 12 17:56:13 CET 2013|Attempt to fix AbstractInvocationHandler's equals implementation that may fail for JDK type proxies, after reserialization. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57918440|0|0|1|352|3092|285|87|23|6|5|0|
74f36d8a00469aae7c179b5c7001c4f17d611e20|Thu Dec 12 18:01:17 CET 2013|Clarify the performance improvements of Ordering.sortedCopy over alternative implementations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57924772|0|0|1|352|3092|285|87|19|51|5|0|
660435fa8b9bb8fa96a2e66e0338c5beb044c50a|Thu Dec 12 18:06:21 CET 2013|Change TypeToken.method() and TypeToken.constructor() equals implementation such that List<Integer>.get() is unequal to List<String>.get() and List.get() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57989174|0|0|3|352|3092|285|87|22|57|5|0|
d4844526f5abebf27b5bda179e6fa639e467dc13|Thu Dec 12 18:11:20 CET 2013|Add an example to the javadoc for FinalizableReferenceQueue. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57993804|0|0|1|352|3092|285|87|22|9|5|0|
c0aa102b72b345d8c49cd58c0ebc63e770aec7aa|Thu Dec 12 18:16:24 CET 2013|Improve the example in FinalizableReferenceQueue. Previously it would always "log a message about how nobody called close" even if somebody did in fact call close. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58001245|0|0|1|352|3092|285|87|18|9|5|0|
7baaf16e09876f6ab3d7d182decae37f810d0195|Thu Dec 12 18:30:41 CET 2013|Temporarily strip testCleanupOnReferenceCollection from Guava. It fails when run under Maven in a 64-bit JVM, probably because it tries to fill up the presumably larger heap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58051028|0|0|0|352|3092|285|87|18|2|7|0|
c5e6cac3e22d79e47dace66b656f8aa26d5aeda1|Thu Dec 12 18:35:15 CET 2013|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58069096|0|0|1|352|3092|285|87|20|45|5|0|
569c6ea5cf53fe20b669d34efe980920aa8a2482|Thu Dec 12 18:39:54 CET 2013|Fix tiny javadoc syntax mistake. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58069740|0|0|1|352|3092|285|87|20|8|5|0|
bdd5652fd300a866ca74c48b9cc36f22b2bd85f5|Thu Dec 12 18:44:30 CET 2013|Stabilize the UncaughtExceptionHandlers against exceptions thrown in logging. Quoting from the Java manual: "Any exception thrown by this method [uncaughtException] will be ignored by the Java Virtual Machine." This seems slightly paranoid, but doesn't cost us much and avoids stupid non-terminations in OOM situations or other logging failures. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58086612|0|0|1|352|3092|285|87|19|9|6|0|
845f87592875faaa9c4b561fbe96da44565a29c6|Fri Dec 13 21:18:19 CET 2013|Simplify EqualsTester/EquivalenceTester/RelationshipTester by pulling the common assertions up into RelationshipTester. This reduces duplication and removes the need to rewrite exception messages.|0|0|0|352|3092|285|87|20|2|5|0|
9039e31abe100dfb9820e83e03d9e022c80e6a3c|Tue Dec 17 00:18:56 CET 2013|Link to JDK7 Javadoc instead of JDK6. I'm not sure where the JDK6 default is coming from, but this is sufficient to override it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58277660|0|0|0|352|3092|285|87|21|2|5|0|
3958664f3818520c899268dcbfe508354a6a4e62|Tue Dec 17 00:20:26 CET 2013|Reformat file to 100 columns, except the class docs which will be completely replaced by [] ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58284754|0|0|1|352|3092|285|87|20|9|5|0|
8f062a880a3102d6d8f909c0754d3d2cd468c9dd|Tue Dec 17 00:21:29 CET 2013|Remove DI annotations from ServiceManager.|0|0|1|352|3092|285|87|20|63|6|0|
412824abd116810f0468d560e6cf655f326048a6|Wed Dec 18 20:25:08 CET 2013|Rewrite type conversion to be acceptable to not only JDK8 but also Eclipse. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58300702|0|0|1|352|3092|285|87|19|45|5|0|
4ea03a82b9e8e8a679758d7f15d1a88c634d3524|Wed Dec 18 20:26:35 CET 2013|Improve some javadoc in Preconditions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58300765|0|0|1|352|3092|285|87|21|10|5|0|
75fda2a9fea9e3415c661e8688332c24ffddc940|Wed Dec 18 20:27:53 CET 2013|Open source Converter and friends in Guava 16.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58300985|1|0|8|353|3109|285|88|36|93|8|0|
5313166b8407e06bf63c8fea4531bd57c3039f54|Wed Dec 18 20:30:55 CET 2013|Import publicsuffix.org's test data. Run the tests as part of the tests of InternetDomainName.topPrivateDomain(), suppressing those that fail. (Plus miscellaneous no-op changes to the test.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58354304|0|0|0|353|3109|285|88|36|2|6|0|
4d75431608106c4e7a25bff35e22d2474ed30689|Wed Dec 18 20:32:00 CET 2013|Make CaseFormat.converterTo(), Enums.stringConverter(), and Maps.asConverter() return serializable converters with reasonable equals(), hashCode(), and toString() representations.|0|0|3|353|3109|285|89|25|78|8|0|
4f37c83bb0dc8abc03144b9a03e0e2613666eb01|Wed Dec 18 22:54:45 CET 2013|Deprecate InputSupplier, OutputSupplier and all public methods in common.io that use either type. Also release methods on Byte/CharSource that take ByteProcessor and LineProcessor so that the equivalent methods in Byte/CharStreams can be deprecated reasonably.|0|0|10|353|3111|285|133|30|73|5|0|
b05363dc42ed0be66f83a2dda182265c062bc754|Wed Dec 18 23:52:09 CET 2013|Remove Closeables.closeQuietly in Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58425087|0|0|1|353|3110|285|133|22|8|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Closeables.closeQuietly(java.io.Closeable), newSymbol=]
a54908de3a64640f33c26349bef5a6b8b81d2d0e|Wed Dec 18 23:53:09 CET 2013|Open source tests for ByteSource.read(ByteProcessor) and CharSource.readLines(LineProcessor). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58426058|0|0|0|353|3110|285|133|22|2|6|0|
2a8a6a72d8f274d2b77e3b092197288bb5cebf86|Thu Dec 19 23:35:14 CET 2013|Open source MultimapBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58480935|1|0|0|358|3135|285|133|19|39|7|0|
fe592e08dd536532a18cb35eb2a706dd6af7b254|Thu Dec 19 23:36:16 CET 2013|Open source Runnables.doNothing(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58481831|1|0|0|359|3136|285|133|21|9|5|0|
1b890d1bd2937634df2c5d57e5d649cca7f16ef3|Thu Dec 19 23:37:16 CET 2013|Open source HashingInputStream and HashingOutputStream. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58485637|2|0|0|361|3145|285|133|22|12|6|0|
ee211636ee9bc983338f76732e87cd730f0ce022|Thu Dec 19 23:38:32 CET 2013|Fix arrayListValues(int) in MultimapBuilder to actually throw IAE when expectedValuesPerKey is negative. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58491662|0|0|1|361|3145|285|133|20|42|7|0|
00caedba5f5f1a16be7b7b63fb6d833c8ea750e9|Thu Dec 19 23:39:32 CET 2013|Make some changes to MultimapBuilderTest to make it build in GWT (2.5.0-rc1, which Guava is using currently). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58497528|0|0|0|361|3145|285|133|20|2|5|0|
37e50544094d3f9ccd8d6efacf201a5a7dcb3275|Mon Dec 30 19:06:11 CET 2013|Compile Guava GWT tests with -strict. We already compile the prod code with -strict. I assume that I just didn't realize that -strict was valid for the test goal. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58499115|0|0|0|361|3145|285|133|18|2|5|0|
032fcbc8f8c83f9779df0b697ae238468ba0335d|Mon Dec 30 19:11:19 CET 2013|Remove doc references to the deprecated service methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58500316|0|0|6|361|3145|285|133|23|78|5|0|
c8eab9594d01d3992dae52732651446ed43ecf0b|Mon Dec 30 19:27:02 CET 2013|Slightly adjust Ordering.from() doc to be more amenable to the jdk 8 future. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58558868|0|0|1|361|3145|285|133|22|49|5|0|
16a5f3264b8139f06aad13a65bfc1e4501667a03|Mon Dec 30 19:47:50 CET 2013|Update common.io package-info.java to refer to Sources and Sinks rather than Input/OutputSuppliers. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58567579|0|0|0|361|3145|285|133|21|2|5|0|
4d6d964435561584e3860640a28bdc409648ab5b|Mon Dec 30 19:52:55 CET 2013|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58655362|0|0|1|361|3145|285|133|20|14|6|0|
4ab391e4924ef436da8e3d1363bc5d57e3b75514|Mon Dec 30 19:58:16 CET 2013|Converter.from(forwardFunction, backwardFunction). This will be essential in JDK 8. It's probably not that useful before then, but... why not?|0|0|1|361|3145|285|133|19|15|6|0|
82f5fb1d81269201546b02b093a568830a60e0c3|Mon Dec 30 20:03:32 CET 2013|Remove null boilerplate from Converter subclasses. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58787043|0|0|7|361|3145|285|133|24|89|9|0|
e7887ccb996ac5d36bc22714671767e80a24a5a8|Mon Dec 30 20:13:55 CET 2013|Small Converter cleanups: -move all @annotations to individual lines -fix some @Nullable annotations ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58824450|0|0|1|361|3145|285|133|28|15|5|0|
6369b1e9d4930c2f805a653433deb1524705efc5|Mon Dec 30 22:10:01 CET 2013|Remove Platform.charBufferFromThreadLocal layer of indirection, which existed for GWT purposes. It hasn't been used from GWT code since the escapers were moved from common.base to common.escape. Its one remaining (Google-internal) caller was never GWT compatible, so the caller didn't actually need to use the method (though it has done so since its creation back in CL 24637091). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58904453|0|0|1|361|3145|285|133|22|10|7|0|
cf2221405b339b4ce7b4d7b10d56da9de79046be|Mon Dec 30 22:30:38 CET 2013|Add benchmark methods to determine efficiency of map iteration using both entry set and key set. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58904951|0|0|0|361|3145|285|133|18|2|5|0|
4b0e869014db10f62a6efec866a0a2fcccee52ad|Mon Dec 30 23:20:48 CET 2013|Mark isSmall as @GwtIncompatible. It references the @GwtIncompatible type SmallCharMatcher. This works fine in prod mode, but it breaks in dev mode. See https://code.google.com/p/google-web-toolkit/issues/detail?id=8510 and the discussion on linked CL 39931458. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58906855|0|0|1|361|3145|285|133|19|11|5|0|
955e3d5f01af31f22dacf2fcff15fe88453fcba6|Fri Jan 03 17:33:35 CET 2014|Remove use of JDK 7 language feature from a Guava benchmark. Guava hasn't desupported JDK 6, and even when it does we may still want benchmarks to be runnable against older vms. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58938655|0|0|0|361|3145|285|133|20|2|7|0|
9f96c78c0411ced56d1d8ef303fd5913a1171239|Fri Jan 03 17:35:07 CET 2014|Make some minor simplifications in common.base. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58996623|0|0|3|361|3145|285|133|20|49|5|0|
b7f128cfc9bf01e1b5d62af7640927fafdd07619|Fri Jan 03 17:37:53 CET 2014|Miscellaneous cleanups: - Remove unused ImmutableSortedMultiset.Builder.comparator. - Change @link to @linkplain where appropriate, and fix a couple busted @link tags seen along the way (based on a search for '{@link\b[^}]*([ *]+[^ *}]*[^ *}]*[^ *},]){3}'). (Change one @link in ServiceManager to @code.) In a couple cases (TimeUtil, ServiceModule), the text ought to be *partially* code font, but I haven't taken further action - Strip Converter.from implementation from Guava, since Converter.from itself is stripped. - Run trivial RunnablesTest under GWT. - Remove a few instances of "$inheritDoc," which should have been "@inheritDoc" and wasn't necessary anyway. - Remove per-method @GwtIncompatible annotations from SmallCharMatcher, which is entirely @GwtIncompatible. - Remove stray blank line in AbstractMapBasedMultimap. - Insert missing space in UninterruptiblesTest failure message. - Remove extra space in WrappingExecutorService.wrapTask Javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59001342|0|0|8|361|3145|285|133|25|88|5|0|
c81e4fa9760107230b1670bf74b334533a0302e8|Fri Jan 03 17:38:48 CET 2014|Clarify the relationship between the two wrapTask methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59003211|0|0|1|361|3145|285|133|28|46|8|0|
27995f7621764a7e6f8b51ce57ad1846a4640982|Mon Jan 06 17:21:27 CET 2014|Optimize BigIntegerMath.sqrt(BigInteger, CEILING), which needs to test if the square root is exactly an integer, by doing a quick check in int arithmetic first. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59039597|0|0|1|361|3145|285|133|20|11|5|0|
33e370a64e217f946250cf2398ce1133c54bc10e|Mon Jan 06 17:26:28 CET 2014|Move configuration to the constructor. That's where we do it in other packages. Plus, it's ever so slightly less code. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59041814|0|0|0|361|3145|285|133|18|2|5|0|
426c4422430609b4d63a35d66b014643b621139d|Mon Jan 06 17:36:47 CET 2014|Change toString() methods of returned Predicate instances to consistently use the "code-like" style. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59050444|0|0|1|361|3145|285|133|19|43|6|0|
f18ec39405a76ee6c5ef68e4d9da2266f796a9a4|Mon Jan 06 17:41:58 CET 2014|Release CacheLoader.asyncReload() in Guava 17.0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59050926|0|0|1|361|3146|285|133|25|56|5|0|
be834cf947a7655cef0d6b6e29705400d2390eba|Fri Jan 10 16:37:40 CET 2014|Change CharSource.wrap(...).toString() to use Ascii.truncate and increase the maximum number of characters to truncate at. Also change ByteSource.wrap(...).toString() to truncate the hexadecimal representation of the byte array. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59155734|0|0|2|361|3146|285|133|19|49|5|0|
aaea478b92c3daf4909b5403901a67cb302784d6|Fri Jan 10 16:43:16 CET 2014|Update Converter javadocs: -added a link to Maps.asConverter() -added a note saying do not call the SPI methods directly ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59155849|0|0|1|361|3146|285|133|19|53|8|0|
bfe1f6028ffd2bedce58909c385d7760d1711f6e|Fri Jan 10 16:48:52 CET 2014|Rename CacheLoader.asyncReload to asyncReloading. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59214974|0|0|1|361|3146|285|133|22|55|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.cache.CacheLoader.asyncReload(com.google.common.cache.CacheLoader<K,V>,java.util.concurrent.Executor), newSymbol=]
bbe977e2d2bedcfdc3bfee4025e4493fed756138|Fri Jan 10 16:59:24 CET 2014|Cleanup from rename of asyncReload() to asyncReloading(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59229767|0|0|1|361|3146|285|133|18|54|6|0|
4ef3a687731998dda5fe99d91c5937c3fef201c6|Fri Jan 10 17:05:01 CET 2014|Create a Google-internal RateLimitingExecutorService.|0|0|1|361|3146|285|133|20|15|8|0|
5f0c227364a48603a4e8bb560ce407c33f090a99|Fri Jan 10 17:10:31 CET 2014|Add @CheckReturnValue annotation to Objects.equal() so that error-prone enforces that the return value is used. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59280111|0|0|1|361|3146|285|133|21|11|5|0|
ae7f2bcd60a0e7196ed016f94d82ff11ef1825e8|Fri Jan 10 17:26:22 CET 2014|Remove unused private nested class from SortedMapInterfaceTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59335399|0|0|0|361|3146|285|133|19|2|5|0|
470743ddff22ab6f9d6ff519743a2ea4af16dfbd|Fri Jan 10 17:36:57 CET 2014|Replace "fail(...); return x;" with "throw new AssertionFailedError(...);" This eliminates some unreachable code that the compiler couldn't prove was unreachable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59341803|0|0|0|361|3146|285|133|23|2|5|0|
f6352ab67808dbf6d94242e9d7851a2c2046dd05|Fri Jan 10 17:42:20 CET 2014|Functions.forMap and Maps.asConverter should have cross-references in their documentation, as well as the two forms of Functions.forMap with each other. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59349470|0|0|2|361|3146|285|133|25|83|9|0|
d19890d58909d158e9fea8cf76b3cdc128316633|Fri Jan 10 17:52:10 CET 2014|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59362873|0|0|1|361|3146|285|133|25|6|5|0|
d4dea3bae554e0b188c713e4b4727f3e8e344e9a|Fri Jan 10 22:37:59 CET 2014|Remove use of JDK7 API in ServiceManagerTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59402724|0|0|0|361|3146|285|133|19|2|5|0|
b6696b5c436f84fbd31cebc2e919b4eb0977bcbc|Mon Jan 13 18:42:49 CET 2014|Some changes to CharMatcher.WHITESPACE implementation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59409460|0|0|1|361|3146|285|133|18|12|7|0|
ce26183f63fdcf9abe361aafc62b7d37c55424bd|Mon Jan 13 18:44:19 CET 2014|Add iteration order discussion to SortedMultiset doc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59412449|0|0|1|361|3147|285|133|20|34|5|0|
cb8c67aa2142f4d22d4b87dacfa0ffdb57790b59|Mon Jan 13 18:45:32 CET 2014|Change a couple of usages of Deque.push() and pop() to addFirst()/removeFirst(), reducing the delta for the JDK5 backport slightly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59415987|0|0|1|361|3147|285|133|22|13|5|0|
16c64dd29ccbd4c1f497c56ba8dd4cafc25c3f3d|Tue Jan 14 21:24:24 CET 2014|Add tests for inserting null values into a Multimap. I was unable to reproduce the behavior reported at http://stackoverflow.com/questions/21078379/guava-null-pointer-on-multimap-with-multiple-null-values Maybe it depends on the JRE version, since, as you noted, old JREs had a TreeSet bug. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59522383|0|0|0|361|3147|285|133|22|2|6|0|
3f7122a3bca7876728e9bc4f4c3d388af751b590|Tue Jan 14 21:25:50 CET 2014|Javadoc tweaking. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59531412|0|0|1|361|3147|285|133|20|46|5|0|
68c83489321042f5c49f7bd88ce0caf6c99a53a6|Tue Jan 14 21:28:10 CET 2014|Clarify the relationship between Iterables.toString(collection) and collection.toString(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59586049|0|0|1|361|3147|285|133|19|60|5|0|
3b2035d0abf57f1cf434ed6b90b4e131543ced46|Thu Jan 16 18:26:53 CET 2014|Fix up ExecutionQueue docs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59677053|0|0|1|361|3147|285|133|22|46|6|0|
bbdac75eb17feb528fa8020ddead73d767ec62ed|Thu Jan 16 18:28:22 CET 2014|Add SortedCopyBenchmark and document its findings in the Ordering javadoc. First rename away the existing benchmark for measuring comparator delegation overhead. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59694095|0|0|1|361|3147|285|133|19|48|4|0|
d115ed28283c47d57532552f18195d2063325a51|Thu Jan 16 18:29:23 CET 2014|Cache the reverse Converter view to avoid allocating every time reverse() is called. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59697492|0|0|1|361|3147|285|133|20|51|5|0|
0a355043906514163253d50ad68a1a419159a373|Thu Jan 16 23:21:25 CET 2014|Fix a number of test failures running the backport under JDK5.|0|0|0|361|3147|285|133|25|2|8|0|
9363dbdb80620b000ae439240b7f91cf84dbd021|Fri Jan 17 00:20:15 CET 2014|Remove deprecated, unused, Google-internal Futures.transform overload that accepts a plain Future. The ListenableFuture overloads appear to be serving users well. For those users who are stuck with a plain Future, we still provide Futures.lazyTransform, which has similar but not identical behavior to Futures.transform. Specifically, lazyTransform does not cache the result of the transformation. This could in principle result in Futures whose value changes over time. This, along with the potential costs of repeated function application, is a reason to prefer Futures.transform when possible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59754254|0|0|0|361|3147|285|133|22|1|5|0|
a7f8095a888651f3fd7b7dc573b287f4aeb11fd3|Fri Jan 17 00:21:19 CET 2014|Change SortedMapTestSuiteBuilder and DerivedCollectionGenerators to correctly handle SortedMaps whose keySet()s are not SortedSets--the spec of SortedMap.keySet() doesn't require that it return a SortedSet, and it apparently didn't at least for TreeMap in JDK5. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59756355|0|0|0|361|3147|285|133|20|2|5|0|
4055585a29cb4396e5c101fb5842409ff4eef2f1|Fri Jan 17 20:38:07 CET 2014|Allow for the possibility of the CacheLoader load not taking enough time for the system clock to tick in LocalLoadingCacheTest. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59799155|0|0|0|361|3147|285|133|20|2|5|0|
39a4f96687c910b5194007a0bb499a9ccb41f0ce|Fri Jan 17 20:38:59 CET 2014|Fix LocalCache.asMap().values() to not implement Set. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59806114|0|0|1|361|3147|285|133|19|77|7|0|
6a122f12efebc6c79e539b2ede91514eb2e21103|Sat Jan 25 00:34:04 CET 2014|Add some performance enhancements to Striped:|0|0|1|361|3147|285|133|24|60|5|0|
acdc6a0b86d8795cc31e521e7241869bcb05ebf7|Sat Jan 25 00:50:37 CET 2014|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59954427|0|0|0|361|3147|285|133|19|2|5|0|
edfbb7e5f5b7d64c8e4a4eeeb49f17030de178b8|Sat Jan 25 01:01:06 CET 2014|Update Guava version to 17.0-SNAPSHOT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59979307|0|0|0|361|3147|285|133|20|2|6|0|
698bed9c310d07bc0e0af8ff9585a9fbba8e34a3|Sat Jan 25 01:06:18 CET 2014|Remove the deprecated Service methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=59981888|0|0|5|361|3127|285|113|20|54|6|20|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.start(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.stopAndWait(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractScheduledService.stop(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Service.stop(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractIdleService.start(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractIdleService.stopAndWait(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractService.startAndWait(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractScheduledService.startAndWait(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractIdleService.stop(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Service.stopAndWait(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.stop(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractService.start(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractScheduledService.start(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractIdleService.startAndWait(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractService.stopAndWait(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Service.startAndWait(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Service.start(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractExecutionThreadService.startAndWait(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractScheduledService.stopAndWait(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractService.stop(), newSymbol=]
5216a57b07b9e249dfcbf076aadf3c9cd5433633|Sat Jan 25 01:22:45 CET 2014|Use string substitution for MapMaker checkNotNull. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=60034674|0|0|1|361|3127|285|113|42|58|4|0|
8aa3e7438d0d2e294976c8045c59259f4dae5c4b|Sat Jan 25 01:28:05 CET 2014|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=60101894|0|0|0|361|3127|285|113|20|2|7|0|
eb89cdb025ca9e5498e51f0aa1303f0dbfa09d5c|Sat Jan 25 01:37:36 CET 2014|Stop using assertSeededHashFunctionEquals for goodFastHash. The problem is that goodFastHash(n) is sometimes equal to goodFastHash(m) even when n and m are different. Basically, the value is rounded up to a multiple of 128. (It's a size, not a seed as it is for the other Hashing methods.)|0|0|0|361|3127|285|113|18|2|5|0|
81bb550f568b53840682bd00784db4528ca56c22|Mon Jan 27 22:52:59 CET 2014|Also benchmark creating SortedSets, which predictably fare worst, but at least we can observe by how much. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=60385622|0|0|0|361|3127|285|113|18|2|5|0|
447e7a41c22bcaba75bef99eebae179bc15f2894|Tue Jan 28 19:07:08 CET 2014|Fix a call to checkArgument in SimpleTimeLimiter.newProxy to use string substitution. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=60440806|0|0|1|361|3127|285|113|20|48|6|0|
f24f6eea4e07858b9715b5c8afde081944c4f00b|Tue Jan 28 22:03:14 CET 2014|Added Media types for the following font formats: EOT, SFNT, WOFF. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=60484333|0|0|1|361|3127|288|113|21|55|5|0|
af5afeffaddbd3de5b44d3f1b49c2462e19795f8|Fri Jan 31 19:01:02 CET 2014|Rewrite Ints.tryParse(int) with a copy of the Longs.tryParse implementation, which accepts only ASCII digits. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=60660931|0|0|2|361|3127|288|113|20|23|6|0|
fd0cbc2c5c90e85fb22c8e86ea19630032090943|Fri Jan 31 19:05:19 CET 2014|Hide deprecated Stopwatch constructors in Guava. The constructors are scheduled for deletion in Guava 17. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=60668113|0|0|1|361|3127|288|113|22|9|5|3|BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.base.Stopwatch.<init>(com.google.common.base.Ticker), newSymbol=],BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.base.Stopwatch.<init>(), newSymbol=],BC[kind=CLASS_NOW_ABSTRACT, impactedSymbol=com.google.common.base.Stopwatch, newSymbol=com.google.common.base.Stopwatch]
b42368ce50632c78886dc369f79265b1114668a2|Fri Jan 31 19:24:17 CET 2014|Fix tests that break when Stopwatch constructors are hidden. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=60761955|0|0|0|361|3127|288|113|21|2|6|0|
7a8148a7bbd7aaa5e9e157118c824ab502f9b052|Fri Jan 31 19:28:42 CET 2014|Promise at least weakly consistent iteration for asMap(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=60762175|0|0|1|361|3127|288|113|19|40|5|0|
5f913f5e6411698a4e50a0593ea4db4632e2c912|Mon Feb 03 18:42:58 CET 2014|Change TypeResolver to not construct new TypeResolver when all the bounds remain the same. This is to work round the change in JDK TypeVariableImpl.equals().|0|0|3|361|3127|288|113|19|63|5|0|
bf37714cb4480fc2c52b759bb755f6aa617cb347|Mon Feb 03 22:12:04 CET 2014|Belated nitpicking and comment revisions for TypeResolver change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=60944582|0|0|2|361|3127|288|113|22|55|7|0|
1ee4b0ab38263aeaea7fc840a8d0a6ea3e2b7d83|Wed Feb 05 19:51:31 CET 2014|Reshuffling from internal change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=60993826|0|0|1|361|3127|288|113|20|10|5|0|
67f87819dc4934b9023c08812d811d172d6509b8|Wed Feb 05 19:53:28 CET 2014|Run Animal Sniffer on guava-testlib and guava-test in addition to guava itself. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61001284|0|0|0|361|3127|288|113|20|2|5|0|
1e2a1b645d743a350f8ebf260ad6bf847219285d|Wed Feb 05 19:55:00 CET 2014|Mozilla TLD update. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61013135|0|0|1|361|3127|288|113|20|37|8|0|
1fad9ae5cd05bbbd9549fac199ddd2881bea97f1|Wed Feb 05 19:58:59 CET 2014|Delete AndroidInteger. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61067964|0|1|0|361|3127|288|113|20|2|5|0|
f6f3aab8605bd368ef37ce82298d8896a358f669|Thu Feb 06 22:40:51 CET 2014|Add closeQuietly(InputStream) and closeQuietly(Reader). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61085980|0|0|1|361|3129|288|113|18|7|5|0|
c24034b8d8d9b7f676d33e90c3d8eb7914860d00|Thu Feb 06 22:43:31 CET 2014|Deprecate the constants in com.google.common.base.Charsets for internal users. Internal users should prefer the constants in java.nio.charset.StandardCharsets. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61098351|0|0|1|361|3129|288|113|20|8|5|0|
0a3e1294848712557ccbfade7075921d90e004c4|Thu Feb 06 22:47:09 CET 2014|Correct code example in Funnel Javadoc, that uses the old deprecated-then-removed PrimitiveSink#putString(String) method.|0|0|1|361|3129|288|113|21|11|8|0|
b3cf6a14b776a4973191318d9008a489018c89a7|Thu Feb 13 19:53:43 CET 2014|Add a more descriptive error message when AsyncFunction.apply returns null.|0|0|1|361|3129|288|113|21|58|5|0|
ff9bf6d8eee80fcee46bdb3da4fdbd00d8381d44|Thu Feb 13 19:55:43 CET 2014|Method to shut down an ExecutorService in two phases included in j/c/g/common/util/MoreExecutors. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61230873|0|0|1|361|3130|288|113|19|47|5|0|
316bf60b25eb3bb5b65dd7d25b698c9f9ef5cc5c|Thu Feb 13 19:59:31 CET 2014|Add Follow-OnlyWhenPrerender-Shown http header constant.|0|0|1|361|3130|289|113|20|6|7|0|
2ef20bd51537777015f845709bfd24efecd18ff3|Thu Feb 13 20:05:28 CET 2014|grow the destination buffer more aggressively to avoid excessive array copying in escapeSlow ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61330434|0|0|1|361|3130|289|113|19|12|6|0|
6deed714387e2f32e2bc07ba79ff94c555553112|Thu Feb 13 20:09:00 CET 2014|Mark ImmutableMultiset toArray() tests as flaky. The best way I know to do that for our suite-generated tests is to mark all ImmutableMultiset/ImmutableSortedMultiset tests as flaky. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61395617|0|0|0|361|3130|289|113|19|2|5|0|
f38aa29944527b56013694ab4751f99abca463af|Thu Feb 13 20:16:35 CET 2014|Clarify javadoc of Files.move; it doesn't work just like mv. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61519547|0|0|1|361|3130|289|113|19|49|6|0|
b321e8aadca131d89c08bc5e4fc8ee76ac302933|Mon Feb 17 17:28:17 CET 2014|Improve the error message thrown from MediaType.parse().|0|0|1|361|3130|289|113|19|59|5|0|
9542aece4a723ecdb73e5e6e7fe57041e8b42dc1|Tue Feb 25 21:53:53 CET 2014|Increase timeouts that are expected never to expire. Under current timeouts, the test is flaky. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61742992|0|0|0|361|3130|289|113|22|2|5|0|
b1e7d2416a21c6ad73321ee7db22ad8f4f61c078|Tue Feb 25 21:55:56 CET 2014|Minor docfix in Iterators.java. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61749084|0|0|1|361|3130|289|113|20|43|6|0|
a7dda1a8b5d412a74f6e461feca02292adf7d58a|Tue Feb 25 21:59:08 CET 2014|Deprecate the primitive compare() methods internally. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61755619|0|0|7|361|3130|289|113|24|29|5|0|
8491703e0a4689080ff829fc2c63297a8b3e3a2f|Tue Feb 25 22:00:57 CET 2014|Fix a minor nit in Futures.dereference() documentation: the listener runs in either the thread that called dereference() OR the thread the completes the input future. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61801821|0|0|1|361|3130|289|113|22|58|5|0|
6fdaf50644feec6e6261f78b2d494af2e1d212d2|Tue Feb 25 22:07:07 CET 2014|Add a new HostAndPort.fromHost() factory, which behaves like fromParts() without the port number.  This is useful for converting a host into possibly-bracketed form, so that a port may be appended afterward.|0|0|1|361|3131|289|113|22|12|7|0|
3380a6d184b8ab76da22e9b9da4286c015305254|Fri Feb 28 19:11:04 CET 2014|Remove javacomp_package|0|0|0|361|3131|289|113|21|2|5|0|
95cb6b7f77f71021919539cdffbeec756ad97118|Fri Feb 28 19:35:06 CET 2014|Override toString() in Iterables.consumingIterable() and Iterators.consumingIterator(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=62154162|0|0|2|361|3131|289|113|24|64|5|0|
ca1bb340d73748ddd91038b258a16cf361eb8262|Fri Feb 28 19:36:51 CET 2014|Adding precise control over types of null queries allowed by MapFeatures. Also, propagate ALLOWS_NULL_VALUES to Multimap.values() features. From leventov.ru: https://codereview.appspot.com/58760044/ https://codereview.appspot.com/65730044/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=62226066|0|0|0|361|3131|289|113|41|2|6|0|
deff3845959d6be8b6eeb802d76b2b7637d1cc02|Fri Feb 28 19:40:04 CET 2014|Changed ArbitraryInstances to use public constant instance if present. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=62232146|0|0|0|361|3131|289|113|28|2|6|0|
d11e1f07803e29744e2f285af9abe602413fe482|Fri Feb 28 19:41:41 CET 2014|Cleanup unnecessary gwt.xml's from c/g/common/base and c/g/common/collect. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=62235637|0|0|0|361|3131|289|113|22|2|4|0|
be7bbf61201a88518d0ff007e8b3a29d0b548526|Fri Feb 28 19:43:11 CET 2014|*** Reason for rollback ***|0|0|0|361|3131|289|113|20|2|5|0|
e8a99494cf370daf93880c99fc69c5d52bbaaa46|Fri Feb 28 19:47:51 CET 2014|Automatically add <inherits> for java.* emulations to Guava. Remove the manually added <inherits>.|0|0|0|361|3131|289|113|22|2|7|0|
c927c61d98550f1bbb0fdf8d7d36f7f695af92c7|Tue Mar 04 20:57:08 CET 2014|Remove "<add-linker name='std'/>" workaround, which is no longer necessary. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=62490843|0|0|0|361|3131|289|113|25|2|5|0|
e52de0d4ab9a66b30d75bc4d96ad4269551e9884|Wed Mar 05 16:07:35 CET 2014|Add a test case to EnumsTest that ensures that the Enums.getIfPresent method doesn't cause a reference to the Enum class parameter to be held indefinitely. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=62564526|0|0|0|361|3131|289|113|23|2|5|0|
4061b1a8ce5b668b076bb0877091e1c4322ee539|Thu Mar 13 16:29:20 CET 2014|Open source base.Verify in Guava 17.0 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=62936772|2|0|0|363|3135|289|113|22|9|5|0|
1511c17c0621f3a21921aed4b655c5b1306eaf32|Thu Mar 13 16:36:11 CET 2014|Add Futures.inCompletionOrder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=62970544|2|0|1|363|3136|289|113|22|56|8|0|
4be45420671b59f417961b5849230799fd425ba9|Thu Mar 13 16:38:04 CET 2014|Adding stream based factory methods for ByteArrayDataInput/Output and tidying up to minimize actual constructors. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63021371|0|0|1|363|3138|289|113|24|52|5|0|
6652c5f1f624ae3c524123ab277df6993cb300d1|Thu Mar 13 16:41:14 CET 2014|Fix Maven warning from duplicate Animal Sniffer reference:|0|0|0|363|3138|289|113|20|2|5|0|
b0171601101a650bcfc1e53c88220f6e6a708558|Thu Mar 13 16:43:40 CET 2014|Release Converter.from(Function, Function) for Guava 17. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63073973|0|0|1|363|3139|289|113|19|47|7|0|
54d74f6ba8e8aeb1108a307c8e00aed3a764afb2|Mon Mar 17 16:05:44 CET 2014|Remove GWT copy of ImmutableSortedSet.of(E[]) from Guava. The non-GWT version has been gone since CL 24279246. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63077177|0|0|0|363|3139|289|113|22|2|5|0|
ad2474572cd3becd882fd6366a8fd16e0e9e3bda|Wed Mar 19 17:53:59 CET 2014|Run some common.collect.testing tests under GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63261660|0|0|0|363|3139|289|113|23|2|5|0|
05263c826c166215db935bb4b1ea89dd54b5685a|Wed Mar 19 17:55:39 CET 2014|Remove inaccurate claim of GWT compatibility. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63262539|0|0|0|363|3139|289|113|22|2|5|0|
fa8103a40cab574bad32779d45c38118adfed092|Wed Mar 19 17:59:03 CET 2014|Override close() in all subclasses of FilterOutputStream to ensure they do not swallow exceptions thrown when flushing the delegate stream.|0|0|3|363|3142|289|113|19|21|5|2|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.io.FilterOutputStream.close(), newSymbol=com.google.common.io.CountingOutputStream.close()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.io.FilterOutputStream.close(), newSymbol=com.google.common.hash.HashingOutputStream.close()]
70784731274a3ca222430857f68aca8254009130|Wed Mar 19 18:04:16 CET 2014|Mark DoubleMath as @GwtCompatible, allowing these methods to be used from GWT code: - log2(double x) - factorial(int n) - fuzzyEquals(double a, double b, double tolerance) - fuzzyCompare(double a, double b, double tolerance) The other methods are marked as @GwtIncompatible due to aspects of their implementations not being GWT-compatible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63356280|0|0|1|363|3142|289|113|19|17|5|0|
83884f9847ee0b809376fcc0705c6db75ad56878|Wed Mar 19 19:34:56 CET 2014|Guava publicsuffix .gwt.xml fixes: - Use the Guava-munged .gwt.xml files rather than the Google-internal versions. (The versions are currently identical, but this will change in CL 63334981.) - Put the .gwt.xml files under guava-gwt instead of guava. (I'm not 100% sure whether this fixes any concrete problems or just removes the .gwt.xml files from the main guava jar, where they clearly don't belong.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63357956|0|0|0|363|3142|289|113|21|2|6|0|
f23c66556b7cd1eba781aa071a16111a6e39d9e5|Wed Mar 19 19:36:38 CET 2014|Prevent our rollup modules from including any "real" source files from c.g.c subpackages. This should make no difference unless we forget to list a module, in which case it will prevent us from seeing the module's .java files without its .gwt.xml. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63357986|0|0|0|363|3142|289|113|21|2|7|0|
26ad5e4e1bbf6f419ace3ac31943fe0ede56a44a|Wed Mar 19 19:40:07 CET 2014|Add missing modules. This ensures that the open-source build compiles all packages and has everything it needs to run all tests (or so I will claim until I find my *next* oversight :)) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63359056|0|0|0|363|3142|289|113|20|2|5|0|
172f9c9f6c58c6ae3652f4b76c61787127df0929|Wed Mar 19 19:43:32 CET 2014|Make AtomicLongMap tests work under GWT. See the comments added to the .gwt.xml files for the sordid details. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63401251|0|0|0|363|3142|289|113|22|2|6|0|
92dd28a4fcfec1a6cb52a1d0ca6c93dba3dc5c78|Thu Mar 20 03:03:59 CET 2014|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63436180|0|0|0|363|3142|289|113|20|2|5|0|
f3a3c4d96c54558f6c1f2fe328bf2c977c06d0bd|Thu Mar 20 03:13:28 CET 2014|Add missing <inherits> to modules. The result is that we don't have to manually include User in our compilation tests, and other users won't have to include it, either. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63444626|0|0|0|363|3142|289|113|23|2|7|0|
965c296fb6fb394e9724b9056bfb95d2e1080e4d|Sat Mar 22 02:46:02 CET 2014|Make Enums.getIfPresent ~16 times faster for 80% hit rate, ~72 times faster for 20% hit rate.|0|0|2|363|3142|289|113|25|13|5|0|
af946dd3100624cf9df64a9bc61f43161e8b9b70|Sat Mar 22 02:47:44 CET 2014|Remove redundant 'public' modifier from StatsCounter interface methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63486708|0|0|1|363|3142|289|113|22|50|5|0|
6de004aebed935dfa060e76e1c2db23041ae3df5|Sat Mar 22 02:51:12 CET 2014|Change bitCount from int to long. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63498264|0|0|2|363|3142|289|113|20|18|7|0|
8f14f12f1a6bc1c903909c9c21fb7b500c55b53f|Sat Mar 22 02:52:56 CET 2014|Pick up a whole lot of TLD changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63499305|0|0|1|363|3142|289|113|21|38|6|0|
a401007f557ab438dffe6ae5b5f36bc455884a65|Sat Mar 22 02:58:09 CET 2014|Fix up .gwt.xml file as a part of some internal changes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63544353|0|0|0|363|3142|289|113|21|2|6|0|
e6888aadc42b1f3181a09b5c18a55f65218d5a0d|Mon Mar 31 20:24:14 CEST 2014|Change the behavior of Service.Listener and ServiceManager.Listener such that we guarantee that listener callbacks (for a single listener) will never be called concurrently.  Previously, the only semantics we guaranteed was about the order in which callbacks were submitted to executor.execute.  This significantly strengthens those guarantees.|1|1|3|363|3142|289|113|21|66|6|0|
6620388972a07f33d44497c62128ba9c88f46649|Mon Mar 31 20:27:25 CEST 2014|Add HashCode.getBytesInternal() for package-private direct access to the underlying, mutable byte array (for byte-based HashCodes). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63906429|0|0|1|363|3142|289|113|20|23|5|0|
353b6e69db0e6538adf6a6ecd773883207b0633c|Mon Mar 31 20:30:25 CEST 2014|Fix a typo in CacheBuilder's docs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63969189|0|0|1|363|3142|289|113|22|56|5|0|
41828f6247e33a29730f9fd1cf892c3faf48d37f|Mon Mar 31 20:31:56 CEST 2014|Add a new BF strategy. The old one is subtly broken. For more information, see: https://code.google.com/p/guava-libraries/issues/detail?id=1119 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63970075|0|0|1|363|3142|289|113|20|17|6|0|
d38a0105039a1802478f8844afc191804050cc57|Mon Mar 31 20:33:25 CEST 2014|Init combinedHash to hash1 as per 'Less Hashing, Same Performance: Building a Better Bloom Filter' ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63973319|0|0|1|363|3142|289|113|18|20|5|0|
585d047130811ba07af552c3e16158640a1e6406|Mon Mar 31 20:34:49 CEST 2014|Clean up misuses of Truth where proposition values are passed into ASSERT.that() instead of the object under test.  This leads to patterns like:|0|0|0|363|3142|289|113|22|2|5|0|
b115d6fd5934792162f6ec5b3e6dfdc5a03b19ea|Mon Mar 31 20:36:22 CEST 2014|Switch default BloomFilter strategy from the broken MURMUR128_MITZ_32 to the new MURMUR128_MITZ_64. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63979311|0|0|1|363|3142|289|113|23|14|5|0|
c413ba4581a8eac5c8dfe663660c6ad8e1f682d4|Mon Mar 31 20:37:31 CEST 2014|Add tests to make sure classes don't get exported to JS by accident/mistake.|0|0|1|363|3142|289|113|20|34|6|0|
3216a1bb5e1a9cb57d65cfbc5ba9a604f0562a64|Mon Apr 07 17:45:57 CEST 2014|Don't allow repeated calls to hash() on a MessageDigest-based hasher. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64080687|0|0|1|363|3142|289|113|19|11|5|0|
4c6149be9d768642afecb70c0c63d9dfbb605837|Mon Apr 07 17:48:09 CEST 2014|Add koeln TLD. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64111945|0|0|1|363|3142|289|113|21|38|5|0|
9ed4e220859fde04f6d1f009adfb16a356aca31e|Mon Apr 07 17:49:29 CEST 2014|Rollback of changelist 63979311, which changed the default BloomFilter strategy.|0|0|1|363|3142|289|113|21|13|6|0|
ab799a93c797ae14725ec0a643001a574acf6323|Mon Apr 07 17:54:00 CEST 2014|Improve BF serialization documentation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64144815|0|0|1|363|3142|289|113|18|13|4|0|
0ddefed78b631124bfc2ee3695ab0798b94b16c6|Mon Apr 07 17:55:26 CEST 2014|Fix minor Javadoc error in CharStreams. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64151790|0|0|1|363|3142|289|113|18|44|5|0|
a358bac42c732ef8349c8dfb5df2cfd92a2d5d98|Mon Apr 07 17:56:52 CEST 2014|Change default BF strategy for Guava to MURMUR128_MITZ_64. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64156827|0|0|1|363|3142|289|113|20|20|5|0|
a832c682a712f53fd89789f18cd3be17df2d4c9b|Mon Apr 07 18:16:52 CEST 2014|Added setDistinctValues() to ClassSanityTester and AbstractPackageSanityTester. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64398568|0|0|0|363|3142|289|113|23|2|5|0|
2ad3463f7715fef432bad3778af5125d9863352c|Mon Apr 07 18:18:19 CEST 2014|Migrate to setDistinctValues(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64399927|0|0|0|363|3142|289|113|21|2|5|0|
cbb55be43e7d21aa42f3c46d442a088386e66cf5|Mon Apr 07 19:53:34 CEST 2014|Generates fresh value for Range. It was an oversight not adding it in the first place. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64481937|0|0|0|363|3142|289|113|19|2|5|0|
eb68100cc9a30cb7cca03dbe0eebad8d5e76b5b1|Tue Apr 08 22:02:31 CEST 2014|Fix flaky ServiceManager test|0|0|0|363|3142|289|113|19|2|6|0|
47fabd3be08b8703ad5a4715f0ff687d15fa9cf9|Tue Apr 08 22:09:48 CEST 2014|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64573579|0|0|1|363|3142|289|113|20|51|5|0|
5d004b642817d40c6919291c20028827b4b46742|Tue Apr 08 22:11:40 CEST 2014|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64574375|0|0|1|363|3142|289|113|21|14|4|0|
845b0e8deee44d2da12e8aac00e7a95c4e88a9e9|Wed Apr 09 16:29:46 CEST 2014|Temporary fix to ClassSantityTester. We cannot remove the fallback to Iterable.class generation yet, because doing that would break some teams' tests. They need to be fixed with extra setDistinctValues() before we remove the fallback. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64603381|0|0|0|363|3142|289|113|19|2|5|0|
b32b16b814e12cd483626108c509122e3c9f5536|Wed Apr 09 21:42:42 CEST 2014|This CL is to fix EnumMultisetTest that would otherwise break with the new FreshValueGenerator that doesn't generate raw Iterable for Iterable<T>. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64631310|0|0|0|363|3142|289|113|20|2|5|0|
6138e53e53f25b68427c7aeec917875270b45e2e|Thu Apr 10 00:47:49 CEST 2014|Change default BloomFilter strategy to be controllable by a system property for Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64657125|0|0|1|363|3142|289|113|20|12|5|0|
2ec1b12a1af770e39d7a837858097a6470c4516a|Thu Apr 10 00:51:05 CEST 2014|Make common.reflect build and pass tests against both Java 7 and Java 8.|0|0|2|363|3145|289|113|22|51|5|9|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotationsByType(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotationsByType(java.lang.Class<A>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotationsByType(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotationsByType(java.lang.Class<A>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotation(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotation(java.lang.Class<A>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotation(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotation(java.lang.Class<A>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.lang.reflect.AnnotatedElement.getAnnotationsByType(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getAnnotationsByType(java.lang.Class<A>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.lang.reflect.AnnotatedElement.getAnnotationsByType(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getAnnotationsByType(java.lang.Class<A>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.reflect.AnnotatedElement.getAnnotationsByType(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getAnnotationsByType(java.lang.Class<A>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotation(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotation(java.lang.Class<A>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotationsByType(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotationsByType(java.lang.Class<A>)]
6c2d78402229cc267bddb26f174078d1353337d0|Thu Apr 10 00:52:51 CEST 2014|- For a Collection<T> parameter that we don't know how to generate, fail the test. Previously, we would sometimes generate a Collection<String>, since the value is usually used only for equals() and hashCode() testing. (All this also applies to most other JDK and Guava collection types.) http://code.google.com/p/guava-libraries/issues/detail?id=1665 - For Optional parameters, generate Optional.absent() before generating any Optional.of(...) instances. - Deprecate setSampleInstances in favor of setDistinctValues. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64661899|0|0|0|363|3145|289|113|20|2|6|0|
0dc1684fd14dcda25be4dc5ee9fcc1a680c3fb22|Thu Apr 10 15:55:37 CEST 2014|Rollback of changelist 64659484 ("Make common.reflect build and pass tests against both Java 7 and Java 8").|0|0|2|363|3142|289|113|19|45|4|6|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.reflect.Parameter.getAnnotationsByType(java.lang.Class<A>), newSymbol=java.lang.reflect.AnnotatedElement.getAnnotationsByType(java.lang.Class<T>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.reflect.Parameter.getAnnotationsByType(java.lang.Class<A>), newSymbol=java.lang.reflect.AnnotatedElement.getAnnotationsByType(java.lang.Class<T>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotation(java.lang.Class<A>), newSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotation(java.lang.Class<T>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotation(java.lang.Class<A>), newSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotation(java.lang.Class<T>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotationsByType(java.lang.Class<A>), newSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotationsByType(java.lang.Class<T>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotationsByType(java.lang.Class<A>), newSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotationsByType(java.lang.Class<T>)]
a736c9c9888c00f388e371b33266e587769f631f|Fri Apr 11 15:51:05 CEST 2014|Shuffling from internal-only change. To be used for a temporary migration aid only! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64716281|0|0|1|363|3142|289|113|21|47|5|0|
f510d9bc51715c4d583e0b152e5d0265c44c982f|Fri Apr 11 15:56:40 CEST 2014|Remove entrySet() redundancy between AbstractMultiset and ConcurrentHashMultiset. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64720096|0|0|2|363|3142|289|113|22|53|7|0|
7fd6f71bf73857b40e07127c76ce8dcd74e78148|Mon Apr 14 17:01:46 CEST 2014|Add @since 13.0 to Ordering.allEqual(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64777126|0|0|1|363|3142|289|113|19|54|5|0|
0434c5199c83c3f43b8b6a86c62e121d518fe7d0|Mon Apr 14 17:26:38 CEST 2014|Fix busted code tag in @return for MoreExecutors.shutdownAndAwaitTermination Updated javadoc in response to https://code.google.com/p/guava-libraries/issues/detail?id=1725 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64893877|0|0|1|363|3142|289|113|21|52|5|0|
0a291554ff41e68d0437321c726f43da09f8e3bf|Wed Apr 16 22:46:39 CEST 2014|Update Guava versions to 18.0-SNAPSHOT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64904324|0|0|0|363|3142|289|113|20|2|6|0|
555e872a0b8341d95c62f9d8a21777de5d1f67a8|Wed Apr 16 22:49:48 CEST 2014|Roll-forward:|0|0|2|363|3145|289|113|18|44|4|9|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotationsByType(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotationsByType(java.lang.Class<A>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotationsByType(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotationsByType(java.lang.Class<A>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotation(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotation(java.lang.Class<A>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotation(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotation(java.lang.Class<A>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.lang.reflect.AnnotatedElement.getAnnotationsByType(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getAnnotationsByType(java.lang.Class<A>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.lang.reflect.AnnotatedElement.getAnnotationsByType(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getAnnotationsByType(java.lang.Class<A>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.reflect.AnnotatedElement.getAnnotationsByType(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getAnnotationsByType(java.lang.Class<A>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotation(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotation(java.lang.Class<A>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.lang.reflect.AnnotatedElement.getDeclaredAnnotationsByType(java.lang.Class<T>), newSymbol=com.google.common.reflect.Parameter.getDeclaredAnnotationsByType(java.lang.Class<A>)]
d1a0cf330d77f5265bc1115cc320724323c040e0|Wed Apr 16 22:51:14 CEST 2014|Allow disabling of guava gwt tests from command line. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64929463|0|0|0|363|3145|289|113|21|2|5|0|
bc9c0fb23c88fb4a2ec626929887baa001c9bcf7|Wed Apr 16 23:00:18 CEST 2014|Use ImmutableSet.of().iterator() instead of Iterators.emptyIterator(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64993582|0|0|0|363|3145|289|113|20|2|7|0|
aa42c2b167a0643a48f61aa9b919887ade288bb2|Wed Apr 16 23:01:52 CEST 2014|Remove workaround that was required by the <T extends Object & Iterable<?> & Iterator<?>> method. That method was removed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64996669|0|0|0|363|3145|289|113|20|2|5|0|
07d24eb4decacd7d9f03a0b7e4d3a0c337aeb201|Wed Apr 16 23:03:32 CEST 2014|Use Double.compare() instead of Doubles.compare(). Use Float.compare() instead of Floats.compare(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64999716|0|0|2|363|3145|289|113|21|17|5|0|
01572c00d3f0ced8f7ad899182ee74b1a397a313|Wed Apr 16 23:10:57 CEST 2014|Replace usages of deprecated IterableSubject.iteratesOverSequence(...) with iteratesAs(...) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65045496|0|0|0|363|3145|289|113|25|2|5|0|
9e4248b2c0c5fd3a1dc3235a6af0d93278eff6fd|Wed Apr 16 23:12:20 CEST 2014|Use ImmutableSet.of().iterator() instead of Iterators.emptyIterator(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65046437|0|0|0|363|3145|289|113|27|2|7|0|
a3145339d95331cf948a9da2030b65762127f28a|Wed Apr 16 23:13:23 CEST 2014|Use ImmutableSet.of().iterator() instead of Iterators.emptyIterator(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65059838|0|0|1|363|3145|289|113|21|81|4|0|
07f99e57570b6e81d89c86f4f36fb9a6784d34b3|Thu Apr 17 22:56:11 CEST 2014|Push current RateLimiter implementation down into a subclass. This will make it easier to provide alternative RateLimiter implementations to replace our legacy rate-limiting APIs. Also, random cleanup: - Static import stuff. - Use Stopwatch instead of reimplementing it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65119596|0|0|1|363|3145|289|113|21|16|5|1|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.util.concurrent.RateLimiter.getRate(), newSymbol=com.google.common.util.concurrent.RateLimiter.getRate()]
2b3b26449f7c641bc81accc03f9a7193fde9c623|Thu Apr 17 22:58:12 CEST 2014|Add notes for external Guava users re. JDK 7 APIs. Deprecate obsoleted Objects APIs. Replace <b>Note</b>: with <b>Note:</b> in Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65135062|0|0|10|363|3145|289|113|34|101|10|0|
18842509caded0e5314dc34caea3dd684f871c8d|Fri Apr 25 16:08:42 CEST 2014|Change @since on some methods in reflect.Parameter to 18.0 since the changes didn't make it in to 17.0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65147685|0|0|1|363|3145|289|113|29|43|5|0|
c4ccf9a89c83e17b11aee0f352a348e4a3f6ddbd|Fri Apr 25 16:19:27 CEST 2014|Fix test that will fail in an upcoming patch to GWT.|0|0|0|363|3145|289|113|20|2|4|0|
9c460b53dd4c17174871bc9629487b743b2fecc6|Fri Apr 25 16:22:06 CEST 2014|Tweaks necessary to make common.collect build in Java 8. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65201740|0|0|2|363|3145|289|113|21|51|10|0|
d0dd545e2d27ed374bbc33d14d76abbd283832a2|Fri Apr 25 16:46:47 CEST 2014|Remove Platform.classGetSimpleName() in favor of calling class.getSimpleName() directly. The method isn't used under GWT, so it doesn't make sense for it to be emulated in Platform. (Coincindentally, it turns out that getSimpleName() is available under GWT nowadays, anyway.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65377305|0|0|0|363|3145|289|113|20|2|5|0|
e7f1daf9ef218a4c7fefc6d356c2119a8f04c629|Fri Apr 25 16:52:26 CEST 2014|Reimplement legacy RateLimiter as a passthrough to its reimplementation under the new RateLimiter API. I've mostly attempted to leave the behavior untouched, but there are a few changes: - Fixed a bug that would arise with a negative nanoTime() (probably unlikely, but it could happen). - Removed logging. - Stop swallowing interrupts. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65383672|0|0|1|363|3145|289|113|18|15|4|0|
4e0e95864d462825eef27a864c8db181b0430276|Fri Apr 25 17:01:06 CEST 2014|When \FFFE, \FFFF, or ASCII control characters are found in the input, replace them with \FFFD. The behavior prior to this CL is to include them in the output (for \FFFE and \FFFF) or to strip them (for ASCII control characters). The characters are not valid in XML: http://www.w3.org/TR/2008/REC-xml-20081126/#charsets ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65400047|0|0|1|363|3145|289|113|21|6|7|0|
3d8c430e2c047aa400512e4eaee8d3dd25a0ad09|Fri Apr 25 17:04:00 CEST 2014|Rollback of changelist 65383672, which broke a test that mocks RateLimiter.|0|0|1|363|3145|289|113|22|16|5|1|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.util.concurrent.RateLimiter.getRate(), newSymbol=com.google.common.util.concurrent.RateLimiter.getRate()]
6543d89f2a8b6d3230eae8eb4a1a3760f3ffaceb|Fri Apr 25 17:13:13 CEST 2014|Propagate RejectedExecutionException to transformed/combined futures. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65412634|0|0|1|363|3145|289|113|22|55|5|0|
a45226a2169b0da4d1f28f5b89351f99798dbddc|Fri Apr 25 17:18:46 CEST 2014|Reimplement legacy RateLimiter as a passthrough to its reimplementation under the new RateLimiter API. I've mostly attempted to leave the behavior untouched, but there are a few changes: - Fixed a bug that would arise with a negative nanoTime() (probably unlikely, but it could happen). - Removed logging. - Stop swallowing interrupts.|0|0|1|363|3145|289|113|22|15|5|0|
a2bd644d2f49b2c7a24d8916627ab8d0aba975c5|Fri Apr 25 17:35:44 CEST 2014|Handle overflow and negative timeouts: http://code.google.com/p/guava-libraries/issues/detail?id=1622|0|0|1|363|3145|289|113|22|17|5|0|
a2abf8960ea9e0936eb024ff171f4cd58d871220|Fri Apr 25 17:48:56 CEST 2014|Change the implementation of Futures.combine to be faster!|0|0|1|363|3145|289|113|22|60|5|0|
3ee51a718ae9905c4643029ca3728081fb99b6e6|Mon Apr 28 02:31:58 CEST 2014|Remove the callAllGets 'feature' of CombinedFuture.|0|0|1|363|3145|289|113|20|58|5|0|
3446741f88956b40e904c766242c2075b1ea3b7f|Mon Apr 28 02:33:48 CEST 2014|Reimplement Throttle as a passthrough to its reimplementation under the new RateLimiter API. I've attempted to leave the behavior untouched (aside from fixing an unsynchronized access to maxTime). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65604449|0|0|1|363|3145|289|113|24|17|5|0|
fc2081c91447a8f74aaeca6ebc1e0a96f16da9b9|Mon Apr 28 02:37:10 CEST 2014|Automated g4 rollback of changelist 65602026.|0|0|1|363|3145|289|113|20|56|5|0|
d2abdda543647ddeccb42cbbe6fee9142737585c|Wed May 07 22:37:00 CEST 2014|Remove the callAllGets 'feature' of CombinedFuture.|0|0|1|363|3145|289|113|19|58|5|0|
bf0c83465f77ae6cbea51c45969572b1dbbf3ecf|Wed May 07 22:43:00 CEST 2014|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65733547|0|0|0|363|3145|289|113|24|2|6|0|
14d8ae4015e5e686f45d428c7e1879e689f818ff|Wed May 07 22:49:15 CEST 2014|Make Ints.tryParse available under GWT.|0|0|1|363|3145|289|113|23|21|5|0|
cdcc5397439b2e7441180a4712d7163afa451a6d|Wed May 07 22:51:59 CEST 2014|Migrate calls to Annotation.getClass() to Annotation.annotationType().|0|0|0|363|3145|289|113|21|2|5|0|
987f4dbffa66a90dfe83bade31d993cb3127c57c|Wed May 07 22:57:35 CEST 2014|Test mocking of RateLimiter to avoid regressions like that of CL 65383672. Ideally we will make all non-final methods mockable, but for now, I'll settle for not breaking any new ones. (The real fix may be a bigger project, e.g., converting RateLimiter to an interface. I don't know yet.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65821400|0|0|0|363|3145|289|113|19|2|6|0|
197e6e88f63f5b31725d87c929735b5863cfa413|Wed May 07 23:00:25 CEST 2014|Beef up documentation and validation of parameters. Also, fully hide/remove some unusable methods, and fix up a return type. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65883612|0|0|1|363|3145|289|113|18|16|6|0|
6b71edb939effd32b26809663a0fc989fdf9d5d5|Wed May 07 23:17:45 CEST 2014|Use a MatchResult created by a successful match, as required by Harmony (used on Android): http://goo.gl/5VQFmC ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66096434|0|0|0|363|3145|289|113|20|2|5|0|
aca38f2aee4e9769495a728e417f7d01dd73b217|Wed May 07 23:23:48 CEST 2014|Sync with latest upstream jsr166e changes. Fixes "classloader leak". https://code.google.com/p/guava-libraries/issues/detail?id=1553 http://comments.gmane.org/gmane.comp.java.jsr.166-concurrency/12659 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66247344|0|0|2|363|3145|289|113|21|11|5|0|
1103846afa237b6c9432259c10daa95033ec8578|Wed May 07 23:29:58 CEST 2014|Disable PackageSanityTests null-pointer testing for LongAdder, as we don't want to patch Striped64 to include @Nullable annotations. Also, remove that annotation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66293925|0|0|1|363|3145|289|113|20|9|7|0|
6e89e79abd493481268c4868b5a7f76a451da8aa|Wed May 07 23:32:56 CEST 2014|Add more tests for known BF false positives when using UTF8. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66295364|0|0|0|363|3145|289|113|18|2|5|0|
f90e759efa0f068b43085fa3ce763b59053480a3|Wed May 07 23:36:07 CEST 2014|Deprecate Iterators.emptyIterator() in Guava, because it always has a decent replacement even when not on Java 7. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66299891|0|0|1|363|3145|289|114|20|46|5|0|
91fe49bfefa687e8ee236b3a0602b2cb732f0b6c|Wed May 07 23:39:15 CEST 2014|Give date-based deletions a stay of execution (24 months, not 18). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66299916|0|0|4|363|3145|289|114|23|69|6|0|
2754fe0f5f487dd3eff71d88c06e95835015a621|Wed May 07 23:51:32 CEST 2014|Add David E. Wheeler to Guava AUTHORS ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66319030|0|0|0|363|3145|289|114|21|2|6|0|
4c681e15832bdfd968c1baee91f46e0b54e230b8|Thu May 08 00:00:09 CEST 2014|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66426194|0|0|0|363|3145|289|114|18|2|5|0|
9c681417c3681d4a09cc72298f5c12eecd1e7be1|Mon May 12 19:12:35 CEST 2014|Remove buggy future workarounds from ChainingListenableFuture (a.k.a. the future returned by Futures.transform)|0|0|1|363|3145|289|114|18|60|7|0|
3afc6e45c39504ece02d14f4a462f65acfa98652|Mon May 12 19:34:50 CEST 2014|Add documentation to all versions of Lists.newArrayList methods to discourage their usage; all the other collection factory methods to follow (Sets.newHashSet, etc.). Tweak verbiage of other obsoleted-by-Java7 methods to match. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66644002|0|0|8|363|3145|289|114|26|70|5|0|
ba5a4dd85f77a334d85942076893229846d99258|Mon May 12 19:37:51 CEST 2014|The example is below, not above. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66659338|0|0|1|363|3145|289|114|25|8|5|0|
3ba3d53f4d16117e74d1aed5786887dd8dab4ce6|Tue May 13 03:26:39 CEST 2014|Revert base.Objects -> j.u.Objects deprecations until we do the bulk of the migrations ourselves (blocked: see bug). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66815987|0|0|1|363|3145|289|114|19|10|6|0|
cb6c9ba6a85a7d759eb4fb6efe279dd498385d55|Tue May 13 21:02:43 CEST 2014|Reduce differences between "when is the next permit available?" and "request a permit": - Standardize the method name format. - Standardize on returning the next available time (rather than the wait time that one of the two currently returns). - Standardize on allowing the return value to indicate a time in the past (rather than requiring it to be a present/future time as one of the two currently does).|0|0|1|363|3145|289|114|21|16|5|0|
7811f97b5dd9b75762f6868a8b0098d826139332|Tue May 13 21:05:56 CEST 2014|Add Google-internal ManualRateLimiter and (as part of that work) public Uninterruptibles.tryAcquireUninterruptibly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66895167|0|0|2|363|3147|289|114|21|50|5|0|
04846be2de2d3841f2ea4f756588af8b1470635f|Tue May 13 21:44:12 CEST 2014|Fix Guava issue 1751|0|0|0|363|3147|289|114|20|2|4|0|
477abc4b8e5f256592f79f00a67d7579cd7c0cbe|Wed May 14 19:53:05 CEST 2014|Extend mocking tests to cover EasyMock. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66920336|0|0|0|363|3147|289|114|18|2|6|0|
351d53fd2e07cfe5c6d008a8e45403cb4e2b0a13|Thu May 15 20:10:01 CEST 2014|Split RateLimiter implementations off into separate files. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=67034085|1|0|1|363|3147|289|114|21|17|5|0|
d2269a6df6fac904849017795360abe8b6d11dad|Thu May 15 20:12:54 CEST 2014|Add OSGi Bundle-DocURL to Guava MANIFEST file.|0|0|0|363|3147|289|114|23|2|5|0|
42e607b8d299d4ee79d4952becd964fb2238aebf|Fri May 23 21:54:51 CEST 2014|Update Truth version to 0.18.|0|0|0|363|3147|289|114|23|2|6|0|
be016c7ff468c6bdb347f8d4104c50846b18a821|Fri May 23 22:04:02 CEST 2014|Release FutureCallbackTest to Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=67707789|0|0|0|363|3147|289|114|20|2|5|0|
c8bfc0ae63bdcaea19adf0d02b435365e2bebe2e|Fri May 23 22:05:30 CEST 2014|Test that it's possible to attach a callback to a ListenableFuture<?>. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=67713851|0|0|0|363|3147|289|114|18|2|5|0|
75bcf0a64563396d55e997b017c5640e8a1ff6e5|Fri May 23 22:18:30 CEST 2014|Shuffling from internal change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=67842017|0|0|0|363|3147|289|114|18|2|5|0|
adcd9984bb9a93db4ab94ceba0583520745e2b01|Mon Jun 02 09:46:29 CEST 2014|Fix overflow issues in LocalCache, as per Guava issue 1761 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68007129|0|0|1|363|3147|289|114|21|85|5|0|
50d4f3cebad5187b2f812f116ee207627cd45d3f|Mon Jun 02 09:53:33 CEST 2014|Expand Javadoc of Multimap to clarify unusual hashCode implementations, as per Guava issue 1722. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68093584|0|0|1|363|3147|289|114|22|47|5|0|
579d87ca2fe1bbbaffe9ce70c7ef8044bfaac7fa|Mon Jun 02 09:57:34 CEST 2014|java/com/google/common: CL generated with data from dead-code analysis using //devtools/scythe:remove_dead_code ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68103937|0|0|2|363|3147|289|114|20|55|5|0|
38fd9b0f676de144217176dea045ab2e2221e4e8|Wed Jun 11 17:40:10 CEST 2014|Increase the symmetry of the Javadoc changes to Multimap.hashCode(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68397956|0|0|1|363|3147|289|114|21|52|4|0|
050aca81c004448a4a86c2541466828e83d12ffb|Wed Jun 11 17:44:07 CEST 2014|Widen Multisets.removeOccurrences to accept Iterables. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68409485|0|0|1|363|3147|289|114|21|52|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Multisets.removeOccurrences(com.google.common.collect.Multiset<? extends java.lang.Object>,com.google.common.collect.Multiset<? extends java.lang.Object>), newSymbol=]
979f434b706282947614ec0ef1abe067e4396a6a|Wed Jun 11 17:47:27 CEST 2014|Add "et" as an effective TLD. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68415393|0|0|1|363|3147|289|114|24|38|5|0|
9218b25f220ebee470f6361f6f25b252fa3f4c28|Wed Jun 11 17:51:20 CEST 2014|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68416232|0|0|0|363|3147|289|114|21|2|5|0|
740d97c32ff8edd8d840f898e7660ac8a99b26cc|Wed Jun 11 17:55:17 CEST 2014|Add default instances of ByteSource, ByteSink, CharSource and CharSink to ArbitraryInstances. (Guava issue 1770.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68417594|0|0|0|363|3147|289|114|19|2|5|0|
03234c13341be586e7cd2b5b40c6ceed2099fb42|Wed Jun 11 18:06:01 CEST 2014|Updating comments to fix statements that MoreExecutors.sameThreadExecutor is used if an Executor is not supplied, which is no longer actually the case since we switched the defaults to the internal INLINE_EXECUTOR. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68506380|0|0|1|363|3147|289|114|19|56|5|0|
15fc460351c5943ec19d383a01700119f19fbedc|Wed Jun 11 18:55:40 CEST 2014|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68641973|0|0|2|363|3147|289|114|23|20|7|0|
32d7dc732dfee93c82942e2d776adbbc02bd85ba|Wed Jun 11 18:59:02 CEST 2014|Fix EventBus to not include bridge methods when registering subscribers under Java 8. Annotations are included on bridge methods in Java 8 where they weren't before.|0|0|1|363|3147|289|114|21|66|4|0|
78ca8b54b85878a77cb20026ab39c857e74f1275|Wed Jun 11 19:20:28 CEST 2014|Make ImmutableCollection.Builder public in the GWT emulation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68729337|0|0|0|363|3147|289|114|18|2|5|0|
1a8ec5098d5dc075c88e4b9ae4af846905c3ee23|Wed Jun 11 19:34:30 CEST 2014|Add a benchmark for [Google-internal -- this CL will be rolled back in Guava] isPrime on positive inputs.  The input distribution is logarithmic. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68733770|0|0|0|363|3147|289|114|20|2|6|0|
08242ab96a7b866aa57e409a4ce0f59b6229c6ac|Wed Jun 11 20:05:40 CEST 2014|Add application/x-protobuf. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68866844|0|0|1|363|3147|290|114|20|62|5|0|
4ce83d12b9061510f6993fbff800f91a97457d0c|Wed Jun 11 22:26:29 CEST 2014|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69004612|0|0|0|363|3147|290|114|19|2|5|0|
b0194a8b0ac5437df8da9404b6232a1811936b7e|Wed Jun 11 22:59:46 CEST 2014|Strip isPrime benchmarks from Guava, since isPrime itself is @GoogleInternal. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69012929|0|0|0|363|3147|290|114|19|2|5|0|
3eae0e582a600d4b3e48d2542a91d37030d9c2a6|Wed Jun 11 23:03:28 CEST 2014|Replace meaningful Javadoc with GWT-emulation boilerplate.|0|0|0|363|3147|290|114|20|2|5|0|
17e878cb1baf997bbd1327577702f568c3f6f4bb|Wed Jun 11 23:07:05 CEST 2014|Update @since to reflect the change in parameter types. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69014933|0|0|1|363|3147|290|114|21|57|6|0|
99437ee96716f7dc38e671370a7da53d03276d1a|Wed Jun 11 23:09:31 CEST 2014|Withdraw application/x-protobuf from Guava, and document it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69015118|0|0|1|363|3147|289|114|21|54|5|1|BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.net.MediaType.X_PROTOBUF, newSymbol=]
cd997b58a6e34cb0222339bc11cc99451b0a8632|Fri Jun 13 17:10:08 CEST 2014|Disable incorrect @GuardedBy annotations.|0|0|1|363|3147|289|114|19|67|6|0|
0bcaddf02a2df28e5a66aad4038355c7c909e552|Fri Jun 13 17:20:54 CEST 2014|Update the Public Suffix files. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69140019|0|0|1|363|3147|289|114|23|36|5|0|
e74918e47be511c7da2035b968d6c4967fbd1f05|Mon Jun 16 15:54:01 CEST 2014|Graduate Queues.synchronized{Que,Deq}ue from @Beta. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69169032|0|0|1|363|3147|289|114|19|45|6|0|
62d17005a48e9b1044f1ed2d5de8905426d75299|Mon Jun 16 15:57:58 CEST 2014|Release BloomFilter#writeTo and #readFrom, which provide custom serialization that is more compact than standard Java serialization. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69172238|0|0|1|363|3149|289|114|23|18|5|0|
d15c02db4cf7c2c48bfd8b93f6cbc5340fcf3039|Mon Jun 16 16:01:39 CEST 2014|Update PSL to pick up *.uk changes: .uk TLD is now available for public registration http://www.nominet.org.uk/uk-domain-names/introducing-uk ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69197766|0|0|1|363|3149|289|114|21|35|5|0|
3d41e3afdd6406c6a178d5c67625ef09ca5fee81|Mon Jun 16 17:37:24 CEST 2014|Update tests broken by CL 69197766's update to the public-suffix list. Those tests used nic.uk as an example of an exclusion, and it no longer is one. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69295926|0|0|0|363|3149|289|114|20|2|5|0|
16c5320c6d809c9ca03e839d1d795d6f46a8f09e|Mon Jun 16 18:24:28 CEST 2014|Avoid using a constructor that is available only in JDK6+. This lets the mainline code work for the Guava backport. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69296675|0|0|1|363|3149|289|114|18|15|8|0|
ce4db5dc3797f9a4718e696602f97bf7d593e3cd|Mon Jun 16 18:26:56 CEST 2014|Fix BloomFilter.optimalNumOfHashFunctions calculation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69297820|0|0|1|363|3149|289|114|21|18|5|0|
9a65cd8d3c88634a2b21235c7d9c89680384ed56|Mon Jun 16 19:13:42 CEST 2014|Document that the allAsList Future fails immediately when an input fails. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69300816|0|0|1|363|3149|289|114|22|57|5|0|
8ace44c43ce4074e1d4fb91d1df0b1e3d9aac64a|Thu Jun 19 00:25:27 CEST 2014|Update to Truth 0.20 to match the internal version and to eliminate non-fatal compile errors. (AbstractArraySubject used Pattern and Matcher from java.util.regex.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69308900|0|0|0|363|3149|289|114|19|2|6|0|
39534cb20b1ae63e5a516ceacd9ba71fddeaa8c5|Thu Jun 19 00:27:48 CEST 2014|Open source base.MoreObjects and add appropriate @since tags. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69310042|1|0|1|365|3169|289|119|18|12|5|0|
f1e5de9761dca6f12714bd96deef2c9a634b06d3|Thu Jun 19 00:30:03 CEST 2014|Disable incorrect @GuardedBy annotations.|0|0|1|365|3169|289|119|21|81|5|0|
6cec4d23f05c6482649ce364fe792af10db4ed46|Thu Jun 19 00:51:55 CEST 2014|In HashCode#equals implementation, avoid creating new byte arrays when it can be avoided: - first, check that the 2 hash codes have the same number of bits - if the number of bits is 4 or 8, compare the results of #asInt() or #asLong() - otherwise, use HashCode#getBytesInternal() instead of HashCode#asBytes() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69395204|0|0|1|365|3169|289|119|20|20|6|0|
8988ec0278a4ffe0e1e5b9979e98ccbf0dc8faa3|Thu Jun 19 01:07:03 CEST 2014|Guava issue 1768: FilteredEntryNavigableMap should short-circuit isEmpty() queries. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69479092|0|0|1|365|3169|289|119|21|80|8|0|
74d2b4b6a3e37050abbf8886b10db794f722bd22|Thu Jun 19 01:08:20 CEST 2014|Make Converter.andThen() final. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69490364|0|0|1|365|3169|289|119|24|49|5|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.base.Converter.andThen(com.google.common.base.Converter<B,C>), newSymbol=com.google.common.base.Converter.andThen(com.google.common.base.Converter<B,C>)]
62f45b187bbc25d87d4b24ae7c225a905c2d6d51|Fri Jun 20 23:43:10 CEST 2014|Use MoreObjects.firstNonNull instead of Objects.firstNonNull. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69552363|0|0|14|365|3169|289|119|26|136|6|0|
a31a6efd80b13cf96b2decafd16b96b662a71933|Fri Jun 20 23:46:53 CEST 2014|Replace usages of deprecated Objects.toStringHelper() with MoreObjects.toStringHelper(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69572761|0|0|5|365|3169|289|119|28|93|6|0|
7063d584345e6a84355da277f9832ad8195a67ac|Wed Jun 25 20:24:42 CEST 2014|Add scheduled deletion date of June 2016 to deprecated methods in Objects. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69770246|0|0|1|365|3169|289|119|24|11|7|0|
2493492f5bfb3e95edb48cc44dae1bd79bcc5254|Wed Jun 25 20:26:49 CEST 2014|Move implementations from Objects methods into MoreObjects. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69783878|0|0|2|365|3169|289|119|19|13|7|0|
e66a92029726b00a095125e50c4b24ca4afb25f5|Wed Jun 25 20:34:28 CEST 2014|More strictly restrict when fields are added to the set of relevant fields, only supporting non-synthetic String fields.|0|0|0|365|3169|289|119|19|2|5|0|
5ffb527b53a698f39224c0a5511556dba63d441f|Wed Jun 25 20:36:11 CEST 2014|Automated g4 rollback of changelist 69842250.|0|0|0|365|3169|289|119|20|2|6|0|
1c285fc8d289c43b46aa55e7f90ec0359be5b69a|Wed Jun 25 20:38:17 CEST 2014|Remove methods scheduled for removal in Guava 18.0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69856875|0|0|9|365|3122|289|72|24|67|8|51|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Resources.newInputStreamSupplier(java.net.URL), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.asCharSink(com.google.common.io.OutputSupplier<? extends java.lang.Appendable>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.copy(java.io.InputStream,com.google.common.io.OutputSupplier<? extends java.io.OutputStream>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.newInputStreamSupplier(java.io.File), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.join(java.lang.Iterable<? extends com.google.common.io.InputSupplier<? extends java.io.Reader>>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.newWriterSupplier(com.google.common.io.OutputSupplier<? extends java.io.OutputStream>,java.nio.charset.Charset), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.newInputStreamSupplier(byte[],int,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.readLines(com.google.common.io.InputSupplier<R>,com.google.common.io.LineProcessor<T>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.copy(com.google.common.io.InputSupplier<R>,com.google.common.io.OutputSupplier<W>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.asByteSink(com.google.common.io.OutputSupplier<? extends java.io.OutputStream>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.newReaderSupplier(java.io.File,java.nio.charset.Charset), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharSink.getOutput(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.copy(com.google.common.io.InputSupplier<R>,java.io.File,java.nio.charset.Charset), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.equal(com.google.common.io.InputSupplier<? extends java.io.InputStream>,com.google.common.io.InputSupplier<? extends java.io.InputStream>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.copy(com.google.common.io.InputSupplier<R>,java.lang.Appendable), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.copy(java.io.File,com.google.common.io.OutputSupplier<? extends java.io.OutputStream>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.toByteArray(com.google.common.io.InputSupplier<? extends java.io.InputStream>), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.io.CharSink, newSymbol=com.google.common.io.CharSink],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharSource.getInput(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.length(com.google.common.io.InputSupplier<? extends java.io.InputStream>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.hash(com.google.common.io.InputSupplier<? extends java.io.InputStream>,com.google.common.hash.HashFunction), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.newOutputStreamSupplier(java.io.File), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.copy(java.io.File,java.nio.charset.Charset,com.google.common.io.OutputSupplier<W>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.newReaderSupplier(java.lang.String), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.asByteSource(com.google.common.io.InputSupplier<? extends java.io.InputStream>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.asCharSource(com.google.common.io.InputSupplier<? extends java.lang.Readable>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteSource.getInput(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.copy(com.google.common.io.InputSupplier<? extends java.io.InputStream>,com.google.common.io.OutputSupplier<? extends java.io.OutputStream>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.slice(com.google.common.io.InputSupplier<? extends java.io.InputStream>,long,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.join(com.google.common.io.InputSupplier<? extends java.io.Reader>[]), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Enums.valueOfFunction(java.lang.Class<T>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.readFirstLine(com.google.common.io.InputSupplier<R>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.join(com.google.common.io.InputSupplier<? extends java.io.InputStream>[]), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.write(byte[],com.google.common.io.OutputSupplier<? extends java.io.OutputStream>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.readLines(com.google.common.io.InputSupplier<R>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Resources.newReaderSupplier(java.net.URL,java.nio.charset.Charset), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.newReaderSupplier(com.google.common.io.InputSupplier<? extends java.io.InputStream>,java.nio.charset.Charset), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.newWriterSupplier(java.io.File,java.nio.charset.Charset,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.newInputStreamSupplier(byte[]), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.write(java.lang.CharSequence,com.google.common.io.OutputSupplier<W>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.copy(com.google.common.io.InputSupplier<? extends java.io.InputStream>,java.io.OutputStream), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.newOutputStreamSupplier(java.io.File,boolean), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.io.ByteSink, newSymbol=com.google.common.io.ByteSink],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.io.CharSource, newSymbol=com.google.common.io.CharSource],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.readBytes(com.google.common.io.InputSupplier<? extends java.io.InputStream>,com.google.common.io.ByteProcessor<T>), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.io.ByteSource, newSymbol=com.google.common.io.ByteSource],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.copy(com.google.common.io.InputSupplier<? extends java.io.InputStream>,java.io.File), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.CharStreams.toString(com.google.common.io.InputSupplier<R>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteStreams.join(java.lang.Iterable<? extends com.google.common.io.InputSupplier<? extends java.io.InputStream>>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.newWriterSupplier(java.io.File,java.nio.charset.Charset), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.ByteSink.getOutput(), newSymbol=]
a4c2141a9d293cb1227f8c72aa31fed522878886|Wed Jun 25 20:47:38 CEST 2014|More strictly restrict when fields are added to the set of relevant fields, only supporting non-synthetic String fields.|0|0|0|365|3122|289|72|24|2|4|0|
ac99efc013c258bfedfb1b5a49fcbd626163f66d|Wed Jun 25 20:49:28 CEST 2014|Make doHash() protected in Equals Equivalence. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69899412|0|0|1|365|3122|289|72|18|38|4|0|
5680a472a27a1974f90cd20024879539b52ae300|Wed Jun 25 20:58:48 CEST 2014|Call size() once.|0|0|1|365|3122|289|72|20|41|10|0|
2929b111d677c539cb03a4f22b95cbc8944ce3fa|Mon Jun 30 03:45:13 CEST 2014|Update the suffix patterns. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70001122|0|0|1|365|3122|289|72|22|37|5|0|
4232450e7bb7c46c08868f699323db3e787507c8|Mon Jun 30 03:48:51 CEST 2014|Use @Nullable on public *methods* consistently for Guava classes of common.base (plus StringUtil, given how erratic its null-friendliness is). Of course, nothing is *proving* that these are correct or complete (and probably nothing short of moving to full JSR308ness can?). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70026461|0|0|4|365|3122|289|72|19|13|5|0|
24b497e94f138792ccba0a284dada2c49f12296a|Mon Jul 07 22:27:59 CEST 2014|Prevent bursty RateLimiters from getting stuck at an infinite rate if they spent any time with one. https://code.google.com/p/guava-libraries/issues/detail?id=1791 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70235429|0|0|1|365|3122|289|72|20|10|7|0|
39af3cd42607507b7948fd1a6aab067a2ded0249|Mon Jul 07 22:31:50 CEST 2014|Crude hack to make ForwardingMapTest pass in JDK8.|0|0|0|365|3122|289|72|20|2|5|0|
425fb8cd77631b0f83f4e1d0a84de178d5920960|Mon Jul 07 22:35:42 CEST 2014|Update the Guava README. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70258669|0|0|0|365|3122|289|72|20|2|6|0|
5b8c0498f4e37f5c3b5d96b981bd049a8e754b24|Mon Jul 07 22:37:27 CEST 2014|Add "unless noted otherwise" to the README section about the serialized forms of objects. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70263802|0|0|0|365|3122|289|72|20|2|5|0|
e4c9e35f4fa98b9b704b97429589f02b94ea0ac3|Mon Jul 07 22:39:17 CEST 2014|Benchmark should build in JDK 6. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70264278|0|0|0|365|3122|289|72|18|2|7|0|
e71db9539b962ab50305b481698c372ad218b643|Mon Jul 07 22:48:11 CEST 2014|Add x-apple-aspen-config mediatype for Apple .mobileconfig file serving. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70333950|0|0|1|365|3122|290|72|18|56|6|0|
20bb6c3c898185ca87294a7e5405415b0e337543|Mon Jul 07 22:57:22 CEST 2014|Suppress ConcurrentHashMap.entrySet().add() tests, which fail now that JDK8 permits those calls. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70418657|0|0|0|365|3122|290|72|22|2|5|0|
bb404bd1cace448d992fb661f12691eaf0e0e6b5|Mon Jul 07 22:59:30 CEST 2014|Release FluentIterable methods for Guava 18 and remove @Beta from toSortedList. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70420650|0|0|1|365|3126|290|72|23|54|6|0|
f38d9efdb0ea1f41b800c471cf5d8d4350844f07|Mon Jul 07 23:01:18 CEST 2014|Reenable EnumMap tests, which work as of JDK7: http://bugs.java.com/view_bug.do?bug_id=6312706 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70423146|0|0|0|365|3126|290|72|21|2|4|0|
5699d3fddf5bb59fb86a9bc49527fec0fc0f9422|Mon Jul 07 23:03:26 CEST 2014|Expand contract for Futures.makeChecked(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70433012|0|0|1|365|3126|290|72|18|59|5|1|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.util.concurrent.Futures.makeChecked(com.google.common.util.concurrent.ListenableFuture<V>,com.google.common.base.Function<java.lang.Exception,X>), newSymbol=com.google.common.util.concurrent.Futures.makeChecked(com.google.common.util.concurrent.ListenableFuture<V>,com.google.common.base.Function<? super java.lang.Exception,X>)]
2c785e44b9cf071b86d5196ee0a41a494d5946ed|Mon Jul 07 23:24:36 CEST 2014|Remove javax.inject from OSGi package imports and from dependencyManagement in guava-parent.|0|0|0|365|3126|290|72|23|2|5|0|
0f91c0fe460a9a753d7040a5691c38cee31dad92|Mon Jul 07 23:25:55 CEST 2014|Open-source tests for Monitor (which is already open-sourced as part of guava) by removing @GoogleInternal, removing the dependence on TearDownTestCase, and also open-sourcing the helper class TestThread. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70653606|0|0|0|365|3126|290|72|21|2|6|0|
5ed9f04a7613fb9501ea7e1a3952429c0daf74d0|Wed Jul 16 21:11:49 CEST 2014|Upgrade Truth to 0.22 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70679145|0|0|0|365|3126|290|72|21|2|5|0|
b2c6fb17ab4fbac8cd4014fe68799166f015a2c3|Wed Jul 16 21:13:28 CEST 2014|Fix: NullPointerException in getAllPresent().|0|0|1|365|3126|290|72|20|46|5|0|
7de7f6aef5fb14cc3f2ce7322e47f792523ecbad|Wed Jul 16 21:17:00 CEST 2014|Add @Beta to methods we just open sourced in FluentIterable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70732653|0|0|1|365|3126|290|72|19|58|7|0|
db59832ed7f0e81c9e9184242ae50c3eac4ed957|Wed Jul 16 21:18:49 CEST 2014|Fixed a java 8 compatibility issue in ForwardingWrapperTest. Can't use isDefault() because this code needs to compile under Java 7 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70779175|0|0|0|365|3126|290|72|23|2|5|0|
00512e5a16832c9ea983ae0894fc9f47025291d5|Wed Jul 16 21:27:05 CEST 2014|Fix errors in @GuardedBy annotations.|0|0|1|365|3126|290|72|18|72|5|0|
10695e272674ce32fe6a6486c2904a65ef3db4b1|Wed Jul 16 21:39:55 CEST 2014|Rename SameThreadExecutorService to DirectExecutorService. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=71178008|0|0|1|365|3126|290|72|22|52|7|0|
0f28b41318d3adcd702fcb1fca88fa11b7146a42|Wed Jul 16 21:46:40 CEST 2014|Remove specification of behavior when the number of arguments does not match the number of "%s" in the format string from Preconditions javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=71201390|0|0|1|365|3126|290|72|20|10|5|0|
855eb994b782e3a901d29e451c6824e7b14bac42|Wed Jul 16 21:48:20 CEST 2014|Update the public suffix list. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=71219810|0|0|1|365|3126|290|72|18|33|4|0|
db57e5ee43bc3d8eb16091e28aaa060e68bf9c93|Wed Jul 16 21:55:54 CEST 2014|Upgrade truth's gwt library to a more recent snapshot and upgrade OptionalTest to verify. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=71278153|0|0|0|365|3126|290|72|20|2|7|0|
91cdb2b7ed631bd3cb4e93783b087d52ab8ce82c|Mon Jul 28 14:40:24 CEST 2014|Update to new Truth package. Use assertThat() instead of ASSERT.that() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=71286559|0|0|0|365|3126|290|72|66|2|6|0|
83c473ce186fb647cb5a46a4a2ea0454c37d6ee6|Mon Jul 28 14:45:41 CEST 2014|Inline some test logic to support some torturous internal build cases.|0|0|0|365|3126|290|72|52|2|4|0|
150713cb8346a20c89c6bb1a23176942ee7beafc|Mon Jul 28 14:47:00 CEST 2014|Fix timing race in ServiceManagerTest.testServiceStartupTimes and add another test for the actual behavior. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=71364623|0|0|1|365|3126|290|72|21|65|6|0|
d39130651d8a90f5ebe066de7f0b2311806e5152|Mon Jul 28 14:48:19 CEST 2014|Add decrement function to InetAddresses ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=71368911|0|0|1|365|3127|290|72|22|26|5|0|
a757aba0992b7b0450c90715f9c44750f21fa956|Mon Jul 28 14:49:38 CEST 2014|Denigrate Lists.newLinkedList() following examples set for newArrayList. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=71382856|0|0|1|365|3127|290|72|20|53|5|0|
26cc1dad451e5c3075a107247e116f25876e8318|Mon Jul 28 15:07:36 CEST 2014|Add failure causes as supressed exceptions for each failed service in the exception thrown by awaitHealthy.|0|0|1|365|3127|290|72|21|65|7|0|
04b2c7afbe586ca8178ac8a17f4be0bb3a6673c9|Mon Jul 28 15:08:54 CEST 2014|Make the timing assertions more forgiving.|0|0|0|365|3127|290|72|21|2|6|0|
eb2675f808de4e564b93e09208670c852460ae71|Mon Jul 28 15:10:13 CEST 2014|Allow overriding of entrySet() and values() derived suites. This is similar to the existing support for keySet().|0|0|0|365|3127|290|72|21|2|6|0|
875f8ee6168b5822169f47273fb700271e43c744|Mon Jul 28 15:12:44 CEST 2014|Fix CollectionFeature.ALLOWS_NULL_QUERIES to MapFeature.ALLOWS_NULL_KEY_QUERIES.|0|0|0|365|3127|290|72|19|2|4|0|
495f60836c95faa28955a1183a92b0ecd3b50365|Mon Jul 28 15:14:04 CEST 2014|Open source directExecutor and newDirectExecutorService, deprecate sameThreadExecutor ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=71699710|0|0|1|365|3129|290|73|18|47|6|0|
d77a109189f137c5b1403656f16d05e9266c9928|Wed Jul 30 16:07:46 CEST 2014|Migrate guava to directExecutor now that it will be in the next release.|0|0|5|365|3129|290|73|26|107|5|0|
f031a751150e474f9f55bc6b23eba7cc9a31dccf|Thu Jul 31 00:49:07 CEST 2014|Fix generic types in BloomFilter public API. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=72265659|0|0|1|365|3129|290|73|26|16|5|2|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.hash.BloomFilter.create(com.google.common.hash.Funnel<T>,int), newSymbol=com.google.common.hash.BloomFilter.create(com.google.common.hash.Funnel<? super T>,int)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.hash.BloomFilter.create(com.google.common.hash.Funnel<T>,int,double), newSymbol=com.google.common.hash.BloomFilter.create(com.google.common.hash.Funnel<? super T>,int,double)]
8cc7ba1a9e41b3dd21bea4d5bf30a5cebc0f18c2|Fri Aug 01 15:48:08 CEST 2014|Migrate usages of Truth's Subject.is(Object) to isEqualTo(Object). The former is being removed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=72319735|0|0|0|365|3129|290|73|20|2|7|0|
492cb0404d0b1017a1f1bc84182aaed099d59107|Mon Aug 04 16:40:20 CEST 2014|Update Truth location from org.truth0 to com.google.common.truth. (internal CL 72431224) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=72437171|0|0|0|365|3129|290|73|26|2|6|0|
166bff55633bf814bc6d7827f93c8578c4091d48|Mon Aug 04 16:54:02 CEST 2014|Finish open-sourcing tests for Monitor.|0|0|0|365|3129|290|73|21|2|5|0|
c20d7397dd89acc5e27e33bf5aff0ca0f316d587|Tue Aug 05 19:09:21 CEST 2014|Open source Hashing.crc32c(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=72569582|1|0|1|365|3130|290|73|23|15|4|0|
7378c5c2c1736900d4c67ea338e20dc4dca81abd|Tue Aug 05 22:36:03 CEST 2014|Fix Maps.newHashMapWithExpectedSize for JDK8.|0|0|1|365|3130|290|73|23|77|9|0|
7c85e1303b7a506d500652d608329adf5dd90813|Tue Aug 05 22:38:02 CEST 2014|Major refactoring of EventBus, in preparation for further changes.|3|4|2|365|3131|290|73|30|75|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.eventbus.AsyncEventBus.dispatchQueuedEvents(), newSymbol=]
3e15a2b37c7efbf577a5116a00b2d6ca47ed6121|Tue Aug 05 22:40:05 CEST 2014|Update Guava versions to 19.0-SNAPSHOT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=72661640|0|0|0|365|3131|290|73|21|2|7|0|
65d998cdcbddf8f3dc71e0415851311c31ac7c8e|Tue Aug 05 22:41:18 CEST 2014|Remove system property control for the default strategy to use for BloomFilters. This was only supposed to work for Guava 17. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=72664539|0|0|1|365|3131|290|73|19|19|5|0|
16734985d58a13ca49765915aeb835f0c754b36c|Tue Aug 05 23:21:44 CEST 2014|Fix documentation error in DoubleMath. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=72665652|0|0|1|365|3131|290|73|21|15|6|0|
d39692070af2dc23b7a985f8a16d684c096654e2|Tue Aug 05 23:23:04 CEST 2014|Update Javadoc in Futures and other classes to reference directExecutor or newDirectExecutorService rather than sameThreadExecutor. Also change the references to inline execution or an inline executor to use the term "direct" instead. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=72669239|0|0|5|365|3131|290|73|22|74|7|0|
ba64bdfc7d46c84fb47e17edcc0261b38600efd6|Tue Aug 12 19:49:52 CEST 2014|Update Iterators.emptyIterator() @deprecated Javadoc to specify the replacement as ImmutableList.<T>of().iterator() rather than just ImmutableList.of().iterator(). The latter will basically never compile. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=73064832|0|0|1|365|3131|290|73|21|49|5|0|
1c384d3f1bbc51d153f3bece2c70008fcb04cf51|Tue Aug 12 19:51:37 CEST 2014|Update Truth dep to 0.23. (https://code.google.com/p/guava-libraries/issues/detail?id=1830) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=73072462|0|0|0|365|3131|290|73|23|2|4|0|
4ef414f5b0610b540a1837f214b30d6424e99761|Wed Aug 20 19:44:17 CEST 2014|Add AbstractPackageSanityTests.UNDERSCORE_IN_NAME to make it easy to exclude generated classes like AutoValue_Foo from testing. The issue is that these classes typically do not apply @Nullable to the argument of equals(Object), so that they will work when Nullable is not on the classpath. But NullPointerTester requires @Nullable on this argument because otherwise it will fail when equals(null) follows its contract and does not throw an exception. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=73169035|0|0|0|365|3131|290|73|20|2|4|0|
36265a5acc5e9a6307b06b2c931763595e349f30|Wed Aug 20 19:48:52 CEST 2014|Rewrite ServiceManager to use MultimapBuilder ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=73173782|0|0|1|365|3131|290|73|20|63|6|0|
0605e099723b57777c67e306bbb5f3d50d6723aa|Wed Aug 20 19:50:59 CEST 2014|Add more tests for Futures.immediateCancelledFuture() to essentially document why two chained CancellationExceptions are thrown. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=73186288|0|0|0|365|3131|290|73|20|2|4|0|
4015f4d1abe34428a2e99bfa1767fbb4d5657e21|Wed Aug 20 20:23:50 CEST 2014|Incorporate Justin Sampson's wording improvement in https://code.google.com/r/jsampson-guava/source/diff?spec=svn965c15345482203be7f4af3ce2c44488bc0ff9ec&name=jsampson/monitor-fixes&r=965c15345482203be7f4af3ce2c44488bc0ff9ec&format=side&path=/guava/src/com/google/common/util/concurrent/Monitor.java ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=73540789|0|0|1|365|3131|290|73|21|16|5|0|
627049c4d72f3f4de4b9b6168e243ad86b56f92d|Wed Aug 20 20:26:53 CEST 2014|Stop using isBetween and isInclusivelyInRange in preparation for the (not yet released to open-source) assertThat(4).isIn(Range.open(2, 5)); etc. Cleanup the stragglers. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=73545684|0|0|0|365|3131|290|73|21|2|7|0|
4e6028d0cf2c91e71eba7da98000a61350b61c87|Wed Aug 20 20:46:26 CEST 2014|Update public suffix patterns|0|0|1|365|3131|290|73|21|35|4|0|
3b246131c2f100530989b3630ca1ab78198f0060|Wed Aug 20 20:51:14 CEST 2014|Update tests to cope with the fact that "google" is now a public suffix. This fixes today's test failures. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=73721981|0|0|0|365|3131|290|73|19|2|4|0|
654bc1eb3c3a93f46427f958839eacd6dd24f1a3|Wed Aug 20 20:54:35 CEST 2014|Stop using now-internally-deprecated Truth APIs (which are not yet pushed to open-source Truth), and leave a todo to migrate to the newer Truth apis once they are released to maven, or after Guava 18 is released and we can rely on snapshots. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=73722570|0|0|0|365|3131|290|73|19|2|5|0|
f5d24b9c0bc6a5f6b203e52626a44d40c7fa04d5|Mon Aug 25 06:33:16 CEST 2014|Generalize the javadocs on CacheBuilder.ticker()|0|0|1|365|3131|290|73|23|61|5|0|
1f5af9bda144a0a4344ef954ab55a1b507035e28|Tue Sep 02 16:05:28 CEST 2014|Fix javadoc typo: wrapTask ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=74092956|0|0|1|365|3131|290|73|19|43|4|0|
f26af757bb6045da98785dc435edc1b0e4ff4125|Wed Sep 03 17:38:07 CEST 2014|Changes AtomicLongMap#removeAllZeros to use iterator for removals.|0|0|1|365|3131|290|73|18|53|5|0|
c8dadc4e635c6fce132e8c7d0a0ceff4cfcb9207|Wed Sep 03 22:07:39 CEST 2014|Delayed fallout from build-system changes of CL 74684238, which adds <resource> elements to some .gwt.xml files. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=74686661|0|0|0|365|3131|290|73|23|2|5|0|
8ec4c42646f590daf72bed88a92db6f4ac2de65e|Wed Sep 03 22:10:29 CEST 2014|Strip <resource> lines from .gwt.xml. They are not yet supported by a release version of GWT. (Support was added in internal CL 62367280, which imported <https://gwt.googlesource.com/gwt/+/f39e11150ef0ea635a7f7d30154221907775efc6>. I'm not sure when our build was changed to generate the new elements.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=74705447|0|0|0|365|3131|290|73|20|2|5|0|
6c9f886357a277e0fde19b87556eb7c0fa617e14|Thu Sep 04 13:48:20 CEST 2014|Temporarily duplicate Ascii.truncate() for internal build-system reasons. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=74746985|0|0|2|365|3131|290|73|18|47|5|0|
13800999134027e799b9250d261dd2c2a969183d|Thu Sep 04 21:02:54 CEST 2014|Fix hash map ordering bug. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=74779605|0|0|1|365|3131|290|73|19|82|7|0|
ffe2d77c9d3b349d72bc1ebec39345ff0833a43e|Fri Sep 05 00:23:49 CEST 2014|Add of() factories for ImmutableClassToInstanceMap for n=0,1. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=74815130|0|0|1|365|3133|290|73|25|48|5|3|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(), newSymbol=com.google.common.collect.ImmutableClassToInstanceMap.of()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(), newSymbol=com.google.common.collect.ImmutableClassToInstanceMap.of()],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=java.util.Map.of(), newSymbol=com.google.common.collect.ImmutableClassToInstanceMap.of()]
ac25c5019e61dae7a993562235b8de4fdada0394|Fri Sep 05 16:03:35 CEST 2014|Integration of Justin Sampson's fixes to Monitor and addition of extensive tests.|0|0|1|365|3133|290|73|20|15|5|0|
df0e460606f116a041e441584026dbfa2a0b2ee1|Fri Sep 05 19:32:25 CEST 2014|GWT: Better error checking, logging, and documentation. - Error checking: I had been trying to enable compilation with -strict (<https://gist.github.com/Abdennebi/2828230>). However, while the GWT compiler parameter is "-strict" and the Maven system property is "gwt.compiler.strict," the Maven parameter is "failOnError:" <http://mojo.codehaus.org/gwt-maven-plugin/compile-mojo.html#failOnError>. Additionally, while the compilation goal supports failOnError, the test goal does not: <http://mojo.codehaus.org/gwt-maven-plugin/test-mojo.html>. Maven had been ignoring the unrecognized names. - Logging: Turn up the logLevel to make any future problems easier to diagnose. - Documentation: Explain the presence of some scary "Ignored 53 units with compilation errors" warnings. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=74868684|0|0|0|365|3133|290|73|20|2|6|0|
69045357f5b4c33a14d29e5792e6a74c76c2c4dd|Fri Sep 05 21:25:22 CEST 2014|Temporarily avoid scrubbing cgdecker's username. This change will be reverted when we stop using my custom-build MOE binary, which already contains CL 75843182. Later, it will come back when the standard binary is updated. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=74887544|0|0|4|365|3133|290|73|19|86|5|0|
64658a320272c1ca4154a45681155283f4d9c42d|Mon Sep 08 03:02:07 CEST 2014|use getAvailableCurrencies() under Java 7 to get fresh currency instance ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=74986782|0|0|0|365|3133|290|73|22|2|4|0|
67448d5dd766c461c7fdb41c39085fdd00f37a2e|Wed Sep 10 19:37:14 CEST 2014|Stop using MapSubject.hasKey() and .lacksKey(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=75211614|0|0|0|365|3133|290|73|18|2|6|0|
e3ee2cb617d0381c2464dd75a28460d832e92a2a|Thu Sep 11 19:22:43 CEST 2014|Fix @GuardedBy annotations with invalid lock expressions.|0|0|2|365|3133|290|73|20|63|5|0|
70abca0b7e5f21d4e6e8686c7a2098f28f1a58cd|Thu Sep 11 23:12:40 CEST 2014|Fix @GuardedBy annotations with invalid lock expressions.|0|0|1|365|3133|290|73|23|73|4|0|
bf6a7fe2ec6c516bc7a1b6c2968db4666dca2b66|Thu Sep 11 23:50:02 CEST 2014|Use presized ImmutableList.Builder in ImmutableSortedMap creation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=75327745|0|0|1|365|3133|290|73|20|55|8|0|
0b4e7e5df7f985026f731f10f2c37a44543a5355|Fri Sep 12 16:20:18 CEST 2014|Modify SmoothRateLimiter so that the ratio between maximum-permits-per-second and minimum-permits-per-seconds can be specified -- currently this ratio is hard coded to 3.|0|0|2|365|3133|290|73|25|21|7|0|
e7f902c768e974552f954a1a55970d6ef39dc6fb|Mon Sep 15 17:26:48 CEST 2014|Fixed a FreshValueGenerator bug that causes failure in generating fresh values recursively when there are finite number of distinct values provided by user.|0|0|0|365|3133|290|73|24|3|6|0|
3b47a3006a9ee32731107b080923d718444ad0fd|Mon Sep 15 18:32:30 CEST 2014|Actually, LocalCache.getIfPresent _does_ increment the hits counter. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=75546548|0|0|1|365|3133|290|73|21|44|7|0|
01b8a2c4d4cfb32ced9143560b75f26fd2923e67|Mon Sep 15 20:16:59 CEST 2014|Don't frontload CharMatcher.toString() computation, that's silly. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=75555670|0|0|2|365|3133|290|73|22|14|4|0|
770d751a62053a9bea928e42823c42dcd6a4e2d2|Wed Sep 17 22:21:15 CEST 2014|Expand and improve uses of Ordering.immutableSortedCopy in common.collect. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=75744632|0|0|3|365|3133|290|73|26|64|5|0|
620e1ea516dd68329a0cf8c4dfffdc28f527927c|Thu Sep 18 21:37:44 CEST 2014|Add ImmutableBiMap.Builder.put(Entry) overload, which had previously not been overridden from ImmutableMap.Builder.  Now, it correctly returns ImmutableBiMap.Builder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=75833810|0|0|1|365|3134|290|73|23|49|10|2|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.ImmutableMap$Builder.put(java.util.Map$Entry<? extends K,? extends V>), newSymbol=com.google.common.collect.ImmutableBiMap$Builder.put(java.util.Map$Entry<? extends K,? extends V>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableMap$Builder.put(java.util.Map$Entry<? extends K,? extends V>), newSymbol=com.google.common.collect.ImmutableBiMap$Builder.put(java.util.Map$Entry<? extends K,? extends V>)]
a25328617843ad6faf88fdd20634a68d8b8267b8|Fri Sep 19 00:19:06 CEST 2014|Make ImmutableCollection.contains abstract, and fix some embarrassing oversights of where it should have been overridden. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=75849013|0|0|3|365|3134|290|73|28|48|5|1|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableCollection.contains(java.lang.Object), newSymbol=com.google.common.collect.ImmutableCollection.contains(java.lang.Object)]
390198de59b9c782b6749eab0af8d55a20e965a5|Fri Sep 19 00:50:30 CEST 2014|Presize the ImmutableMap.Builder used in ImmutableMultiset construction. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=75851783|0|0|1|365|3134|290|73|23|43|4|0|
f2fb1352a5ee1b808635f699b93311698d9c5bef|Fri Sep 19 01:18:50 CEST 2014|Refactor ImmutableSortedMap construction paths.  The previous implementation did some redundant copying. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=75853973|0|0|3|365|3134|290|73|21|62|12|0|
8061999c2ae5a914ae765c1bdc373b9cc4ee70d0|Fri Sep 19 22:27:45 CEST 2014|Refactor the three places in common.collect that we convert a List<E> to an ImmutableMap<E, Integer>. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=75926603|0|0|6|365|3134|290|73|27|77|5|0|
7ae4ac4474915b4b8d4ec419c93aa93829ec464a|Mon Sep 22 23:44:48 CEST 2014|One last (?) round of presizing builders where possible in common.collect. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76105103|0|0|6|365|3134|290|73|28|92|10|0|
eec87b8bc4844859756ccaf88a405836e5e561da|Tue Sep 23 19:14:18 CEST 2014|Delete unused SingletonImmutableBiMap(Entry) constructor. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76173755|0|0|1|365|3134|290|73|24|48|5|0|
0bb9c27ab75205ffefba86cbb6cc4a3b4ceec988|Tue Sep 23 19:42:19 CEST 2014|Investigate possible deduplication between RegularImmutableMap and RegularImmutableBiMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76176371|0|0|3|365|3134|290|73|21|55|5|0|
c2748c69b3a77f55990486130a139a161b3e12b2|Tue Sep 23 20:46:53 CEST 2014|Factor out an array-backed ImmutableMapEntrySet to use in RegularImmutableMap and RegularImmutableBiMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76182964|0|0|4|365|3134|290|73|22|55|8|0|
95f7a46fe582c870be38b3bc6d4a1bf9938593f3|Tue Sep 23 21:48:21 CEST 2014|TerminalEntry's constructor already calls checkEntryNotNull; no need to do it again. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76188203|0|0|1|365|3134|290|73|20|54|7|0|
544b57a25702ee58b9b87c3673b8748352a429e3|Tue Sep 23 22:17:35 CEST 2014|copyOfEnumMap only gets called with an EnumMap, so narrow its parameter type from Map to EnumMap.|0|0|1|365|3134|290|73|20|53|6|0|
842efacbd00611778a4b33d917be6f71542259a8|Tue Sep 23 22:56:16 CEST 2014|Dedup conflict checks and get(Object) implementation between RegularImmutableMap and RegularImmutableBiMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76194662|0|0|2|365|3134|290|73|20|50|6|0|
77f624b3851403ee2714616513457df9e1b04325|Tue Sep 23 23:14:03 CEST 2014|Simplify ImmutableMap.asMultimap(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76196628|0|0|1|365|3134|290|73|18|55|6|0|
7f63fa933180d475bb39f7bd73f100ae0278c544|Wed Sep 24 16:55:48 CEST 2014|Return to scrubbing cgdecker's username, which we temporarily stopped doing in 69045357f5b4. We will finally stop scrubbing it again when the standard MOE binary is rebuilt with CL 75843182. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76253324|0|0|4|365|3134|290|73|24|78|5|0|
8aa58da247d453622e39a979d3194eb3352c2b0d|Wed Sep 24 19:28:55 CEST 2014|Eliminate varargs-accepting create() method, which was never called with multiple arguments. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76264541|0|0|0|365|3134|290|73|19|2|6|0|
3308540179837605b325eaff23c7af4bcf1668ec|Wed Sep 24 19:58:37 CEST 2014|Reuse ImmutableMap.EMPTY_ENTRY_ARRAY in other ImmutableMap types ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76267320|0|0|2|365|3134|290|73|19|59|6|0|
1c73b2d932d3951ebee432c11c0f5aac9ea1b696|Wed Sep 24 20:52:01 CEST 2014|Establish RangeMap iteration order, as per Guava issue 1842. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76272760|0|0|1|365|3134|290|73|22|40|5|0|
055f93996fe9dba92972a7a1742b182fd80ed133|Thu Sep 25 19:05:35 CEST 2014|Add a common superclass for ImmutableMap implementations that create a custom Iterator to iterate, reducing the total number of nested classes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76350704|0|0|3|365|3134|290|73|20|53|7|0|
4ce29b4cec61bb122cdbf833b487f90f250c4a55|Thu Sep 25 19:06:37 CEST 2014|Inline Maps.valueIterator(UnmodifiableIterator<Entry>) into its one call site ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76350780|0|0|2|365|3134|290|73|21|79|9|0|
5f62e2b41cbbcc3191d2c021b56d2f1a9d4a41b2|Thu Sep 25 19:12:27 CEST 2014|In ImmutableMap.keySet().iterator(), transform the entrySet iterator rather than transforming its asList view, for the cases where that is not efficient. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76351252|0|0|1|365|3134|290|73|24|34|4|0|
366da0b7956e2ae3e794c0d600d21e5dc7a404f0|Fri Sep 26 00:10:13 CEST 2014|Dedup logic in ImmutableEnumMap that is available elsewhere. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76375623|0|0|4|365|3134|290|73|21|86|9|0|
f7e4a609d40d6ff422e5c90c860525b45b526250|Fri Sep 26 20:57:30 CEST 2014|Move indexMap to a more logical location. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76448806|0|0|7|365|3134|290|73|30|95|8|0|
d0a0c8fb1c7df372e617878c1d8414861558637d|Fri Sep 26 23:19:14 CEST 2014|Add copyOf(Iterable<Entry>) to ImmutableMap, ImmutableMultimap, and their subtypes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76459632|0|0|7|365|3147|290|73|33|77|11|0|
12a130a3b37b3a4917ade78e16954ca668e5b980|Tue Sep 30 22:48:27 CEST 2014|Small step first: rename and clarify the meaning of ImprovedAbstractMap, now ViewCachingAbstractMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=76723220|0|0|6|365|3147|290|73|34|93|8|0|
f2a818b2890f8df36b02387a36e18a5152662d73|Thu Oct 09 22:56:56 CEST 2014|Ensure that using a rate of Double.MIN_VALUE (the smallest positive double value) results in an effectively zero rate. It currently seems unlimited. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=77276457|0|0|1|365|3147|290|73|26|11|4|0|
af3f8d18044ae5854deaa16fd534731490b49d97|Fri Oct 17 01:28:50 CEST 2014|This CL fixes null annotations in com.google.common.primitives|0|0|7|365|3147|290|73|26|36|5|0|
bece9ef0a577758f8f973de1cdee5853f60df468|Fri Oct 17 20:39:46 CEST 2014|Avoid importing BitSet for Javadoc-only usage. We've gotten reports that this breaks things in GWT: https://code.google.com/p/guava-libraries/issues/detail?id=1824 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=77957959|0|0|1|365|3147|290|73|24|14|5|0|
809807e352656f02b422e44ed22cca9dee5d5ecd|Mon Oct 20 20:12:47 CEST 2014|Fix @since documentation tags. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78101179|0|0|1|365|3147|290|73|18|9|4|0|
6e5761cf8f64cfb78e44d50851dace43ededcbc1|Mon Oct 20 23:48:19 CEST 2014|Update Guava to Truth 0.24 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78118999|0|0|0|365|3147|290|73|21|2|8|0|
cef87687204b7cf2a6dfb49f5fcdad7e613281a8|Tue Oct 21 02:04:48 CEST 2014|Update public suffix patterns. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78130620|0|0|1|365|3147|290|73|23|38|5|0|
945a200eabe24528307f08a51689f54c12a25053|Tue Oct 21 17:46:11 CEST 2014|Improve error message. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78174362|0|0|0|365|3147|290|73|21|2|5|0|
ca9e7f9c32762531c134afef7f6f40e53b96a8b7|Thu Oct 23 18:25:11 CEST 2014|Change CountingInputStream and CountingOutputStream to require a non-null delegate stream, as reported in Guava issue #1869. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78355152|0|0|2|365|3147|290|73|19|11|7|0|
533a9460e0b2fec39fe74e7a3cd9a0ea353b1453|Thu Oct 23 18:44:38 CEST 2014|Rollback of: Change CountingInputStream and CountingOutputStream to require a non-null delegate stream, as reported in Guava issue #1869. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78356364|0|0|2|365|3147|290|73|18|6|5|0|
2c7ff3dc85e60e86d78283d46f7d1c8546a6aaca|Thu Oct 23 19:10:36 CEST 2014|Roll-forward of: Change CountingInputStream and CountingOutputStream to require a non-null delegate stream, as reported in... ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78358518|0|0|2|365|3147|290|73|20|13|5|0|
24c27151be5afdcf58c03565e56d27f8a84e1407|Fri Oct 24 16:14:22 CEST 2014|Remove the array copy from Fingerprint2011.hashBytes(byte[], int, int) method.|0|0|0|365|3147|290|73|21|2|5|0|
d4c5140a957592d78bd66c40751cb1bcc9cac198|Fri Oct 24 21:37:35 CEST 2014|Added Ping-From and Ping-To headers associated with <a ping>.|0|0|1|365|3147|292|73|21|5|7|0|
582bce8560ea41d8adbbfc5d6ce7fbed5b9fdf66|Sat Oct 25 00:48:04 CEST 2014|Migrate off of deprecated Truth methods (created using Refaster) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78470770|0|0|0|365|3147|292|73|20|2|5|0|
9113082b77c6f80e0d4d80b24eb16bcee1a23a08|Sat Oct 25 00:56:25 CEST 2014|Migrate off of deprecated Truth methods (created using Refaster) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78471417|0|0|0|365|3147|292|73|33|2|5|0|
810e9ec4d94baff856d12905ec26390c6be09eee|Sat Oct 25 00:56:56 CEST 2014|Migrate off of deprecated Truth methods (created using Refaster) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78471461|0|0|0|365|3147|292|73|31|2|8|0|
2a35e947679a898d86ee9f655f6b121b3c75d1f4|Sat Oct 25 01:04:16 CEST 2014|Migrate off of deprecated Truth methods (created using Refaster) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78472045|0|0|0|365|3147|292|73|27|2|5|0|
6d55c174c91f5ff4c9a26956227b111c1fc15e7e|Mon Oct 27 18:12:26 CET 2014|Add comment to apparently unused line in LongAddables. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78588590|0|0|1|365|3147|292|73|24|12|5|0|
da04fede442227bba94623e0a184f4dbed68552d|Tue Oct 28 14:43:58 CET 2014|Clean up usages of deprecated Truth has() Collection methods: -has().item(...) -> contains(...) -has().allOf(...) -> containsAllOf(...) -has().exactly(...) -> containsExactly(...) -has().exactlyAs(...) -> containsExactlyElementsIn(...) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78664552|0|0|0|365|3147|292|73|30|2|4|0|
e12c62dc17ad21c2fc8a9a918c159f661ee2f202|Tue Oct 28 15:21:46 CET 2014|Clean up usages of deprecated Truth has() Collection methods: -has().item(...) -> contains(...) -has().allOf(...) -> containsAllOf(...) -has().exactly(...) -> containsExactly(...) -has().exactlyAs(...) -> containsExactlyElementsIn(...) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78666537|0|0|0|365|3147|292|73|27|2|7|0|
50169063389b5dede9fba4f36895d66f9f479c80|Tue Oct 28 15:34:45 CET 2014|Clean up usages of deprecated Truth has() Collection methods: -has().item(...) -> contains(...) -has().allOf(...) -> containsAllOf(...) -has().exactly(...) -> containsExactly(...) -has().exactlyAs(...) -> containsExactlyElementsIn(...) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78667251|0|0|0|365|3147|292|73|26|2|5|0|
069cd931ef9fca21860217fea540fff6fc9530de|Tue Oct 28 15:36:29 CET 2014|Clean up usages of deprecated Truth has() Collection methods: -has().item(...) -> contains(...) -has().allOf(...) -> containsAllOf(...) -has().exactly(...) -> containsExactly(...) -has().exactlyAs(...) -> containsExactlyElementsIn(...) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78667341|0|0|0|365|3147|292|73|24|2|5|0|
b8515f3f490f3f9d3127570e9ac21c4a7c59d586|Tue Oct 28 15:42:31 CET 2014|Clean up usages of deprecated Truth has() Collection methods: -has().item(...) -> contains(...) -has().allOf(...) -> containsAllOf(...) -has().exactly(...) -> containsExactly(...) -has().exactlyAs(...) -> containsExactlyElementsIn(...) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78667656|0|0|0|365|3147|292|73|23|2|7|0|
d6a9346dd6ca7170756a2a6d939d7b55384229ac|Tue Oct 28 18:04:41 CET 2014|Hide samples.e0, etc. behind methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78677562|0|0|0|365|3147|292|73|53|2|5|0|
e052e3edf713c0c20dc5ab8ee98d3fde09473727|Wed Oct 29 15:33:55 CET 2014|Migrate off of deprecated CollectionSubject.has().exactly(...). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78755738|0|0|0|365|3147|292|73|35|2|5|0|
730a5d308a4e5e3423ff3f3eea1209072a8e6e75|Wed Oct 29 15:37:36 CET 2014|Add convenience methods for samples.e0(), etc., and migrate to them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78756024|0|0|0|365|3147|292|73|44|2|5|0|
9370140be0c19cb27d47c6185fe232ef9000a6b8|Wed Oct 29 15:49:08 CET 2014|Add convenience methods for e0().getKey(), etc., and migrate to them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78756685|0|0|0|365|3147|292|73|33|2|6|0|
7eed0f95640eed8d068a46ade7fc0a13f226c422|Wed Oct 29 16:31:10 CET 2014|Replace instances of CollectionSubject with IterableSubject (the former has been deprecated and will be removed soon). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78759479|0|0|0|365|3147|292|73|22|2|5|0|
86e4a8d67b1898c3a947f24c59c5ae720c86b975|Wed Oct 29 17:31:50 CET 2014|Use Map convenience methods in a few more places. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78763717|0|0|0|365|3147|292|73|19|2|4|0|
366efb31c4b5f1a04490d76d2c1405de6bfe1697|Wed Oct 29 17:33:18 CET 2014|Introduce Multimap convenience methods (k0, v0, etc.), and migrate to them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78763814|0|0|0|365|3147|292|73|27|2|7|0|
1c5554dedb0924689285a34489ec1d6b57d076e9|Wed Oct 29 19:49:50 CET 2014|Add an IteratorBasedAbstractMap class to simplify map implementations in common.collect. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78776528|0|0|6|365|3146|292|73|26|92|8|0|
d14649091d1f368c326125fdbe70c0d1dac58495|Thu Oct 30 17:40:52 CET 2014|Migrate from Truth's deprecated iteratesAs(...) to containsExactly(...).inOrder(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78848834|0|0|0|365|3146|292|73|27|2|4|0|
fa95e381e665d8ee9639543b99ed38020c8de5ef|Fri Oct 31 20:30:47 CET 2014|Change README to README.md and make it reference GitHub locations rather than Google Code. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=78948385|0|0|0|365|3146|292|73|23|2|7|0|
870ad023f6dbd77e7867021eabecc34b0c68e907|Mon Nov 03 20:22:16 CET 2014|Make GWT's LocalCache.values() not be a Set, since it may contain duplicate values. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79088720|0|0|0|365|3146|292|73|22|3|7|0|
11005bda31c7369437b61fb7813fcd8fbedeaeee|Mon Nov 03 20:38:26 CET 2014|Use Truth for isNotInstanceOf. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79090103|0|0|0|365|3146|292|73|22|2|7|0|
1b82532af11ff285c0aaa712a262d4e50bd81099|Tue Nov 04 02:46:35 CET 2014|Fix ByteArrayDataInput javadoc (GitHub pull request #1874). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79122254|0|0|1|365|3146|292|73|23|8|6|0|
36faf58a85d384fe4f2f66d2382c77ac1da44c55|Tue Nov 04 06:14:10 CET 2014|Remove mvn-deploy.sh and jdiff.jar, which aren't really needed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79183142|0|0|0|365|3146|292|73|20|2|6|0|
00b05b0989a2612e950536feb3f19b25f58018ef|Tue Nov 04 21:40:22 CET 2014|Add a .gitattributes file to control line ending normalization, which is otherwise a mess that depends on each git client's settings. (See http://schacon.github.io/git/gitattributes.html and http://adaptivepatchwork.com/2012/03/01/mind-the-end-of-your-line/ for more about that.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79186519|0|0|0|365|3146|292|73|21|2|4|0|
b6bd84874df9f0fd43b923f3991f409127e40be9|Wed Nov 05 21:29:41 CET 2014|Replace Google Code URLs with corresponding GitHub URLs.|0|0|0|365|3146|292|73|21|2|5|0|
124e573c32b9ae3d39a7e59664855a4821783904|Wed Nov 05 21:32:03 CET 2014|Add support for Travis CI.|0|0|0|365|3146|292|73|19|2|6|0|
a1b884dd4bc5688fcbdbd2f837dca4fa65bfd2c7|Wed Nov 05 23:02:28 CET 2014|Make log level for GWT configurable for Maven builds. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79283169|0|0|0|365|3146|292|73|24|2|5|0|
6e62f36aaeda5b0340727a48859a2dca81550c75|Thu Nov 06 00:36:02 CET 2014|Make GWT less spammy for Travis CI builds by changing its log level to INFO. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79291520|0|0|0|365|3146|292|73|19|2|5|0|
727f62163b685f720a8c001532271f648e250fa2|Thu Nov 06 19:58:36 CET 2014|Allow expectedInsertions to be up to Long.MAX_VALUE. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79352147|0|0|1|365|3146|292|73|20|19|4|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.BloomFilter.create(com.google.common.hash.Funnel<? super T>,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.BloomFilter.create(com.google.common.hash.Funnel<? super T>,int,double), newSymbol=]
dc6f49925d3e93e3e7d2f52be292a454ae8346eb|Thu Nov 06 21:09:35 CET 2014|Remove openjdk6 as a platform to build Guava on. It fails due to a weird generics issue. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79358423|0|0|0|365|3146|292|73|20|2|8|0|
2ba0fa47fd72c932c9f74e9beeb1abd09773e7c6|Thu Nov 06 23:53:15 CET 2014|Attempt to increase max heap space for Travis builds, since the new test for BloomFilters with a large number of insertions is currently running out of space. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79372034|0|0|0|365|3146|292|73|20|2|6|0|
5d730e9f3d9977644cd2f2e0b5b2539e795ba509|Fri Nov 07 20:59:29 CET 2014|Set explicit -Xmx for Guava tests in pom.xml.|0|0|0|365|3146|292|73|20|2|7|0|
ff4513325162b835b98cbbe4b7c1ad7aa9282a5a|Fri Nov 07 21:42:52 CET 2014|Make GWT logging even quieter for Travis build. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79441097|0|0|0|365|3146|292|73|20|2|6|0|
39d4b2140ad4a40f7eb91ed70cd97ddb0c88f9b2|Mon Nov 10 18:34:53 CET 2014|Remove AsyncSettableFuture.isSet ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79569901|0|0|1|365|3146|292|73|21|50|5|0|
f78ba14b0e1012184b67f2fe1a27d4d5aa3eb689|Mon Nov 10 20:15:50 CET 2014|Use features from GWT 2.6.0: - Use Class.getSimpleName() instead of our custom implementations. - Mark test that uses StringBuilder.appendCodePoint() as working under GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79579791|0|0|2|365|3146|292|73|23|11|5|0|
6603fcdeed1e8277a4cecbc1d2051b4510de1b45|Mon Nov 10 20:42:09 CET 2014|Remove references to on-demand computation of values.|0|0|1|365|3146|292|73|23|61|5|0|
92801fd18d29072116bff0014a0365b8dc9ba4c5|Mon Nov 10 20:52:00 CET 2014|Add CONTRIBUTING.md file to tell users how they can contribute and what to expect. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79583464|0|0|0|365|3146|292|73|20|2|9|0|
b98c1f96240f3a4fbb4557c0b8498ea46f017808|Tue Nov 11 01:42:10 CET 2014|[] ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79611585|0|0|1|365|3146|292|73|20|37|5|0|
63e9a0eccaca49df91e06e6397f496588b60e859|Tue Nov 11 18:48:25 CET 2014|Use TransformedIterator instead of ForwardingIterator. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79673799|0|0|2|365|3146|292|73|22|56|5|0|
149f052a790d7a1722a5b652e4faacc5e354ff14|Thu Nov 13 19:36:01 CET 2014|Test that far-future scheduling means "effectively never" rather than overflowing. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79870651|0|0|0|365|3146|292|73|21|2|7|0|
69b1352ae9dc7183fdea8bcd1d5ca85c0f671eed|Fri Nov 14 01:25:50 CET 2014|Add AsyncLoadingCache internally. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=79901718|0|0|1|365|3146|292|73|21|70|8|0|
72ae31fcc225cea1184ed75d82892a0d06339a19|Fri Nov 14 19:30:08 CET 2014|Link to one templating system as an example. On issue 1887, I said that we try to steer people to templating systems, but that's kind of a weak claim at present.|0|0|1|365|3146|292|73|23|9|6|0|
c633d07f26e9859529e79e7da4057ad097d9f5f4|Sat Nov 15 02:09:03 CET 2014|Remove the rethrow on failure behavior from all the threaded service implementations.|0|0|4|365|3146|292|73|20|48|6|0|
7ac551423cddb0c81f1307e3b101c0b41cf34883|Mon Nov 17 20:30:25 CET 2014|Add a constructor to VerifyException to permit a cause to provided alongside a message. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=80128106|0|0|1|365|3146|292|73|20|8|5|0|
e48c7a16d26a52249e338dea9f1153e7136daeb4|Tue Nov 18 21:31:43 CET 2014|Remove references to AsyncLoadingCache from CacheBuilder docs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=80227076|0|0|1|365|3146|292|73|19|59|6|0|
1a7ecdee7b51e7b77a2518320525faf92fbf9c49|Tue Nov 18 22:38:38 CET 2014|Remove unnecessary null checks.|0|0|1|365|3146|292|73|20|13|9|0|
0f9774d76fa6b0d7353b24e0550af519e936da07|Tue Nov 18 23:21:42 CET 2014|Fix shutdown issue in AbstractScheduledService.|0|0|1|365|3146|292|73|19|44|5|0|
7fee898cf7f23a9e9c9ca5f6f20fc0bd1e199ce4|Thu Nov 20 23:13:08 CET 2014|Remove AUTHORS file. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=80416702|0|0|0|365|3146|292|73|20|2|5|0|
a2508dae5397713c4a8bd464d0014233c742f733|Fri Nov 21 20:08:20 CET 2014|Migrate from Truth's deprecated iteratesAs(...) to containsExactly(...).inOrder(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=80490101|0|0|0|365|3146|292|73|21|2|5|0|
44eac674e407b95698625bbd4a402805264d3287|Fri Nov 21 20:21:29 CET 2014|Migrate from Truth's deprecated iteratesAs(...) to containsExactly(...).inOrder(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=80491240|0|0|0|365|3146|292|73|23|2|8|0|
353ae349a24fb6c9b3e233ca03e4012761c7f3d8|Fri Nov 21 23:10:57 CET 2014|Rewrite AbstractFuture to fix the following issues|0|0|2|365|3147|292|73|26|58|8|0|
2a7a3634f562f2a473850ff0373db66bc3b23cbf|Mon Nov 24 21:58:46 CET 2014|Two quick followups to take (minor) advantage of the new setFuture implementation|0|0|2|365|3148|292|73|22|66|7|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.done(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.cancel(), newSymbol=]
c276708d1fed199dae6724921670b9c380744590|Tue Nov 25 20:33:51 CET 2014|Shuffling from internal-only change. Will be reverted soon. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=80747845|0|0|0|365|3148|292|73|20|2|8|0|
0b760748d06ffd0b191b253190f1f83fd304329a|Wed Nov 26 03:45:56 CET 2014|Handle addListener throwing ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=80787198|0|0|1|365|3148|292|73|19|49|6|0|
ab9fa8fd1d22e3bf5d345ac2d464e973b664b757|Wed Nov 26 17:18:40 CET 2014|Shuffling from internal-only change. Will be reverted soon. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=80831887|0|0|0|365|3148|292|73|23|2|7|0|
d6ddbb7981b9e5b5c07231f8895bcda133019c63|Wed Nov 26 17:25:21 CET 2014|fix potential npe in ChainingListenableFuture.cancel ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=80832292|0|0|1|365|3148|292|73|22|61|9|0|
3d0512c9e7cf138add01a594a21ec4d46f836515|Mon Dec 01 20:39:32 CET 2014|Strip some internal-only GWT modules. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81083376|0|0|0|365|3148|292|73|21|2|6|0|
f8d4d38d5fc0bcfba725a7daf32aeea797468534|Mon Dec 01 23:40:55 CET 2014|Add benchmark for BaseEncoding. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81099316|0|0|0|365|3148|292|73|20|2|6|0|
5f9fd1479fcae935fb89f8c1127074c41e2751cf|Tue Dec 02 16:41:49 CET 2014|Steer some consistentHash users to WeightedConsistentHash. Steer all weightedConsistentHash users to WeightedConsistentHash.|0|0|1|365|3148|292|73|19|16|6|0|
269d98573f4e6eed051a8ae2cdb392a7b606e939|Tue Dec 02 21:23:28 CET 2014|Fixed isAssignableFrom() for <? super T> wildcard types, as pointed out by Guava issue 1898.|0|0|1|365|3148|292|73|21|60|6|0|
c239c19f92b118b7afa33894a743c8c54de44adc|Wed Dec 03 00:35:07 CET 2014|Delete AsyncSettableFuture. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81197333|0|1|0|365|3148|292|73|20|2|7|0|
e152cfd14c610c68341de805bcf71589652f6133|Wed Dec 03 16:12:12 CET 2014|Rewrite nonCancellationPropagating to take advantage of setFuture ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81244943|0|0|1|365|3148|292|73|19|59|6|0|
81b23cdc840018da4fc07ccfcd55c78391f44df0|Thu Dec 04 17:43:33 CET 2014|use Map<File, ResourceInfo> instead of Map<URI, ResourceInfo> to work around the problem mentioned in https://github.com/google/guava/issues/1899 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81339582|0|0|1|365|3148|292|73|22|55|5|0|
d585b1b7a5d307b8b800cb25adb558a5d21faae4|Thu Dec 04 22:22:51 CET 2014|Refactored the overloads of isAssignable*() methods to instance methods with simpler signature ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81364016|0|0|1|365|3148|292|73|19|52|6|0|
a70f009926809b9a37ebbc16ebbc9cf71030be11|Thu Dec 04 23:01:30 CET 2014|Skip unnecessary presizing. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81367572|0|0|9|365|3148|292|73|25|70|9|10|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.containsEntry(java.lang.Object,java.lang.Object), newSymbol=com.google.common.collect.AbstractMultimap.containsEntry(java.lang.Object,java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.keys(), newSymbol=com.google.common.collect.AbstractMultimap.keys()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.hashCode(), newSymbol=com.google.common.collect.AbstractMultimap.hashCode()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.remove(java.lang.Object,java.lang.Object), newSymbol=com.google.common.collect.AbstractMultimap.remove(java.lang.Object,java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.isEmpty(), newSymbol=com.google.common.collect.AbstractMultimap.isEmpty()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.toString(), newSymbol=com.google.common.collect.AbstractMultimap.toString()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>), newSymbol=com.google.common.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.containsValue(java.lang.Object), newSymbol=com.google.common.collect.AbstractMultimap.containsValue(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.putAll(com.google.common.collect.Multimap<? extends K,? extends V>), newSymbol=com.google.common.collect.AbstractMultimap.putAll(com.google.common.collect.Multimap<? extends K,? extends V>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.keySet(), newSymbol=com.google.common.collect.AbstractMultimap.keySet()]
b5eb4953579952edd753540e2919463a3ac1630d|Fri Dec 05 22:23:47 CET 2014|Increase the guarantees about what happens when you call setFuture with a completed future.|0|0|1|365|3148|292|73|24|48|5|0|
8ffa41f28347579fbd3363543fd9afae89ef0b48|Fri Dec 05 23:58:19 CET 2014|Rollback previous change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81455024|0|0|1|365|3148|292|73|19|51|5|0|
c828c438355896e16cfae49c8c044403d19d3377|Sat Dec 06 00:22:57 CET 2014|Do not propagate cancellations to children if it was a result of a child being cancelled ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81457128|0|0|1|365|3148|292|73|22|61|7|0|
c0b37db12875fe340dbf82fabfea8264f7c61de6|Sun Dec 07 00:31:14 CET 2014|Rollforward the previously rolled back AbstractFuture change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81501035|0|0|1|365|3148|292|73|21|48|5|0|
002f39f8c165bbf1581fab6fc585dcdf976eb96d|Mon Dec 08 18:47:26 CET 2014|Optimize UriParameterMap.parse() by making fewer passes when parsing and by checking requiresByteLevelDecoding() more efficiently.|0|0|0|365|3148|292|73|21|2|6|0|
ac579e0d20dd45ac8a713789e4708858a19fa894|Mon Dec 08 20:31:18 CET 2014|Fix some bugs related to calling Preconditions.checkNotNull on expressions that are definitely non-null.|0|0|2|365|3148|292|73|21|51|8|0|
ea9c9915bc9f0455b33e15aeeba55e2827ebb538|Wed Dec 10 17:26:19 CET 2014|Fix extendsFromClass().|0|0|1|365|3148|292|73|22|60|8|0|
1ab659d452ecddb90b508f6fba9e5ef5bde97d63|Wed Dec 10 22:34:41 CET 2014|Fix a class loading ordering bug on android.|0|0|1|365|3148|292|73|21|57|7|0|
f4aa25e74a9466c2f93a2147a7cf9b01850dd41f|Wed Dec 10 23:24:59 CET 2014|In com.google.common.reflect.Types, implement the TypeVariable interface using a dynamic proxy rather than an explicit implementation.|0|0|1|365|3148|292|73|21|48|6|0|
e3f1626770e087d90215620f175d76973b8f07b8|Wed Dec 10 23:47:54 CET 2014|Fix the reference to Utf8#encodedLength. Gratuitous reformatting. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=81819384|0|0|0|365|3148|292|73|20|2|5|0|
06e5db276be4bc28decf24879509c911f4be2bd9|Mon Dec 15 19:17:58 CET 2014|Fix example description which is no longer accurate.|0|0|1|365|3148|292|73|20|57|5|0|
14b12a5b24c410544d8f6d14087bb7550935d7d3|Mon Dec 15 20:07:38 CET 2014|Fix typo in Splitter.limit. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=82158244|0|0|1|365|3148|292|73|23|13|5|0|
0dba7a9e1e52776c91eeba52f0e149412c442947|Mon Dec 15 20:34:26 CET 2014|Mention splitToList explicitly in the doc comment for Splitter.limit. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=82160580|0|0|1|365|3148|292|73|22|11|5|0|
59373217a53a416d614dac67b2cb531abe418291|Mon Dec 15 20:43:56 CET 2014|Add a more efficient implementation of Sets.symmetricDifference.|0|0|1|365|3148|292|73|20|59|6|0|
b6da8fef9cc01bb439483664a94350a695efdbbc|Tue Dec 16 23:15:30 CET 2014|Make implicit narrowing compound assignments explicit.|0|0|1|365|3148|292|73|25|15|5|0|
207dcb8706476005759f05f2584432c2b9ab6c0b|Thu Dec 18 00:03:30 CET 2014|(1) Don't use a lock for seen exceptions field; should help speed a little (saves space in the non-error state) (2) Track not only seen exceptions, but also the causal chain.|0|0|1|365|3148|292|73|22|58|5|0|
f607e3c49a1d615bc869a355d1fbb59e3d96c7e3|Fri Dec 19 00:13:56 CET 2014|Disable doclint when building under JDK8.|0|0|0|365|3148|292|73|22|2|5|0|
0244717a95293374bdb99cbde51c95bb7a6558e4|Fri Dec 19 19:34:49 CET 2014|Removed test on url(). It's partially testing ClassLoader, and it sometimes fails. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=82525887|0|0|0|365|3148|292|73|18|2|5|0|
118ac49cddb47362b28cfd893f67791809d60679|Fri Dec 19 19:49:29 CET 2014|Specify source level 1.6 for GWT.|0|0|0|365|3148|292|73|21|2|8|0|
77ccd12bd901f83637293ddf760253ef57c305a5|Fri Dec 19 20:54:31 CET 2014|Add oraclejdk8 to the build matrix for Guava on Travis CI. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=82532082|0|0|0|365|3148|292|73|19|2|5|0|
b480594c212d7664412dcb7880fa33e40b21239d|Tue Dec 23 00:58:20 CET 2014|Create TrustedFuture (name TBD) a trusted 'less abstract' subclass of AbstractFuture that we can use to optimize setFuture and try to use it everywhere in util.concurrent.|0|0|3|365|3148|292|73|21|61|5|5|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.isDone(), newSymbol=com.google.common.util.concurrent.AbstractFuture$TrustedFuture.isDone()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.get(), newSymbol=com.google.common.util.concurrent.AbstractFuture$TrustedFuture.get()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.addListener(java.lang.Runnable,java.util.concurrent.Executor), newSymbol=com.google.common.util.concurrent.AbstractFuture$TrustedFuture.addListener(java.lang.Runnable,java.util.concurrent.Executor)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.get(long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.AbstractFuture$TrustedFuture.get(long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.isCancelled(), newSymbol=com.google.common.util.concurrent.AbstractFuture$TrustedFuture.isCancelled()]
99d2816f0a099430f28b69639e9f6f5aae388812|Tue Dec 23 23:14:24 CET 2014|Create TrustedListenableFutureTask so that our listener executor services can produce futures compatible with the new setFuture optimization. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=82743827|1|0|3|365|3148|292|73|24|66|8|2|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.AbstractListeningExecutorService.newTaskFor(java.lang.Runnable,T), newSymbol=com.google.common.util.concurrent.AbstractListeningExecutorService.newTaskFor(java.lang.Runnable,T)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.AbstractListeningExecutorService.newTaskFor(java.util.concurrent.Callable<T>), newSymbol=com.google.common.util.concurrent.AbstractListeningExecutorService.newTaskFor(java.util.concurrent.Callable<T>)]
e370ddeb7558f0028302c5aada1f89b469417b25|Tue Dec 30 06:20:52 CET 2014|Hide Utf8Benchmark, which has taken on some internal-only code. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=82987350|0|0|0|365|3148|292|73|23|2|6|0|
3dc7aa2ce4b836b731a15dcd56db1b400124a504|Mon Jan 05 21:50:43 CET 2015|Shuffling from internal change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83280657|0|0|1|365|3148|292|73|19|15|5|0|
5081e2928eeee8090470b0ef81d99088ddf09498|Tue Jan 06 16:48:10 CET 2015|Add @CheckReturnValue to Futures.immediate*Future(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83340815|0|0|1|365|3148|292|73|19|59|5|0|
ce79d2997f80dae7e7ae4b3dd449a15a25e89408|Tue Jan 06 16:48:36 CET 2015|Add @CheckReturnValue to *.filter() methods in c.g.c.collect. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83340841|0|0|5|365|3148|292|73|25|81|5|0|
8206ecfbf6ff3aa19e50c940fcfcc1c088e1511d|Tue Jan 06 18:30:07 CET 2015|Add @CheckReturnValue to Lists.reverse().|0|0|1|365|3148|292|73|22|53|4|0|
542d9336fcd198f03d650f2d19f21bf10e56701b|Wed Jan 07 17:17:01 CET 2015|Add @CheckReturnValue to Futures.successfulAsList(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83431953|0|0|1|365|3148|292|73|23|62|7|0|
146e1f88021bb405fa57611ca787678559d32319|Wed Jan 07 19:47:55 CET 2015|Add @CheckReturnValue to Collections2.transform(), Iterables.transform() and Lists.transform(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83443729|0|0|3|365|3148|292|73|23|67|5|0|
573a69a30a1898866933a60ae383650d37731e03|Wed Jan 07 20:26:12 CET 2015|Set default GWT log level to WARN. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83447444|0|0|0|365|3148|292|73|23|2|6|0|
0d25cbbb48d9c7a169a43a8ad4f28a357506fd30|Wed Jan 07 21:28:53 CET 2015|Add @CheckReturnValue to Iterables.elementsEqual(). For more information, see attached bug. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83453102|0|0|1|365|3148|292|73|21|109|8|0|
aa8233e7f6c7e8a64a3516c44870d05022072093|Wed Jan 07 21:30:08 CET 2015|Add @CheckReturnValue to Strings.nullToEmpty(). For more information, see attached bug. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83453191|0|0|1|365|3148|292|73|22|9|5|0|
85e89f39452fbd2c3c5b5ecfc2c0a97fc50af9cb|Thu Jan 08 02:33:42 CET 2015|Update public-suffix list. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83479451|0|0|1|365|3148|292|73|21|37|6|0|
ea262b98b9913b16364a25e4f5b9a9d074693f08|Thu Jan 08 20:44:14 CET 2015|setFuture documentation tweaks: - Describe cancellation propagation. - Stop referring to setFuture as though it *always* "sets asynchronously." - Small tweak that I'm not sure actually helps: change "previously been set or cancelled" to "already been set or cancelled." Somehow I feel like this is marginally clearer that it refers to "done at the time of the setFuture call" rather than "done at the time the supplied Future completes." Am I crazy? Maybe I should just say "done at the time the supplied Future completes?" - Maybe other stuff I've forgotten. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83537510|0|0|1|365|3148|292|73|20|51|6|0|
52bd26004ad769bb698e649ff88fb70b47e12567|Thu Jan 08 21:03:25 CET 2015|Standardize that Functions.foo().toString() returns "Functions.foo()." (I've preserved two existing exceptions: compose(b, a) (which returns "b(a)") and forMap(map, default) (which returns "Functions.forMap(map, defaultValue=default)"). I don't know whether that's ideal, but it doesn't feel worth spending too much time worrying about.) This matches what Predicates.foo().toString() and Ordering.foo().toString() return.|0|0|2|365|3148|292|73|20|53|6|0|
59407b6991ef621327b26d1783ed47e62d16076d|Fri Jan 09 18:09:48 CET 2015|Adds a small clarifying comment to the Javadoc of common.cache.RemovalListener.|0|0|1|365|3148|292|73|23|8|6|0|
f1f674b0eff8f55d99e2ad6e0752c684294fc95f|Fri Jan 09 20:42:28 CET 2015|Optimize containsAll and equals for ImmutableEnum* when compared to another ImmutableEnum* ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83622617|0|0|2|365|3148|292|73|20|50|5|0|
a9fdfa85e81d033f91843b6810d8df0fee6d05f8|Fri Jan 09 21:24:14 CET 2015|Up the buffer size used in copies to the JDK 7 default buffer size. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83625926|0|0|1|365|3148|292|73|19|15|5|0|
a94c53e0ebafa03384d174aad024fa74430640f5|Tue Jan 13 07:29:54 CET 2015|adding MediaType for Dart files ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83819730|0|0|1|365|3148|293|73|21|61|6|0|
651774d3734a0f72dd7bccab9e57bd9579cfff0e|Tue Jan 13 19:48:56 CET 2015|Pass a Locale to String.format calls. Then, run Guava tests in locale hi-IN to catch future dependencies on the default locale. Finally, as a convenience in debugging problems, write Maven logs in UTF-8 rather than ASCII. (This is likely already the case in "normal" Maven runs, but our guava_moe_test target was stuck on ASCII.)|0|0|7|365|3148|293|73|30|88|7|0|
e07fb263aef0dec3060c82ac8836a4f01661abc7|Wed Jan 14 19:12:20 CET 2015|Fix comment typo in Maps: 0,75 -> 0.75.|0|0|1|365|3148|293|73|28|78|10|0|
62bb8bd4f4756cdd796651397eead05637491e0b|Wed Jan 14 19:37:33 CET 2015|Clear FallbackFuture.running, this used to be the behavior but it was lost when updating this method to use setFuture.|0|0|1|365|3148|293|73|21|54|6|0|
3dc2bbe30d61a97ad5426de39fdee619cf6dcf7f|Wed Jan 14 23:47:20 CET 2015|Fallout from MOE update: We now preserve some more usernames in comments. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83975277|0|0|9|365|3148|293|73|24|104|7|0|
d7a7585be9c0f5d70238133a2e194a43cb5e545c|Thu Jan 15 00:37:46 CET 2015|GWT emulation for some of util.concurrent. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=83996751|0|0|6|365|3148|293|73|28|63|6|0|
fa24bad4e4ca19c18294062da539cdc78837efa2|Thu Jan 15 18:20:41 CET 2015|Increase heap.|0|0|0|365|3148|293|73|23|2|5|0|
252832d66a77cc19ba8b4d9c40afd2796127404c|Thu Jan 15 19:08:33 CET 2015|Add toString to DeadEvent.|0|0|1|365|3149|293|73|19|10|7|0|
3c090f535a548473adf3a7bd66520c377e6a696b|Thu Jan 15 19:19:55 CET 2015|Fix typo in InetAddresses' Javadoc.|0|0|1|365|3149|293|73|19|22|4|0|
07df39abc6fe9c8e58006be255b2b2995dca8483|Fri Jan 16 00:55:49 CET 2015|GWTifies Futures#transform(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84084635|0|0|4|365|3149|293|73|22|66|5|0|
b3bf62e8a34d41e70df4ab07a4d30b930909c7a4|Fri Jan 16 17:31:09 CET 2015|Depend on Truth 0.25. I'm about to introduce some assertThat(throwable).hasMessage(message) calls. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84134145|0|0|0|365|3149|293|73|24|2|7|0|
a89e931d811ad4cab0a48351ef4c95fd58e8d53d|Fri Jan 16 21:17:31 CET 2015|Take advantage of new GWT AbstractFuture tests to enhance overall AbstractFuture testing: - Run the tests not just under GWT but also under "normal Java." - Run the test as part of our open-source build (which happens mostly "automatically" as part of the above change). - Expand the tests to run with a TrustedFuture input and a non-TrustedFuture input. Currently this matters only in non-GWT mode, but I expect that to change in time. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84152832|0|0|0|365|3149|293|73|23|2|5|0|
0090c5559d0cdc63aae3833e8f36a84ba038ad43|Fri Jan 16 21:32:48 CET 2015|Fail setFuture(null) immediately under GWT (as it already does under plain Java) to avoid going into an inconsistent state. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84154017|0|0|0|365|3149|293|73|21|2|5|0|
c7435516a060d14002f3dff78f276ffca804bcbd|Fri Jan 16 21:46:04 CET 2015|Implement wasInterrupted() under GWT, and use that API to verify that cancel+setFuture passes the correct mayInterruptIfRunning value to the delegate. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84154982|0|0|0|365|3149|293|73|22|2|4|0|
a907912f9650cc7c5760b7a9177f44f8f242c939|Tue Jan 20 15:47:17 CET 2015|Simplify a boolean return. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84337684|0|0|0|365|3149|293|73|20|2|6|0|
9b446af7093a8dcc6cea883a10fa1e9cbc63966f|Tue Jan 20 17:58:08 CET 2015|Improve invalid character exceptions from BaseEncoding|0|0|1|365|3149|293|73|23|21|5|0|
a7937a13fa8c11ba0de6e510b530ade0452c72bc|Wed Jan 21 17:33:25 CET 2015|Add @CheckReturnValue to Ascii. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84437572|0|0|1|365|3149|293|73|24|12|4|0|
d3cce792afa1a6707b3aec079cd71508be2ff4bc|Wed Jan 21 17:33:27 CET 2015|Add @CheckReturnValue to Collections2 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84437574|0|0|1|365|3149|293|73|21|47|6|0|
65c42d94306c3d9e16b4722c1d71a7d910c610a3|Wed Jan 21 20:51:28 CET 2015|Add more info to README.md.|0|0|0|365|3149|293|73|19|2|5|0|
5c9f69a9563346fded905fa4291d42fb2793a3a3|Wed Jan 21 22:30:36 CET 2015|Add documentation of the happens-before guarantees of ListenableFuture.addListener.|0|0|1|365|3149|293|73|19|47|5|0|
6b76b9276557db9d9472f8a869cc819c70cfb3cb|Thu Jan 22 19:42:57 CET 2015|Annotate AsyncFunction parameter as @Nullable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84545868|0|0|1|365|3149|293|73|22|45|6|0|
e6fd8a1b0710209c075ac0379de1c24bad650d77|Thu Jan 22 21:01:46 CET 2015|Fix Travis build (hopefully) by setting max heap in the same <argLine> that sets the user language/country. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84553475|0|0|0|365|3149|293|73|19|2|4|0|
f935a1e96e387ea242e45f3e52dc1ac8219a9b7c|Thu Jan 22 22:12:35 CET 2015|Address lint identified by https://github.com/lewisd32/lint-maven-plugin ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84559622|0|0|0|365|3149|293|73|19|2|4|0|
8f1df29aa3babf441c262aedb6176714c6749596|Thu Jan 22 22:38:16 CET 2015|Suppress log output from tests in the console by redirecting it to files. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84561967|0|0|0|365|3149|293|73|20|2|6|0|
e376c4d3c371bf52b84c56b2524a44a5d7120d96|Thu Jan 22 23:20:35 CET 2015|Clarify the error message when an AsyncFunction returns null (*not* a Future that contains null). Add a similar message for FutureFallback. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84565778|0|0|1|365|3149|293|73|22|62|6|0|
57bcd2456c9a057f49d3ffecc171a524a432b1e3|Fri Jan 23 01:07:16 CET 2015|Move LabsFutures.makeTimeoutFuture to Futures.withTimeout in prep for releasing in guava.  This changes the signature to avoid joda time Duration and also eliminates the AtomicReferences which i believe are unnecessary.|0|0|1|365|3149|293|73|23|55|5|0|
83e833e66581b24068bae07e88fa5d6d439126cc|Fri Jan 23 20:15:00 CET 2015|An update on write visibility.|0|0|1|365|3149|293|73|24|60|5|0|
0860d0e05c86af3c132ff87363cc2e764214da87|Sat Jan 24 01:38:25 CET 2015|More doc tweaks based on martinrb@s comments on [] (sorry, submitted too fast!)|0|0|1|365|3149|293|73|20|64|6|0|
9cd3ea9cedd399648488142f7e1eefd0f5a63866|Mon Jan 26 20:04:16 CET 2015|Add @CheckReturnValue to CaseFormat, Enums, Equivalence, Joiner, MoreObjects, Strings and Suppliers. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84797925|0|0|7|365|3149|293|73|28|59|7|0|
782032c03df5282bbedb1935b95a69e086affabf|Tue Jan 27 11:17:00 CET 2015|Add some functionality to SerializingExecutor and rework its code.|0|0|1|365|3149|293|73|24|11|4|0|
87caee69fa9a53850ea31a8dd8287e2dacd2083f|Tue Jan 27 11:39:53 CET 2015|Add BaseEncoding benchmarks for decode and stream methods ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84860248|0|0|0|365|3149|293|73|20|2|7|0|
0f19a0653a3fcf208f1722528d362f5eadfb4dc9|Tue Jan 27 22:16:45 CET 2015|Release withTimeout as @Beta|0|0|1|365|3150|293|73|19|59|5|0|
3ecb65ed9929066408b0feee0161a6829e753fb7|Wed Jan 28 18:14:02 CET 2015|Rollback of: Add some functionality to SerializingExecutor and rework its code.|0|0|1|365|3150|293|73|23|11|5|0|
8078019d64be76a97cd9f964a03cd2d1c8024d36|Wed Jan 28 20:15:38 CET 2015|GWTifies Futures#dereference(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=84985065|0|0|1|365|3150|293|73|24|56|8|0|
c1160f0226bc00b88db9d80152584d8f299f226c|Thu Jan 29 18:07:42 CET 2015|Run many tests for addCallback and transform under GWT. Make the no-Executor overload of addCallback available under GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85070996|0|0|1|365|3150|293|73|22|57|7|0|
e038bedc27b30bd6323de3e05c1d6534f3bc1650|Thu Jan 29 18:16:58 CET 2015|Short-circuit future.setFuture(TrustedFuture) in GWT, too.|0|0|0|365|3150|293|73|26|2|6|0|
69475911714fd7704717a76b0371c8e475ec1734|Thu Jan 29 18:26:46 CET 2015|Test no-arg get() on pending Futures, even in a non-GWT setting. To prevent from hanging forever, of course, we need to spin up another thread to make the call. Conveniently, we already have the code for this lying around. The main thing I did to it was change it to call getUninterruptibly, since we handling interrupts isn't worth the trouble here. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85072429|0|0|0|365|3150|293|73|22|2|8|0|
424c567c4dda17b56735ec8f9c30e324869f658b|Thu Jan 29 18:49:48 CET 2015|Add @CheckReturnValue to c.g.common.primitives. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85074273|0|0|12|365|3150|293|73|35|35|5|0|
201bb362a9b6de3fec6507ff435ac6022b92da7b|Thu Jan 29 18:52:55 CET 2015|Add and use helper methods like assertDone() in tests. This found no bugs -- well, maybe one if you count the inconsistent propagation of interruption from the delegate, though I had suspected as much already.|0|0|0|365|3150|293|73|37|2|6|0|
31f45cbb587b7407120991ab0b5d7345e412696c|Thu Jan 29 19:14:31 CET 2015|Add a few final(?) tests.|0|0|0|365|3150|293|73|24|2|7|0|
da7359985e92e84d57ba18f554fe40d1d42e2cc7|Thu Jan 29 19:43:49 CET 2015|Run dereference() tests under GWT. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85079832|0|0|0|365|3150|293|73|23|2|6|0|
982e665c3c5d24ff53b2574ac216ffd57c7045dc|Thu Jan 29 19:55:42 CET 2015|Add @CheckReturnValue to UnsignedBytes, UnsignedInts, and UnsignedLongs (except for parse methods and methods that throw exceptions that people may reasonably want to catch).|0|0|4|365|3150|293|73|26|19|5|0|
15384c305a3e1550d2829982a9944769e0778cc0|Thu Jan 29 19:57:59 CET 2015|GWTifies Futures#combine(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85081294|0|0|3|365|3150|293|73|27|62|5|0|
3c4bb15c18b2db3170b995bd9b6634cdb470a414|Thu Jan 29 21:09:35 CET 2015|Add @CheckReturnValue to Optional ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85088656|0|0|1|365|3150|293|73|25|11|7|0|
9028da557b552ae2d3dcf79f1978a566f5825768|Thu Jan 29 21:18:26 CET 2015|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85089450|0|0|0|365|3150|293|73|23|2|5|0|
966f3b23cbf9c8e568f681f62436836530f1453f|Thu Jan 29 23:05:14 CET 2015|Add lazyStackTrace. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85099500|0|0|1|365|3152|293|73|21|10|5|0|
0c8a5acc7d06943d426ee99f310ebeb590c9f3df|Thu Jan 29 23:57:49 CET 2015|Rollback of: Add @CheckReturnValue to Optional|0|0|1|365|3152|293|73|20|9|7|0|
a451495691f7e57de33344899e3ea2e0383a14be|Fri Jan 30 09:49:38 CET 2015|Fix after rollback changelist 84974387.|0|0|1|365|3152|293|73|21|12|6|0|
1eda69c0d7ca4c88a92c11d27dc3e921c4fd3b44|Fri Jan 30 16:15:24 CET 2015|Stop scrubbing some more usernames (MOE update?). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85156857|0|0|4|365|3152|293|73|24|61|5|0|
c2bb9d23a9b8d142f0c530c89252683e1fb60f85|Fri Jan 30 19:07:27 CET 2015|GWTifies Futures#allAsList and friend. Enables some but not all FuturesTests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85168289|1|0|2|365|3152|293|73|27|57|7|0|
9f90d2c3f0c897b030941a2d8f424f2a06048439|Mon Feb 02 16:44:56 CET 2015|Add isSupertypeOf and isSubtypeOf, deprecating isAssignableFrom. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85327607|0|0|1|365|3156|293|75|27|71|6|0|
1db30126d9c27c0df51b89baef9820416baf3dd0|Mon Feb 02 18:14:51 CET 2015|Give the removal date for isAssignableFrom. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85333830|0|0|1|365|3156|293|75|22|56|6|0|
42b35e1ea6626ba910a9c17ef1a70af60cae2190|Tue Feb 03 01:23:05 CET 2015|Add Google-internal getAllEntries. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85375065|0|0|1|365|3156|293|75|22|54|9|0|
6f64db53bb4380125fd70feea45faaea5c774ce8|Tue Feb 03 02:14:50 CET 2015|Roll back addition of getAllEntries. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85379241|0|0|1|365|3156|293|75|19|50|5|0|
d8e9481c8f2b64fe8e8466d2571ce0de1d2e19cb|Tue Feb 03 22:36:57 CET 2015|Re-add Multisets.removeOccurrences(Multiset, Multiset).|0|0|1|365|3157|293|75|21|56|4|0|
606dd9e5493f4fd80a255a3d89b1ff762a53c763|Tue Feb 03 23:49:12 CET 2015|Add missing removal dates/releases for deprecated APIs. Add a horrible test to catch future missing info. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85463445|0|0|1|365|3157|293|75|26|50|7|0|
8ff1320932f74c7aa4cb7d179b6eb19b6196ad63|Wed Feb 04 10:05:56 CET 2015|Seperate tests for GoogleInternal methods into their own class|0|0|0|365|3157|293|75|22|2|5|0|
2e2f86ffa67242e99fb0074a49e69f461b63b179|Wed Feb 04 19:55:07 CET 2015|Migrate from deprecated isAssignableFrom to identical isSupertypeOf. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85539357|0|0|1|365|3157|293|75|20|46|5|0|
8e34d36efa806ec7978a4d4f9c9b15463303c900|Thu Feb 05 18:56:44 CET 2015|GWTify Futures#withFallback and its tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85631779|0|0|2|365|3157|293|75|26|55|6|0|
5bd76be2e74fde183e6c43788bf5d8f5e572ada2|Fri Feb 06 22:07:48 CET 2015|Re-add Google-internal getAllEntries. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85742568|0|0|1|365|3157|293|75|22|55|7|0|
bcd8abb54113d4ebd3f245d18da8af99ba67098f|Sat Feb 07 03:19:43 CET 2015|Re-remove Google-internal getAllEntries. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85767223|0|0|1|365|3157|293|75|21|54|5|0|
4fc149cca70e2555f6d2a57129631c25526dccb1|Mon Feb 09 19:00:57 CET 2015|Hide GoogleInternal*EscapersTest files completely, rather than leaving a test with no methods behind for Maven to complain about. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85899334|0|0|0|365|3157|293|75|19|2|7|0|
de4c1919f885fa85d1465e6bea4b9d47cdcc032b|Tue Feb 10 16:24:04 CET 2015|Migrate from Truth's deprecated .is(expected) to .isEqualTo(expected). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85986665|0|0|0|365|3157|293|75|21|2|6|0|
8d18612a52ac0fa9fc0c77658787cd60682609b9|Tue Feb 10 17:24:07 CET 2015|Fix several mistakes in how iteration order is documented for ImmutableMultimap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=85990417|0|0|1|365|3157|293|75|22|68|6|0|
f98fe0d069323bc92becbd75e727e44dc2c3a4c3|Tue Feb 10 21:56:44 CET 2015|Add @CheckReturnValue to entire Optional class. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86014536|0|0|1|365|3157|293|75|25|11|7|0|
94a8062b93d60f4fb08714403761c4323c85a18a|Tue Feb 10 22:09:18 CET 2015|Hide setSampleInstances internally. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86015706|0|0|0|365|3157|293|75|20|2|5|0|
54d04a7fc97bfd8e43f62d13d25248385cf586a3|Wed Feb 11 06:58:04 CET 2015|Add newCancellationCause. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86054805|0|0|1|365|3158|293|75|19|48|5|0|
c95402345ac633cacb9fb2615aa6914eb92688d5|Wed Feb 11 07:10:29 CET 2015|Add Hashing.sha384() ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86055528|0|0|1|365|3159|293|75|22|15|5|0|
b167ae5ebb5aa7bedc7ca3dccaf9c6cf14895a84|Wed Feb 11 11:39:29 CET 2015|Roll back addition of newCancellationCause. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86068136|0|0|1|365|3158|293|75|22|57|6|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.newCancellationCause(), newSymbol=]
e176380df8b0bd2d3b921858aa8a5a960d6ea15a|Wed Feb 11 15:57:15 CET 2015|Inline the implementation of DoubleMath.mean rather than using a helper class. This is called inside loops often enough that I think it's worth avoiding the object assignment. Also improve the javadoc.|0|0|1|365|3158|293|75|21|15|4|0|
8f743f950cf4eaaa4ac4dfff65a93c14da9f25d2|Wed Feb 11 22:16:04 CET 2015|Avoid generating calls to GWT-incompatible setUp or tearDown methods.|0|0|0|365|3158|293|75|19|2|5|0|
5a7ce45092fdcc00f7a5ba9eaaf7431e6c8d25b9|Wed Feb 11 23:23:00 CET 2015|- More carefully guard all of loadFuture's functionality inside the try block - Prioritize calling setException when exceptions occur ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86118912|0|0|1|365|3158|293|75|21|84|6|0|
3e47a32fe38b0e36f6c3a614a146916914c922e9|Thu Feb 12 16:59:03 CET 2015|Add Futures.catching{,Async} to replace Futures.withFallback. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86180055|2|0|1|365|3162|293|75|25|55|5|0|
6500bd897f3d93da90a5d813ffabed4d5ff5f361|Thu Feb 12 18:12:14 CET 2015|Warn about immutability. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86185367|0|0|1|365|3162|293|75|23|44|6|0|
2a18d13799f5de8bd39c25a5f51de859ef979e76|Thu Feb 12 18:46:45 CET 2015|Add Futures.transformAsync() to replace the AsyncFunction overloads of transform(). This will make the methods work better with Java 8 lambdas. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86188098|0|0|2|365|3164|293|75|28|58|5|0|
a8ed2f87e111ef6781b816d683c7e51946295805|Thu Feb 12 22:01:52 CET 2015|Add newCancellationCause() again. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86206373|0|0|1|365|3165|293|75|23|52|6|0|
7e4f51883753e62647f18018622a8f63de33f730|Thu Feb 12 23:08:28 CET 2015|Avoid AssertionError(String, Throwable) constructor, which isn't available in version of GWT we use for Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86212236|0|0|0|365|3165|293|75|21|2|5|0|
db73f380913db5e09bfc148e7fc31247985c6d85|Fri Feb 13 19:17:22 CET 2015|Add @CheckReturnValue to ComparisonChain. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86282152|0|0|1|365|3165|293|75|23|49|6|0|
bba5c312ac4011e5fd2184768ee086596ba81486|Fri Feb 13 22:15:33 CET 2015|Optimize LongMath.isPrime. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86298499|0|0|1|365|3165|293|75|22|36|6|0|
b547d033e5c3e8958242c8d01de491ceac19c126|Mon Feb 16 13:47:25 CET 2015|Optimize BaseEncoding's encode method by using an implementation without streams ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86425194|0|0|2|365|3165|293|75|23|21|6|1|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.io.BaseEncoding.encodingStream(java.io.Writer), newSymbol=com.google.common.io.BaseEncoding.encodingStream(java.io.Writer)]
4b6523ea39b8e476471e98a132335623a63e59f6|Mon Feb 16 20:21:58 CET 2015|Rollback of BaseEncoding change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86442772|0|0|2|365|3165|293|75|21|20|8|0|
ad77a591bdb5eb665a4dee4e05f606edc52df506|Tue Feb 17 18:10:46 CET 2015|Migrate from assertContentsAnyOrder() to Truth. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86498851|0|0|0|365|3165|293|75|21|2|6|0|
1338bd10ca989840886868227e609da903424321|Tue Feb 17 18:20:24 CET 2015|Make immediateFailedFuture and immediateCancelledFuture trusted futures.|0|0|2|365|3165|293|75|20|64|7|0|
6b9d234c3851a3f4736daec76b585d180ae0c832|Tue Feb 17 21:21:58 CET 2015|Rollback of change to immediateFailedFuture and immediateCancelledFuture. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86516778|0|0|2|365|3165|293|75|23|65|8|0|
8a593f3eef9bffd4a42135aba919883dd44ba6db|Wed Feb 18 17:03:18 CET 2015|Refer to the old names of transformAsync and catchingAsync from their @since tags.|0|0|1|365|3165|293|75|19|53|5|0|
2facd672d760e261d6731ef615d854ad16ed553c|Thu Feb 19 00:52:45 CET 2015|Avoid boxing in newDataOutput's checkArgument invocations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86638527|0|0|1|365|3165|293|75|21|14|5|0|
989e43f9cfa38a314ca12342570e13c7f18a5544|Thu Feb 19 01:34:26 CET 2015|Migrate from Truth's deprecated .is(expected) to .isEqualTo(expected). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86642578|0|0|0|365|3165|293|75|22|2|8|0|
7e5909477f1590a48348d79af2f6f07d6c0296c4|Thu Feb 19 02:12:25 CET 2015|Add @CheckReturnValue to Joiner, Objects, and Splitter. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86646027|0|0|3|365|3165|293|75|26|16|5|0|
ac4dddb89b7557e20f17c9464f3adf439373ac0d|Thu Feb 19 19:27:34 CET 2015|Migrate calls of to-be-deprecated Futures.java APIs to their equivalents:|0|0|1|365|3165|293|75|23|55|6|0|
20b7c04a528bcb8ac46752204eed5890d9d2c01f|Fri Feb 20 02:06:53 CET 2015|Make Files use transferTo, which can copy files without bringing the bytes into userspace. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86744917|0|0|1|365|3165|293|75|24|16|8|0|
0fd4c5832699b3fb43bfe280794e02d29ba51ea2|Fri Feb 20 08:00:00 CET 2015|Collect all resource URLs in the ResourceInfo objects.|0|0|1|365|3165|293|75|23|55|6|0|
7ee45e248328719ad782210ad645a76428c1ffe6|Fri Feb 20 17:33:45 CET 2015|Add @CheckReturnValue to Functions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86791183|0|0|1|365|3165|293|75|19|46|6|0|
d71cf1a7872259aa9701a0cc6bbadb47cacb29d1|Fri Feb 20 18:23:52 CET 2015|Add @CheckReturnValue to Predicates. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86794808|0|0|1|365|3165|293|75|21|44|8|0|
7765943f120fdfeef6f418ad8f3f71094695ed5c|Fri Feb 20 18:26:05 CET 2015|Add @CheckReturnValue to more classes in common.base. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86794958|0|0|4|365|3165|293|75|22|12|5|0|
9c300ebb29e67ef64f18ce0c12ed0b5ccf4c3d14|Sat Feb 21 01:02:50 CET 2015|Suppress future Error Prone error for AsyncFunction that returns a _null Future_, rather than the intended _Future whose value is null_. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86830267|0|0|0|365|3165|293|75|21|2|5|0|
5f61495bccb3f5801dd6efa18ec4b7dc1246f696|Sat Feb 21 04:21:38 CET 2015|Change a while to an if in AbstractFuture.  #TIL you can break <label> out of an if. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86842992|0|0|1|365|3165|293|75|20|55|6|0|
1f6f5a3a56078740bf31066650da711b9247ff3f|Sat Feb 21 06:18:28 CET 2015|Add @CheckReturnValue to BinaryPredicates and Defaults. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86847333|0|0|1|365|3165|293|75|21|12|6|0|
c9dbd3f6b754d10d1ea7ffffec829373e3328277|Mon Feb 23 19:14:12 CET 2015|Remove ClassPathTest tests from Guava for the moment. They're failing there. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86968210|0|0|0|365|3165|293|75|21|2|5|0|
4b66ade572cab7a3f49d500e1c913659ed86593b|Mon Feb 23 20:10:06 CET 2015|Add @CheckReturnValue to c.g.c.hash APIs ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86973520|0|0|7|365|3165|293|75|22|28|5|0|
7939255ffa8474eb55de08a230501598ae40a96f|Mon Feb 23 20:42:12 CET 2015|One more @GoogleInternal I missed last time. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86977055|0|0|0|365|3165|293|75|20|2|6|0|
64d13d81d5a3ffc35955a76b30eeed7921d2be5c|Mon Feb 23 20:47:40 CET 2015|Add @CheckReturnValue to Stopwatch ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86977616|0|0|1|365|3165|293|75|19|11|6|0|
c082549f20a0b6a6466c9e6a3e5da4baf83e7ed8|Mon Feb 23 23:08:40 CET 2015|Call file.toURI().toURL() outside of the entry iteration loop.  It turns out that this sequence may end up stat'ing the jar, which can significantly slow things down. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86990876|0|0|1|365|3165|293|75|22|53|6|0|
58994f12df2f3a11c1ca10a2a81553627df361e4|Mon Feb 23 23:32:57 CET 2015|Sort and remove unused imports. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86993473|0|0|1|365|3165|293|75|20|73|9|0|
d42e32781bc40bcc6df53d5d5d2120b91d8782a2|Mon Feb 23 23:51:25 CET 2015|Rewrite javadocs for immutable collections. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=86995462|0|0|2|365|3165|293|75|22|51|7|1|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableCollection.contains(java.lang.Object), newSymbol=java.util.Set.contains(java.lang.Object)]
3f7cbe89e3062cf4efab473e4b876fb50a1c2501|Tue Feb 24 03:03:44 CET 2015|Update publix suffix data. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=87012581|0|0|1|365|3165|293|75|20|34|5|0|
3b37d547713fd86f261b9374c0fae0c5b61ab5d1|Tue Feb 24 17:37:08 CET 2015|Shuffling from internal change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=87059596|0|0|1|365|3165|293|75|19|70|9|0|
b06c5351768591183aa0656949162f5e41a9042f|Tue Feb 24 19:47:08 CET 2015|Migrate calls of to-be-deprecated Futures.java APIs to their equivalents: - Migrate calls from transform(...AsyncFunction...) to transformAsync(). - Migrate calls from withFallback(future, new FutureFallback<V>) to catching(future, Throwable.class, new AsyncFunction<Throwable, V>()) (or occasionally a slight variant of that). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=87071526|0|0|0|365|3165|293|75|22|2|7|0|
1a1589cb0069d6476977d8f09af6fa076dc5a9bb|Tue Feb 24 22:13:08 CET 2015|Change exception messages; part of internal change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=87085064|0|0|0|365|3165|293|75|21|2|7|0|
812621b76b50dca9cbcea061df0d7c2abca039d6|Wed Feb 25 01:48:33 CET 2015|Expose Hashing.concatenating() in Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=87106619|0|0|1|365|3167|293|75|23|17|7|0|
957450e1f7f476718d7d13e7723baa325267c763|Wed Feb 25 16:46:29 CET 2015|Deprecate AsyncFunction transform() and withFallback(). Deprecate FutureFallback.|0|0|2|365|3167|293|80|21|56|5|0|
99a1407216220f3f0e14813bc1677f97ad12c60e|Thu Feb 26 18:35:15 CET 2015|Enable j2objc compilation of common/util/concurrent. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=87259269|1|0|1|365|3167|293|80|22|52|6|0|
1a5b0b9caaa5b6aaef77c9e7ace4f8cac4025738|Thu Feb 26 22:36:49 CET 2015|Fix a signaling bug in newDirectExecutorService()  Also switch to implicit monitors to take advantage of biased locking.|0|0|1|365|3167|293|80|21|49|7|0|
d812ccf2c25d82a23619ec6bb377d58ce8882e28|Fri Feb 27 01:42:10 CET 2015|Add missing @Nullable annotations to Table and BiMap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=87297784|0|0|2|365|3167|293|80|23|42|8|0|
f84ad90572dc117039662560ca68d8c600b6c8b0|Mon Mar 02 16:20:47 CET 2015|Remove APIs scheduled for deletion in March 2015. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=87511933|0|0|2|365|3166|293|79|25|62|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapMaker.softValues(), newSymbol=]
0d50b3add7225681826af56d8e5fc23e7405c9fc|Tue Mar 03 02:28:56 CET 2015|Fix https://github.com/google/guava/issues/1982 by adding some preconditions|0|0|1|365|3166|293|79|19|48|10|0|
3c7981efb11ab50bc98393a6a897859b8a4990de|Tue Mar 03 22:51:26 CET 2015|*Close* our blocks, now in our moment of triumph? ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=87644978|0|0|1|365|3166|293|79|21|60|5|0|
4b96d280b8e4a8279025fb704fbcaac015bcca8b|Wed Mar 04 22:00:49 CET 2015|Remove @Beta from Maps.asMap and Maps.toMap.|0|0|2|365|3166|293|79|21|78|9|0|
69a86a80e79bed7bbc8afeea431eb2c60e7f913f|Wed Mar 04 23:28:44 CET 2015|Remove com.google.common.labs.reflect.Signature. It has not gained any uses in three years of existence. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=87751075|0|0|0|365|3166|293|79|26|2|9|0|
58d63de6e4a839ca87177d0d77d6f7216523b31b|Fri Mar 06 21:23:57 CET 2015|Improve failure message from testUrls to help us figure out why it's failing on Travis, e.g., https://travis-ci.org/google/guava/jobs/53222839 "testUrls(com.google.common.reflect.ClassPathTest): expected:<3> but was:<1>" ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=87967592|0|0|0|365|3166|293|79|21|2|6|0|
1839378a0dc48379f018597adb0cbcadc3225d34|Mon Mar 09 15:21:01 CET 2015|Add the piece of information that I really wanted last time. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88115213|0|0|0|365|3166|293|79|20|2|5|0|
f3099c7e01df0f240615eea996ec0c973a47aa11|Mon Mar 09 18:49:03 CET 2015|Move EMPTY to RegularImmutableList. This was requested in https://github.com/google/guava/issues/1977 to avoid circular static-init dependencies. I fear that we have other such problems. We should consider adding a test for them. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88131198|0|0|2|365|3166|293|79|19|40|7|0|
4a0e33df4e09b8e0a21c5a08e6ec83239c3db803|Mon Mar 09 20:47:48 CET 2015|Re-enable compilation of benchmarks in Guava now that caliper 1.0-beta-2 is out.|0|0|1|365|3166|293|79|25|63|5|0|
a671062fc995479a8dc0c64ace754e8207e991db|Tue Mar 10 17:11:56 CET 2015|Collections coming from ImmutableRangeSet.asSet() and ImmutableRangeMap.asMapOfRanges() can now be correctly serialized. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88224961|0|0|1|365|3166|293|79|26|42|5|0|
aaac377a8f326df3589ebefad48ab0ae6b223b2c|Tue Mar 10 17:36:33 CET 2015|ImmutableRangeMap is now serializable. Copy/paste javadoc fixed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88227012|0|0|2|365|3166|293|79|21|60|10|0|
a7acd431fa71b18a09310216c47cef48533fe109|Sat Mar 07 18:46:14 CET 2015|Refactorings in util.concurrent so more code can be shared. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88247030|3|0|3|365|3166|293|79|29|71|6|0|
1628be3168a63d2cab94f8122bfe04c0024961d2|Tue Mar 10 22:06:59 CET 2015|Add tests for current transformAsync/catchingAsync interruption behavior, namely "It doesn't do anything." ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88255363|0|0|0|365|3166|293|79|25|2|6|0|
2fe1415c5c2a1ee771a1616cc5d30d12e656026c|Wed Mar 11 15:49:52 CET 2015|Optimize BaseEncoding by removing GwtWorkarounds and using an implementation without streams ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88332628|0|1|1|365|3166|293|79|24|20|8|2|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.io.BaseEncoding.decodingStream(java.io.Reader), newSymbol=com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.io.BaseEncoding.encodingStream(java.io.Writer), newSymbol=com.google.common.io.BaseEncoding.encodingStream(java.io.Writer)]
0f8d0d846684d73f5fd9928afe946355c45b4f18|Wed Mar 11 18:06:36 CET 2015|Remove warnings from Futures.java.|0|0|1|365|3166|293|79|24|55|6|0|
94ded7f70ebcb9014480326f24df552c48bd327a|Thu Mar 12 02:27:48 CET 2015|Add Futures.getChecked, the new name of Futures.get. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88397579|0|0|1|365|3168|293|79|21|62|11|0|
02c3c8719a8f6f200447c7dcf31398d92738df32|Thu Mar 12 14:38:07 CET 2015|Migrate calls of to-be-deprecated Futures.get to equivalent Futures.getChecked. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88435725|0|0|0|365|3168|293|79|22|2|10|0|
fc277895b9220901f9a016c11aa0da1ad8c39f4f|Thu Mar 12 20:50:38 CET 2015|Deprecate get(), which is being replaced by getChecked().|0|0|1|365|3168|293|81|23|57|5|0|
97e6b600c1cb7cdd9e5b1806842dc7685f060136|Fri Mar 13 08:22:02 CET 2015|Add FluentIterable.toMultiset(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88522314|0|0|1|365|3169|293|81|21|55|7|0|
34f3e9f690dfd6f8352f30647c020ecc72ec5078|Fri Mar 13 21:15:30 CET 2015|In com.google.common.reflect.Types, make the Method objects that are used as part of Java compatibility accessible.|0|0|1|365|3169|293|81|25|51|9|0|
107a3c5ac2459a484fd25dfef26dacc5e1a6359e|Tue Mar 17 16:45:23 CET 2015|Migrate calls of to-be-deprecated Futures.get to equivalent Futures.getChecked. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88830649|0|0|3|365|3169|293|81|23|59|6|0|
8d46727795220cebf794f350459e3c73a90ac84d|Tue Mar 17 22:23:00 CET 2015|Document that callers of catching() should prefer more specific exception types. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88864139|0|0|1|365|3169|293|81|25|63|6|0|
409672d0f3956219c5c62f52011f2538fee6461f|Wed Mar 18 22:25:27 CET 2015|Improve the implementation of Multisets.ElementSet.remove to do only one operation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88968217|0|0|1|365|3169|293|81|22|51|8|0|
4d2e153f212deecc3f02061d773b41a22a000b92|Wed Mar 18 23:23:17 CET 2015|Make it explicit that a memoized Supplier's get() method is invoked at most once. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=88974060|0|0|1|365|3169|293|81|20|9|5|0|
dac4164a5b67c8adc5a710b13f48c69b428d573a|Thu Mar 19 01:42:38 CET 2015|Make implicit narrowing compound assignments explicit.|0|0|0|365|3169|293|81|20|2|6|0|
896225238f984ca58784c432c5c5c8d0ef3791b8|Thu Mar 19 22:20:51 CET 2015|Use Hashing.smearedHash directly in HashBiMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89066886|0|0|1|365|3169|293|81|20|49|8|0|
ca402cd09435eec98bf662eac1a74dad6376f36a|Fri Mar 20 21:07:52 CET 2015|Apply some simplifications and improvements. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89149129|0|0|2|365|3169|293|81|21|69|5|0|
b3855ef79650e282563561368577253d7abcc385|Mon Mar 23 17:54:23 CET 2015|When a new entry exceeds the segment's maxWeight all by itself, don't bother evicting anything else, only the new one. Still go through all the motions of actually adding and evicting it; otherwise I fear the code complexity will skyrocket.|0|0|1|365|3169|293|81|23|85|6|0|
56456cb58c0cb71d7c0f05047e13718ad202b748|Mon Mar 23 17:59:34 CET 2015|Round 2 in the great ImmutableCollection javadoc rewrite. Try to make it a little tighter, and widen the circle to a few more classes.|0|0|5|365|3169|293|81|24|64|14|1|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableCollection.contains(java.lang.Object), newSymbol=java.util.Set.contains(java.lang.Object)]
c1e0e671a775886c16ddfab543711f002460b538|Mon Mar 23 18:54:24 CET 2015|Eliminate boxing in RegularImmutableMultiset by inlining the hash table implementation.|0|0|3|365|3168|293|81|25|62|5|0|
8d6c68415db141d7e44e7132f0ed39c571d47468|Mon Mar 23 19:10:25 CET 2015|Prevent rare disastrous classloading in first call to LockSupport.park. See: https://bugs.openjdk.java.net/browse/JDK-8074773 ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89317155|0|0|1|365|3168|293|81|24|50|5|0|
7af428ed5883d5237849d44a76d8ec0f41c10080|Mon Mar 23 19:31:17 CET 2015|Simplify the ImmutableMapEntry shared code by making the base ImmutableMapEntry class terminal and sharing the subclasses for non-terminal nodes in the hash table. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89319446|0|0|6|365|3168|293|81|21|69|8|0|
95117a4d625a5d733da1b504affdde2a808fd3ea|Tue Mar 24 05:28:35 CET 2015|Wrap the Method.setAccessible call in Types.TypeVariableInvocationHandler in try/catch so that it is not an error for it to fail.|0|0|1|365|3168|293|81|23|47|5|0|
9131ddb3bd2ff2f3ad08dd06f59d0597d33b8bdf|Tue Mar 24 19:00:55 CET 2015|Alternative way to get AssertionError instance in com.google.common.util.concurrent.GeneratedMonitorTest, since public AssertionError(String message, Throwable cause) does not exist in Java 6 yet.|0|0|0|365|3168|293|81|19|2|5|0|
4f60b48ec264366c86ec91d3219638266a7d2d40|Tue Mar 24 22:03:07 CET 2015|Add a new overload of getChecked() with a different parameter order.|0|0|1|365|3169|293|81|21|63|5|0|
51148d02e4a61d5f99c716f365a039f4b884366b|Tue Mar 24 22:05:57 CET 2015|Round 3 of the immutable collections classdocs rewrite. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89434768|0|0|15|365|3169|293|81|31|85|11|0|
2dd017b0637921e7ced3a7a94a98c5942a659ed4|Wed Mar 25 03:12:43 CET 2015|Add @CheckReturnValue to all methods in FluentIterable (except copyInto(Collection)). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89461679|0|0|1|365|3169|293|81|25|57|8|0|
c33873bdbae0cd23cbaf084f296e19d0a4553c4e|Wed Mar 25 17:42:47 CET 2015|Deprecate the version of getChecked() with the old parameter ordering.|0|0|1|365|3169|293|82|25|55|5|0|
ed40f37f6154bafc34c89919c49b2c6aed84bd27|Wed Mar 25 19:48:46 CET 2015|Add @CheckReturnValue to filter*() methods in Collections2, Iterables, Maps, and Multimaps. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89522301|0|0|4|365|3169|293|82|24|102|6|0|
231f8ada4ed4615f93ce4f84aaff4dece9b233df|Wed Mar 25 20:36:40 CET 2015|Microoptimization: presize builder when deserializing ImmutableMap ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89527038|0|0|1|365|3169|293|82|26|55|7|0|
ab56ef398baea2b4da007ba1de62b32245d70c00|Thu Mar 26 01:05:43 CET 2015|Add @CheckReturnValue to many APIs in c.g.common.util.concurrent.Futures. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89553140|0|0|1|365|3169|293|82|24|62|5|0|
d8e73b37d62f2dabb9731adbe929c54d28246fb0|Thu Mar 26 17:20:28 CET 2015|Remove the version of getChecked() with the old parameter ordering. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89606673|0|0|1|365|3168|293|81|25|55|7|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.getChecked(java.util.concurrent.Future<V>,long,java.util.concurrent.TimeUnit,java.lang.Class<X>), newSymbol=]
402ab069ddf128db18588ed2617cdb618900bd2f|Thu Mar 26 18:37:06 CET 2015|Don't execute AsyncFunction in ChainingListenableFuture if the future has been canceled. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89613683|0|0|1|365|3168|293|81|22|59|6|0|
cdcd91f198719d87c71d4079494acdf7ca321133|Thu Mar 26 20:35:47 CET 2015|Eliminate EmptyImmutableSet, replacing it with a RegularImmutableSet with a null hash table.|0|1|2|365|3168|293|81|25|44|5|0|
b1cfcc56043bb78c947fc08628d71981acada3a7|Thu Mar 26 21:14:19 CET 2015|Delete EmptyImmutableBiMap, instead using a RegularImmutableBiMap with null hash tables. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89629248|0|1|3|365|3168|293|81|22|57|11|0|
beca42b67c4857e0b57b648961ccdc633d39c7d0|Fri Mar 27 19:02:58 CET 2015|Tiny simplification to CharMatcher.|0|0|1|365|3168|293|81|23|14|5|0|
6681a0cedbba452837a6314c0af956dc55d1f2d0|Fri Mar 27 19:16:18 CET 2015|Reduce memory consumption of ImmutableSortedMultiset by eliminating the count array.|0|0|2|365|3168|293|81|22|48|5|0|
77b134cd1dbf2ceface9956f9598e786c5c5f5b7|Fri Mar 27 19:17:47 CET 2015|Remove replaceFrom overrides from CharMatcher.NONE.|0|0|1|365|3168|293|81|20|12|8|0|
e7e0abefddbb35c60ef73e96df197db90c707db2|Fri Mar 27 19:27:20 CET 2015|Eliminate EmptyImmutableSortedSet, while we're at it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89712042|0|1|4|365|3168|293|81|24|62|11|0|
be67064ab091183f8a7c273358f35bcc51f7157e|Fri Mar 27 20:47:30 CET 2015|Tiny simplification in CharMatcher to define indexIn(CharSequence) as indexIn(CharSequence, 0). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89718886|0|0|1|365|3168|293|81|23|14|5|0|
bcaed940f6bfb8ab24e86269c4e4e0d7cce5eea6|Fri Mar 27 21:23:13 CET 2015|Woops - seenExceptions should only be released when the future is done, not on failure!|0|0|2|365|3168|293|81|20|48|8|0|
0dc5ba45824130e7c09beeeb450cc3d430382c19|Fri Mar 27 21:26:56 CET 2015|Demonstrate a race that can result in excessive logging. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89722067|0|0|0|365|3168|293|81|23|2|6|0|
3823dde77be1ce60b962c0d49f036683c7421c84|Sat Mar 28 00:12:31 CET 2015|Fold EmptyImmutableSortedMap into RegularImmutableSortedMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89737176|0|1|3|365|3168|293|81|24|63|7|0|
ffd15fd686ce71ac32a347e1d97aa5d7e19bf67a|Sat Mar 28 00:56:29 CET 2015|Fold EmptyImmutableSortedMultiset into RegularImmutableSortedMultiset. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89740927|0|1|2|365|3168|293|81|21|47|8|0|
5797777fc85b0ae703f8e1fa15a0512952dca938|Mon Mar 30 21:08:30 CEST 2015|Fold RegularImmutableSortedMap into ImmutableSortedMap, since that is now the only implementation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89888434|0|1|3|365|3168|293|81|25|63|8|0|
b736b9d20fc2dc8d14b860a46d93ed037a7a4353|Mon Mar 30 22:00:37 CEST 2015|Minor tweak: ImmutableList.subList can return the original list instead of a view if the range is the whole list. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=89893003|0|0|1|365|3168|293|81|21|39|5|0|
0321687aac74b13c2f910cd66dafbb67d8fb0e57|Wed Apr 01 20:24:37 CEST 2015|Reuse the passed-in entry array in RegularImmutableMap and RegularImmutableBiMap. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=90082508|0|0|4|365|3168|293|81|21|58|12|0|
82eb9afef0e432390300f83bf237d169d0db5187|Wed Apr 01 23:21:00 CEST 2015|Minor simplifications to HashBiMap using the {key,value}OrNull utilities from Maps. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=90100234|0|0|1|365|3168|293|81|23|52|6|0|
ac1e4d610c24937fcd726f13dbf9ca061ee7bc58|Thu Apr 02 00:03:33 CEST 2015|Fix minor bug in setValue method of HashBiMap.inverse().entrySet() entries. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=90104250|0|0|1|365|3168|293|81|23|49|5|0|
bd929fa5dc6066aa6576fb4591189b913a749b7c|Thu Apr 02 22:33:57 CEST 2015|Trim overrides from SingletonImmutableSet that are just for tiny performance wins. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=90191174|0|0|1|365|3168|293|81|26|38|5|0|
07a06bccf9cac98feafc6c279840e866c6bb9ba8|Thu Apr 02 22:57:18 CEST 2015|Add RandomAccess implementations for Lists.{equals,indexOf,lastIndexOf}Impl, to eliminate allocation of the iterator. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=90193421|0|0|3|365|3168|293|81|20|55|5|0|
9ff016c3727436ae28044f4b7b56737a243f1aa1|Thu Apr 02 23:22:47 CEST 2015|Delete redundant performance overloads from SingletonImmutableList. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=90196002|0|0|1|365|3168|293|81|20|39|5|0|
156e3b8926e89f21086bb38961dff121d55f1470|Mon Apr 06 21:43:41 CEST 2015|Update AsyncFunction javadoc to point to a non-deprecated method. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=90438335|0|0|1|365|3168|293|81|25|43|6|0|
5394f635d552aae319c5a58d6a9a332ccbcd0dd8|Tue Apr 07 19:51:26 CEST 2015|Address https://github.com/google/guava/issues/2008 by discarding references to iterators in Iterators.concat after they have been iterated over. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=90525172|1|0|2|365|3168|293|81|20|59|5|0|
34724451a106e1d5eab3af20e566f7fbbd8b08ae|Tue Apr 07 22:21:45 CEST 2015|Make CacheLoader.UnsupportedLoadingOperationException and RemovalNotification's constructor public.|0|0|3|366|3169|293|81|24|87|11|0|
f79d64fa7dd2adc19e29cbef6cd98ad106d1692a|Tue Apr 07 22:44:41 CEST 2015|Remove all of common.cache from @Beta. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=90542356|0|0|15|366|3169|293|81|29|93|14|3|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.cache.ForwardingCache.getAllPresent(java.lang.Iterable<? extends K>), newSymbol=com.google.common.cache.ForwardingCache.getAllPresent(java.lang.Iterable<? extends java.lang.Object>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.cache.AbstractCache.getAllPresent(java.lang.Iterable<? extends K>), newSymbol=com.google.common.cache.AbstractCache.getAllPresent(java.lang.Iterable<? extends java.lang.Object>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.cache.ForwardingCache.get(K,java.util.concurrent.Callable<V>), newSymbol=com.google.common.cache.ForwardingCache.get(K,java.util.concurrent.Callable<? extends V>)]
8894dba44923a6e06842b6696c6eb2bc08c3c7e0|Tue Apr 07 23:53:49 CEST 2015|Pull out a subclass of ImmutableSet for indexed implementations, which are common enough that it saves code overall. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=90549526|0|0|5|366|3169|293|81|25|57|9|0|
c4346aaea935df8289e30fbe5fd739ad26825174|Wed Apr 08 01:23:06 CEST 2015|Update public suffix patterns. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=90558429|0|0|1|366|3169|293|81|21|37|5|0|
7fa5082e6b920d243cb9d273b97de7e8dd3bb1d4|Thu Apr 09 20:52:23 CEST 2015|Just cleaning up old @since tags.|0|0|78|366|3169|293|81|58|195|18|12|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.containsEntry(java.lang.Object,java.lang.Object), newSymbol=com.google.common.collect.AbstractMultimap.containsEntry(java.lang.Object,java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.remove(java.lang.Object,java.lang.Object), newSymbol=com.google.common.collect.AbstractMultimap.remove(java.lang.Object,java.lang.Object)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardKeySet(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardEntrySet(com.google.common.base.Supplier<java.util.Iterator<java.util.Map$Entry<K,V>>>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ForwardingMap.standardValues(), newSymbol=],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.keys(), newSymbol=com.google.common.collect.AbstractMultimap.keys()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.hashCode(), newSymbol=com.google.common.collect.AbstractMultimap.hashCode()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.isEmpty(), newSymbol=com.google.common.collect.AbstractMultimap.isEmpty()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.toString(), newSymbol=com.google.common.collect.AbstractMultimap.toString()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>), newSymbol=com.google.common.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.containsValue(java.lang.Object), newSymbol=com.google.common.collect.AbstractMultimap.containsValue(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMultimap.putAll(com.google.common.collect.Multimap<? extends K,? extends V>), newSymbol=com.google.common.collect.AbstractMultimap.putAll(com.google.common.collect.Multimap<? extends K,? extends V>)]
a904e91af4eea83b91f7bf3acff90b14927eced7|Sat Apr 11 23:12:00 CEST 2015|Fix ClassPath by exposing Scanner for internal clients to customize.|0|0|1|366|3169|293|81|36|51|5|0|
f8642513c8a4d011097b7158321312f055882225|Sun Apr 12 19:09:49 CEST 2015|Fixed a line-wrapping I missed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=90934632|0|0|1|366|3169|293|81|20|54|5|0|
0506f938b4855bd2148e644ca2dbed0de0ed3024|Mon Apr 13 20:05:02 CEST 2015|Add a method that tells how many permits are stored and can be used without blocking future tryAcquire calls.|0|0|1|366|3169|293|81|22|15|9|0|
2b6bb1689b3f93dc8a019d76fabc6d65cea79b59|Mon Apr 13 22:38:38 CEST 2015|Two minor changes to the new Scanner support * Pass the JarFile to onJarEntry, this way we can read the jar entry without having to open the Jar a second time * add 'throws IOException' to the callback methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=91020019|0|0|1|366|3169|293|81|22|56|6|0|
c33a718d699ee03efbd40d12ecac844ae97643c3|Tue Apr 14 19:28:49 CEST 2015|Add @CheckReturnValue to MultimapBuilder. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=91101255|0|0|1|366|3169|293|81|23|45|6|0|
45d5463b53e9e327cf1f86ea954853f781773677|Thu Apr 16 21:14:06 CEST 2015|Refactored Scanner.onJarEntry() and onResourceFile() to scanJarFile() and scanDirectory().|0|0|1|366|3169|293|81|24|57|8|0|
7e98d987b726f3c7d0b93248887a7782b15aeb82|Thu Apr 16 22:00:51 CEST 2015|Remove unneeded and unavailable inherits from testModule.gwt.xml files. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=91328781|0|0|0|366|3169|293|81|23|2|4|0|
6cbb6075bd84396476f7dd2cfbd89caa8ab08ee6|Fri Apr 17 19:52:48 CEST 2015|Fix typo - Trutested is tru and tested, but not a word. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=91420403|0|0|1|366|3169|293|81|20|16|5|0|
d4ecd71653f4c2c466960d4ba56aa547f5fdfdf5|Mon Apr 20 19:17:15 CEST 2015|Make Optional.absent().hashCode() different from Optional.of(0).hashCode()|0|0|1|366|3169|293|81|21|11|4|0|
ba240ccb80fe88e1ee6793800622ec3dca53a575|Wed Apr 22 16:55:49 CEST 2015|Add Maps.newLinkedHashMapWithExpectedSize|0|0|1|366|3170|293|81|28|78|7|0|
c910256f20468f1782ae3174f9a4c8ce1667a035|Thu Apr 23 16:35:39 CEST 2015|Fix a few warnings in ThrowablesTest ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=91884994|0|0|0|366|3170|293|81|23|2|4|0|
08a3fbfd82b289ac83132ce08b24af9961e3658f|Thu Apr 23 17:58:36 CEST 2015|Remove duplicate Stopwatch tests.|0|0|0|366|3170|293|81|20|2|5|0|
35c470b214182b163e3030c0e59cb6ee5c53944d|Fri Apr 24 18:57:41 CEST 2015|Migrate users calling new LinkedHashMap(int) to Maps.newLinkedHashMapWithExpectedSize when it appears that that is what they actually want.|0|0|2|366|3170|293|81|25|60|7|0|
cb799351aec562485d4aa961b379458395111bda|Tue Apr 28 00:04:16 CEST 2015|Minor changes from internal addition. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=92186970|0|0|0|366|3170|293|81|22|2|6|0|
9e23ac36e8fe0f54d399d54b67b3c484c46eccb1|Tue Apr 28 21:49:29 CEST 2015|Suppress log output from tests in guava-testlib by redirecting it to files.|0|0|0|366|3170|293|81|20|2|5|0|
8ac7104b2383f40ccccaa18298022f130a72c113|Wed Apr 29 21:27:12 CEST 2015|Add RangeSet.asDescendingSetOfRanges() and RangeMap.asDescendingMapOfRanges(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=92378397|0|0|6|366|3176|293|81|21|75|6|2|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.RangeMap, newSymbol=com.google.common.collect.RangeMap.asDescendingMapOfRanges()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.RangeSet, newSymbol=com.google.common.collect.RangeSet.asDescendingSetOfRanges()]
935d24fad4f6cb0d70bb6045b0834a876b7adb35|Wed Apr 29 23:05:14 CEST 2015|Fixed typo in comment. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=92388286|0|0|1|366|3176|293|81|24|56|5|0|
67695ccef09650b2dfbe4a6d6f33d3c5d0f2a76b|Thu Apr 30 00:11:01 CEST 2015|Use getBytesInternal in HashCode.{hashCode, toString}. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=92395681|0|0|1|366|3176|293|81|22|21|5|0|
20a42756c477b03c0123870b763148f4a18bdc8e|Fri May 01 21:13:27 CEST 2015|Fix LongMath.checkedPow to correctly error out on large negative inputs, and fix LongMathTest to test a full range of long inputs.  See https://github.com/google/guava/issues/2036 . ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=92571001|0|0|1|366|3176|293|81|24|20|5|0|
40544b8942cdeadce0d1a0986696ef849ff4fb3d|Fri May 01 21:51:15 CEST 2015|Fix typo in Floats.max() javadocs.|0|0|1|366|3176|293|81|23|17|4|0|
4dac1d05549f6a1057a823aedec7f0e1f71a683b|Wed May 06 16:48:50 CEST 2015|Specify constant-time behavior for HashCode.equals(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=92925537|0|0|1|366|3176|293|81|19|20|4|0|
1ea3ff8fdeb285bb5c4fd1d3d5cc8781216d0a2c|Wed May 06 17:19:44 CEST 2015|Give people who have never used UnmodifiableIterator before a hint. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=92927557|0|0|1|366|3176|293|81|19|35|9|0|
4f7f6b4634387234578fe0a0a454b6d975783eec|Wed May 06 19:08:17 CEST 2015|Finally publish Lists.cartesianList to Guava. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=92936363|0|0|1|366|3178|293|81|23|67|7|0|
88853aca64ea245be0b4bc325b67754b5ea040ac|Wed May 06 19:21:25 CEST 2015|Remove some unnecessary checkNotNulls from BaseEncoding.|0|0|1|366|3178|293|81|22|20|4|0|
8da635118880351587de56de99f3988e1d466f2a|Fri May 08 17:52:05 CEST 2015|Don't rely on MessageDigest.isEqual() for constant-time evaluation in HashCode.|0|0|1|366|3178|293|81|19|20|7|0|
3407145dd77cad5a409583b19bbaf2ed1750e0df|Fri May 08 19:52:10 CEST 2015|GWT-related shuffling from internal change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=93144921|0|0|0|366|3178|293|81|21|2|5|0|
e15b12c85581128298a9e499d8b0655aa9b2a257|Mon May 11 19:56:55 CEST 2015|Properly use the expected-size factory methods in MultimapBuilder, instead of conflating capacity with expected size. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=93322785|0|0|1|366|3178|293|81|20|49|4|0|
9f5e84957ebe770949265c3eadd9ef355edc0e95|Mon May 11 21:57:24 CEST 2015|Add specialized slice support to ByteArrayByteSource. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=93334857|0|0|1|366|3178|293|81|20|44|8|0|
bd833b03a3b955c7c8107bf2be8930d297510eb6|Wed May 13 02:15:27 CEST 2015|Adding javadoc to com.google.common.collect.testing.Helpers.testComparator. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=93470413|0|0|0|366|3178|293|81|24|2|5|0|
a12990bf76c59305ff7b28ffbb2a90cdc367f688|Thu May 14 21:41:55 CEST 2015|Add a comment to AbstractStreamingHasher explaining why putString(CharSequence, Charset) is not overridden. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=93648231|0|0|1|366|3178|293|81|22|14|5|0|
97a90475292a4681c5f709b9e728cc01e716d5fb|Fri May 15 19:12:49 CEST 2015|Update public suffix list. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=93726186|0|0|1|366|3178|293|81|22|35|7|0|
3aa114e884ab1835d65122ee6474c287f64c3361|Fri May 15 23:38:29 CEST 2015|Deprecate MapConstraint and MapConstraints.|0|0|2|366|3178|293|83|21|59|6|0|
a33ec44061f7c986f86cadfe4306808ba4c80feb|Tue May 19 00:17:30 CEST 2015|GWTifies a few more concurrency related things to support delayed execution and futures with timeout. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=93930624|0|0|0|366|3178|293|83|25|2|7|0|
590036122e482c28affda893efd5e0e2e01732ee|Tue May 19 23:01:22 CEST 2015|Complete the migration of static analysis annotations to Error Prone ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94023780|0|0|0|366|3178|293|83|23|2|7|0|
e72e09f8516936c000f25118b0dead2adc8e3930|Tue May 19 23:35:29 CEST 2015|Add size-related methods to Byte/CharSource:|0|0|3|366|3181|293|83|20|54|5|0|
566b80d7e4f1822917c8a450ccda35fd5e9154aa|Tue May 19 23:46:40 CEST 2015|Use lazy init (single-check idiom) for MediaType.toString().|0|0|1|366|3181|293|83|20|61|5|0|
3446f7093562549d863ccb00edc2d5907d4038f4|Wed May 20 00:05:40 CEST 2015|Add usage example to MMPQ's class docs.|0|0|1|366|3181|293|83|21|45|8|0|
d7307d809756af7602f140f82692d652b27e5ce9|Wed May 20 19:13:19 CEST 2015|Simplify CharStreams.skipFully.|0|0|1|366|3181|293|83|21|15|5|0|
01d5493fa96a16e4217dd5c3d2e953fca0e93a94|Wed May 20 22:02:03 CEST 2015|Update travis-ci for new container based infrastructure and maven caching.|0|0|0|366|3181|293|83|21|2|4|0|
bab78fedb1fa6a2b519a69048aad9faf4e1c052a|Wed May 20 22:17:29 CEST 2015|Special case Futures.immediateFuture(null) to return a static constant since all null immediateFutures are indistinguishable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94118271|0|0|1|366|3181|293|83|20|61|8|0|
2fe6fd117fb75e01372506334fb408be0d46f327|Wed May 20 22:23:32 CEST 2015|Use Arrays.deepToString() to print arrays in MoreObjects.toStringHelper().|0|0|1|366|3181|293|83|24|13|7|0|
b52c926ad08f04f2d5c95e313cffaac6a9c28d9c|Thu May 21 18:06:22 CEST 2015|Make TestLogHandler GWT-compatible.|0|0|0|366|3181|293|83|20|2|5|0|
516a02f67b37e7ef2045faaa35124f104f844825|Thu May 21 19:01:02 CEST 2015|Enable tests that are newly runnable under GWT:|0|0|0|366|3181|293|83|24|2|5|0|
8b5e347fbbfa8b6287bd8913b418e2980625c777|Fri May 22 21:33:41 CEST 2015|Add special-file doc to isEmpty(). This is similar to what we already have on size/sizeIfKnown/length/lengthIfKnown. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94299611|0|0|2|366|3181|293|83|23|55|5|0|
64164e46013f0939a0e6539620c33588ced0e6cf|Tue May 26 19:44:11 CEST 2015|Suggest Multimaps.index from Maps.index -- both in its Javadoc and in its failure messages. Rewrite the Javadoc more generally. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94485597|0|0|1|366|3181|293|83|23|84|8|0|
505b14ab0a87d2663ae4d593e0affa9b902268b0|Tue May 26 21:43:53 CEST 2015|Deprecate Sets.newSetFromMap().|0|0|1|366|3181|293|84|26|57|8|0|
394b543cecd34825ea829102bb8c0c8b1f0f3037|Tue May 26 21:55:13 CEST 2015|Annotate lazily iniatialized fields of immutable collections with @LazyInit ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94498610|0|0|7|366|3181|293|84|26|75|6|0|
fb25083e4628ba4f648b80283d167b667fb0d09c|Wed May 27 16:54:27 CEST 2015|Annotate MediaType.toString with @LazyInit and remove volatile (which is unnecessary).|0|0|1|366|3181|293|84|22|58|5|0|
13f0d1624c1002d470383cdee7ec5958c7c1d3ff|Wed May 27 17:29:30 CEST 2015|Automated g4 rollback of changelist 94571347.|0|0|1|366|3181|293|84|22|59|8|0|
e1931d4392c825b923bc1a6a6310e5966625f120|Wed May 27 20:57:31 CEST 2015|Rollforward [] with the missing dep added.|0|0|1|366|3181|293|84|21|63|6|0|
1ad071f27ee0b96d5ca9e45bad7ae973e3a19e76|Wed May 27 21:50:13 CEST 2015|Annotate com.google.common.base.Converter reverse field with @LazyInit. It's safe to lazy init "reverse" field since the object it's pointing to is immutable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94598995|0|0|0|366|3181|293|84|23|2|7|0|
aa63148561009f5f4b4a07ea4174f3e8b09450bd|Wed May 27 22:24:38 CEST 2015|Reformat common.base with google-java-format, to 100 columns. A few changes by hand as discussed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94602205|0|0|29|366|3181|293|84|34|85|5|0|
40e74b7943eaf871ab3781661e155ecbf9a41527|Wed May 27 22:29:53 CEST 2015|Reformat common.primitives with google-java-format. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94602682|0|0|15|366|3181|293|84|29|38|5|0|
df2054b1bd40a1382a86c9796086c619045a4948|Wed May 27 23:09:30 CEST 2015|Automated g4 rollback of changelist 94598995.|0|0|0|366|3181|293|84|24|2|5|0|
df63c1841305fac43b6b4990df4a81de2ee66d6b|Wed May 27 23:17:44 CEST 2015|google-java-format com.google.common.hash ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94607659|0|0|18|366|3181|293|84|27|39|7|0|
fd29d0ef46498aae20a9b98c2e598168ff63bb99|Thu May 28 00:55:05 CEST 2015|Reformat collect.[A-I]* with google-java-format. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94617505|0|0|115|366|3181|293|84|74|189|19|1|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.ImmutableCollection.contains(java.lang.Object), newSymbol=java.util.Set.contains(java.lang.Object)]
cc9a6859088a105889c448f719757e7c5d04b4cc|Thu May 28 02:02:32 CEST 2015|Make Stopwatch's constructors package private. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94623624|0|0|1|366|3181|293|84|23|12|12|0|
cc65b4f51f110c01cf5a10c2966bac767b270327|Thu May 28 22:55:16 CEST 2015|In TypesTest, change the check for correct functioning in the presence of a SecurityManager. Previously we had a SecurityManager that refused Method.setAccessible except in a few well-known places, the intent being that one of the places it would refuse would be the use in Types.TypeVariableInvocationHandler that we wanted to test. But that proved to be fragile. Instead, we explicitly refuse that place, and we check that the refusal happened. This builds more knowledge of the implementation into the test, but should be more robust. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94699561|0|0|0|366|3181|293|84|27|2|10|0|
7da6133e7d4b5c7691e7031f412f3b1d557630fd|Thu May 28 23:49:12 CEST 2015|Start ConcurrentMapTestSuiteBuilder, adding a tester for putIfAbsent.|0|0|0|366|3181|293|84|24|2|11|0|
27e74e7aae5afc816887e29c77e05757bf3fe315|Fri May 29 01:01:43 CEST 2015|Add a tester for ConcurrentMap.remove(key, value). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94711404|0|0|0|366|3181|293|84|26|3|12|0|
161398088d6ff7dab5c0f4c9e33e02c92c14272e|Fri May 29 02:45:14 CEST 2015|Revert hack introduced in []|0|0|0|366|3181|293|84|25|2|7|0|
5a9636bff2add7ddc39d2a6cd995d8ac00bd8b38|Fri May 29 19:00:09 CEST 2015|Eliminate TestConcurrentMapGenerator, which isn't really buying us anything. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94766887|0|0|0|366|3181|293|84|23|2|8|0|
0773e1f33527e782da18b73e33dd9aed54a08c8d|Fri May 29 20:01:56 CEST 2015|Add a tester for ConcurrentMap.replace(K, V). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94772513|0|0|0|366|3181|293|84|21|2|8|0|
b9fdc929c6f19d8a4592643a637d9fd24e6976eb|Fri May 29 20:07:39 CEST 2015|Use ConcurrentMapTestSuiteBuilder to test CacheBuilder and its flavors ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94773095|0|0|0|366|3181|293|84|22|2|8|0|
1027abc546e85d679cb273f9a59b96b98277f883|Fri May 29 21:23:26 CEST 2015|Fix a bug where NavigableMapTestSuiteBuilder was not using NavigableMapTestSuiteBuilder on the descending map tests, due to an oversight discussed in [] ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94779653|0|0|0|366|3181|293|84|22|2|7|0|
924be3363a15007dd3888ad85e878591412e4a68|Fri May 29 22:29:18 CEST 2015|Add testers for ConcurrentMap.replace(K, V, V). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94784595|0|0|0|366|3181|293|84|22|2|6|0|
70622d7cff636ae14d35b529250db939ba273f5c|Fri May 29 22:51:44 CEST 2015|Add ConcurrentNavigableMapTestSuiteBuilder, which also applies the ConcurrentMap testers to the sub-map views. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94786659|0|0|0|366|3181|293|84|22|2|9|0|
2b9d1761e6f913cbe044f1b80033e555e1500539|Fri May 29 23:01:45 CEST 2015|Static import all Feature values (except sizes) when no names in the file are ambiguous. (Ambiguous names are cases like "SUPPORTS_REMOVE," a name used by both IteratorFeature and CollectionFeature.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94787622|0|0|0|366|3181|293|84|24|2|6|0|
f4aaf986810b8ed3d70665a72c650330c5b262d9|Mon Jun 01 20:39:17 CEST 2015|Replicate CL 94485597's uniqueIndex doc changes to FluentIterable. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94930940|0|0|1|366|3181|293|84|26|59|5|0|
93f2646608858620706b8293dda8236bb4346ca9|Mon Jun 01 23:51:20 CEST 2015|Deprecate ComparisonChain#compare(Boolean, Boolean).|0|0|1|366|3182|293|85|23|41|7|0|
b1bec6df36b82498ce1dc9c91dd5567d074a7808|Tue Jun 02 00:41:59 CEST 2015|Some enhancements for Futures.transform and Futures.catching  * extract a template method and 2 subclasses from CatchingFuture and ChainingListenableFuture.  This will allow us to eliminate asAsyncFunction() and 2 allocations per transform  * make CatchingFuture implement Runnable and save a Runnable allocation  * have CatchingFuture/ChainingListenableFuture clear all their fields on cancel, which should prevent pinning the transformers  * have rejectionPropagatingRunnable short circuit for directExecutor() which should save 2 allocations for users who prefer to pass directExecutor() explicitly  * have Futures.catching use the rejected execution exception logic when it makes sense|0|0|1|366|3182|293|85|26|69|10|0|
b7413f6197c78856b7f706c773f4b9a415e4e996|Tue Jun 02 00:59:34 CEST 2015|Dereference the future stored in the local, not the future stored in the field. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=94956002|0|0|1|366|3182|293|85|28|59|6|0|
3bea24c6ad264e9a450debee9808993bdaa25ea5|Tue Jun 02 21:20:57 CEST 2015|De-@Beta Stopwatch.|0|0|1|366|3182|293|85|21|10|8|0|
27dd26ec6876329a6c6bccecc6549939cb02e4c6|Wed Jun 03 19:15:42 CEST 2015|Grammar correction in RateLimiter javadoc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95117476|0|0|1|366|3182|293|85|21|17|5|0|
9ac7331cdf831adf55842cce6fd9563b09d4766f|Wed Jun 03 19:57:57 CEST 2015|Strip testNewTypeVariable from Guava. It really needs to run in its own VM, and this doesn't seem worth the trouble to set up in Maven. We'll continue to run it internally while we decide whether it's worth keeping. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95121754|0|0|0|366|3182|293|85|21|2|6|0|
27cb14f4d64cdffaae08190d7514e41dafabe42a|Wed Jun 03 22:18:05 CEST 2015|Rename AbstractCatchingFuture.running to "inputFuture." This matches AbstractChainingFuture. The "running" name was more appropriate in the days that it used to sometimes contain the fallback future. That was necessary for cancellation at the time, but now that's handled by our use of setFuture(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95134862|0|0|1|366|3182|293|85|22|56|7|0|
23ce3eb540003adf1095c550aefbcd02bb1f8c98|Wed Jun 03 22:43:00 CEST 2015|Aggressively null out references when invoking the transformation/fallback.|0|0|1|366|3182|293|85|23|63|7|0|
3df4c67da61c5fdda14db0e9789ac18a32fb3f31|Fri Jun 05 23:40:45 CEST 2015|Remove the test code from TypesTest that tries to ensure that Types.newTypeVariable functions correctly in the presence of a SecurityManager.|0|0|0|366|3182|293|85|23|2|6|0|
229e155dedf273a0547f166f80177664f32dfbc8|Fri Jun 05 23:45:41 CEST 2015|Put final on a couple methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95325599|0|0|1|366|3182|293|85|21|45|8|0|
fb60b16954881e517fdfb93db87c7025c87840ae|Mon Jun 08 18:01:38 CEST 2015|Add test for the complicated example in Guava issue #1342. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95442782|0|0|0|366|3182|293|85|24|2|8|0|
cc3b0f8dc48497a2911dfe31f60fe186b3fed8d4|Mon Jun 08 19:56:45 CEST 2015|Change Guava wiki links to new GitHub locations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95452934|0|0|87|366|3182|293|85|71|265|16|0|
6ac6e2a2d8d01e15cd77e3c3824b3764056878b7|Mon Jun 08 21:16:47 CEST 2015|Inline doRun(), which is no longer needed after the combine() rewrite. Make done() final. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95461156|0|0|1|366|3182|293|85|42|18|8|0|
9c848726d6b9778fe8649a26cbd82cb66043d403|Mon Jun 08 21:55:47 CEST 2015|Rewrite the AbstractFuture Javadoc. Link to Futures from ListenableFuture. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95464400|0|0|2|366|3182|293|85|22|58|6|0|
fe9c2ab0865e85793eceba59dd6c9dc6638bf50a|Mon Jun 08 22:14:52 CEST 2015|Miscellaneous minor doc fixes.|0|0|2|366|3182|293|85|22|55|11|0|
736f404aed944516aba96812ae0eab6781bf869a|Mon Jun 08 23:46:05 CEST 2015|Random collect javadoc improvements, including replicating the pseudo-deprecation information found on Lists.newArrayList for Sets.newHashSet. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95474959|0|0|2|366|3182|293|85|23|72|7|0|
d871deaba5b832cd60784595035cf3a305a63635|Mon Jun 08 23:54:12 CEST 2015|Try to teach users how to understand complex chained Ordering statements.|0|0|1|366|3182|293|85|22|52|8|0|
8f750ca2e373ebe8274e7d7ff8aab378929406df|Tue Jun 09 22:35:51 CEST 2015|directExecutor() scaretext, take 152.|0|0|1|366|3182|293|85|23|60|7|0|
2cf98c0fd9f520b38ea638e62ef042b5c6bcda90|Tue Jun 09 22:38:29 CEST 2015|Fix a race: If one input fails at nearly the same time and with the same exception as the *first* failure, we sometimes log the exception, even though it's already propagated into the output. The problem is that the first failure lets subsequent failures proceed before it registers itself in seenExceptions. It does register itself with setException(), but we don't have full atomicity because we have two sources of truth. (This is why we have a problem only when the first failure is involved: Other failures atomically manipulate seenExceptions.) The solution is for whichever caller initializes seenExceptions to propagate it with the value from setException(). This is a little messy but hopefully not too bad. (It comes with a small bonus: It happens to avoid allocating seenExceptions entirely if there is only one failure.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95568611|0|0|3|366|3182|293|85|27|59|5|0|
578a7944a7611b7433c05d5674fe390171004798|Wed Jun 10 01:01:47 CEST 2015|Javadoc generation fixes|0|0|0|366|3182|293|85|24|2|9|0|
e1ec3b363fb27208053fd9b6a8c079631e9af19c|Wed Jun 10 16:32:05 CEST 2015|Move cancellation propagation from cancel() to done().|0|0|3|366|3182|293|85|23|66|5|0|
d210c7af763d7045fa35034cab3b4151ae93686e|Wed Jun 10 17:04:41 CEST 2015|Add a warning about deadlocks. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95636626|0|0|1|366|3182|293|85|21|47|5|0|
76b76a8491d7e1cfe1f69ee00c796d907be3e8ef|Thu Jun 11 17:34:57 CEST 2015|Re-add create() methods with an int expectedInsertions parameter.|0|0|1|366|3184|293|85|20|19|8|0|
1e58f230c9ce4937241cbc866967d1bdca5553a7|Thu Jun 11 23:59:03 CEST 2015|Change link to OrderingExplained to GitHub location.|0|0|1|366|3184|293|85|20|55|6|0|
67862aee98a823bc8ce926e4599b1eb83fc695b1|Fri Jun 12 01:41:29 CEST 2015|Add missing @since 19.0. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95790743|0|0|6|366|3184|293|85|23|69|6|0|
a7e9bf049e6036cec29542befd4ee2495ccd7abb|Fri Jun 12 16:42:17 CEST 2015|Change the order of timeoutFuture.setException() and delegate.cancel(), which no one seems to depend on anymore. This allows us to rely on done() for almost all cleanup. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95839519|0|0|1|366|3184|293|85|24|62|10|0|
009c2139db52e058be5f3b237c40df36f90bfe5b|Fri Jun 12 16:45:04 CEST 2015|Update README.md to point to new GitHub Javadoc locations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95839673|0|0|0|366|3184|293|85|23|2|6|0|
0b22e5b3662340e30afdd0b6ef33bfff356c6fb3|Fri Jun 12 16:46:55 CEST 2015|Ignore CacheLoadingTest.testExpandDuringRefresh in open-source.|0|0|0|366|3184|293|85|21|2|7|0|
05e283065ac6a51f16a432d87be869c5d21db8cc|Sat Jun 13 17:48:05 CEST 2015|Scaretext for everyone! Followup to CL 95568320 and CL 95480161.|0|0|2|366|3184|293|85|24|66|11|0|
287c48c59c740892190a0858218b7383b14f1b98|Sat Jun 13 22:21:33 CEST 2015|Fix {@code} and {@link} in com.google.common that are either missing the @ completely or put it before the brace. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=95921937|0|0|2|366|3184|293|85|24|15|7|0|
dca232da2109097a0935ef9fa441a76ae7780ba8|Mon Jun 15 18:40:34 CEST 2015|&& -> & I have no benchmarks, but I'd argue that, based on our past benchmarks of similar situations, this should be our default move. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96014749|0|0|1|366|3184|293|85|22|54|6|0|
3d04a569461d2d4bd978d822b3e01007d2e4bfd6|Mon Jun 15 19:50:31 CEST 2015|Google Collections -> Guava ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96022158|0|0|1|366|3184|293|85|21|4|10|0|
49312a9249c1a34c262167bfeb47dea87242ea05|Mon Jun 15 23:31:20 CEST 2015|Override isHashCodeFast() to return true for a couple ImmutableSet implementations for which... well, hashCode() is fast. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96044185|0|0|2|366|3184|293|85|21|44|6|0|
a6ce7b511bff96f39c56e598143557dcff08db86|Tue Jun 16 02:58:47 CEST 2015|Automatically release snapshots to Maven and Javadoc/JDiff to gh-pages on push.|0|0|0|366|3184|293|85|22|2|5|0|
6315a434ab54c804c0a9d89434f14803ace52b64|Tue Jun 16 18:20:29 CEST 2015|Fix a lock ordering deadlock in CustomScheduler reported in https://github.com/google/guava/issues/2072|0|0|1|366|3184|293|85|19|49|9|0|
d675f3c0a3c96c6a2569a677f5a94c586d68d75f|Tue Jun 16 19:32:45 CEST 2015|Update .travis.yml encrypted username/password for oss.sonatype.org to use encrypted form of access token, which can be revoked. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96120709|0|0|0|366|3184|293|85|23|3|7|0|
f7048f587ea9e1cf3c6575e5918ef74eeb37b7c4|Wed Jun 17 19:04:46 CEST 2015|Avoid use of raw types.|0|0|1|366|3184|293|85|21|59|7|0|
3afb7b79ab5fcfecd85dc8f558ad8a1c579b3cbd|Thu Jun 18 17:43:35 CEST 2015|Mark GcFinalization as @J2ObjCIncompatible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96311707|0|0|0|366|3184|293|85|21|2|7|0|
8d6b948d4608bd16b777425ca4928cabcaf1aef4|Thu Jun 18 19:33:38 CEST 2015|Minor readability and coverage improvements to Utf8Test: - static import of Character constants - more thorough testing of invalid strings ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96321934|0|0|0|366|3184|293|85|19|2|5|0|
4db64ccfcdbb20a16c07dd651103e7db68d2fbb0|Thu Jun 18 19:51:50 CEST 2015|Permits common/{io,reflect,testing} packages to be transpiled by j2objc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96324276|2|0|1|366|3184|293|85|23|60|6|0|
9f90827427e8fe014399d684fc02c07065cdf27d|Thu Jun 18 23:14:41 CEST 2015|Remove references to SourceCodeEscapers from javadoc.|0|0|3|366|3184|293|85|20|14|7|0|
0c4e372fece2b313b27f680faaeb02832ddb0699|Thu Jun 18 23:31:51 CEST 2015|Make some more helper methods static, as suggested. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96347171|0|0|0|366|3184|293|85|20|2|5|0|
490b1923ac423d4e0063ef131595c8858dcb6016|Thu Jun 18 23:40:19 CEST 2015|Use static import for Character char constants. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96348182|0|0|1|366|3184|293|85|21|9|5|0|
6640609a10c02ad8708cff784417a47a9b4006a4|Fri Jun 19 00:23:11 CEST 2015|Add ImmutableMap.Builder.orderEntriesByValue. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96353128|0|0|3|366|3187|293|86|27|64|11|0|
7c1296bc9422a15d9971b62ef050f660df42fcf4|Fri Jun 19 00:55:18 CEST 2015|Replace a couple usages of Iterators.emptyIterator(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96356488|0|0|0|366|3187|293|86|28|2|6|0|
bafb3705b4539fdf6ae7cada2807054f81e5f383|Mon Jun 22 22:17:35 CEST 2015|Test EmptyContiguousSet.equals() more heavily, specifically with an argument that's a RegularContiguousSet. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96599243|0|0|0|366|3187|293|86|21|2|6|0|
d3ee94d93f08ff7cde4c3bbc1ee10fd0feaf73c3|Mon Jun 22 23:03:23 CEST 2015|Sort imports. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96604490|0|0|2|366|3187|293|86|23|14|6|0|
e9a23fe5ef043723c428a47ca96049306fcf813d|Tue Jun 23 05:59:48 CEST 2015|Remove usage of Truth from Guava Testlib.|0|0|0|366|3187|293|86|32|2|8|0|
44d99fc5f83f06f577f61cf63569604d3142d96a|Wed Jun 24 18:57:31 CEST 2015|Recognize that the reason for an early completion might be cancellation rather than exception. This fixes the bug "com.google.common.util.concurrent.AbstractFuture$Cancellation cannot be cast to com.google.common.util.concurrent.AbstractFuture$Failure"|0|0|1|366|3187|293|86|26|49|5|0|
90aada3600274f4aba576f682a936f8cd7eb4492|Wed Jun 24 19:35:07 CEST 2015|Minor changes to Utf8 as part of internal change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96788388|0|0|1|366|3187|293|86|24|10|5|0|
c62b07df3a68126e1cf549c85c35f4e55178990b|Wed Jun 24 20:22:50 CEST 2015|Resolves reference cycles in com.google.common.collect for J2ObjC translation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96793584|0|0|37|366|3187|293|86|39|165|20|0|
63b5409df16866e5408f31fc2987dea6cfb716fa|Wed Jun 24 20:41:52 CEST 2015|Group annotation dependencies at the top. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96795721|0|0|0|366|3187|293|86|34|3|17|0|
317e95410d73576336e5fec90724b2d4f61b86ac|Thu Jun 25 00:23:12 CEST 2015|Adds (unused) method to Utf8Test as part of internal change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96817586|0|0|0|366|3187|293|86|25|2|16|0|
cb0cf6a40e815e662fb63438dbbfebaf6d9dcb80|Thu Jun 25 18:52:56 CEST 2015|Add Apple Passbook media type ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=96881592|0|0|1|366|3187|294|86|21|69|17|0|
51b5094d7f71f97e868a01d94f2647efe2d7307a|Mon Jun 29 23:56:13 CEST 2015|Call out MinMaxPriorityQueue failure mode. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=97167980|0|0|1|366|3187|294|86|23|43|6|0|
7f1ee318345f9099145e4b07b942f0997ce364ce|Tue Jun 30 18:47:16 CEST 2015|@GoogleInternal a helper method that's only used by an @GoogleInternal test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=97235390|0|0|0|366|3187|294|86|20|2|8|0|
29810272f1bbd76d9c11537b1e28df721fe0d660|Tue Jun 30 18:56:53 CEST 2015|Suppress FuturesGetCheckedIllegalExceptionType, a forthcoming Error Prone error. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=97236165|0|0|0|366|3187|294|86|21|2|8|0|
ee2abfb80839ce9d58ad3253c443e3473a8eda17|Tue Jun 30 23:20:12 CEST 2015|Shuffling from internal-only change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=97263526|0|0|0|366|3187|294|86|21|2|8|0|
5bab9e837cf273250aa26702204f139fdcfd9e7a|Wed Jul 01 01:04:44 CEST 2015|Use key insertion order in HashBiMap.|0|0|1|366|3187|294|86|22|52|8|0|
01aa613e2132bc3bfcce03c6b2b4d5c3596713f2|Wed Jul 01 18:57:23 CEST 2015|Explain the relationship with java.util.Optional, in some detail. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=97336621|0|0|1|366|3187|294|86|23|10|7|0|
54efc6afdd08c1b1d7d16fc07310e8b25de8e31d|Wed Jul 01 20:28:58 CEST 2015|Check that size and iteration are consistent with isEmpty after map.clear().  BiMapTestSuiteBuilder failed to catch an error of this type in HashBiMap, though other tests fortunately caught it. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=97345369|0|0|0|366|3187|294|86|19|2|5|0|
56990330cadcf1773b14334366348f85e06935e2|Wed Jul 01 20:45:46 CEST 2015|Test Collection.clear() to ensure that iteration and size() are consistent with isEmpty(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=97347352|0|0|0|366|3187|294|86|19|2|8|0|
612aaa17a6cd84000779d01a03de37bcac00a1f3|Tue Jul 07 16:47:40 CEST 2015|Use j2objc-annotations instead of local annotations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=97671363|0|3|2|366|3187|294|86|23|69|7|0|
ee50c94031ae9449d52802d03241791cc2964194|Tue Jul 07 22:10:45 CEST 2015|Added missing @throws tag to ConcurrentHashMultiset.removeExactly.|0|0|1|366|3187|294|86|22|57|7|0|
4fbb165ebf208d75100d5d47f56750d247f7d181|Wed Jul 08 02:18:07 CEST 2015|Add static factory methods to CharMatcher equivalent to the existing constants.|0|0|1|366|3201|294|86|24|14|6|0|
15284f71149325e6f389512cf5ba946031ea835f|Wed Jul 08 17:28:41 CEST 2015|Eagerly check for an appropriate exceptionClass constructor during calls to Futures.getChecked. This way, callers that pass a bad exceptionClass find out unconditionally instead of only when their Future fails.|2|0|1|366|3201|294|86|30|65|6|0|
62c3f0a82c32cda85df28f77d08fc7967e52aa6f|Wed Jul 08 19:25:42 CEST 2015|Automated g4 rollback of changelist 97776570.|0|2|1|366|3201|294|86|25|60|9|0|
cbe012e7d5c8315a4418b3ea2be1e288a07a8ee9|Wed Jul 08 21:25:42 CEST 2015|Run the tests from the class instead of those from some other class.|0|0|0|366|3201|294|86|26|2|8|0|
43804c29191423a33e5cf24a36ae7920a64ddad6|Wed Jul 08 23:32:09 CEST 2015|Stop stripping lowasser's username. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=97814212|0|0|32|366|3201|294|86|39|141|12|0|
f1ffbe598cec1c91a87926fb05df4b3176c3232c|Fri Jul 10 15:52:00 CEST 2015|Eagerly check for an appropriate exceptionClass constructor during calls to Futures.getChecked. This way, callers that pass a bad exceptionClass find out unconditionally instead of only when their Future fails.|1|0|1|366|3201|294|86|38|65|6|0|
00adacb0ad4f35d08cfe1927b7fc1e9df075aa9e|Mon Jul 13 15:48:58 CEST 2015|Fix guava test breakage due to GWT internal changes.|0|0|0|366|3201|294|86|23|2|6|0|
a91e6f2f18e7b5a9e72d4d782e11a111729112fb|Wed Jul 15 20:43:30 CEST 2015|Update Guava's README.md to add release info.|0|0|0|366|3201|294|86|20|2|9|0|
b7f275422d25cb592eecfe37b86aa7c1aa9a4059|Thu Jul 16 14:29:05 CEST 2015|Resolves J2ObjC reference cycles in eventbus. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=98393529|0|0|2|366|3201|294|86|21|72|5|0|
5c35173581c89a684e499652d9840798b0fd57f7|Fri Jul 17 00:38:57 CEST 2015|Don't require an exception to be thrown on a no-op putIfAbsent if put is unsupported.|0|0|0|366|3201|294|86|19|2|5|0|
799f5952d9d6aac782f9256936cbe61c2d088935|Fri Jul 17 00:42:35 CEST 2015|Add missing @throws tags to Verify.|0|0|1|366|3201|294|86|19|9|6|0|
5e4e5eee5d5df8804db49ddc596682e7910220b8|Fri Jul 17 01:35:37 CEST 2015|Use raw types in ImmutableSet.copyOf(EnumSet) magic.|0|0|2|366|3201|294|86|21|48|6|0|
9a50815df26be7416be0fac489e29feee7a3c220|Fri Jul 17 21:49:11 CEST 2015|Dummy change to test something. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=98514770|0|0|1|366|3201|294|86|22|37|5|0|
5c981c7f47bc4a3e30870dcadbf092328d4b13fc|Mon Jul 20 15:58:10 CEST 2015|Do not require an exception to be thrown on a no-op putIfAbsent if null is unsupported. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=98636371|0|0|0|366|3201|294|86|20|2|7|0|
19de0d57cad063a5952dc2f33a573cb8ed0494ff|Wed Jul 22 20:18:48 CEST 2015|Add maven-central badge to Guava README. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=98851664|0|0|0|366|3201|294|86|22|2|5|0|
26342f6fe1f8b629a2ce1bdb3ef872f84a7e960a|Thu Jul 23 02:01:33 CEST 2015|Work around a type inference change in javac|0|0|1|366|3201|294|86|20|52|5|0|
31fc19200207ccadc45328037d8a2a62b617c029|Thu Jul 23 11:00:34 CEST 2015|Introduce tryParse function to Longs which accepts radix parameter. This makes it consistent to Ints which support this function as well. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=98915993|0|0|2|366|3203|294|86|24|22|5|0|
3b46e4c7725a828c79df9d3abbece1e9aae7d98b|Fri Jul 24 19:03:30 CEST 2015|Add mention of Guava 19 release candidate in README. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99037572|0|0|0|366|3203|294|86|21|2|5|0|
f0c1ccba7e35bf46585f3fa4d1aaef00dc11c4ee|Fri Jul 24 19:12:43 CEST 2015|Fix cycles com.google.common.cache. Adds @J2ObjCIncompatible to com.google.common.util.Debugger. Stop whitelisting other packages that pass the cycle test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99038555|0|0|1|366|3203|294|86|19|87|5|0|
1cb299387932d97e38eef63f52e5b20dd6943ab6|Mon Jul 27 17:54:09 CEST 2015|Give directExecutor a better toString() (currently it is just "INSTANCE") ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99183090|0|0|1|366|3203|294|86|23|52|6|0|
05daed8a64abd271faf51962cf505d5ce60b1001|Mon Jul 27 23:51:34 CEST 2015|Optimize the GWT TimeUnit library in terms of performance.|0|0|0|366|3203|294|86|20|2|6|0|
755b2a8a851a15e7d9fbe32fc8d99e7670717631|Tue Jul 28 14:23:12 CEST 2015|Use Ascii.truncate() now that our copy of Guava contains it. Actually, I think we could have done this back in CL 97895305, if not earlier.|0|0|2|366|3203|294|86|21|52|8|0|
caac80a4f9772ae544c98ac195e8a7432d6a9c9c|Tue Jul 28 19:12:16 CEST 2015|Adding a new MediaType for "application/manifest+json", defined in http://www.w3.org/TR/appmanifest/ ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99289128|0|0|1|366|3203|295|86|21|55|7|0|
3d7163a70404eb1f5771fd05ecb710fa142dabf5|Tue Jul 28 20:55:31 CEST 2015|remove special Error handling from JdkFutureAdapters.  no need to turn Errors into deadlocks.|0|0|1|366|3203|295|86|22|50|6|0|
aaf8ce209dcb8cc03f1e73cf0962f876f45679ef|Wed Jul 29 14:07:47 CEST 2015|Remove a stray @Beta annotation on a test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99365620|0|0|0|366|3203|295|86|24|2|9|0|
b39c3dad1b213d78170f688f9dac930f904c5735|Wed Jul 29 19:56:26 CEST 2015|Make a private inner class final. Prevents Mockito.spy(). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99391056|0|0|1|366|3203|295|86|21|12|6|0|
d394ad4710a658c1ccf8bace32ff94f2bd10517a|Wed Jul 29 21:31:48 CEST 2015|Suppress some Guava tests for c.g.c.base, and update others. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99400844|0|0|0|366|3203|295|86|24|1|5|0|
6221f96f36240f5b0296ec2910306ac326af3590|Thu Jul 30 18:23:40 CEST 2015|Fixes J2ObjC reference cycles in c.g.c.util.concurrent. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99482445|0|0|9|366|3203|295|86|26|90|6|0|
f49015a77c5eb39587687a6c529280fecd33ceef|Thu Jul 30 21:18:10 CEST 2015|Change the type of ImmutableSortedMultiset.naturalOrder to be more liberal. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99501054|0|0|1|366|3203|295|86|21|43|7|2|BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.collect.ImmutableSortedMultiset.reverseOrder(), newSymbol=com.google.common.collect.ImmutableSortedMultiset.reverseOrder()],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.collect.ImmutableSortedMultiset.naturalOrder(), newSymbol=com.google.common.collect.ImmutableSortedMultiset.naturalOrder()]
648c0fe661f328a2cb1785c85e70d9e4fbdf01ba|Thu Jul 30 21:41:37 CEST 2015|Noninvasive patch for negative results from size().  See https://github.com/google/guava/issues/2108 for more details. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99503151|0|0|1|366|3203|295|86|20|86|7|0|
06720a55796344906d2e35ba2dd737260c25b9be|Thu Jul 30 22:14:53 CEST 2015|Javadoc update to reflect generic type change. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99506351|0|0|1|366|3203|295|86|24|43|6|0|
dde3133a3b9b84e9349849af6ec5a62da67ec706|Wed Jul 22 01:43:21 CEST 2015|Mark MoreExecutors.DirectExecutorService and decorator classes final to prevent Mockito.spy usage ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99526523|0|0|1|366|3203|295|86|20|48|7|0|
7a3389afb9f97fe846c69e46d106ac1dbf59f51d|Fri Jul 31 01:48:26 CEST 2015|Fix for TypeToken[Map<?, String>].getSubtype(ClassToInstanceMap.class)|0|0|2|366|3203|295|86|21|60|7|0|
6ef4550c792a47b91ff7fa60a60a7a2765178eb1|Fri Jul 31 16:17:44 CEST 2015|- Stop manually stripping @MediumTest. MOE has stripped it automatically for a while. Remove end-of-line comments that were interfering with stripping in this particular case. - Strip @Flaky with strip_line instead of begin_strip/end_strip.|0|0|0|366|3203|295|86|23|2|8|0|
528f0c5a0eada088eb29c9b3882b1d083f4d209d|Fri Jul 31 19:42:37 CEST 2015|Add notes about circular buffer to EvictingQueue javadocs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99585760|0|0|1|366|3203|295|86|22|36|6|0|
0f7c6c8e5f4ce82a7dbe89afea568093f02d79ce|Fri Jul 31 21:21:58 CEST 2015|Provide concurrency-safe toArray() implementations for Android VMs (at least Gingerbread, probably others) that need it. This fixes LocalCacheTest.testExpand_cleanup on Android: [] ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99595440|0|0|1|366|3203|295|86|20|82|6|0|
2fdf32abe4c8f03b2de52a531c2e87a660ef28f6|Fri Jul 31 21:56:46 CEST 2015|Work around Android toArray() bug by doing what we arguably should have done in the first place -- calling containsElementsIn(...).inOrder() instead of converting both arguments to List.|0|0|0|366|3203|295|86|23|2|6|0|
c92fd867770ed68e59a79a9f73ccd991e032301b|Fri Jul 31 22:05:05 CEST 2015|Migrate from EasyMock to Mockito. This lets the test work on Android. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99598924|0|0|0|366|3203|295|86|22|2|6|0|
1d16deaafeeac53b84f3b63bb75b5cb202f4d547|Fri Jul 31 23:19:32 CEST 2015|Loosen the tests around the regex: It's OK for the regex to match something that turns out to be invalid. This makes the test pass on Android.|0|0|0|366|3203|295|86|20|2|4|0|
2b8b6fd9f3da35b0a7c28316a8167092bafd6179|Sat Aug 01 03:18:46 CEST 2015|Update public suffix list. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99624314|0|0|1|366|3203|295|86|19|35|6|0|
d1bf05846f63faf0d63b375dfc88eca00e11ebbf|Mon Aug 03 18:09:45 CEST 2015|Suppress tests under Android: - EasyMock, since class extension doesn't work there - BloomFilter tests where Android runs out of memory - a couple other tests where Android appears to disagree about String.format rounding|0|0|0|366|3203|295|86|22|2|6|0|
c5a469757a46757302030da1a00cedc22c6afa6a|Mon Aug 03 20:36:33 CEST 2015|Suppress tests on Android. - BigInteger and BigDecimal appear to be buggy on Android (at least Gingerbread, where I'm testing now, since we claim to work with it). - Some c.g.c.math utilities appear to be failing there, presumably because of other Android bugs, but I suppose it's conceivable that there's something wrong with our code. Ideally we will investigate further at some point, perhaps after testing on newer versions of Android.|0|0|0|366|3203|295|86|23|2|9|0|
0fa6eac941722326e776f000089d4065b66354ae|Mon Aug 03 23:24:09 CEST 2015|Update FluentIterable to explain its relationship with Stream. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99760803|0|0|1|366|3203|295|86|21|57|5|0|
273f6961656c6c5512ea8be49a0086fb0f6a29e7|Tue Aug 04 02:49:14 CEST 2015|Eliminate our custom emulations of java.nio.charset.Charset and java.nio.charset.StandardCharsets. The classes will be including in GWT itself in the next release. To get our code to compile, we must change to build against a GWT snapshot. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99780060|0|0|0|366|3203|295|86|23|2|6|0|
5cc546f8688ded5fe8c0ceb5d36a631f00b758c2|Tue Aug 04 19:03:22 CEST 2015|Finish explaining the Stream equivalents. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99831803|0|0|1|366|3203|295|86|22|62|6|0|
8ff490732db7a71adcf561171b5444ddc61c8990|Thu Aug 06 03:00:19 CEST 2015|Reformat with google-java-format (a few hand corrections necessary). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=99979179|0|0|80|366|3203|295|86|63|223|12|0|
9bf99b4d77339af124b8595028f4e9b1756917ca|Thu Aug 06 18:34:16 CEST 2015|Give MapMaker the same workaround as Cache for Android's concurrency-unsafe toArray() implementation. The fixes the corresponding Android test for MapMaker. Also, use that implementation for values() (for which we have no test, but it looks likely to be vulnerable, too). Finally, include an android.com link in case the shutdown of Google Code invalidates the existing bug link. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100037556|0|0|2|366|3203|295|86|40|100|6|0|
1670960e088fe9c1e78b5d7dd7c0505741bf2988|Thu Aug 06 20:07:04 CEST 2015|Spray @SuppressUnderAndroid on everything related to suite builders and nested test classes. Also: - Work around Android toArray() bug in UnmodifiableCollectionTests. - Stop referring to NavigableMapTestSuiteBuilder / ListTestSuiteBuilder in comments of ForwardingNavigableMapTest.java / ListsTest.java. The reference impedes the import stripper. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100047098|0|0|0|366|3203|295|86|108|2|7|0|
9e56ef17c335319d21f1f2c454176c9d32687a59|Thu Aug 06 20:48:30 CEST 2015|Makes sure guava only uses public GWT APIs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100051360|0|0|0|366|3203|295|86|42|2|6|0|
1cabf8aac191b2628205e84b30ecafb1e88c2a3e|Thu Aug 06 22:57:17 CEST 2015|Make EvictingQueue GWT compatible. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100063347|0|0|2|366|3203|295|86|22|51|6|0|
703ef758b8621cfbab16814f01ddcc5324bdea33|Fri Aug 07 14:06:14 CEST 2015|Fix an ancient bug in Iterators.cycle: Once we spawn a second iterator, we shouldn't remove from the first one. Android caught this bug (by returning true from hasNext() rather than by throwing ConcurrentModificationException as the new test does). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100115203|0|0|1|366|3203|295|86|26|52|7|0|
77dbca52620d360e15c0e4ef4ac71d6e0146298a|Fri Aug 07 17:45:01 CEST 2015|Remove unneeded "emulated=true" to fix open-source GWT tests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100126746|0|0|1|366|3203|295|86|27|40|8|0|
46b7091ca5c39464f67e2bb74b7fc48798fe98be|Fri Aug 07 18:03:36 CEST 2015|- Use newFastestQueue in ConsumingQueueIterator so that we get ArrayDeque instead of LinkedList on the server. - Use newFastestQueue in BinaryTreeTraverser, bringing it one step closer to GWT compatibility. - Rename newFastestQueue to newFastestDeque. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100127987|0|0|4|366|3203|295|86|21|52|5|0|
9ec5f9cda354997424ca4012345f383390a4a403|Mon Aug 10 16:08:10 CEST 2015|Fix https://github.com/google/guava/issues/2125 by having all the AbstractService delegate classes forward their toStrings() to their outer impls. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100274992|0|0|4|366|3203|295|86|24|57|6|0|
462200278acc8e0224496a8f05ad3480dcdc679f|Mon Aug 10 19:51:43 CEST 2015|Suppress tests under Android. - ByteStreamsTest.testNewDataOutput_writeChars may show a legitimate bug, whether in our code or in the Android library. - CloserTest.testCreate looks up the JDK version. We should update this to look up the Android version if applicable. - Android seems to have trouble with:   - nested test classes   - test classes without default constructors (which are necessarily constructed in suite() methods).|0|0|0|366|3203|295|86|26|2|7|0|
02da7eaa207b2f31080427c88291f40c872cf6da|Mon Aug 10 20:20:41 CEST 2015|Document why we're using a custom annotation instead of Android's built-in @Suppress. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100295547|0|0|0|366|3203|295|86|22|2|6|0|
f884739190740aa4a73a74f1a445bc1bce382659|Fri Jul 10 20:48:25 CEST 2015|Whoops, FluentIterable.cycle() does have a decent Stream equivalent when the source is something with a stream() method.|0|0|1|366|3203|295|86|22|57|10|0|
9c3ea24fe4d409f6ffe2ca4d7942ba69ce02b333|Mon Aug 10 21:00:50 CEST 2015|Suppress tests under Android. - I've suppressed nearly everything that might be calling Type.equals(). At some point, we can try to figure out whether we can interoperate with Android's Type.equals() just as we do with JDK7's. Or we can at least be more surgical in our suppressions; this CL sprays them everywhere. - I've suppressed a bunch of URLClassLoader-using tests. I'm not sure that custom URLClassLoaders make a lot of sense on Android. - I've suppressed some suite() methods, as I haven't managed to get the test-suite builders working under Android. - ForwardingObjectTesterTest may show limitations of ForwardingObjectTester under Android, or it may a sign that we just need to call setAccessible or something. But since ForwardingObjectTester is just a package-private testing utility, I haven't dug into it. - I've commented a test in RateLimiterTest that may fail for similar reasons in newer versions of Android.|0|0|0|366|3203|295|86|27|2|5|0|
cadd7237e484818b55be97883cc5d83f0f0bd6a7|Mon Aug 10 21:02:12 CEST 2015|Loosen up our nefarious Entry tests to permit an exception so long as the nefarious entry can't harm the underlying collection. If a nefarious Entry really wants to throw an exception, we can't stop it, since it could also do it from getKey() or getValue().|0|0|0|366|3203|295|86|24|2|5|0|
0f4bd484fc6e1b779da9a4178c336f278e81d746|Thu May 07 16:02:32 CEST 2015|Fix ByteArrayByteSource.slice to handle the case where offset + length > Long.MAX_VALUE.|0|0|1|366|3203|295|86|22|48|4|0|
2b244625a3d452460ae04b865c6b1893fe98a78a|Wed Jul 29 21:58:46 CEST 2015|Use MultimapBuilder instead of a custom Multimap subclass in ImmutableMultimap builders. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100504590|0|0|2|366|3203|295|86|23|62|5|0|
655c55c1bd99b610e40f1ca3973edac3aec60486|Thu Aug 13 05:49:52 CEST 2015|Fix a typo in an identifier in FreshValueGenerator. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100543465|0|0|0|366|3203|295|86|24|2|6|0|
b2fbacd11615d7d381d598e6c25d13bed0b49d28|Thu Aug 13 16:11:35 CEST 2015|Discourage use of CheckedFuture. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100572172|0|0|2|366|3203|295|86|21|58|7|0|
fd2ed183d135fe0fa80b8aded6c56926160760cc|Thu Aug 13 16:41:35 CEST 2015|Do intelligent sizing in ImmutableMap.Builder.put(Iterable<Entry>). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100573858|0|0|1|366|3203|295|86|23|56|7|0|
047addc8b86b71b77f19850500097c113f4f543a|Thu Aug 13 17:48:52 CEST 2015|Automated g4 rollback of changelist 100504590.|0|0|2|366|3203|295|86|24|58|5|0|
b1c37ad75c31fe7cc7f57f2b5427f44ccf2c0fd5|Thu Aug 13 18:59:04 CEST 2015|Fix SlicedByteSource.sizeIfKnown() to work in the case where offset + length > Long.MAX_VALUE. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100584971|0|0|1|366|3203|295|86|23|50|7|0|
70b6e02a7c8ada33d89472ccba88ca9c55a22689|Fri Aug 14 19:33:20 CEST 2015|Test that the Future returned by schedule() returns the correct value.|0|0|0|366|3203|295|86|23|2|6|0|
623fe38bb7151e3afd3c539a67b06be9c0b663c3|Mon Aug 17 21:37:35 CEST 2015|Automated (partial) g4 rollback of changelist 100047098. (only the testlib parts, and excluding UnmodifiableCollectionTests, where we still need a workaround for Android's toArray() bug)|0|0|0|366|3203|295|86|69|2|6|0|
3a604328c28919480caea60e754debb8ec84b75b|Mon Aug 17 22:28:32 CEST 2015|Update public suffix list. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100855861|0|0|1|366|3203|295|86|30|40|7|0|
8fafcc4cfa302f75d70d3943b26ece226c45418e|Tue Aug 18 23:08:18 CEST 2015|Import Animal Sniffer annotation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=100960079|0|0|1|366|3203|295|86|20|53|6|0|
c94fe82560e55debf0778af2db287e091d01b419|Wed Aug 19 14:16:04 CEST 2015|Internally rewrite LexicographicalOrdering to accept a Comparator.|0|0|1|366|3203|295|86|20|40|5|0|
1f2b8775c6b29a89261cef3ddf33523b043c9056|Wed Aug 19 16:11:15 CEST 2015|Convert much of Guava to Truth by using Refaster.|0|0|0|366|3203|295|86|52|2|5|0|
a34e7053d0b1db281893e0ec430f0d27ffa8e85e|Wed Aug 19 19:09:03 CEST 2015|(These changes apply ONLY to our Google-internal Android-specific copy of Guava.)|1|0|2|366|3203|295|86|38|60|6|0|
062b226bad9d86479a23329e8c40cbcfc833d21c|Fri Aug 21 20:51:16 CEST 2015|Clarify why we're logging a specific failure.|0|0|1|366|3203|295|86|21|51|11|0|
01105d161ceb753ac93d467c2859814b7b121ce0|Tue Aug 25 14:22:28 CEST 2015|Roll back the eventbus portion of CL 100292134.|0|0|0|366|3203|295|86|21|2|5|0|
07a277bb9ab6dacd4bdbeee49024918be4159cdb|Tue Aug 25 14:23:32 CEST 2015|Roll back most of the rest of CL 100047098 (the javatests/... parts, since I got java/... in 100850485).|0|0|0|366|3203|295|86|46|2|5|0|
f95284485db2f50f5e88c95348d737ca1c6b0c58|Tue Aug 25 19:20:20 CEST 2015|Use MultimapBuilder instead of a custom Multimap subclass in ImmutableMultimap builders. (Retry of CL 100504590, which was rolled back in CL 100578593. The problematic target has been fixed.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=101478691|0|0|2|366|3203|295|86|32|64|7|0|
ee7ff4e772ba4273e298cd50ddce1333e8d654ba|Thu Aug 27 20:52:47 CEST 2015|Avoid boxing ints in ConcurrentHashMultiset Preconditions checks|0|0|2|366|3203|295|86|25|54|6|0|
878097bc15a46e0f9cebcf27016fe9bb2c0109f1|Thu Aug 27 23:49:36 CEST 2015|Advertise Converter.from() a little better, for Java 8 users. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=101721565|0|0|1|366|3203|295|86|20|55|10|0|
6b3a586b9f4a0ad3936fbeace6c66f940aa7530f|Mon Aug 31 20:42:43 CEST 2015|A few small improvements to ImmutableSet method docs. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=101956976|0|0|1|366|3203|295|86|23|45|6|0|
7f357b8db9dc1c0564c99689e29f5f927e623ad7|Tue Sep 01 01:05:24 CEST 2015|Make Splitter.on(String) redirect to Splitter.on(char) if the String has one character. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=101985625|0|0|1|366|3203|295|86|21|12|7|0|
bc26f3c3b47acef8bba45ac4a0d30250d14063b1|Wed Sep 02 21:51:50 CEST 2015|Mark ClassPath as compatible with j2objc. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=102170255|0|0|1|366|3203|295|86|21|52|7|0|
ef814effebd9ac91dc7d4b89ee14d46782bd6b62|Thu Sep 03 18:41:19 CEST 2015|Escaped instance of symbol "'" within a url so that more apps detect the full URL. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=102250495|0|0|1|366|3203|295|86|22|19|8|0|
e45dc70105840d3816a6a1f08c9b6365ab7d8aee|Thu Sep 03 20:05:56 CEST 2015|Remove unnecessary "unused" suppressions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=102260279|0|0|6|366|3203|295|86|26|103|7|0|
3f1d2e422a12a29e5ac7425dc323c4b99470f0d2|Thu Sep 03 22:55:58 CEST 2015|Allow slicing a ByteSource starting at an offset that is >= the source's total size.|0|0|2|366|3203|295|86|26|54|7|0|
70a8f94e0690a51bc8b106c563a09cc4435d5cfb|Tue Sep 08 22:17:07 CEST 2015|Ensure that ByteStreams.skipFully/skipUpTo don't skip more bytes than remain in the stream.|0|0|2|366|3203|295|86|22|50|6|0|
9d094dcf64f6e7b51306c47689160025169306ea|Wed Sep 09 13:10:01 CEST 2015|Fix two javadoc typos in Forwarding[Loading]Cache ("delegete" -> "delegate"). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=102646747|0|0|2|366|3203|295|86|20|45|7|0|
faeac10f40ccac6d851983b1d88bb95a6c37d3ae|Wed Sep 09 18:20:52 CEST 2015|Deprecate Hasher#hashCode(), implementations of this method return a hashCode of the Hasher object itself and not the hashed data, deprecating this would help warn users of making this mistake.|0|0|1|366|3204|295|87|23|7|7|1|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.hash.Hasher, newSymbol=com.google.common.hash.Hasher.hashCode()]
37aa9ba6c22fa8285f137b34c309ef288374c35c|Fri Sep 11 23:24:30 CEST 2015|Try to uncorrupt the Converter javadoc. https://memegen.[].com/5619060859994112|0|0|1|366|3204|295|87|21|48|6|0|
8238e01ac71a9ee16a64e581e96801d488d06fdd|Tue Sep 15 18:17:40 CEST 2015|Open source the HMAC hashing libraries (@since 20.0). Clone the underlying Mac instance (if possible) during newHasher() invocations. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=103098597|1|0|1|366|3212|295|87|22|19|9|0|
417170e76e39b20849c9d4b36d40b9cbff48c17a|Thu Sep 17 23:04:17 CEST 2015|Point users directly to catchingAsync instead of requiring them to read the withFallback deprecation advice, too. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=103323620|0|0|1|366|3212|295|87|22|49|8|0|
49d8026ac5cc8d1d0acd4bd79f0a22f5b8fcb8cf|Fri Sep 18 17:41:51 CEST 2015|slight error message enhancement requested in Guava bug #2158 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=103386220|0|0|1|366|3212|295|87|20|51|6|0|
54dc1b0b18f5f77e675101ddb48e9ddfb1f1666f|Mon Sep 21 19:09:38 CEST 2015|Add copy/paste for Gradle projects that want to use Guava. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=103556414|0|0|0|366|3212|295|87|20|2|7|0|
d3d57fb445d239f2045de1d65d0fc10fda6bed9f|Wed Sep 23 21:16:40 CEST 2015|Test the current propagation of cancellation (but non-propagation of interruption) from the input Future to the transformed Future. Arguably we should test this for methods like catching+catchingAsync and perhaps others. Maybe we already do; these tests are kind of a mess: https://github.com/google/guava/issues/2091 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=103769878|0|0|0|366|3212|295|87|22|2|8|0|
508681f2a02cee7865a9b7ef82d8d64dbdf8cd6a|Thu Sep 24 20:23:12 CEST 2015|Remove unnecessary string literal concatenation. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=103863840|0|0|1|366|3212|295|87|24|48|8|0|
c115c594de2f63bc710260cfadbe44b3b0e6ba25|Fri Sep 25 20:08:16 CEST 2015|Disable cancellation causes by default and make them enableable via a system property.|0|0|1|366|3211|295|87|21|55|8|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.newCancellationCause(), newSymbol=]
611004986159134f4c45122279b5a93cb14bf3bf|Fri Sep 25 23:09:40 CEST 2015|Make TreeRangeSet Serializable. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=103974562|0|0|1|366|3211|295|87|23|50|6|0|
1269ba4833c8ed134444963069bb3b664c945fcf|Tue Jul 21 13:27:54 CEST 2015|Presize the ArrayList/LinkedHashMap to which ListFuture/MapFuture adds its final results. See [] for motivation (ignore the fact that I accidentally used List#newArrayListWithExpectedSize there... oops!). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=104098308|0|0|1|366|3211|295|87|22|56|7|0|
1667927759ca66835d3154c99d25fa4799e507d6|Mon Sep 28 17:14:29 CEST 2015|Move many implementations out of Futures.java (https://github.com/google/guava/issues/2091). Mostly I've moved them to new classes, but I've also moved rejectionPropagatingExecutor to MoreExecutors (unmodified except for a new null check).|4|0|3|366|3211|295|87|25|65|8|0|
40c67d60770905d5dbb3a4966f492b95e9052886|Tue Sep 29 02:06:32 CEST 2015|Update the Public Suffix List. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=104153251|0|0|1|366|3211|295|87|23|36|6|0|
43081bd66bd9a4881a91001abb7d62855de3e4cc|Tue Sep 29 16:48:24 CEST 2015|Test rejectionPropagatingExecutor under GWT. This would have caught the bug since fixed in CL 104101156. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=104199812|0|0|0|366|3211|295|87|20|2|8|0|
60fe0bb1bf3257779474af8fd80a59cb9a2f402a|Tue Sep 29 17:16:43 CEST 2015|Delete AbstractFuture.newCancellationCause(). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=104201894|0|0|1|366|3211|295|87|23|57|7|0|
b01e8df8a7ffdcd3d52c960aadb044fefaafc8ba|Tue Sep 29 21:40:30 CEST 2015|Fixes to FluentIterable: -add from(E[] elements) (unmodifiable) -open source of() -open source of(E, E...) -soon-to-deprecate of(E[]) (modifiable) ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=104226690|0|0|1|366|3214|295|87|22|54|7|0|
a9f8b899c07a33c2203b4e6cf84861646952aeed|Wed Sep 30 17:04:51 CEST 2015|Bump version of maven-dependency-plugin. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=104298531|0|0|0|366|3214|295|87|22|2|6|0|
8fbb7ac8d31aed6ce9dfb6cf8cbe0d426820fb91|Thu Oct 01 23:39:22 CEST 2015|Update README to include link to guava-testlib Javadoc and to reference 19.0-rc2 as the latest 19.0 release candidate. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=104437358|0|0|0|366|3214|295|87|19|2|8|0|
91b5db6570568265aec0a4636023c0e0925661ba|Fri Oct 02 22:54:35 CEST 2015|Upgrade local variables for Iterables.filter and Iterators.filter to indicate the input predicate keeps the result (not filter out elements from result). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=104528163|0|0|2|366|3214|295|87|22|66|6|0|
83923892da4dc396e497c956f00cb4c577d941ec|Thu Oct 08 23:03:55 CEST 2015|Remove more possible static-init deadlocks (https://github.com/google/guava/issues/1977).|0|0|6|366|3214|295|87|25|64|6|0|
e7aeee328e1d6b42fea2c0971b46b9ad649e2398|Thu Oct 08 23:24:03 CEST 2015|Make MutableClassToInstanceMap serializable.|0|0|1|366|3214|295|87|24|52|7|0|
2025f478bc3b9f2ecca4918f80ec4a6878788afd|Fri Oct 09 02:27:18 CEST 2015|Whitespace changes from MOE release? ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105015253|0|0|0|366|3214|295|87|22|2|6|0|
80b78c8ba68e32963e1684787a10b7f78c91e81a|Fri Oct 09 19:50:04 CEST 2015|1. Omit sun.security.* methods from our Android tests. That package isn't available there (at least at compile time, presumably at all).|0|0|0|366|3214|295|87|20|2|6|0|
0cdfef602bc04513efe9a7a4c2821d71f9dcf00d|Fri Oct 09 20:06:04 CEST 2015|Rewrite Iterables.toArray to work correctly in the presence of concurrent modification (https://github.com/google/guava/issues/1558). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105071914|0|0|1|366|3214|295|87|19|59|7|0|
68bc047eb60d7f200f1190878d2f0c067bb9b842|Fri Oct 09 21:07:40 CEST 2015|Address https://github.com/google/guava/issues/1543 by explicitly despecifying evaluation order. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105077540|0|0|1|366|3214|295|87|22|58|8|0|
e3142eea5770e267524c280c8fbb23be130fac5a|Mon Oct 12 21:14:01 CEST 2015|Link from SettableFuture to AbstractFuture, and do some more rewriting and reformatting. Motivation: https://github.com/google/guava/pull/2184 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105234717|0|0|1|366|3214|295|87|20|12|5|0|
bb5673f60ce9dcda1c228b0d0e2ce2485468f965|Mon Oct 12 21:20:07 CEST 2015|Attempt to address https://github.com/google/guava/issues/2131 by removing the if (count != 0) check. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105235264|0|0|1|366|3214|295|87|20|81|7|0|
ea11557f1dcbb4a06abe213d9234784c5b01e094|Mon Oct 12 23:21:19 CEST 2015|Cache Ordering.natural().nulls{First,Last}(), since those are very commonly used. https://github.com/google/guava/issues/1451 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105247018|0|0|1|366|3214|295|87|23|42|6|0|
728a990f9b455bbebcaaf1111c766101893135f6|Tue Oct 13 19:06:59 CEST 2015|Emphasize the differences between of(E[]) and from(E[]). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105322014|0|0|1|366|3214|295|87|22|57|5|0|
b5c5f028e0b5fe178fca45a71b9b1e16e0b403e5|Tue Oct 13 19:56:31 CEST 2015|Remove @GoogleInternal from GWT emulation of ForwardingSortedMultiset. ForwardingSortedMultiset itself has been GWT-compatible since CL 43412779. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105327321|0|0|0|366|3214|295|87|22|2|6|0|
c7f97f64a32dd742461e22b1524d5ff03e844260|Tue Oct 13 20:09:33 CEST 2015|Don't strip the @GwtIncompatible from Guava. Doing so will cause problems if we change how we generate GWT supersource. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105328892|0|0|1|366|3214|295|87|22|57|7|0|
7eb6b3de60691344f52234184a44f22eb2eefde0|Thu Oct 15 06:53:06 CEST 2015|Update public suffix list. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105479296|0|0|1|366|3214|295|87|22|37|5|0|
69a75be1f1f8b15a03fe8aaf985aceadc7a10f41|Thu Oct 15 16:49:57 CEST 2015|Reformat much of util.concurrent.|0|0|39|366|3214|295|87|35|99|6|0|
73da46a848acc327b956d6ef6263647fd6457d2d|Thu Oct 15 17:57:21 CEST 2015|Add tests that demonstrate the difference between FI.from(E[]) and FI.of(E[]). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105513154|0|0|0|366|3214|295|87|23|2|8|0|
63360f3f588a4a30d2d2e43ee6ec3f724d38b546|Fri Oct 16 15:32:20 CEST 2015|For public Guava only, rely on the GWT compiler's built-in @GwtIncompatible stripping instead of our custom stripping. The custom stripping dates from the days before GWT 2.6.0 added it to the compiler: http://www.gwtproject.org/release-notes.html#Release_Notes_2_6_0_RC1 This change has been possible for a while, since Guava has required GWT 2.6.1 since Guava 18, but we hadn't had the motivation. Now we do: This lets us avoid checking the stripped sources into Github, which lets us avoid mixing stripped and handwritten sources, which lets us simplify our MOE inverse mappings. Internally, we will continue to rely on the custom stripper for now.|0|0|0|366|3214|295|87|37|2|6|0|
bffcd0a6edc5febbb7543128f4789e968f099ab7|Mon Oct 19 16:29:37 CEST 2015|Deprecate FluentIterable.of(E[]). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105753905|0|0|1|366|3214|295|88|19|61|11|0|
34914345ea2c1ea55fca0f72efd962022a3e8dd2|Mon Oct 19 22:04:23 CEST 2015|Update the comment link for the Apple Passbook media type. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105787155|0|0|1|366|3214|295|88|18|58|5|0|
1c9236d4ea9267b460ed6af65b5b3c325f56999b|Tue Oct 20 00:10:30 CEST 2015|Make warning warningy. Fixes Guava issue #2153. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=105800506|0|0|1|366|3214|295|88|18|56|7|0|
bde81523d94478e145583eb5b1687c8aad280a1b|Tue Oct 20 00:32:57 CEST 2015|Add a note about finding the first non-null element in an iterable and with varargs.|0|0|1|366|3214|295|88|18|12|6|0|
1a1b97ee1f065d0bc52c91eeeb6407bfaa6cbea1|Tue Oct 20 06:13:28 CEST 2015|Fix Iterables.removeIfFromRandomAccessList to handle Lists for which set() throws IAE (for example, if the list disallows duplicate elements).|0|0|1|366|3214|295|88|18|57|6|0|
8740e5ca66b27ac0a0aeb28854ac4b89333f9cbd|Wed Oct 21 20:16:55 CEST 2015|Improve Throwables.propagate javadoc|0|0|1|366|3214|295|88|20|12|6|0|
27bd02b0599639288b565fd976c6b22d2459e872|Thu Oct 22 00:57:49 CEST 2015|Link to wiki. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106007357|0|0|1|366|3214|295|88|18|45|6|0|
c071822d399b5c0e066790067d575c6a56740762|Fri Oct 23 14:25:58 CEST 2015|Warn about stringConverter()'s very surprising behavior for Longs, Ints and Shorts. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106139124|0|0|3|366|3214|295|88|18|25|5|0|
44a2592b04490ad26d2bc874f9dbd4c1146cc5de|Fri Oct 23 18:28:10 CEST 2015|Fix RegularContiguousSet.intersection to handle singleton results.|0|0|1|366|3214|295|88|18|44|8|0|
5b9f5ef77666d2e1ffe5489d503facee83133d99|Fri Oct 23 18:41:24 CEST 2015|Have Cache.stats() warn that stats might be untracked (zero). Addresses Guava issue #2178. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106154194|0|0|1|366|3214|295|88|19|57|6|0|
2be61aa4ac0427a36c70ee75728b91d4bc7e246f|Mon Sep 07 16:40:43 CEST 2015|Stop stripping Error Prone @ForOverride from Guava. (We still need to strip @LazyInit, which hasn't yet been released publicly.) ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106159338|0|0|3|366|3214|295|88|19|57|6|0|
ff7e92eb82e83b3da3b01ece5a0150c7d2f11c3d|Fri Oct 23 21:23:30 CEST 2015|Port a small optimization made to a copy of ByteStreams upstream.|0|0|1|366|3214|295|88|18|16|8|0|
d76cd8770c519d3341c91fb01aeb2b0e4026ab24|Fri Oct 23 23:46:29 CEST 2015|Automated g4 rollback of changelist 105235264.|0|0|1|366|3214|295|88|20|85|5|0|
cd3cc46a37e1dc005e2ad4ca3cc28ebb4b9a99ae|Mon Oct 26 18:59:23 CET 2015|Suppress "non-varargs call of varargs method with inexact argument type for last parameter." ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106315392|0|0|0|366|3214|295|88|21|2|6|0|
42f98108422f92cb6620d6f22ff78d7ce491d76e|Mon Oct 26 19:48:32 CET 2015|Eliminate the hacks that we needed in order to use ClassValue and Unsafe on Android. Now we tell Proguard to ignore those classes (since Unsafe is actually available and both have fallbacks anyway).|0|1|2|366|3214|295|88|19|60|6|0|
3197768314b6f9e0b7078d40176c8b9220415db5|Mon Oct 26 21:23:07 CET 2015|Rename SuppressUnderAndroid to "AndroidIncompatible," since we treat it just like GwtIncompatible: stripping, not @Suppress-style suppression. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106329942|0|0|0|366|3214|295|88|32|2|5|0|
e4dec2136f396f462de9f31c035f04a3686f6cdf|Mon Oct 26 21:25:29 CET 2015|Replace one use of String.split() with a Splitter to reduce memory allocations. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106330171|0|0|1|366|3214|295|88|22|25|5|0|
32c0b4c9c9badde90f4c49cbee72f12786a49d3d|Tue Oct 27 15:53:18 CET 2015|Suppress the main flaky tests we've seen since running Guava-Android tests. This probably isn't a complete list, but it's a good start. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106397380|0|0|0|366|3214|295|88|38|2|7|0|
1d927f9b55109cb284bbdbf0ab055f676d2821b3|Tue Oct 27 16:49:08 CET 2015|Migrate users from c.g.c.base.Objects to MoreObjects. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106401177|0|0|1|366|3214|295|88|20|43|7|0|
345c7f98d9474ceceb66c442e225440784123681|Tue Oct 27 17:05:33 CET 2015|Another flaky test. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106402571|0|0|0|366|3214|295|88|18|2|5|0|
242f8147210d0beec6f8222ce84caa7b47fa8e17|Tue Oct 27 17:21:23 CET 2015|Revert unintended Objects->MoreObjects migrations. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106403843|0|0|1|366|3214|295|88|17|43|7|0|
bc913b7d0ab3b230943fb666b3d05be56aa7a6f6|Tue Oct 27 17:33:21 CET 2015|Suppress the MapMaker equivalent of the Cache test suppressed in CL 106397380. The test is flaky. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106404785|0|0|0|366|3214|295|88|18|2|5|0|
8c412a725f91ccf05fc5231ce2cdae99141edc8e|Tue Oct 27 19:10:58 CET 2015|Re-apply wildcard translation fix. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106415574|0|0|2|366|3214|295|88|20|62|6|0|
e73befa763b968c1d016ff700b9da4b2b8032b37|Tue Oct 27 21:01:11 CET 2015|Yet another flaky test. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106426307|0|0|0|366|3214|295|88|18|2|9|0|
3cabeeefe50d93a91f3e1b98f725de33e0f9c73c|Tue Oct 27 22:59:26 CET 2015|Another another flaky test. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106438348|0|0|0|366|3214|295|88|18|2|5|0|
c341403876b50134ab47a4c5f85630a2c88ba9ed|Wed Oct 28 16:29:47 CET 2015|Suppress more flaky tests, plus a few that I'm guessing will also be flaky (because they have nested loops over our integer candidates). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106498617|0|0|0|366|3214|295|88|17|2|5|0|
37746d4569b434ec1fcec6854bb8b29904ac2172|Wed Oct 28 18:14:41 CET 2015|Another flaky test. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106508082|0|0|0|366|3214|295|88|17|2|5|0|
f6186e3be52ad5118e5efa787f0ce5cd03013278|Thu Oct 29 01:06:40 CET 2015|Pick a clearer word to describe target.|0|0|1|366|3214|295|88|18|13|5|0|
57cfd334a6bd2830e8971101a925bf5c4198cc72|Thu Oct 29 13:54:40 CET 2015|Adding SOAP 1.2 media type. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106586330|0|0|1|366|3214|296|88|18|61|5|0|
b949116fbccc42f90e96c9278c3593c9903a32be|Thu Oct 29 18:21:06 CET 2015|Flag another flaky test. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106606046|0|0|0|366|3214|296|88|17|2|7|0|
d00572edf1c42f9fc9d2419a615588404efd656a|Thu Oct 29 19:42:15 CET 2015|Fix deletion date for Objects APIs to be two years since the release of 18.0.|0|0|1|366|3214|296|88|18|12|5|0|
dfea713ebb421181f287fbd51c0d581892a17a5d|Thu Oct 29 22:00:33 CET 2015|Suppress new CollectionIncompatibleType Error Prone check by casting incompatibly-typed argument to query methods in generic collection types. This will enable us to make this pattern an error, preventing future occurrences of this bug.|0|0|0|366|3214|296|88|20|2|6|0|
98744349daa4c32fd07ecc5f6010863c825e5fbd|Thu Oct 29 22:09:45 CET 2015|Reduce size of "large bloom filters" test...it's causing OOMEs ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106629533|0|0|0|366|3214|296|88|18|2|6|0|
6b0e07b84a7a442965c2c85f0e1ea108b6f0c257|Fri Oct 30 13:49:08 CET 2015|Improve docs. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106684213|0|0|1|366|3214|296|88|18|46|6|0|
41c3a220300dd8e8b6e41f7089875c98a14cb7d9|Fri Oct 30 18:37:00 CET 2015|Fix buggy test identified by CollectionIncompatibleType. The test was calling get(class) instead of get(typeToken). The test still passes, since it was expected a null return value -- exactly what it gets for a key that isn't present. I've also added containsKey() and entrySet().contains() checks to verify that the null value really is present. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106703971|0|0|0|366|3214|296|88|17|2|5|0|
b79fa921fe418f7f105e8bb9d96b6e9ae23598c9|Fri Oct 30 23:22:24 CET 2015|Suppress new CollectionIncompatibleType Error Prone check by casting incompatibly-typed argument to query methods in generic collection types. This will enable us to make this pattern an error in [], preventing future occurrences of this bug.|0|0|0|366|3214|296|88|20|2|6|0|
ea53e2a4fe1511cd9f552ba7d9bf42af5d372671|Sat Oct 31 12:17:47 CET 2015|Eliminate some CollectionIncompatibleType errors that were suppressed by CL 106598613. The errors are harmless in this case, but we might as well make sane calls. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106759168|0|0|0|366|3214|296|88|23|4|5|0|
0cd37337a227dd00c0634305ddad0b37599022c7|Sat Oct 31 12:18:59 CET 2015|Suppress new CollectionIncompatibleType Error Prone check by casting incompatibly-typed argument to query methods in generic collection types. This will enable us to make this pattern an error in [], preventing future occurrences of this bug.|0|0|0|366|3214|296|88|19|2|6|0|
50abd28024b494a585b41890191099c11a2a5461|Mon Nov 02 21:01:19 CET 2015|Fix lastIndexOf reference in BooleansTest.|0|0|0|366|3214|296|88|17|2|6|0|
8b8a060a134055c46149ccb369e5ce83a8bf29a2|Tue Nov 03 18:33:21 CET 2015|Reduce Bloom filter size again to reduce (eliminate?) flakiness. (In fact, CL 106839287, while it claims to remove a value that's "no longer meaningful," seems to have made the flakiness worse. This fits with the comments on the CL that suggest it has effects -- specifically, an increase in wall time. Since that CL, this test has been failing 100% of the time instead of just the vast majority of the time, though it's possible that the timing is a coincidence.) This test has also been causing problems for our coverage build:|0|0|0|366|3214|296|88|16|2|5|0|
37b5f69eecee2350f765ed1d613914e78f514e9a|Wed Nov 04 00:11:24 CET 2015|Suppress another flaky test. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106983717|0|0|0|366|3214|296|88|17|2|7|0|
557a51f3ac19cf4b2ffbcb32354152c88643398d|Wed Nov 04 03:10:30 CET 2015|Make some methods in guava-tests static. Fixes #2216. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106999599|0|0|0|366|3214|296|88|21|2|6|0|
bd0ff5e4fdb97904fca84d57792fddc3f7d96862|Wed Nov 04 03:12:00 CET 2015|Make methods in CycleDetectingLockFactoryBenchmark static Fixes #2215. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=106999688|0|0|0|366|3214|296|88|21|2|7|0|
08127e3110bd7ea8e6eb84fccaed501455394f63|Wed Nov 04 03:23:31 CET 2015|Make MultisetNavigationTester.totalSize static. Fixes #2214. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=107000422|0|0|0|366|3214|296|88|19|2|5|0|
f506c13369d250027dfe9d5ee09695c839d64270|Wed Nov 04 03:42:23 CET 2015|Make CycleDetectingLockFactory.lockStateChanged static. Fixes #2213. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=107001430|0|0|1|366|3214|296|88|19|60|4|0|
107078903eaf1898ad0986257e69444378c13bf1|Wed Nov 04 06:02:35 CET 2015|Add warning/scare text to MD5 and SHA1 hash functions. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=107007414|0|0|1|366|3214|296|88|17|17|5|0|
acb83ead07974893aa37d5e30fe8c4e1bf814241|Wed Nov 04 22:25:26 CET 2015|Implement CharSource.asByteSource(Charset).|1|0|2|366|3215|296|88|22|63|6|0|
86daa5957a113a729dcfc75365de889cbe200a1c|Fri Nov 06 04:35:30 CET 2015|Remove no-longer-needed suppression method. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=107200850|0|0|0|366|3215|296|88|18|2|6|0|
97d14313b8cd6725232f2458dce376571d81bdc5|Fri Nov 06 19:34:09 CET 2015|Start running the tests for guava-testlib under Android. This revealed the usual minor problems and also a new test bug in ForwardingWrapperTesterTest: The sample buggy forwarding class was buggy in *two* ways instead of the intended one. Not only did it forward to the wrong method in one case, but it also reversed the order of parameters in all cases. Android happens to test its methods in a different order than the JVM, so it detects the reversed parameters first. I've fixed this by fixing the parameter order. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=107246813|0|0|0|366|3215|296|88|19|2|7|0|
987230520c1871fd196df1d7a685813d3680b28f|Fri Nov 06 23:13:35 CET 2015|Suppress another test that's flaky on Android. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=107265666|0|0|0|366|3215|296|88|17|2|5|0|
d3d3c98dcf1cd356c5afe1e5345b1398d5d1835c|Fri Nov 06 23:54:07 CET 2015|Revise CL 103553690's scaretext, and propagate it to Cache.|0|0|1|366|3215|296|88|19|55|5|0|
c5b947f94fa2e9cfc8981e85b66b3bcbbda8a66b|Mon Nov 09 16:57:38 CET 2015|Document the behavior of transform(Async) if the input fails. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=107384495|0|0|1|366|3215|296|88|18|52|6|0|
e809a66d3a851cc39bbde3774806ea99e15d7bab|Mon Nov 09 21:16:40 CET 2015|Explain relationship with juf.Function. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=107409616|0|0|2|366|3215|296|88|16|49|5|0|
e20bfcfa976182e4f435807ae0c58e7707fefa75|Tue Nov 10 02:31:16 CET 2015|Implement FarmHash's Fingerprint64 in Java. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=107440675|2|0|1|366|3216|296|88|21|26|7|0|
ce57ab2a17f6c04afadfb98c42f99a550b877316|Sun Nov 08 13:44:52 CET 2015|Suppress another flaky test. I've seen 3 failures in the past 2 weeks. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=107682920|0|0|0|366|3216|296|88|19|2|8|0|
f5ccc73b907631c3e7084f5ca281b61340abedae|Fri Nov 13 15:37:42 CET 2015|Fixes missing parenthesis in javadoc for addCallback in Futures.java|0|0|1|366|3216|296|88|18|55|5|0|
2c735d8e347c429ba4cf97c255e0793ed87e0cb5|Fri Nov 13 16:59:58 CET 2015|Another flaky test. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=107780748|0|0|0|366|3216|296|88|18|2|5|0|
0ff281075eee2af8e87d14857911c89a681dfc20|Sat Nov 14 16:24:23 CET 2015|Update Public Suffix List. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=107852605|0|0|1|366|3216|296|88|18|37|6|0|
eef1c0b22f32fd966f19b3c3f049a113b992fe4c|Mon Nov 16 17:02:47 CET 2015|Add a third AtomicHelper strategy to abstract future|0|0|1|366|3216|296|88|18|54|5|0|
2eb1d507c0bc088c58115758e6ff00d56c94263b|Mon Nov 16 20:46:16 CET 2015|Some prep for making SleepingStopwatch extensible someday. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=107961123|0|0|1|366|3216|296|88|19|19|5|0|
71e57ee88a921c820d44897c3e9f5593709f8cf8|Tue Nov 17 05:04:13 CET 2015|Add toString() overloads for all of the singleton enums in c.g.common.primitives ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=108004576|0|0|11|366|3216|296|88|24|39|11|0|
8dc7b6fd4168a0d984262d1254cdfc2c350bae97|Wed Nov 18 23:27:17 CET 2015|Adds documentation to various Sets and Maps factories to discourage their usage. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=108181363|0|0|2|366|3216|296|88|21|86|9|0|
daf4349567d344e72fce935aacbb68857327e3ca|Wed Nov 18 23:56:30 CET 2015|Remove import for java.util.Formatter since it's needed only for the javadoc. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=108184450|0|0|1|366|3216|296|88|19|10|7|0|
04ed59121f88861eb24d59de0a0c66aa5400c748|Fri Nov 20 17:25:48 CET 2015|Restore import for java.util.Formatter. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=108345794|0|0|1|366|3216|296|88|17|9|7|0|
4362a4529306ea43e177fae2d0457e794dd77cd6|Mon Nov 30 19:53:15 CET 2015|Fix calls to contains(Object) and get(Object) that pass a value of apparently the wrong type. Tighten up some generics in other cases to make the type, which was correct after all, look more correct.|0|0|2|366|3216|296|88|18|60|6|0|
69a42c5e6fcdba03e1445a8eb9acad7177c6a714|Mon Nov 30 19:59:12 CET 2015|Add @CheckReturnValue to more BaseEncoding APIs. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=108994823|0|0|1|366|3216|296|88|18|20|10|0|
0a686a644ca5cefb9e7bf4a38b34bf4ede9e75aa|Mon Nov 30 22:30:59 CET 2015|Ensure the correct removal notification is published.|0|0|1|366|3216|296|88|19|83|5|0|
f8fb8c005386fed668ade679bb1469355fddc4f7|Tue Dec 01 21:23:45 CET 2015|Remove TODO. We're satisfied with the current behavior. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109112840|0|0|1|366|3216|296|88|19|55|6|0|
a87b7038cdc5b59169943ad7af71317ad8454d4c|Thu Dec 03 16:28:54 CET 2015|Delete InputSupplier and OutputSupplier from Guava. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109306705|0|2|1|364|3214|296|86|19|15|6|2|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.io.OutputSupplier, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.io.InputSupplier, newSymbol=]
c85eacce7d0358d0489d93ef60a4e7cd79aea080|Fri Dec 04 01:29:55 CET 2015|Add subSet and subMap methods to Sets and Maps (respectively) which use Ranges to construct the views. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109360209|0|0|2|364|3216|296|86|20|91|9|0|
1d651423555d8317d3b7ca299bef95a1e52a56ea|Fri Dec 04 21:03:06 CET 2015|Add @Beta annotation to new subSet/subMap methods. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109435892|0|0|2|364|3216|296|86|21|93|12|0|
3f825ffd9d4485afeb70bb73fa10daf2facf0893|Fri Dec 04 22:19:28 CET 2015|Update README to reference 19.0-rc3 as the latest release candidate. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109442368|0|0|0|364|3216|296|86|20|2|6|0|
82810968135e9ac4c9120f44b0936d478492066e|Mon Dec 07 18:31:17 CET 2015|Remove support for deprecated GWT Dev Mode (but continue to support Super Dev Mode).|0|0|0|364|3216|296|86|17|2|5|0|
16850211f730ea37a040ab46dc2c25821048b02a|Mon Dec 07 20:45:33 CET 2015|Preparation for j2cl in com/google/common/collectmathprimitives. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109604218|0|0|0|364|3216|296|86|17|2|6|0|
22d76943fcc5effee612cc12e89b7027ccc27aba|Mon Dec 07 23:28:18 CET 2015|Shuffling from internal-only change. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109621456|0|0|0|364|3216|296|86|18|2|7|0|
0fd7953ccc7a6746cd646ef96f067aea3cae6bdb|Fri Aug 21 14:09:15 CEST 2015|Better documentation for an Android test suppression. Matcher probably isn't intended for cases in which the subject string is being mutated. We probably don't need to test this case at all, but I've kept it around for now and just explained why it's kind of unfair to begin with. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109688628|0|0|0|364|3216|296|86|18|2|5|0|
57c01464116fc758b7d1a7f4e355a4edd91ce752|Tue Dec 08 17:18:28 CET 2015|Document that regex bug has been fixed in recent versions of Android. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109689421|0|0|0|364|3216|296|86|17|2|7|0|
00772bafbd858eb32ab5ffc6ea6a67197354ae16|Tue Dec 08 22:28:12 CET 2015|Remove type parameters from IterableSubject, MultisetSubject, and MultimapSubject.|0|0|0|364|3216|296|86|18|2|7|0|
1950bd3e86b9c0f7caba0772cca1d252c900a9bb|Wed Dec 09 16:45:11 CET 2015|Suppress testGoodFastHash32 under Android, as it is flaky there. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109792217|0|0|0|364|3216|296|86|17|2|6|0|
36ab578eb78c92e9ca0a302800f437c7cf08efef|Wed Dec 09 18:20:02 CET 2015|Document that bug affecting LongMathTest.testDivNonZeroExact() has been fixed in recent versions of Android. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109800032|0|0|0|364|3216|296|86|16|2|6|0|
a87dfb2aced2da2250d279b6d4a804650a0d6ee2|Wed Dec 09 18:26:51 CET 2015|Instead of skipping testDivNonZeroExact entirely under Android, skip only the problematic cases. Android bug: https://code.google.com/p/android/issues/detail?id=196555 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109800696|0|0|0|364|3216|296|86|17|2|6|0|
dca69d597725d9270159951a805375070fd46b6c|Thu Dec 10 19:21:56 CET 2015|Re-suppress testDivNonZeroExact, which, like testDivNonZero, is too slow. It's been flaky since I turned it back on. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109911520|0|0|0|364|3216|296|86|17|2|5|0|
bbac0656b2da4ef4aaca040d6caa4d76d927df7f|Fri Dec 11 17:05:21 CET 2015|Upgrade Guava to use Truth 0.28 for its tests. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109995862|0|0|0|364|3216|296|86|17|2|5|0|
e5070042c85e764062cfcdf48943ae8feffe0867|Fri Dec 11 17:28:19 CET 2015|Skip cases in which checkedMultiply() fails on Gingerbread (because of an Android bug that has since been fixed). I would ideally also be unsuppressing the test now, but it's sometimes slow enough to be flaky, so I'm leaving it suppressed. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=109997357|0|0|0|364|3216|296|86|17|2|8|0|
55573e6f04c4d1c1f131f9d7b88306264713e3f8|Fri Dec 11 19:31:36 CET 2015|Update README to reference 19.0 as the latest release.|0|0|0|364|3216|296|86|17|2|6|0|
621ce7fe1057d8b826093037c58b35bfa4fa6368|Fri Dec 11 19:44:20 CET 2015|Open source com.google.common.graph into Guava. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110008126|16|0|0|375|3327|297|86|27|62|6|0|
2fa06edd823eaa29cb6a5af3e98f296ec1ec0356|Fri Dec 11 20:35:30 CET 2015|Prepare Stats et al and Quantiles for beta release in Guava 20.0. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110013555|6|0|0|385|3414|298|86|25|28|7|0|
1b7e2844d82c1114c208bb98ee851f1aade328cc|Fri Dec 11 23:12:56 CET 2015|Adds to PairedStats toByteArray() and fromByteArray() to facilitate (faster) serialization. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110027472|0|0|2|385|3416|297|86|21|19|5|1|BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.math.Stats.BYTES, newSymbol=]
fa31c1eb06783cf3431d1712d181dc7800207713|Fri Dec 11 23:22:03 CET 2015|Hardcode the expected value to work around Android UTF_16 bug: https://code.google.com/p/android/issues/detail?id=196848 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110028408|0|0|0|385|3416|297|86|18|2|5|0|
11e6cd4de99bc3c131f26e995f9b3065cf8689f9|Sat Dec 12 01:46:09 CET 2015|Add package-info.java for com.google.common.graph. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110041898|0|0|0|385|3416|297|86|17|2|7|0|
d28d3487c295331a0b0c72bff41f1ccf0fde1719|Sun Dec 13 07:24:19 CET 2015|Update Guava's package-info.java files to point at github instead of googlecode. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110088488|0|0|0|385|3416|297|86|23|2|6|0|
e8167d6059f9bf0bc4679bd8ae62608d340a1f7d|Sun Dec 13 13:57:36 CET 2015|Skip JUnit 4 test under Android. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110097819|0|0|0|385|3416|297|86|21|2|5|0|
1b6b439d8335321a6f4b86af95cb49937b386c75|Mon Dec 14 15:06:58 CET 2015|Make a slight tweak to the way we calculate means in StatsAccumulator. We pull out a variable for (value - mean) instead of computing it twice. This also means that we no longer need the old mean to compute the change in sumOfSquaresOfDeltas, we only need the new mean, so we can update mean directly instead of storing nextMean. We end up with the same number of temporary variables and the same calculation but one subtraction fewer and (perhaps more importantly) we do the computations in a more natural order. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110147656|0|0|1|385|3416|297|86|18|17|5|0|
dff906257e001decaa061c33f8b1c1916606232d|Mon Dec 14 18:08:20 CET 2015|Make AbstractFuture#done protected.|0|0|6|385|3417|297|86|18|55|6|0|
7e4db4ec8193fc251b549f31ba50dc7f4919b7fc|Mon Dec 14 20:06:44 CET 2015|To generate random hashable things, use Random instead of Object hash codes.|0|0|0|385|3417|297|86|19|2|5|0|
888fba24b94fc0538a28d6f7ee667a043afc4356|Mon Dec 14 22:21:23 CET 2015|Document Predicate vs. Java 8 issues. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110185504|0|0|1|385|3417|297|86|18|10|5|0|
bd899fd215b9b60db94f6b1156ebca175c0bb66e|Mon Dec 14 22:53:03 CET 2015|Add saturated(AddSubtractMultiplyPow) IntMath and LongMath ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110188732|0|0|2|385|3425|297|86|21|25|5|0|
326ec435e287eff23e72f7a98cf1264c876f9b6f|Mon Dec 14 22:53:16 CET 2015|Update deletion date for Sets.newSetFromMap to December 2017.|0|0|1|385|3425|297|86|18|59|7|0|
737ff2f3509afbbe8b959798a27f61cc8cf11d02|Mon Dec 14 23:41:42 CET 2015|Warn not to call any default methods on the map returned by Cache.asMap(). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110193849|0|0|1|385|3425|297|86|21|57|5|0|
e0afcde890057cab55534bc4eac50e0847370dca|Tue Dec 15 00:21:52 CET 2015|Automated g4 rollback of changelist 110160185.|0|0|6|385|3424|297|86|19|55|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.done(), newSymbol=]
4940d982c1309f1c93a294d20c5018c7000ede43|Tue Dec 15 00:30:58 CET 2015|Add LocalCache.getOrDefault implementation. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110199123|0|0|1|385|3424|297|86|18|85|5|0|
4dcbc834151c35573ed64e8b3b377afe68963620|Tue Dec 15 01:32:41 CET 2015|Write compare method in a way that won't look buggy to Error Prone.|0|0|1|385|3424|297|86|21|15|7|0|
379c224e53ac8684bbd9b50bf6986ed8ef13e581|Tue Dec 15 16:24:51 CET 2015|Migrate callers of (LongInt)Math.checked(AddMultiply) to the new saturated math methods if it appears that that is what they wanted. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110255813|0|0|1|385|3424|297|86|16|14|5|0|
0b328318604e3991ba48efbe78a6f73de8cd2f24|Tue Dec 15 17:18:42 CET 2015|Suppress test under Android. It is occasionally slow, making GuavaAndroidTests flaky. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110259603|0|0|0|385|3424|297|86|17|2|5|0|
4adbd561a73477763bfc77508f49889a2e2697e9|Tue Dec 15 22:34:39 CET 2015|Add BaseEncoding.canDecode(CharSequence). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110289529|0|0|1|385|3425|297|86|19|21|6|0|
566fc5d60f2b56232a6bd71e1f75c264f7f3b6b2|Wed Dec 16 00:54:45 CET 2015|A first pass at an optimized canDecode implementation. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110304545|0|0|1|385|3425|297|86|19|21|4|1|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.io.BaseEncoding.canDecode(java.lang.CharSequence), newSymbol=com.google.common.io.BaseEncoding.canDecode(java.lang.CharSequence)]
133f276136fb59db96eddfe7a43886af6deeae23|Wed Dec 16 11:41:49 CET 2015|Deprecate DoubleMath.mean. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110342322|0|0|1|385|3425|297|91|17|16|4|0|
aa242aafb420e623c5f11ae9d952ec359246af43|Wed Dec 16 19:49:04 CET 2015|Increase wait time.|0|0|0|385|3425|297|91|17|2|7|0|
1d14953afc82ec4c29b47d4a31a4d49bd722734e|Mon Aug 17 16:54:05 CEST 2015|Add @SafeVarargs to Immutable{List,Set}.of just to suppress the Eclipse warning.|0|0|2|385|3425|297|91|27|51|10|0|
7e84e741f9f154476abdabce422f3c2360a6ab74|Thu Dec 17 19:40:38 CET 2015|Make AbstractFuture#done protected & rename it #afterDone to decrease chance of collision with existing subclasses.|0|0|6|385|3426|297|91|21|56|4|0|
d904bddd5194e3ebab7130a8394c1a4e93e9ebdc|Thu Dec 17 22:06:26 CET 2015|Make @GwtIncompatible.reason optional. While there, redocument and reformat the file. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110482560|0|0|1|385|3426|297|91|17|3|5|0|
8ffc1e3d94e3ef9f87734ff10eed8837bc020098|Thu Dec 17 22:54:36 CET 2015|Remove @SuppressWarning for "CheckReturnValue" and "CanIgnoreReturnValue" in favor of unused variables. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110486602|0|0|0|385|3426|297|91|29|2|5|0|
71643094aca01d7386f8a84609aad7fa7632086e|Fri Dec 18 16:29:02 CET 2015|Add @GwtIncompatible annotations to top-level classes. Our previous policy was: "Look for a @GwtCompatible annotation. If it doesn't have one, then it's not GWT-compatible."|0|0|118|385|3426|297|91|80|217|16|0|
cd78ca12b249fb1c2ad0ec6aca324e7d733da4b7|Fri Dec 18 16:33:02 CET 2015|Convert all @GwtIncompatible.reason values to implementation comments. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110542459|0|0|77|385|3426|297|91|105|288|13|0|
354a91a308566d10cb72535622fc6882890642b7|Fri Dec 18 19:45:50 CET 2015|Automated g4 rollback of changelist 110542459.|0|0|77|385|3426|297|91|114|258|16|0|
aa5a184e271d86809d2dcb80e90dfc7dde5ca261|Fri Dec 18 19:58:08 CET 2015|Automated g4 rollback of changelist 110542265.|0|0|118|385|3426|297|91|100|211|16|0|
89b3eb1405241540dda1313953127fb01d4fc98f|Mon Dec 21 22:09:43 CET 2015|Add deprecation notices to mutation methods on ImmutableRange{Set,Map} as per https://github.com/google/guava/issues/2258. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110711365|0|0|2|385|3426|297|99|33|51|9|0|
5d4abb0e70b63105f08baf156999580d53d1ad40|Mon Dec 21 22:22:41 CET 2015|Release Futures.whenAllComplete and whenAllSucceed as @Beta. We may still develop these further by integrating allAsList/successfulAsList into them.|2|0|1|387|3435|297|99|21|59|7|0|
6ff77cf5941d5caac9672ce148ae6f7ab67cf144|Tue Dec 22 22:24:38 CET 2015|Provide information about which parameter we were passing null for and what values we used for the other parameters -- even if another exception was thrown. (We already did this if no exception was thrown, thanks to CL 3405048 and CL 48801694).|0|0|0|387|3435|297|99|21|2|6|0|
7d3af5b5b6a4427220581b5d69df68d6d00418b8|Wed Dec 23 00:37:55 CET 2015|Add .intersects() to RangeSet. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110802499|0|0|4|387|3438|297|99|20|65|7|1|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.RangeSet, newSymbol=com.google.common.collect.RangeSet.intersects(com.google.common.collect.Range<C>)]
f4bbaf7cc919ac885c5b3df424313f5b568cec25|Wed Dec 23 18:25:27 CET 2015|Adds an addAll(Stats) method to add a Stats object to a StatsAccumulator, and corresponding methods for PairedStats and PairedStatsAccumulator.|0|0|3|387|3438|297|99|23|20|6|0|
bb00ee0febdc30c02417795cef3f1ee7f687a7a7|Mon Dec 28 05:34:57 CET 2015|Add @CheckReturnValue to BaseEncoding.decode() and decodeChecked(). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=110989320|0|0|1|387|3438|297|99|20|20|6|0|
ecb5eaa6672faf665e6bdd064866ad795ad2d394|Tue Dec 29 17:29:19 CET 2015|Add @since for RangeSet.intersects. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=111072613|0|0|1|387|3438|297|99|17|39|5|0|
f89a73485023a73defcfd5aa435bfb566f4552ca|Thu Dec 31 00:54:10 CET 2015|Fix a tiny mathematical typo in LongMath. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=111156014|0|0|1|387|3438|297|99|19|22|7|0|
dedde5b419970441726a6699a065e30bd496bf93|Mon Jan 04 14:55:20 CET 2016|Add @GwtIncompatible annotations to top-level classes. (redo of CL 110542265) ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=111314988|0|0|118|387|3438|297|99|65|220|12|0|
15950e79dfe33c36051c58441d7fda9d74509677|Mon Jan 04 16:49:51 CET 2016|Convert all @GwtIncompatible.reason values to implementation comments. (redo of CL 110542459) ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=111321187|0|0|77|387|3438|297|99|101|265|15|0|
00d42155755bb7748fce8ca27a7109afc0a05d49|Wed Jan 06 12:25:16 CET 2016|Change StatsAccumulator.addAll(Stats) to use a more Knuth-like calculation for the mean. I claim that this is more accurate in the cases we care about.|0|0|1|387|3438|297|99|52|18|6|0|
e5f4c665001e8801cce23aa2a5fb493b7219fc04|Wed Jan 06 12:34:12 CET 2016|Optimize PairedStatsAccumulator.addAll(PairedStats). If we update the xStats before we update sumOfProductsOfDeltas, instead of after, so that we use the new value of (values.xStats().mean() - xStats.mean()) instead of the old value, then we absorb two of the factors in the product, and save ourselves a multiplication and a division.|0|0|1|387|3438|297|99|17|17|11|0|
1b0831c9f9229cd7049e24b2f62360b5e05bd78f|Wed Jan 06 17:07:33 CET 2016|Use Collections.newSetFromMap directly. It is available in GWT as of 2.7.0. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=111510442|0|0|2|387|3438|297|99|19|67|7|0|
d6e1e0c2712f607716a13619505e74f00bbce34b|Wed Jan 06 23:48:38 CET 2016|Add a test case to GraphEqualsTest to make sure edge direction is handled properly in different graph types. Also, use EqualsTester so that we're additionally verifying that the hashcodes between equal graphs are equal. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=111547711|0|0|0|387|3438|297|99|20|2|7|0|
654158dea78a2531247bdf539ce3405a2d335f20|Thu Jan 07 18:05:41 CET 2016|Automated g4 rollback of changelist 86212236.|0|0|0|387|3438|297|99|17|2|5|0|
f68659f02b5e59c51ecac61cd1ac94041c49a0ec|Thu Jan 07 18:20:58 CET 2016|Remove unnecessary copy of Arrays.copyOf now that we require a new enough version of GWT.|0|0|8|387|3438|297|99|21|36|5|0|
6f260ee8a40a6cc9a98fff1312d52d69dd1e3b9f|Thu Jan 07 20:30:00 CET 2016|Go back to avoiding AssertionError(String, Throwable), which isn't available in Gingerbread. http://developer.android.com/reference/java/lang/AssertionError.html#AssertionError%28java.lang.String,%20java.lang.Throwable%29|0|0|0|387|3438|297|99|20|2|5|0|
b467432088344f2d805744c5bb175e167843e497|Thu Jan 07 20:33:02 CET 2016|Stop ignoring http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6533203 in iterators now that the bug has been fixed in GWT for a while and the JDK for even longer. (This is like CL 57745078 but for a different bug.) Also, go a step further, and remove support entirely for ignoring both bugs.|0|0|0|387|3438|297|99|22|2|10|0|
08b6bb9877b53e9a731f5a22f7db43e1c8648a48|Thu Jan 07 20:54:21 CET 2016|Use getBytes(Charset) instead of getBytes(String) now that we require a new enough version of GWT. (We require 2.8.0 and need at least 2.7.0 for this CL.)|0|0|0|387|3438|297|99|18|2|7|0|
0787bc502c9c639e8d7c3648466f3f37990016c0|Thu Jan 07 23:03:37 CET 2016|Simplify the implementation of RemovalNotification by extending AbstractMap.SimpleImmutableEntry. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=111636230|0|0|1|387|3432|297|99|17|13|6|0|
e3f2c557c8ffa03962bb542bfe18481487b9699a|Fri Jan 08 18:47:43 CET 2016|Add TODO to use ofElementsIn(expected). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=111703041|0|0|0|387|3432|297|99|17|2|5|0|
dd571af41c828b6dbf3d56e56dda073c295fcd16|Fri Jan 08 19:03:48 CET 2016|Publishes the new StatsAccumulator.addAll(Stats) and PairedStatsAccumulator.addAll(PairedStats) methods. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=111704390|0|0|2|387|3434|297|99|19|19|6|0|
621a20dd9a4ab9b034a492ff754bb325fa449b70|Mon Jan 11 00:25:11 CET 2016|Quiesce the continuous integration builds a bit by running maven in batch mode (reducing chatter from download progress logging) ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=111811091|0|0|0|387|3434|297|99|19|2|5|0|
a55f0896718693e112ca95107fb0f0e9384f13af|Mon Jan 11 14:16:05 CET 2016|Reformat. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=111843256|0|0|1|387|3434|297|99|19|3|10|0|
7256f579d7166a10bf4ff406df672a41531ae579|Mon Jan 11 17:10:57 CET 2016|Remove TODO, which is no longer an issue now that we're committing to GWT 2.8.0.|0|0|0|387|3434|297|99|18|2|7|0|
1eb3090b9fbf13cc7e249d3bbe4e7652339192cc|Tue Jan 12 17:53:55 CET 2016|Bump GWT to a non-snapshot dependency, so Guava is unblocked for release. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=111953577|0|0|0|387|3434|297|99|17|2|6|0|
fe4170f6d89470ac57c127b12aa853c3c50c9c1b|Wed Jan 13 05:38:10 CET 2016|Update Public Suffix List. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112015560|0|0|1|387|3434|297|99|18|37|7|0|
e18fdecbefdd9304c51c0523651dd8668e120a89|Wed Jan 13 20:49:55 CET 2016|Allow terminal hyphens on domain parts. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112075036|0|0|1|387|3434|297|99|19|45|5|0|
5178c864c04a87a5e55f17355d0d65446b316ee4|Wed Jan 13 22:08:35 CET 2016|Graph.java: clarifying the requirements around node/edge objects. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112082354|0|0|1|387|3434|297|99|19|6|7|0|
0107253bf87eecb709b4df2804ee63bd29199f57|Thu Jan 14 00:04:01 CET 2016|Add Service-Worker. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112094082|0|0|1|387|3434|298|99|18|5|11|0|
5f195b68c222095a5e09e21fdb28c08238ed4735|Thu Jan 14 00:54:47 CET 2016|Update Public Suffix List. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112099761|0|0|1|387|3434|298|99|19|39|7|0|
6f125ffc33d8b186a6dcfa78735cb54b80b04ac4|Thu Jan 14 19:18:43 CET 2016|Document RFC 1123 host label digit prefix mandate ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112163962|0|0|1|387|3434|298|99|20|44|6|0|
fe66108ba9a4443da4b91f70e57f5763533d3ffa|Thu Jan 14 20:57:47 CET 2016|Automated g4 rollback of changelist 112075036.|0|0|1|387|3434|298|99|17|46|7|0|
af89d96d586a8b4da1d864cc985ec58093b00ee5|Fri Jan 15 21:12:19 CET 2016|Remove stray line. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112271827|0|0|1|387|3434|298|99|18|45|6|0|
3ddefd829e9fc0ed033613cd7d74427e6397c745|Fri Jan 15 21:36:21 CET 2016|Reduce the memory consumption of undirected graphs by storing the incident nodes explicitly in an "UnirectedIncidentNodes" class, rather than in a Set. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112273670|3|2|4|387|3434|298|99|20|57|10|0|
9b826b4b45ecca5a77e94fc82581ca0600a29aa8|Mon Jan 18 17:08:43 CET 2016|Add tests for https://github.com/google/guava/issues/2238 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112410294|0|0|0|387|3434|298|99|20|2|7|0|
6fef0b0dba5dfa40fe30cdd6fbcc9d3908801e23|Wed Jan 20 20:21:15 CET 2016|Fix the tests in primitives for tryParse not to generate their own NPEs.|0|0|0|387|3434|298|99|20|2|6|0|
c72972d162e161284f3516c69066752d6e19b791|Wed Jan 20 22:21:58 CET 2016|Add new MediaTypes. See https://github.com/google/guava/issues/2132 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112612873|0|0|1|387|3434|308|99|18|58|6|0|
ad68d5fd2a538672b2a625a8a481e4d6f1930622|Thu Jan 21 00:34:22 CET 2016|Shuffling from internal-only change. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112626786|0|0|1|387|3434|308|99|19|21|6|0|
445c56885ce2616cf2b7690d8331964a3e099e85|Thu Jan 21 06:30:28 CET 2016|Add MediaType.L24_AUDIO.|0|0|1|387|3434|309|99|19|61|6|0|
4b6ffd496674b55a6893bbd705a7486d661b1b53|Thu Jan 21 19:56:13 CET 2016|Improve performance of nested calls to Iterables.concat() and Iterators.concat() *without* using any additional memory. This CL brings the runtime from O(D^3) to O(D^2), where D is the nesting depth of concatenation.|1|0|3|387|3434|309|99|21|70|10|0|
4760f6ca0d68b3a374bf8754967c0cb50b54977d|Thu Jan 21 20:54:37 CET 2016|This change replaces usages of static final fields on CharMatcher, e.g. CharMatcher.WHITESPACE, with the equivalent static factory method, e.g. CharMatcher.whitespace().|0|0|1|387|3434|309|99|22|13|7|0|
f1f1d3d9bb0b989e87f6ff4a56972270d14b1d9c|Thu Jan 21 21:48:17 CET 2016|Add FluentIterable.concat methods, and make Iterable.concat methods delegate to them. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112713876|0|0|2|387|3439|309|99|20|66|6|0|
919ffc3d617df7d049e8754ae62373166f879b2e|Thu Jan 21 23:20:48 CET 2016|Change BaseEncoding.toString() to return "withPadChar('=')" instead of "withPadChar(=)". This is more consistent with how the string literals are printed for the alphabet. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112723381|0|0|1|387|3439|309|99|20|21|6|0|
3ec45222114150ad45305d58daf80d916c99b16c|Fri Jan 22 22:39:29 CET 2016|This change replaces usages of static final fields on CharMatcher, e.g. CharMatcher.WHITESPACE, with the equivalent static factory method, e.g. CharMatcher.whitespace().|0|0|0|387|3439|309|99|19|2|5|0|
9b845ef22fb91a6d842cf03c94b85f1bb5c9e00c|Fri Jan 22 23:18:14 CET 2016|Some updates to Graph javadoc. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112818614|0|0|1|387|3439|309|99|18|7|6|0|
cf7c48bd97f354e0d9a4cd3d9b8fbe85add66184|Sat Jan 23 01:14:33 CET 2016|Improve nullability checking for com.google.common.hash. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112829088|0|0|3|387|3439|309|99|19|30|6|0|
cf39936b578f6b312c08540a4e9d0078e724f566|Sun Jan 24 01:05:14 CET 2016|Move @CheckReturnValue to package-info.java so it applies to all of com.google.common.base. Annotate some methods with @CanIgnoreReturnValue. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112870719|0|0|27|387|3439|309|99|27|77|6|0|
5b8495f81ec6af59b6e8880df920952648682e09|Sun Jan 24 01:11:27 CET 2016|Move @CheckReturnValue to package-info.java so it applies to all of com.google.common.primitives. Annotate some methods with @CanIgnoreReturnValue. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112870925|0|0|16|387|3439|309|99|30|43|5|0|
8fbeb9038cbe8b382b1ee188ae8459203cd04fb5|Mon Jan 25 04:32:53 CET 2016|Add a comment about the use of non-short circuiting logical operators.|0|0|1|387|3439|309|99|20|52|5|0|
98815a1b93a18d917d37eec508fd1f06905ead7d|Tue Jan 26 00:04:31 CET 2016|Publish j2objc cycle_whitelist.txt to the public Guava repo. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=112992186|0|0|0|387|3439|309|99|17|2|7|0|
8f826b1b80fc43aefe3925a830f75bbebf101c15|Tue Jan 26 17:49:57 CET 2016|Add @CheckReturnValue to the entire c.g.c.graph package (by adding it to package-info.java). Opt-out certain APIs using @CanIgnoreReturnValue. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113060183|0|0|14|387|3439|309|99|22|65|11|0|
a1fb228f5b30cbcf93c4f912cddd479f36b620b5|Tue Jan 26 19:39:33 CET 2016|This change replaces usages of static final fields on CharMatcher, e.g. CharMatcher.WHITESPACE, with the equivalent static factory method, e.g. CharMatcher.whitespace().|0|0|3|387|3439|309|99|20|67|8|0|
88e42e657a32f9aaf0fa705d40a164431133d342|Tue Jan 26 23:03:58 CET 2016|Add ClassPath.ResourceInfo.asByteSource() and asCharSource(Charset).|0|0|1|387|3441|309|99|20|58|7|0|
52b5ee640da780e0fd2502ec995436fcdc93e03e|Wed Jan 27 14:31:45 CET 2016|Don't silently swallow Errors. https://github.com/google/guava/issues/2254 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113152082|0|0|2|387|3441|309|99|20|47|5|0|
5b587abdfa0e513db8a11b7265ce8689d1edf277|Wed Jan 27 19:55:59 CET 2016|Some minor improvements to FeatureUtil in the hope of speeding up c.g.c.collect tests. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113178622|0|0|0|387|3441|309|99|20|2|6|0|
f001be54c2e3676d39623942e96b97699d42467a|Thu Jan 28 14:46:41 CET 2016|Remove APIs to be deleted for Guava 20.0. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113254099|0|1|2|386|3432|309|90|22|74|9|9|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.get(java.util.concurrent.Future<V>,long,java.util.concurrent.TimeUnit,java.lang.Class<X>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.transform(com.google.common.util.concurrent.ListenableFuture<I>,com.google.common.util.concurrent.AsyncFunction<? super I,? extends O>,java.util.concurrent.Executor), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.transform(com.google.common.util.concurrent.ListenableFuture<I>,com.google.common.util.concurrent.AsyncFunction<? super I,? extends O>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.get(java.util.concurrent.Future<V>,java.lang.Class<X>), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.FutureFallback, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.withFallback(com.google.common.util.concurrent.ListenableFuture<? extends V>,com.google.common.util.concurrent.FutureFallback<? extends V>,java.util.concurrent.Executor), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.reflect.TypeToken.isAssignableFrom(com.google.common.reflect.TypeToken<? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.withFallback(com.google.common.util.concurrent.ListenableFuture<? extends V>,com.google.common.util.concurrent.FutureFallback<? extends V>), newSymbol=]
4a68440ab9d8d60e13a48bd4441fbb36347efc58|Thu Jan 28 17:41:02 CET 2016|Add @CheckReturnValue to Lists, Maps, Multimaps, Multisets, Queues, Sets, and Tables. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113265870|0|0|7|386|3432|309|90|26|125|13|0|
6e8370d443dc3f2da70ca0befda68cf8d687216b|Thu Jan 28 23:04:45 CET 2016|Some optimizations to AbstractIteratorTester based on profiling data on MapsCollectionTest. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113299505|0|0|0|386|3432|309|90|25|2|6|0|
026d168a41b35855a35b80f92aba440585f8e5a0|Mon Feb 01 18:32:43 CET 2016|Add @CheckReturnValue to the entire c.g.c.hash package. Opt-out certain APIs using @CanIgnoreReturnValue. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113536377|0|0|11|386|3432|309|90|22|32|6|0|
a66c6ebb733d54c28b71fdbaf295f5f0d799996b|Mon Feb 01 19:30:15 CET 2016|Refactor the test classes from the previous hierarchy:|0|0|0|386|3432|309|90|20|2|5|0|
18c84380cb56e74d7e5c7209199624ac112f86e4|Mon Feb 01 20:28:56 CET 2016|*GraphTest.java: Add @Test annotations to tests marked @Override. (This is apparently not strictly necessary but makes for better documentation.) ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113549694|0|0|0|386|3432|309|90|21|2|12|0|
1ef638f369964c1d1f56bd0ae588535c6abd99a4|Mon Feb 01 21:57:12 CET 2016|Add overloads to the Preconditions.check(NotNullStateArgument) varargs methods to avoid varargs and boxing overhead in the case of 1-2 template parameters.|0|0|1|386|3702|309|90|19|24|7|0|
4aa5ff256cd0d3e609d1b08485ed01a5c23ce69a|Mon Feb 01 22:27:09 CET 2016|Remove incorrect javadoc regarding "passing the smaller Set first" from Sets.union().|0|0|1|386|3702|309|90|21|60|7|0|
2e112b74caa773d6d57c3766a8086e9c59d39bce|Mon Feb 01 22:46:23 CET 2016|Document which exception is used by catching()/catchingAsync(). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113563893|0|0|1|386|3702|309|90|19|59|11|0|
8b0ec570c69b969b47262eff5935ddc7a80ced50|Tue Feb 02 01:52:00 CET 2016|Remove "SetView" from all graph implementations. See [] for why it should be killed with fire. In particular, it made the returned Sets have O(N) (in both time and memory) size() and contains() methods, and in one case, O(N^2) iteration!|3|2|7|386|3702|309|90|23|66|9|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.noSelfLoopPredicate(com.google.common.graph.Graph<? extends java.lang.Object,E>), newSymbol=]
6336404e539bb948caac14b4a00152409c3e7120|Tue Feb 02 06:35:27 CET 2016|Automated g4 rollback of changelist 113583321.|2|3|7|386|3702|309|90|22|67|13|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.selfLoopPredicate(com.google.common.graph.Graph<? extends java.lang.Object,E>), newSymbol=]
76e7d7a81012b19d5c29a76c1807a41cfc55575c|Tue Feb 02 17:47:40 CET 2016|Add @CheckReturnValue to MapMaker.|0|0|1|386|3702|309|90|20|67|10|0|
6575f8aa9c348c9a73dc1e327e4bafb116442b44|Tue Feb 02 19:48:56 CET 2016|Add @CheckReturnValue to the following classes: EvictingQueue, FluentIterable, and Ordering. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113653886|0|0|4|386|3702|309|90|22|82|7|0|
2067e7725ee32d373a253d1fb24578751f3d712a|Tue Feb 02 20:05:24 CET 2016|Automated g4 rollback of changelist 113559037.|0|0|1|386|3432|309|90|20|11|7|270|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,double,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,double,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,byte,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,long,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,byte,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,java.lang.Object,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,short,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,java.lang.Object,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,byte,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,byte,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,char,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,byte,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,int,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,float,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,boolean,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,float,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,short,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,long,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,short,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,short,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,int,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,byte,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,boolean,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,float,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,float,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,char,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,boolean,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,char,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,long,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,boolean,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,char,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,short,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,long,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,java.lang.Object,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,long,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,double,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,float,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,int,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,java.lang.Object,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,char,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,double,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,long,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,long,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,char,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,double,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,long,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,double,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,double,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,float,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,float,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,boolean,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,boolean,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,byte,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,int,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,char,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,char,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,byte,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,short,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,int,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,long,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,java.lang.Object,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,int,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,long,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,double,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,short,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,boolean,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,float,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,boolean,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,float,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,boolean,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,long,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,char,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,double,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,boolean,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,short,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,byte,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,java.lang.Object,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,int,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,int,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,char,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,byte,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,short,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,float,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,int,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,long,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,double,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,short,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,byte,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,byte,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,java.lang.Object,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,short,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,boolean,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,long,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,double,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,short,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,int,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,double,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,long,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,byte,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,char,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,float,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,boolean,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,short,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,boolean,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,double,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,double,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,int,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,short,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,byte,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,char,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,char,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,long,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,float,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,char,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,short,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,java.lang.Object,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,double,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,char,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,byte,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,byte,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,int,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,java.lang.Object,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,double,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,long,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,int,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,float,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,double,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,short,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,float,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,float,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,short,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,short,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,double,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,long,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,int,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,boolean,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,float,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,boolean,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,double,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,char,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,char,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,float,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,int,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,long,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,long,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,double,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,short,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,char,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,java.lang.Object,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,byte,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,byte,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,short,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,short,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,byte,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,byte,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,long,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,char,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,int,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,java.lang.Object,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,java.lang.Object,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,byte,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,int,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,boolean,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,short,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,float,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,float,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,java.lang.Object,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,java.lang.Object,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,byte,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,float,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,boolean,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,float,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,boolean,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,int,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,double,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,char,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,long,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,char,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,short,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,boolean,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,short,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,float,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,long,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,java.lang.Object,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,int,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,boolean,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,short,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,boolean,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,double,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,byte,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,double,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,short,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,char,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,int,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,char,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,double,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,char,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,java.lang.Object,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,java.lang.Object,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,boolean,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,char,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,float,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,long,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,java.lang.Object,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,int,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,long,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,double,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,double,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,byte,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,long,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,float,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,boolean,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,boolean,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,java.lang.Object,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,long,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,double,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,int,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,int,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,char,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,byte,long), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,float,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,boolean,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,float,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,long,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,int,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,char,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,boolean,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,float,double), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkArgument(boolean,java.lang.String,int,short), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,byte,int), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,int,byte), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,boolean,char), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkState(boolean,java.lang.String,short,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,byte,float), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Preconditions.checkNotNull(T,java.lang.String,int,int), newSymbol=]
8b0051972aa91d50be08542e027e0e017cd0e542|Tue Feb 02 20:45:14 CET 2016|Small fix in javadoc ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113660488|0|0|1|386|3432|309|90|18|54|6|0|
0290fa93dde6ee26255a0679f9f1b5f9677401ed|Tue Feb 02 22:54:26 CET 2016|Remove unnecessary 'unused' variables thanks to an update in the @CheckReturnValue checker. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113673831|0|0|0|386|3432|309|90|32|2|12|0|
07e82c083f5f71a982bc0767b1dd6b1b8dc8109f|Wed Feb 03 00:20:42 CET 2016|Fix various collections (Sets.union(), Sets.intersection(), Multisets.sum(), etc.) that might overflow when asked for size(). With very large collections, these could potentially return negative (!) results. According to the spec, the result should be Integer.MAX_VALUE:|0|0|4|386|3432|309|90|27|75|7|0|
d9fafc8ac2a52ffc2343efbffd163005dff94d4c|Wed Feb 03 00:22:38 CET 2016|Graph.java: fix indentation in class-level Javadoc. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113683678|0|0|1|386|3432|309|90|19|6|5|0|
c0fe985c62855adaa3a89cae1ec797e1150af3b5|Wed Feb 03 01:31:07 CET 2016|Add validation that checks that predecessors, successors, in edges, out edges, and all sorts of other relationships are in sync after every test. Add more test coverage for removing edges. This would have caught the breakage in [] ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113690611|0|0|0|386|3432|309|90|19|2|7|0|
eed5980c2e584151af3c674b74945ba003968c03|Wed Feb 03 18:18:53 CET 2016|Add @CheckReturnValue to SortedLists. This forces the caller of these APIs to "do something" with the result of the call.|0|0|1|386|3432|309|90|19|44|7|0|
248ce9fde9013bb1562b1f1647abc6017c37811d|Thu Feb 04 06:04:56 CET 2016|Remove "SetView" from all graph implementations. See [] for why it should be killed with fire. In particular, it made the returned Sets have O(N) (in both time and memory) size() and contains() methods, and in one case, O(N^2) iteration!|3|2|8|386|3432|309|90|24|61|12|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.noSelfLoopPredicate(com.google.common.graph.Graph<? extends java.lang.Object,E>), newSymbol=]
bcb97a7a81063f853678f3e04cd8ab2bae810142|Thu Feb 04 18:00:38 CET 2016|Add @CheckReturnValue to the com.google.common.eventbus package. This forces the caller of these APIs to "do something" with the result of the call.|0|0|0|386|3432|309|90|21|2|6|0|
c408a6fcecc7a6997c3dad3f3ab73338bb199756|Thu Feb 04 18:15:39 CET 2016|Add @CheckReturnValue to ObjectArrays. This forces the caller of these APIs to "do something" with the result of the call.|0|0|1|386|3432|309|90|19|39|6|0|
c58adc6f56ab8eee54f597d279a711f977474ae6|Thu Feb 04 19:23:07 CET 2016|Add @CheckReturnValue to MinMaxPriorityQueue. This forces the caller of these APIs to "do something" with the result of the call.|0|0|1|386|3432|309|90|18|39|6|0|
693c8d94861f627fd772c347b4644773167b3990|Thu Feb 04 20:15:15 CET 2016|Make Graphs.oppositeNode() slightly more efficient. It performs the same number of equals checks (1 in self-loop case, 2 otherwise) but without the additional call to contains() - while still providing the incidence check.|0|0|1|386|3432|309|90|20|14|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.oppositeNode(com.google.common.graph.UndirectedGraph<N,? extends java.lang.Object>,java.lang.Object,java.lang.Object), newSymbol=]
af44761113af50f1955feceac9dd7dfe2d127bbf|Thu Feb 04 22:59:12 CET 2016|Reduce memory footprint of mutable graphs by roughly 10%. Considering the increase that [] yielded, getting this back down is definitely good.|0|0|4|386|3432|309|90|23|50|6|0|
650af4cb1359df96adc4ce79200f32ae022f5840|Fri Feb 05 19:27:33 CET 2016|Add more consistency checks to AbstractGraphTest. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113961752|0|0|0|386|3432|309|90|19|2|9|0|
d3d542d7ea00afd5b0e2b99f2b8f16d62d65200c|Fri Feb 05 23:04:54 CET 2016|Add @CheckReturnValue to com.google.common.math. This forces the caller of these APIs to "do something" with the result of the call.|0|0|2|386|3432|309|90|19|19|7|0|
5a16769ee190e50e5c7429f159c8ca16a8c7fb0d|Sat Feb 06 02:00:46 CET 2016|Move toString() implementation for graphs to Graphs.java. This is similar to how Graphs.equal() is implemented, and will allow Graph implementations to get toString() for "free". ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=113999189|0|0|6|386|3434|309|90|21|58|8|0|
fb3b3245bb5f2393870438e8540d7d363f917b07|Sat Feb 06 02:25:18 CET 2016|Replace "DirectedIncidentNodes" and "UndirectedIncidentNodes" with a shared "IncidentNodes" class that implements Set. This avoids the call to .asImmutableSet() that the directed graphs were performing, and also makes it so that we are now very close to having an abstract base graph implementation that will almost entirely replace the 4 current implementations. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114000977|1|2|4|386|3434|309|90|20|53|5|0|
8f43bdaee14fe6d6f8b0d0b083e04016ea915986|Sat Feb 06 20:52:39 CET 2016|Some small cleanup to Graphs. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114030721|0|0|1|386|3434|309|90|18|50|5|0|
3ae3b05f1247feefde3a6cbe48dd5fa4735cfd46|Sat Feb 06 20:59:05 CET 2016|Add @CheckReturnValue to DiscreteDomain. This forces the caller of these APIs to "do something" with the result of the call.|0|0|1|386|3434|309|90|18|34|10|0|
8ed53a463b12256d3e798f84657d00cbbbf73bce|Sun Feb 07 02:43:10 CET 2016|Document the requirement that, for directed graphs, incidentNodes iterates as source then target. Move other directed graph specific documentation into DirectedGraph.|0|0|2|386|3437|309|90|19|6|5|0|
21def41580dfe9250a3a1b8044a9899841034af9|Sun Feb 07 22:45:52 CET 2016|Add documentation indicating that the builder mutators returns the same builder object. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114066331|0|0|1|386|3437|309|90|19|62|7|0|
e1faec5f1bf6c8e0e880956239e18e2f1593387f|Mon Feb 08 06:22:50 CET 2016|Add @SafeVarargs to Iterators.forArray (ImmutableList.of() and ImmutableSet.of() are already annotated with this). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114078599|0|0|1|386|3437|309|90|18|52|6|0|
d07efded0b474f2520bad78238db21e61343355a|Mon Feb 08 16:28:38 CET 2016|Use String.isEmpty() in Strings.isNullOrEmpty().|0|0|1|386|3437|309|90|17|9|6|0|
5f2e2d68051197dfdbec7c400dd7d97ce097f569|Mon Feb 08 18:59:40 CET 2016|Add @SafeVarargs to Iterators.cycle() (being consistent, since we just added it to forArray()). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114120886|0|0|1|386|3437|309|90|17|48|7|0|
8d8eebc9fe60c8c06b18f4d684813e537040f3b9|Mon Feb 08 19:15:56 CET 2016|Release most of UninterruptiblesTest and UninterruptibleFutureTest to Guava. I've excluded the CountDownLatch tests, which are currently intertwined with some other Google-internal tests.|0|0|0|386|3437|309|90|20|2|11|0|
dd813c144c86e9ee02bf72becae37fc1f5e1cb7a|Mon Feb 08 20:17:16 CET 2016|Permit the elapsed time to be slightly shorter than expected. This fixes some flakiness I'm seeing in Guava. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114130006|0|0|0|386|3437|309|90|19|2|7|0|
0bb149bf18b0a6968b2706edffc3a14616ead7d5|Mon Feb 08 23:08:18 CET 2016|Add @CheckReturnValue to collect.Range. This forces the caller of these APIs to "do something" with the result of the call.|0|0|1|386|3437|309|90|18|44|7|0|
950610f657f044e3012c18daa1ddeceedd62db22|Tue Feb 09 16:51:25 CET 2016|Add @CheckReturnValue to com.google.common.reflect. This forces the caller of these APIs to "do something" with the result of the call.|0|0|5|386|3439|309|96|21|62|9|2|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.ForwardingMap.putAll(java.util.Map<? extends K,? extends V>), newSymbol=com.google.common.reflect.ImmutableTypeToInstanceMap.putAll(java.util.Map<? extends com.google.common.reflect.TypeToken<? extends B>,? extends B>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ForwardingMap.putAll(java.util.Map<? extends K,? extends V>), newSymbol=com.google.common.reflect.ImmutableTypeToInstanceMap.putAll(java.util.Map<? extends com.google.common.reflect.TypeToken<? extends B>,? extends B>)]
aaf8877fd7aa32cc24e85fd3b5c9ffc6f3cac51d|Tue Feb 09 18:03:00 CET 2016|Add some validation checks for undirected graphs. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114224325|0|0|0|386|3439|309|96|21|2|8|0|
966e8f10f41f119c5aa476840320d3db078b30da|Wed Feb 10 17:33:15 CET 2016|Add test coverage to IncidentNodes to ensure our equals/hashcode is compatible with other Sets. Add a (micro)optimization to avoid constructing an iterator object for calls to contains(). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114329541|0|0|1|386|3439|309|96|19|39|5|0|
b1f52443f73317a68e79417cba536ef6f69ebd5f|Wed Feb 10 19:36:56 CET 2016|Remove unused variable declarations that are followed by fail(). They are no longer necessary. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114342552|0|0|0|386|3439|309|96|20|2|7|0|
f976f2b8cffcebb525dc2c8f06a99356578a4449|Wed Feb 10 20:01:21 CET 2016|Simplify some code in directed graphs. In particular, make removing the incident edges when removing a node more intuitive. Note that removeNode() in undirected graphs currently is O(degree^2) (for multigraphs), but that will be alleviated once we have AbstractIncidenceSetGraph and it moves to this implementation. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114345530|0|0|3|386|3440|309|96|21|53|7|0|
6e5d50950189567224dcb57df026f08b0709a3ba|Wed Feb 10 23:51:40 CET 2016|Add @CheckReturnValue to the com.google.common.util.concurrent package. This forces the caller of these APIs to "do something" with the result of the call.|0|0|36|386|3440|309|96|37|110|6|0|
e8637b3dc6ff86f1eddb6f8a89d883cf295bf5f2|Thu Feb 11 01:14:03 CET 2016|Slightly optimize Graphs.oppositeNode(). 50% of the time (assuming node is randomly chosen between the repeated node and adjacent node) we'll only have to perform one equals() check instead of two. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114380996|0|0|1|386|3440|309|96|24|52|6|0|
a24fa94bd10240b17e205dc571f4126f9dfccfd3|Thu Feb 11 18:49:35 CET 2016|Add a validation check to AbstractDirectedGraphTest, opposite to the one in AbstractUndirectedGraphTest:|0|0|0|386|3440|309|96|19|2|5|0|
683d4271104c48889011f92e0c8e7a9ba45c5033|Thu Feb 11 19:10:10 CET 2016|Run more tests against MutableClassToInstanceMap by defining a type that implements 5 interfaces. Eliminate a suppression for MutableTypeToInstanceMapTest that is unnecessary because put() is unsupported, anyway. Do some assorted other cleanup. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114449200|0|0|0|386|3440|309|96|19|2|7|0|
7176c5a66db0ab298e3f77d55760b17b74933af6|Thu Feb 11 20:32:40 CET 2016|Add javadoc and test coverage stating that non-hypergraph edges are always incident to either one or two nodes. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114459445|0|0|1|386|3440|309|96|19|6|5|0|
a72b6e39f3b9800591adcfaa8f6d3c03254f05f0|Thu Feb 11 22:57:58 CET 2016|In EnumsTest, rewrite code that creates a second copy of TestEnum in a second ClassLoader, so that it doesn't try to add instances of the second TestEnum to a Set<TestEnum> (which is a Set of the original TestEnum). In Java 8, apparently this is a little bit less erased so it fails. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114474572|0|0|0|386|3440|309|96|17|2|5|0|
b14197ec461092de12ebb8657f247412a84a5ff2|Fri Feb 12 20:32:25 CET 2016|Clarify docs of filter(), limit(), and transform() to specify that the result is a view. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114554046|0|0|2|386|3440|309|96|20|71|5|0|
2d38cd44602886d7871861fea4acc1a22320387b|Tue Feb 16 22:04:17 CET 2016|google-java-format common.escape. I also rewrapped Javadoc and comments (mostly using the built-in Eclipse formatter). I made almost no hand changes. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114785034|0|0|9|386|3440|309|96|22|17|5|0|
31c5a404b250f692d864fb36fb419988c4bc7ee4|Wed Feb 17 00:19:37 CET 2016|Indent continued @tag lines 4 spaces instead of aligning them with the second word of the first line. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114799803|0|0|3|386|3440|309|96|18|14|16|0|
c6e21a35f3113a7a952a9615a0e92dcf1dd4bfb3|Wed Feb 17 04:30:38 CET 2016|Change Range.toString() to use printable ASCII chars (..) instead of \u2025 (‥)|0|0|3|386|3440|309|96|19|49|19|0|
9f94aa41d9abc300f049064160deedcb74c31ba2|Wed Feb 17 15:45:44 CET 2016|More reformatting. I've restricted myself to files that are part of open-source Guava. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114854445|0|0|61|386|3440|309|96|40|132|8|0|
024e56a668b8a1d2653655a5530ed9f4ed5bb166|Wed Feb 17 15:47:29 CET 2016|google-java-format the rest of util.concurrent. I also rewrapped Javadoc and comments (mostly using the built-in Eclipse formatter). I made almost no hand changes. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114854530|0|0|20|386|3440|309|96|31|92|6|0|
9cbd75163ecb22c76cb5e8198022febfd4efb664|Wed Feb 17 17:05:34 CET 2016|Eliminate intra-if MOE stripping, and add a comment.|0|0|1|386|3440|309|96|19|75|6|0|
08a6bb421f0931cc4cee499a631c651e4633787e|Wed Feb 17 19:46:28 CET 2016|Fix modifier order ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114875899|0|0|5|386|3440|309|96|21|74|9|0|
955584656132fb7b8d76daafb73aac5cb404974c|Wed Feb 17 21:33:37 CET 2016|Use StringBuilder.reverse() instead of reimplementing it. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114887716|0|0|1|386|3440|309|96|19|42|7|0|
529027a088829cfa7985d65fa7e095b61e5cdb76|Wed Feb 17 23:37:13 CET 2016|Reformat FluentIterable, moving some "Stream equivalent" sections above @tags so that they appear properly. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114900720|0|0|1|386|3440|309|96|19|57|7|0|
20078868d0e6b7739cc806319dcfe1534f82d74d|Wed Feb 17 23:43:04 CET 2016|Introduce AbstractGraph. This is a bare-bones base class that all Graph implementations should be able to extend (analogous to e.g. AbstractSet for Sets). It ensures there is consistent equals()/hashCode() across different Graph implementations. Additionally, this CL drops the requirement that two graphs have to have "the same type" to be equal. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114901380|1|0|7|387|3433|310|96|21|59|7|3|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.hashCode()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.toString(com.google.common.graph.DirectedGraph<? extends java.lang.Object,? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.equal(com.google.common.graph.DirectedGraph<? extends java.lang.Object,? extends java.lang.Object>,com.google.common.graph.DirectedGraph<? extends java.lang.Object,? extends java.lang.Object>), newSymbol=]
de1acf4634d172ecf6f572510c2a1d2e20c4a437|Thu Feb 18 00:24:58 CET 2016|Graph.java: change return type of #degree() methods to int. Add documentation specifying behavior if the number of relevant edges is > Integer.MAX_VALUE. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114905866|0|0|2|387|3433|310|96|20|8|7|6|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graph.outDegree(java.lang.Object), newSymbol=com.google.common.graph.Graph.outDegree(java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractGraph.degree(java.lang.Object), newSymbol=com.google.common.graph.AbstractGraph.degree(java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractGraph.inDegree(java.lang.Object), newSymbol=com.google.common.graph.AbstractGraph.inDegree(java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graph.degree(java.lang.Object), newSymbol=com.google.common.graph.Graph.degree(java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graph.inDegree(java.lang.Object), newSymbol=com.google.common.graph.Graph.inDegree(java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractGraph.outDegree(java.lang.Object), newSymbol=com.google.common.graph.AbstractGraph.outDegree(java.lang.Object)]
6d717b9dd7483d4b01a852b639753ee7105cfb34|Thu Feb 18 01:29:32 CET 2016|Add @CheckReturnValue to the com.google.common.{escapexmlhtml} packages and subpackages. This forces the caller of these APIs to "do something" with the result of the call.|0|0|2|387|3433|310|96|22|12|7|0|
728300cfd7c7303d78fd272ce53bb61d85e7a567|Thu Feb 18 16:27:05 CET 2016|Reuse the mac instance just constructed for bit-length calculation.|0|0|1|387|3433|310|96|17|15|5|0|
6cca4e75672e214007598cb805e660e82259696a|Thu Feb 18 16:59:10 CET 2016|More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114963965|0|0|3|387|3433|310|96|17|42|8|0|
f06590cea537116b82d2b24184c81729692425e6|Thu Feb 18 18:40:47 CET 2016|More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114972304|0|0|8|387|3433|310|96|21|82|7|0|
a5cbbefac2ccc846dedfa0608125b85e92f20d75|Thu Feb 18 18:41:28 CET 2016|Add missing GWT emulation of interruptTask(). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114972363|0|0|0|387|3433|310|96|17|2|6|0|
b47da45d0ef44dac5f7cc82c7f1b2dff68b2f7a9|Thu Feb 18 19:20:25 CET 2016|More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114976442|0|0|11|387|3433|310|96|20|83|6|0|
a6c137ef10842ee31a0749a121fbd44af4350559|Thu Feb 18 21:51:19 CET 2016|Fix bad line breaks. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114992502|0|0|2|387|3433|310|96|20|46|9|0|
2e3bb314df50a750c2298d3d0a13a30b95d49734|Thu Feb 18 21:52:52 CET 2016|More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114992641|0|0|12|387|3433|310|96|52|30|5|0|
b9731bcb3345be0f9a184fae26c6747351365c90|Thu Feb 18 22:17:37 CET 2016|Create an abstract base class for our graph implementations. Eliminate lots of redundant code! Also improves the (currently incorrectly documented) runtime of removeNode() in IncidenceSetUndirectedGraph on multigraphs from O(degree^2) to O(degree). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114995238|1|0|5|387|3411|310|96|19|53|5|5|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableDirectedGraph$Builder.addGraph(com.google.common.graph.DirectedGraph<N,E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableUndirectedGraph$Builder.addGraph(com.google.common.graph.UndirectedGraph<N,E>), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractGraph.degree(java.lang.Object), newSymbol=com.google.common.graph.AbstractGraph.degree(java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractGraph.inDegree(java.lang.Object), newSymbol=com.google.common.graph.AbstractGraph.inDegree(java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractGraph.outDegree(java.lang.Object), newSymbol=com.google.common.graph.AbstractGraph.outDegree(java.lang.Object)]
318f97587c770e29f081294a2e5a3fe46376714b|Thu Feb 18 22:32:56 CET 2016|Make effectively final fields final ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114996805|0|0|5|387|3411|310|96|21|93|7|0|
83b5794ba8370017a70a8e42a65370fc15bf6fd8|Thu Feb 18 22:33:48 CET 2016|Make effectively final fields final ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=114996899|0|0|2|387|3411|310|96|22|13|6|0|
870a15766917eca534f459c3e9a089358040c020|Fri Feb 19 19:12:48 CET 2016|AbstractPackageSanityTests.java: document that the @Test annotations are deliberate even though it's not actually a JUnit4 test, as some of its subclasses @RunWith(JUnit4). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115074892|0|0|0|387|3411|310|96|18|2|11|0|
83999cb0c1e5d26aebcf16ac38f66a76def284e3|Fri Feb 19 19:45:20 CET 2016|GraphConfig: fix logic bug in compatibleWith(), document the correct behavior, and add tests. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115078269|0|0|1|387|3411|310|96|19|44|6|0|
aef3838801686022ad766b0ccfd21d5d45d0cb5c|Fri Feb 19 20:15:20 CET 2016|Attempt to finish adding Java 8 usage notes to our functional types. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115081604|0|0|4|387|3411|310|96|20|44|5|0|
1aaf7ae4b4b2773664d2462a258de506f7e1de73|Fri Feb 19 20:59:06 CET 2016|Move <p> tags to the beginning of the line. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115086346|0|0|2|387|3411|310|96|18|62|6|0|
018ed188c7066fc16a5242759bb352ce2271549e|Fri Feb 19 21:18:52 CET 2016|More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115088232|0|0|15|387|3411|310|96|24|78|12|0|
65663e795c406001f93d82c9bc69ef1d9031dc18|Fri Feb 19 21:29:20 CET 2016|Remove closing </li> tags. I couldn't find any </p> or other optional closing tags in any of the files I've touched so far. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115089061|0|0|2|387|3411|310|96|21|22|12|0|
428f6f0cc751bc7c2f11b3ed5d4a2f9e3ec2cfb6|Fri Feb 19 21:32:01 CET 2016|More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115089318|0|0|19|387|3411|310|96|23|42|7|0|
0664d966535b95328b684b471ac05c481b55f297|Sat Feb 20 01:14:34 CET 2016|Fix Error Prone errors in GWT code. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115110183|0|0|0|387|3411|310|96|19|2|7|0|
ac083ab0599d9b3b4a59191b397e1da8fc39a99f|Mon Feb 22 17:00:58 CET 2016|Removes @WeakOuter from AggregateFuture.RunningState and subclasses. The weak outer reference causes a dangling pointer if the RunningState outlives its Future. Furthermore, the @WeakOuter wasn't necessary to maintain leak-free behavior because AggregateFuture nulls it's runningState reference in afterDone(). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115226151|0|0|3|387|3411|310|96|19|56|6|0|
55f03321aea35bf38d2aa7c766aab02b8204da71|Mon Feb 22 19:10:08 CET 2016|More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115240986|0|0|16|387|3411|310|96|24|41|5|0|
a2981bf2a683ccf67665a790de07055c06710d4f|Mon Feb 22 22:32:33 CET 2016|Add @CheckReturnValue to Iterables. This forces the caller of these APIs to "do something" with the result of the call.|0|0|1|387|3411|310|96|20|61|5|0|
e719a651ba846fd77d9a132d69f4e79a0ddadccc|Tue Feb 23 15:22:42 CET 2016|More reformatting. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115333807|0|0|30|387|3411|310|96|30|86|5|0|
feb726c559772827771c96b9f1d2e8291488aca4|Tue Feb 23 19:00:27 CET 2016|Replace <br> tags. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115352490|0|0|1|387|3411|310|96|20|12|9|0|
8b970eb934595d903be555de6ac0d5a27722da21|Tue Feb 23 19:00:37 CET 2016|Remove most of our uses of <code>. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115352506|0|0|2|387|3411|310|96|20|90|8|0|
517267d764f32383fdac36fcd6eabad855dd2f93|Tue Feb 23 19:01:03 CET 2016|Strip mentions of soft references from Guava. Reformat. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115352566|0|0|1|387|3411|310|96|23|62|6|0|
8613c4dbde2aaeb871dce3ea0e52811039ee203d|Tue Feb 23 19:42:50 CET 2016|Reformat parts of util.concurrent that I had mostly already reformatted. Now that I have some more automation, I've caught some more problems. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115358094|0|0|17|387|3411|310|96|25|91|10|0|
0c063801f91f10891339ec9ce5127e26f9f00931|Tue Feb 23 23:02:32 CET 2016|Fix 6-year-old test bug.|0|0|0|387|3411|310|96|22|2|7|0|
f6da31136af15dd324d56d253bc17c5b9afe9759|Tue Feb 23 23:06:21 CET 2016|Add @CheckReturnValue to Multiset and friends. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115381146|0|0|7|387|3411|310|96|22|74|6|0|
fe11eeb686f44feae84b180f76c9304528d993e5|Wed Feb 24 22:03:47 CET 2016|Add {floor,ceiling}PowerOfTwo as discussed at API review. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115483556|0|0|3|387|3417|310|96|25|23|7|0|
67374248c30a9b80d146adf7f24fd60e3a6cf8ef|Wed Feb 24 22:58:40 CET 2016|Add @since 20.0 to the {ceiling,floor}PowerOfTwo methods. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115489834|0|0|3|387|3417|310|96|20|23|4|0|
bfc61d3bc529ee57e362db2075e261d66b7ef591|Thu Feb 25 16:58:09 CET 2016|Add @CheckReturnValue to the immutable collection types. This forces the caller of these APIs to "do something" with the result of the call.|0|0|9|387|3417|310|96|25|81|11|0|
907f05f02b50895a4d7515b40e3ec77d16f3c6e5|Fri Feb 26 07:15:58 CET 2016|Automated g4 rollback of changelist 108345794.|0|0|1|387|3417|310|96|23|13|6|0|
ae1f2cbe0f3e682328a82fababc7a67ba2999190|Fri Feb 26 22:04:52 CET 2016|Add the Service-Worker-Allowed header to the HTTP header constants for Java/Go.|0|0|1|387|3417|311|96|18|6|6|0|
012d8f4f9c07228c89c728330abaaa6a87cd318d|Fri Feb 26 22:54:50 CET 2016|Make Iterables.unmodifiableIterable() and Iterators.unmodifiableIterator() methods accept (IterableIterator)<? extends T> instead of (IterableIterator)<T>. Some of our unmodifiable*() methods already did this (e.g. unmodifiableMultiset(), unmodifiableBiMap()), and the "? extends T" signature is consistent with the unmodifiable*() methods in Collections.java.|0|0|4|387|3417|311|96|19|116|13|2|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterables.unmodifiableIterable(java.lang.Iterable<T>), newSymbol=com.google.common.collect.Iterables.unmodifiableIterable(java.lang.Iterable<? extends T>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator<T>), newSymbol=com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator<? extends T>)]
c56fa61dfa62612cb7191790beec647ba053f434|Sun Feb 28 04:28:27 CET 2016|Add @CheckReturnValue to Multimap and Table. This forces the caller of these APIs to "do something" with the result of the call.|0|0|4|387|3417|311|96|26|61|7|0|
b76c4183becbcfceb618dcecdfb46951209889da|Mon Feb 29 18:00:24 CET 2016|Add @CheckReturnValue to RangeMap and RangeSet. This forces the caller of these APIs to "do something" with the result of the call. For more information, see [] ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=115856896|0|0|2|387|3417|311|96|21|45|6|0|
892e323fca32945cdfb25395ca6e346dd0fffa5b|Mon Feb 29 20:54:00 CET 2016|Add overloads to Preconditions checkState,checkArgument and checkNotNull to avoid boxing and varargs for the most common parameter combinations.|0|0|1|387|3483|311|96|20|14|9|0|
b281c1fd5a960abf179fe8f4f280daca47ff2156|Tue Mar 01 03:59:05 CET 2016|This change replaces usages of static final fields on CharMatcher, e.g. CharMatcher.WHITESPACE, with the equivalent static factory method, e.g. CharMatcher.whitespace().|0|0|1|387|3483|311|96|20|23|6|0|
525112c0128c2fa065a2b48424995d24038ebf6e|Tue Mar 01 16:38:14 CET 2016|Add @CheckReturnValue to ListMultimap and SetMultimap. This forces the caller of these APIs to "do something" with the result of the call.|0|0|2|387|3483|311|96|19|49|5|0|
9ee945dbee63ab6171f3eba73a2cb1219cc6c952|Tue Mar 01 17:45:25 CET 2016|Add @CheckReturnValue to Iterators. This forces the caller of these APIs to "do something" with the result of the call.|0|0|1|387|3483|311|96|19|54|5|0|
2b384af7d7c63afa06cf684c24867757d7e54969|Tue Mar 01 19:36:25 CET 2016|Encourage users to use framworks instead of chaining things together manually.|0|0|1|387|3483|311|96|19|44|5|0|
2d97fd8466f9bf00c7a90d1795b3ce0b891c030c|Wed Mar 02 14:11:26 CET 2016|Never return a (SortedNavigableBi)(MapSet) from the plain (MapSet) overloads.|0|0|3|387|3483|311|96|20|95|12|0|
f5855cd04305aefaf519b42a737a6651e84546d1|Wed Mar 02 16:42:11 CET 2016|Add missing rejectionPropagatesToOutput tests. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=116137704|0|0|0|387|3483|311|96|24|2|6|0|
5364bf33e15c46c1b362ad7a7a5208bc012557db|Wed Mar 02 18:58:40 CET 2016|When displaying the actual class name, use the simple name. (Note that GWT has supported getSimpleName() since 2.6.0.)|0|0|0|387|3483|311|96|19|2|6|0|
f7d482d79eb1f6953d9b421d94118d34f0428406|Wed Mar 02 22:36:45 CET 2016|Add asAsyncCallable method to Callables. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=116175454|0|0|1|387|3484|311|96|17|17|6|0|
06ab00ba27e5473b1461e5a8693a814721581fef|Wed Mar 02 22:52:09 CET 2016|Remove unused variables. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=116177337|0|0|1|387|3484|311|96|19|54|7|0|
8c90f965ecbd401e5b1b70ed434b5ff46d9b77de|Thu Mar 03 15:11:43 CET 2016|Add tests: - map.put(presentKey, value) - entry.setValue|0|0|1|387|3484|311|96|21|85|9|0|
baab673669e86bc1f9aba851e63cc25d559bff9a|Thu Mar 03 20:29:22 CET 2016|Add @CheckReturnValue to com.google.common.collect package. This forces the caller of these APIs to "do something" with the result of the call.|0|0|44|387|3484|311|96|40|144|11|0|
6daefa4c432de3b3c26010bae33bbbefc347db64|Thu Mar 03 20:46:56 CET 2016|Update the travis configurations to only build the "master" branch or any branches prefixed with "release" in order to reduce the duplicate use of build bots on travis for pull requests based on non-user-fork-originated branches. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=116275195|0|0|0|387|3484|311|96|24|2|5|0|
3875a1b95070b2a8305814c8f009c20d1981529b|Thu Mar 03 21:19:19 CET 2016|Add Futures.getDone().|0|0|3|387|3485|311|96|19|57|7|0|
a2a2ebb9aa29a5d24182f394125121129f936155|Thu Mar 03 21:30:16 CET 2016|Remove @CheckReturnValue from individual classes now that it is in package-info.java ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=116280164|0|0|44|387|3485|311|96|38|184|17|0|
622d9477e597d01553dad65be1f8eb216ac5431f|Thu Mar 03 22:22:12 CET 2016|Remove more unnecessary @CheckReturnValues on APIs now that these packages are completely @CRV'd. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=116285375|0|0|2|387|3485|311|96|26|15|8|0|
232a80ea5ce2bad7b6c3a20a21cee1278839495a|Sat Mar 05 16:28:08 CET 2016|Shuffling from internal-only change. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=116449500|0|0|1|387|3485|311|96|18|15|8|0|
71b34733742f6381fc2f384121567e02968aba71|Sat Mar 05 17:26:31 CET 2016|Fix documentation issues with CharMatcher.matchesNoneOf.|0|0|1|387|3485|311|96|18|15|8|0|
dffed2f7420dff52045949bc3925ebf3491d1575|Sat Mar 05 21:42:39 CET 2016|Prevent fail() from being ignored by the surrounding catch() block by throwing new Error().|0|0|0|387|3485|311|96|20|2|7|0|
a54bc6e1fea45a672837f334362910dbf1e6da5e|Sun Mar 06 03:24:10 CET 2016|Automated g4 rollback of changelist 116449500. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=116468022|0|0|1|387|3485|311|96|18|14|8|0|
d810fc4b42d80b64fd118c2cf1483fb7682d34a9|Mon Mar 07 19:57:43 CET 2016|This change replaces usages of static final fields on CharMatcher, e.g. CharMatcher.WHITESPACE, with the equivalent static factory method, e.g. CharMatcher.whitespace().|0|0|1|387|3485|311|96|19|12|12|0|
f38e143893dc6e7f8cdda979a4f1d2623623b028|Mon Mar 07 21:10:30 CET 2016|Discourage people from mocking or otherwise creating custom implementations of ListenableFuture. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=116573821|0|0|1|387|3485|311|96|17|44|6|0|
c5f3d4692ad2228dc1c88f03965fdf5b9eefeb1a|Mon Mar 07 22:58:56 CET 2016|Start a README.md and an overview/recipe-book for Stats calculations. Revise Stats.java class docs a bit. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=116584822|0|0|1|387|3485|311|96|20|19|6|0|
189aa74b143dab4c7d8d8568961d39abe01e9209|Tue Mar 08 06:32:26 CET 2016|Add @CheckReturnValue to the com.google.common.io package. This forces the caller of these APIs to "do something" with the result of the call.|0|0|16|387|3485|311|96|26|79|6|0|
d1bcf31967d6070df7d65a181af62e5b9e3665e6|Tue Mar 08 16:09:23 CET 2016|Use Futures.getDone() internally. Add a doc reference to getDone() from getUninterruptibly(). Improve the error message on bad calls to getDone(). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=116652736|0|0|6|387|3485|311|96|22|68|6|0|
001b5850d1d3beec5caedf8002f87b33c1399471|Tue Mar 08 17:11:36 CET 2016|Fix tiny Javadoc problems. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=116657537|0|0|5|387|3485|311|96|24|93|10|0|
9a2c0e531ee7202ec0aeae35b7e4bacf6b8dc88e|Tue Mar 08 19:54:34 CET 2016|Make LittleEndianDataOutputStream final (like LittleEndianDataInputStream). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=116674000|0|0|1|387|3485|311|96|21|18|7|14|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.io.LittleEndianDataOutputStream.writeChars(java.lang.String), newSymbol=com.google.common.io.LittleEndianDataOutputStream.writeChars(java.lang.String)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.io.LittleEndianDataOutputStream.writeBoolean(boolean), newSymbol=com.google.common.io.LittleEndianDataOutputStream.writeBoolean(boolean)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.io.LittleEndianDataOutputStream.writeFloat(float), newSymbol=com.google.common.io.LittleEndianDataOutputStream.writeFloat(float)],BC[kind=CLASS_NOW_FINAL, impactedSymbol=com.google.common.io.LittleEndianDataOutputStream, newSymbol=com.google.common.io.LittleEndianDataOutputStream],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.io.LittleEndianDataOutputStream.write(byte[],int,int), newSymbol=com.google.common.io.LittleEndianDataOutputStream.write(byte[],int,int)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.io.LittleEndianDataOutputStream.writeByte(int), newSymbol=com.google.common.io.LittleEndianDataOutputStream.writeByte(int)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.io.LittleEndianDataOutputStream.writeShort(int), newSymbol=com.google.common.io.LittleEndianDataOutputStream.writeShort(int)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.io.LittleEndianDataOutputStream.writeUTF(java.lang.String), newSymbol=com.google.common.io.LittleEndianDataOutputStream.writeUTF(java.lang.String)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.io.LittleEndianDataOutputStream.writeBytes(java.lang.String), newSymbol=com.google.common.io.LittleEndianDataOutputStream.writeBytes(java.lang.String)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.io.LittleEndianDataOutputStream.writeChar(int), newSymbol=com.google.common.io.LittleEndianDataOutputStream.writeChar(int)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.io.LittleEndianDataOutputStream.writeDouble(double), newSymbol=com.google.common.io.LittleEndianDataOutputStream.writeDouble(double)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.io.LittleEndianDataOutputStream.writeInt(int), newSymbol=com.google.common.io.LittleEndianDataOutputStream.writeInt(int)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.io.LittleEndianDataOutputStream.writeLong(long), newSymbol=com.google.common.io.LittleEndianDataOutputStream.writeLong(long)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.io.LittleEndianDataOutputStream.close(), newSymbol=com.google.common.io.LittleEndianDataOutputStream.close()]
ba2024d4e147cedc3fb442746872b46b11fef8a9|Wed Mar 09 15:51:51 CET 2016|Fixes, standardizations, and noise reduction in Futures tests.|0|0|1|387|3485|311|96|20|49|8|0|
92f59507b136d7efd6af91dd9c9ceba2ee0daa06|Thu Mar 10 12:18:04 CET 2016|Adopt getDone() and getDoneFromTimeoutOverload() in other Future tests. Move "get(-1, SECONDS)" test out of the normal path and into its own test method so that I can supppress it if we remove Future.get under GWT. Test "get(MAX_VALUE, SECONDS)" for overflow. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=116853438|0|0|0|387|3485|311|96|21|2|6|0|
8a44aef49e970db93d5b3406d74b95e916b65467|Thu Mar 10 12:19:46 CET 2016|Used UncheckedThrowingFuture in another place. Add tests for Error throwing now that that's easy to do.|0|0|0|387|3485|311|96|19|2|6|0|
15ad032a151d8b3f3bbd2aa7aee83c326f9edc44|Thu Mar 10 19:06:56 CET 2016|This change replaces usages of static final fields on CharMatcher, e.g. CharMatcher.WHITESPACE, with the equivalent static factory method, e.g. CharMatcher.whitespace().|0|0|1|387|3485|311|96|19|14|9|0|
2cd4d629a2b6f1a462643b248e0972f44c5133b7|Fri Mar 11 19:14:07 CET 2016|Update references to guava-libraries.googlecode.com to the Github location in pom.xml files.|0|0|0|387|3485|311|96|18|2|11|0|
a27bcd2f585ab90afc52173cbed38d1d573c51f3|Mon Mar 14 13:37:02 CET 2016|Make immediateFailedFuture and immediateCancelledFuture trusted futures.|0|0|3|387|3485|311|96|20|57|6|0|
219235d1add4557c4a92db136b056f1afcdcae55|Mon Mar 14 16:49:05 CET 2016|Replace instances of StringBuilder.append(String.substring/CharSequence.subsequence) with the append overload that takes a substring range. Plus another minor change. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=117136790|0|0|4|387|3485|311|96|20|57|7|0|
7d436409f79a40cdae8c247d9dacae841648f4d4|Mon Mar 14 22:54:51 CET 2016|Fix javadoc typo in ImmutableSet.copyOf() ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=117174782|0|0|1|387|3485|311|96|19|46|8|0|
a25d9cc5d20a6b4faa8370a1afaf5b0f50fe361c|Tue Mar 15 21:44:47 CET 2016|Specify behavior with self-loops in degree() javadoc.|0|0|1|387|3485|311|96|17|6|7|0|
478faecc46d31a0fee22f88a17e599407669f81b|Wed Mar 16 18:40:02 CET 2016|Remove class from <pre class="code">. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=117357703|0|0|1|387|3485|311|96|16|3|7|0|
99ec8ccc644bc13a85836251b0885af810465114|Wed Mar 16 19:21:19 CET 2016|Remove all CharMatcher constants except WHITESPACE internally.|0|0|1|387|3485|311|96|22|14|8|0|
660e86d7f4f6bdc165d923fb7851d11648ab88fe|Wed Mar 16 19:34:29 CET 2016|Restore documentation that Futures.catching is available under GWT but with some caveats.|1|0|1|387|3485|311|96|19|57|7|0|
00ad4b03340a6b58134e5f6f5c46c0eb775a3895|Wed Mar 16 20:51:53 CET 2016|Hide MapMaker.removalListener() internally. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=117372601|0|0|1|387|3485|311|96|19|63|8|0|
6bd4a49baaefd36e1f7c8c4d28a82d688b15a0fc|Fri Mar 18 18:56:33 CET 2016|Skip Map+Multimap toString() tests if NON_STANDARD_TOSTRING is specified.|0|0|0|387|3485|311|96|19|2|6|0|
c925b98f0dadbf1fe836fe70251ba294ef8f6c81|Fri Mar 18 19:48:08 CET 2016|Document that order() is called even without KNOWN_ORDER.|0|0|0|387|3485|311|96|19|2|9|0|
63ae85444ead5f9f4021877bf4a74599935cd608|Fri Mar 18 21:37:31 CET 2016|Remove CharMatcher.WHITESPACE internally. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=117579683|0|0|1|387|3485|311|96|18|14|11|0|
7e0795df212bd33828d23f9fc27532f95d376192|Fri Mar 18 21:47:49 CET 2016|Test that changes to an Iterator are reflected in the backing collection. Unrelatedly, move CopyOnWriteArrayList suppressions into TestsForListsInJavaUtil, since the collection's quirks are documented decisions, not implementation bugs. This prepares for adding another suppression on the Java 8 branch.|0|0|0|387|3485|311|96|18|2|6|0|
76cc848bf7f739d05789d9d7b4f83b9c7bee6906|Sat Mar 19 02:38:38 CET 2016|Automated g4 rollback of changelist 117579683.|0|0|1|387|3485|311|96|19|14|6|0|
807760488eaaab1ced435ec07dab6be7e991fc47|Sat Mar 19 03:22:02 CET 2016|Major refactoring of the com.google.common.graph APIs (including updates to client code): -Remove DirectedGraph and UndirectedGraph interfaces; a Graph's directedness can now be queried with graph.isDirected(). -Remove GraphConfig class; use the query methods directly on the Graph interface instead. -Add GraphBuilder; use this instead of Graphs.create[Un]Directed(GraphConfig) -Remove ImmutableGraph.Builder; ImmutableGraph construction is now done with ImmutableGraph.copyOf(Graph). -Rename multigraph() to allowsParallelEdges(boolean). -Rename noSelfLoops() to allowsSelfLoops(boolean).|3|9|6|382|3462|309|103|26|58|8|45|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.GraphConfig, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.ImmutableUndirectedGraph, newSymbol=],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.AbstractGraph, newSymbol=com.google.common.graph.Graph.target(java.lang.Object)],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.ImmutableDirectedGraph, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.ImmutableDirectedGraph$Builder, newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Hypergraph, newSymbol=com.google.common.graph.Graph.isDirected()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Hypergraph, newSymbol=com.google.common.graph.Graph.allowsParallelEdges()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.DirectedGraph<N,E>,com.google.common.base.Predicate<? super N>,com.google.common.base.Predicate<? super E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.GraphProperties.roots(com.google.common.graph.DirectedGraph<N,? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.createDirected(com.google.common.graph.GraphConfig), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.source(java.lang.Object)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyFrom(com.google.common.graph.Graph<N,E>,com.google.common.graph.Graph<N,E>,com.google.common.base.Predicate<? super N>,com.google.common.base.Predicate<? super E>), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.isDirected()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Hypergraph, newSymbol=com.google.common.graph.Graph.hashCode()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.allowsParallelEdges()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.UndirectedGraph<N,E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.createUndirected(), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.DirectedGraph, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.UndirectedGraph, newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.allowsSelfLoops()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graph.inDegree(java.lang.Object), newSymbol=com.google.common.graph.Graph.inDegree(java.lang.Object)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.config(), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.ImmutableUndirectedGraph$Builder, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.GraphProperties.isCyclic(com.google.common.graph.DirectedGraph<? extends java.lang.Object,? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.AbstractGraph, newSymbol=com.google.common.graph.Graph.source(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.target(java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graph.outDegree(java.lang.Object), newSymbol=com.google.common.graph.Graph.outDegree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Hypergraph, newSymbol=com.google.common.graph.Hypergraph.target(java.lang.Object)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.createUndirected(com.google.common.graph.GraphConfig), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.DirectedGraph<N,E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.config(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.mergeEdgesFrom(com.google.common.graph.DirectedGraph<N,E>,com.google.common.graph.DirectedGraph<N,E>), newSymbol=],BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.graph.AbstractGraph.<init>(com.google.common.graph.GraphConfig), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Hypergraph, newSymbol=com.google.common.graph.Graph.allowsSelfLoops()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.mergeEdgesFrom(com.google.common.graph.DirectedGraph<N,E>,com.google.common.graph.DirectedGraph<N,E>,com.google.common.base.Predicate<? super E>), newSymbol=],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.AbstractGraph, newSymbol=com.google.common.graph.Graph.isDirected()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.createDirected(), newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.MULTIGRAPH, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractGraph.config(), newSymbol=],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.AbstractGraph, newSymbol=com.google.common.graph.Graph.allowsParallelEdges()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.UndirectedGraph<N,E>,com.google.common.base.Predicate<? super N>,com.google.common.base.Predicate<? super E>), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Hypergraph, newSymbol=com.google.common.graph.Hypergraph.source(java.lang.Object)],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.graph.AbstractGraph.config, newSymbol=],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.AbstractGraph, newSymbol=com.google.common.graph.Graph.allowsSelfLoops()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graph.degree(java.lang.Object), newSymbol=com.google.common.graph.Graph.degree(java.lang.Object)]
e6acf93a0d2fe6fdf12f8232b6002a66599ad6c7|Sat Mar 19 15:19:00 CET 2016|Update public suffix list. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=117625766|0|0|1|382|3462|309|103|19|35|8|0|
42292f577883abae1d8d1e9fd5443fe666007170|Mon Mar 21 18:50:32 CET 2016|Steer users away from ListenableFutureTask. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=117730099|0|0|1|382|3462|309|103|17|46|9|0|
2ce6c11ff71122bd9b55766f9116ee3b7bdb2d75|Mon Mar 21 18:51:08 CET 2016|Steer users away from dereference().|0|0|1|382|3462|309|103|19|59|6|0|
95953a50badf3b966ca35423e3146455aab9b107|Mon Mar 21 21:18:42 CET 2016|Make all AbstractFutures behave like TrustedFutures under GWT.|0|0|1|382|3462|309|103|20|18|5|0|
e31ea8307811fc8e82503fd901d55c7535c3e125|Tue Mar 22 01:45:19 CET 2016|Remove MapMaker.expireAfterAccess() from public API internally. Please use CacheBuilder instead. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=117774783|0|0|2|382|3462|309|103|20|65|6|0|
f1a0a2e2ada9e300412041a2190a8e6825e03858|Tue Mar 22 16:04:17 CET 2016|updated readme|0|0|0|382|3462|309|103|20|2|8|0|
72f1743e7c365f6d979625d55fdfda8c18ab127b|Tue Mar 22 16:05:49 CET 2016|Re-remove CharMatcher.WHITESPACE internally. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=117823196|0|0|1|382|3462|309|103|18|14|6|0|
94f1bf053ee27fa06b1f350646d57dab42d413df|Tue Mar 22 18:01:43 CET 2016|Deprecate all CharMatcher constants.|0|0|1|382|3462|309|117|17|14|9|0|
276bd8045c98935858ff068cd64dd07a7dc42fc0|Tue Mar 22 18:35:38 CET 2016|Add constants for X-Forwarded-Host and X-Forwarded-Port to HttpHeaders.|0|0|1|382|3462|311|117|17|5|7|0|
eadcba08e2c5290afbe30b88d1773cca6e82d980|Wed Mar 23 19:25:03 CET 2016|Link to the new spec instead of the old one, and do so more concisely.|0|0|2|382|3462|311|117|19|14|6|0|
65e6bd2efb54b9f6a94de0771db698cea8d2a1ca|Wed Mar 23 23:12:27 CET 2016|Remove hardcoded graph toString() tests. Instead, simply verify that every node and edge appears in the graph's string representation. This is done for a few reasons:|0|0|1|382|3462|311|117|21|51|8|0|
0657551ce26c5c1e2f43c3e191f05f238fdd2acf|Thu Mar 24 20:57:58 CET 2016|Changes to the LinearTransformation API: add inverse(), remove transformY(y), and rename transformX(x) to transform(x). Note that inverse().transform(y) is the new transformY(y).|0|0|1|382|3462|311|117|19|12|8|4|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.math.LinearTransformation.transformY(double), newSymbol=],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.math.LinearTransformation, newSymbol=com.google.common.math.LinearTransformation.transform(double)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.math.LinearTransformation.transformX(double), newSymbol=],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.math.LinearTransformation, newSymbol=com.google.common.math.LinearTransformation.inverse()]
8992cc01ce05904e3e91da265df0b832cc925546|Thu Mar 24 23:04:40 CET 2016|Re-run google-java-format on //java[tests]/com/google/common/ (up to escape) now that some formatting behavior has changed. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=118071047|0|0|31|382|3462|311|117|88|174|12|0|
45e1848250b10d88aadf726005612d1b2d328a1b|Tue Mar 29 23:23:14 CEST 2016|Add .DS_Store to .gitignore. From: mardibiase <mardibiase@gmail.com>|0|0|0|382|3462|311|117|35|2|7|0|
5249b00e4df2097166a7536992a842a18e6880d5|Wed Mar 30 19:08:17 CEST 2016|Add ByteSteams.exhaust(InputStream) and CharStreams.exhaust(Readable).|0|0|3|382|3464|311|117|19|59|7|0|
519be107c031c05b506d407a7b7cf5578a2764a0|Wed Mar 30 21:09:30 CEST 2016|Remove the use of static, shared buffers for skipping/discarding data.|0|0|4|382|3464|311|117|19|56|7|0|
5b608043b9d56a4427a2d8c1583f6f3c5a4e1023|Thu Mar 31 16:30:33 CEST 2016|Remove wildcard imports. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=118678029|0|0|0|382|3464|311|117|20|2|7|0|
c995616f2409e2b20e890e415d6dd3d38d5bc1fe|Thu Mar 31 17:13:28 CEST 2016|Implement Stopwatch.toString() under GWT.|0|0|2|382|3464|311|117|20|13|8|0|
66560f1d37c9de06a8963e7051fdc539f2f2f3c9|Fri Apr 01 23:58:44 CEST 2016|Fix typo in Javadoc: ImmutableList is a "list", not a "set". ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=118817173|0|0|1|382|3464|311|117|19|44|11|0|
20cd7a4f21941f993600bdb182fa00e8da3c342b|Sat Apr 02 00:36:07 CEST 2016|Add more warnings to the javadoc of Files.copy(File, File) ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=118821183|0|0|1|382|3464|311|117|18|54|7|0|
d248cc8c4d65694d934e96526e4eab0bedb8f5fd|Mon Apr 04 20:18:48 CEST 2016|Hide MapMaker.maximumSize() internally. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=118959646|0|0|1|382|3464|311|117|19|61|7|0|
5f0f00090a2c2f00916aefd8994988cce40f0060|Mon Apr 04 22:08:14 CEST 2016|Improve MoreExecutors.shutdownAndAwaitTermination. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=118971489|0|0|1|382|3464|311|117|19|51|6|0|
bcd212c9c7134555114ef6892cd61916f1f5ad71|Wed Apr 06 00:28:54 CEST 2016|Update Public Suffix List. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119098167|0|0|1|382|3464|311|117|19|38|7|0|
0b556868431f6bc11c12e41ad18b7ea4b8b226f8|Wed Apr 06 18:02:38 CEST 2016|Remove MapMaker removal notification queue and removal listener support. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119165768|0|0|4|382|3464|311|117|22|76|10|0|
3eb8face47fe7783daba0469b4842ff64946fb1f|Wed Apr 06 20:30:15 CEST 2016|Avoid importing classes that don't exist in GWT. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119183243|0|0|1|382|3464|311|117|20|44|6|0|
f753b087158d3b0f5bda8b5788ef2ab4f3d54581|Wed Apr 06 21:09:51 CEST 2016|Add javadocs about O(1) support for Iterables.getLast() on RandomAccess lists. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119188139|0|0|2|382|3464|311|117|20|63|5|0|
2b4067d26e1533a878349434b73deb1282f8432d|Thu Apr 07 00:25:21 CEST 2016|Delete MapMaker.maximumSize(), including it's evictionQueue. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119208974|0|0|4|382|3464|311|117|26|78|7|0|
2f3f7b1e766d4831c87cfc210c5ab46b12d289c9|Thu Apr 07 03:31:58 CEST 2016|Delete MapMaker.expireAfterAccess(), including it's recencyQueue. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119225281|0|0|4|382|3464|311|117|25|79|6|0|
2bcf189a62275bb23fd92edf4dc72e9ad849a89e|Thu Apr 07 17:49:57 CEST 2016|Add throwIfUnchecked and throwIfInstanceOf. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119271623|0|0|1|382|3466|311|117|20|12|10|0|
693e95371e544e927a2f6c3f3ebcb9b3d6c2f525|Thu Apr 07 20:32:33 CEST 2016|Stop toString() on Stats and PairedStats throwing when the count is zero. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119289337|0|0|2|382|3466|311|117|19|21|6|0|
c1c5dae45283129c67eb7d5d2b5b90eff4c92c4c|Sun Apr 10 03:26:18 CEST 2016|Graph.java: break out mutation- and edge-specific methods into subinterfaces: * Network.java: edge-specific methods (extends Graph) * MutableGraph.java: mutation methods for Graph (extends Graph) * MutableNetwork.java: mutation methods for Network (extends Network) Graph<N, E> becomes Graph<N>.|12|0|11|388|3496|311|114|32|61|6|66|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.GraphBuilder.allowsParallelEdges(boolean), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.GraphBuilder.from(com.google.common.graph.Graph<N,E>), newSymbol=com.google.common.graph.GraphBuilder.from(com.google.common.graph.Graph<N>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.GraphProperties.roots(com.google.common.graph.Graph<N,? extends java.lang.Object>), newSymbol=com.google.common.graph.GraphProperties.roots(com.google.common.graph.Graph<N>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.removeNode(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph.removeEdge(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.GraphBuilder.expectedEdgeCount(int), newSymbol=],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.Graphs.hashCode(com.google.common.graph.Graph<? extends java.lang.Object,? extends java.lang.Object>), newSymbol=com.google.common.graph.Graphs.hashCode(com.google.common.graph.Graph<? extends java.lang.Object>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph.addEdge(E,N,N), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.incidentNodes(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.mergeNodesFrom(com.google.common.graph.Graph<N,E>,com.google.common.graph.Graph<N,E>,com.google.common.base.Predicate<? super N>), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.GraphBuilder.allowsSelfLoops(boolean), newSymbol=com.google.common.graph.GraphBuilder.allowsSelfLoops(boolean)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.Graph<N,E>), newSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.Graph<N>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.allowsParallelEdges(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.edges(), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.GraphBuilder.expectedNodeCount(int), newSymbol=com.google.common.graph.GraphBuilder.expectedNodeCount(int)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableGraph.source(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.incidentEdges(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.removeEdge(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableGraph.inEdges(java.lang.Object), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.GraphBuilder.build(), newSymbol=com.google.common.graph.GraphBuilder.build()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.ImmutableGraph<N,E>), newSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.ImmutableGraph<N>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.parallelEdges(com.google.common.graph.Graph<N,E>,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.mergeEdgesFrom(com.google.common.graph.Graph<N,E>,com.google.common.graph.Graph<N,E>,com.google.common.base.Predicate<? super E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.addEdge(E,N,N), newSymbol=],BC[kind=TYPE_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.AbstractGraph, newSymbol=com.google.common.graph.AbstractGraph],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableGraph.adjacentEdges(java.lang.Object), newSymbol=],BC[kind=TYPE_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.GraphBuilder, newSymbol=com.google.common.graph.GraphBuilder],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.GraphBuilder.from(com.google.common.graph.Graph<N,E>), newSymbol=com.google.common.graph.GraphBuilder.from(com.google.common.graph.Graph<N>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableGraph.incidentEdges(java.lang.Object), newSymbol=],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Graph<N,E>), newSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Graph<N>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.GraphBuilder.directed(), newSymbol=com.google.common.graph.GraphBuilder.directed()],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.Graph<N,E>), newSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.Graph<N>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableGraph.allowsParallelEdges(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableGraph.outEdges(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableGraph.incidentNodes(java.lang.Object), newSymbol=],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.ImmutableGraph<N,E>), newSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.ImmutableGraph<N>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.inEdges(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.oppositeNode(com.google.common.graph.Graph<N,? extends java.lang.Object>,java.lang.Object,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableGraph.edges(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.mergeNodesFrom(com.google.common.graph.Graph<N,E>,com.google.common.graph.Graph<N,E>), newSymbol=],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.Graph<N,E>), newSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.Graph<N>)],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Graph<N,E>), newSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Graph<N>)],BC[kind=TYPE_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.addEdge(com.google.common.graph.Graph<N,E>,E,java.lang.Iterable<N>), newSymbol=],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.GraphBuilder.from(com.google.common.graph.Graph<N,E>), newSymbol=com.google.common.graph.GraphBuilder.from(com.google.common.graph.Graph<N>)],BC[kind=TYPE_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph, newSymbol=com.google.common.graph.ImmutableGraph],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Graph<N,E>), newSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Graph<N>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.adjacentEdges(java.lang.Object), newSymbol=],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.GraphProperties.isCyclic(com.google.common.graph.Graph<? extends java.lang.Object,? extends java.lang.Object>), newSymbol=com.google.common.graph.GraphProperties.isCyclic(com.google.common.graph.Graph<? extends java.lang.Object>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph.addNode(N), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Graph<N,E>,com.google.common.base.Predicate<? super N>,com.google.common.base.Predicate<? super E>), newSymbol=],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.ImmutableGraph<N,E>), newSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.ImmutableGraph<N>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.addNode(N), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph.edgesConnecting(java.lang.Object,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.outEdges(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.target(java.lang.Object), newSymbol=],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.Graphs.equal(com.google.common.graph.Graph<? extends java.lang.Object,? extends java.lang.Object>,com.google.common.graph.Graph<? extends java.lang.Object,? extends java.lang.Object>), newSymbol=com.google.common.graph.Graphs.equal(com.google.common.graph.Graph<? extends java.lang.Object>,com.google.common.graph.Graph<? extends java.lang.Object>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.selfLoopPredicate(com.google.common.graph.Graph<? extends java.lang.Object,E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.edgesConnecting(java.lang.Object,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph.removeNode(java.lang.Object), newSymbol=],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.Graphs.toString(com.google.common.graph.Graph<? extends java.lang.Object,? extends java.lang.Object>), newSymbol=com.google.common.graph.Graphs.toString(com.google.common.graph.Graph<? extends java.lang.Object>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.source(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.mergeEdgesFrom(com.google.common.graph.Graph<N,E>,com.google.common.graph.Graph<N,E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableGraph.target(java.lang.Object), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.GraphBuilder.undirected(), newSymbol=com.google.common.graph.GraphBuilder.undirected()],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.GraphBuilder.build(), newSymbol=com.google.common.graph.GraphBuilder.build()]
293e69ed6449f2b9975450e903a2a93ff7ad264c|Mon Apr 11 00:32:35 CEST 2016|Let PackageSanityTests run over the entire package (and stop special casing). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119488117|0|0|0|388|3496|311|114|20|2|7|0|
2645626b6c724f1b9535e8bb49663c11e661a5a7|Mon Apr 11 07:58:26 CEST 2016|Followup to "Let PackageSanityTests run over the entire package (and stop special casing)." ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119501361|0|0|0|388|3496|311|114|17|2|5|0|
946ebccece2c45cce528cdc6d2db1aa31d2cfa73|Wed Apr 13 18:44:22 CEST 2016|Currently, SomeClass<?>.getSubType(SubClass<?, OtherT>) returns SubClass<?, OtherT>. However, if we do NotGeneric.getSubtype(SubClass<OtherT>), we get SubClass as a raw type instead of SubClass<OtherT>.|0|0|1|388|3496|311|114|18|58|10|0|
e0198af556f68cc3a5cd20d638a5bba00c731c48|Thu Apr 14 02:19:56 CEST 2016|Add char overload to Joiner.withKeyValueSeparator() to parallel the overload in Splitter.withKeyValueSeparator(). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119803558|0|0|1|388|3497|311|114|20|11|7|0|
c2abe9fd5346ed443ace463d31b2673f0a1e3d97|Thu Apr 14 22:03:22 CEST 2016|Add @GwtIncompatible. This isn't currently necessary but may be so someday, so I've been trying to establish the practice. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=119881900|0|0|1|388|3497|311|114|18|32|6|0|
49e7d716f0f72d00c490864c3d11b815cfe93ec4|Fri Apr 15 19:23:26 CEST 2016|Make some of Throwables available under GWT.|0|0|1|388|3497|311|114|20|13|5|0|
03e61eefd8bb423859d35809d50877f8af8874cb|Fri Apr 15 23:33:24 CEST 2016|Work around Eclipse bug that previously affected GWT and now affects j2objc (with -sourceLevel 8): https://bugs.eclipse.org/bugs/show_bug.cgi?id=443596|0|0|2|388|3497|311|114|21|89|8|0|
d02eda3dc4e1066f90b091d29f0323287cbd5b95|Mon Apr 18 17:15:28 CEST 2016|"subType" -> "subtype" "superType" -> "supertype"|0|0|1|388|3497|311|114|20|58|6|0|
4c39fc6e3543700272764fa707311bb7c22d3e73|Tue Apr 19 17:45:08 CEST 2016|AbstractServices failure exceptions report what service failed to help with debugging tests with many services. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120232421|0|0|1|388|3497|311|114|19|26|7|0|
e6003692500352e1ba59eee5c93bc21acb3f46c0|Tue Apr 19 19:49:04 CEST 2016|Stop using exceptions as flow control in isUriInetAddress().|0|0|1|388|3497|311|114|18|26|5|0|
660634db9f0aca515d34931e6afa0f032b197918|Tue Apr 19 23:50:05 CEST 2016|Reduce the memory usage of Networks by roughly 20%. Delete the IncidentNodes class. Remove (unused) equals/hashcode impl from NodeConnections. Additionally, removeEdge() is now O(1) in all cases (used to be O(D) for networks with parallel edges). edgesConnecting() is now O(1) for networks that don’t allow parallel edges (used to be O(D), even though a network without parallel edges cannot return > 1 edge for this method). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120272801|5|1|7|388|3497|311|114|26|55|6|2|BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.graph.AbstractConfigurableNetwork.edgeToIncidentNodes, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractConfigurableNetwork.checkedIncidentNodes(java.lang.Object), newSymbol=]
dd6b0e8b0f143d357784ddb4c16223a3ac125113|Wed Apr 20 00:22:35 CEST 2016|Make mutable directed graphs about 40% smaller. Another nifty benefit: directedGraph.adjacentNodes(node).size() is now O(1). Remove (unused) equals/hashcode impl from NodeAdjacencies.|0|0|5|388|3497|311|114|20|55|7|0|
8a0ac6c8f7b95effe92e598db769839833463fd0|Wed Apr 20 02:07:33 CEST 2016|Update documentation for Interners. Since Java 7, the String.intern() does not allocate the strings in permgen, but instead on the heap (in a table whose bucket size is configurable using XX:StringTableSize).|0|0|1|388|3497|311|114|19|51|8|0|
717146e3910cf4e5243defa3760c456c4dc16ecb|Wed Apr 20 02:51:24 CEST 2016|Add some validation to predecessor/succesor counts. This should also catch the unlikely (impossible?) case where there are more than Integer.MAX_VALUE predecessors or succesors. Alternatively we could change these to longs, but that adds ~8 bytes to every node, and I'm already pretty sure a HashMap cannot hold more than 2^30 entries. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120291028|0|0|1|388|3497|311|114|20|53|10|0|
80dad6bf149f9b8d66e4db4436034cf6b7018398|Wed Apr 20 17:05:56 CEST 2016|Support reflection-less atomic updates in AggregateFutureState and InterruptibleTask as in AbstractFuture.|0|0|2|388|3497|311|114|20|45|8|0|
02dad9587b008a333a9985fe7e043c0c82618549|Wed Apr 20 19:02:51 CEST 2016|Clean up the impls of edges connecting in the no parallel edges allowed case. Slightly optimize contains() by avoiding constructing an interator. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120347747|1|0|2|388|3497|311|114|21|53|7|0|
b734b00d9c190db6e70555d3937f32fda9f52985|Wed Apr 20 19:07:08 CEST 2016|Make sure edgesConnecting() is unmodifiable in the parallel edges allowed case. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120348240|0|0|2|388|3497|311|114|20|57|6|0|
dbd485ec5fcd514d1361af194dc69aa28ee07780|Wed Apr 20 21:55:26 CEST 2016|Small optimization for node/edge containment. It wouldn't be worth it if nodes()/edges() returned they keysets directly, but wrapping in an unmodifiableset involves an extra object creation and subsequent garbage collection. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120366484|0|0|4|388|3497|311|114|21|53|8|0|
a901d4fcedf9c1aa621ebb2c1257c0279dc47a3a|Thu Apr 21 06:20:08 CEST 2016|Suppress what will soon be an error-prone compile error internally.|0|0|0|388|3497|311|114|19|2|11|0|
2ee69f587c4285cbb80f40d0d81c517d4778878c|Fri Apr 22 19:23:09 CEST 2016|Change name of Animal Sniffer run. The old name includes the version of Java that we're running against. This would otherwise become an unnecessary diff between the Java 8 and Android branches. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120559577|0|0|0|388|3497|311|114|18|2|7|0|
f206690a68af12667fea42eb6df515c98dedf575|Mon Apr 25 16:07:17 CEST 2016|Remove MapMaker.expireAfterWrite(), the expirationQueue, ticker related functionality, and all expirable/evictable related implementation details. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120703596|0|0|4|388|3497|311|114|23|72|7|0|
5ab9ab92200446e240934fb0b06d9cb497622f57|Mon Apr 25 17:31:26 CEST 2016|Delete MapMaker.softValues(). Delete unused NullConcurrentMap and NullComputingConcurrentMap implementations. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120709309|0|0|3|388|3497|311|114|24|73|7|0|
d300191a42cbfa410c7f8c5c82ecb4383c01e119|Mon Apr 25 20:58:17 CEST 2016|Add spaces to annotations inside comments to prevent them from being interpreted as real code when the file is parsed by tools that behave like the checker framework (see http://types.cs.washington.edu/checker-framework/current/checker-framework-manual.html#annotations-in-comments). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120731063|0|0|1|388|3497|311|114|21|48|5|0|
027e336819e18d7ac9b0d65301c3eed9ceaf3264|Mon Apr 25 21:29:44 CEST 2016|Delete GenericMapMaker parent class now that generic parameterization is no longer needed (caching APIs are gone). Delete unused NullEntry and AbstractReferenceEntry. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120734317|0|1|2|388|3497|311|114|19|66|8|0|
6ea15f3891e17a993fd87d86866296442980b591|Tue Apr 26 15:59:45 CEST 2016|Add some missing @Beta's for new stuff in 20.0. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120809190|0|0|6|388|3497|311|114|23|31|6|0|
e3b6106c1f5798c49f95358687cdbfe493dfd90b|Tue Apr 26 18:19:17 CEST 2016|Added NaCL binaries to media type list. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=120819293|0|0|1|388|3497|313|114|20|61|8|0|
ddda106332902b7b0888eb3b04b8c538e6f3e8d6|Tue Apr 26 20:41:36 CEST 2016|Delete warning that TimeLimiter might be changed significantly.|0|0|1|388|3497|313|114|18|12|6|0|
1de67afcb295c771fb00a98281c6becf74926e76|Tue Apr 26 22:03:24 CEST 2016|Predicates.subtypeOf, a correctly-named duplicate of Predicates.assignableFrom. Deprecate the latter. Add javadoc.|0|0|1|388|3498|313|115|18|47|6|0|
6c86373a9f7407af9a8a921435ee2e0e1ade922f|Fri Apr 29 22:30:36 CEST 2016|Fix a minor oversight in using a constant in LongMath for its intended purpose. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=121145870|0|0|1|388|3498|313|115|20|23|7|0|
aa02b68afbb05d19aa06e6b41bcc8c20fc92ea53|Tue May 03 17:03:01 CEST 2016|Deprecated Throwables.propagate() ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=121375741|0|0|1|388|3498|313|116|18|12|9|0|
a393083a312bbc0974be0ce567e56ca17b7ca757|Tue May 03 17:03:44 CEST 2016|Remove @Beta from Throwables.throwIfInstanceOf() and throwIfUnchecked(). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=121375812|0|0|1|388|3498|313|116|17|11|5|0|
695f19022688ac1a724aeffa7eddf0f8deb6f0fb|Tue May 03 19:06:57 CEST 2016|Adds content security policy (CSP) headers, which are used by older user agents. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=121387099|0|0|1|388|3498|317|116|18|5|6|0|
18b794aba3d0bedcc0f65b41e66521db25f63323|Tue May 03 19:58:01 CEST 2016|Rename ConfigurableNetwork->ConfigurableMutableNetwork and ConfigurableGraph->ConfigurableMutableGraph. A followup CL will rename AbstractConfigurableNetwork->ConfigurableNetwork and AbstractConfigurableGraph->ConfigurableGraph (this is being done in two seperate CLs otherwise critique doesn't understand it's a rename). The above mentioned classes are not actually abstract, so calling them Abstract* is wrong. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=121393585|2|2|2|388|3498|317|116|22|46|8|0|
42bd9bef16ea055965aa8a40ad1242b950702893|Tue May 03 22:47:38 CEST 2016|Make the AbstractConfigurable* classes actually abstract. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=121411875|0|0|2|388|3498|317|116|19|47|7|0|
f400dd0b93272a156bbf471edf03b3bf2ba65d70|Wed May 04 18:42:40 CEST 2016|Inline remaining usages of Throwables.propagate. We are removing all calls in preparation for deleting the method. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=121489882|0|0|1|388|3498|317|116|17|53|10|0|
14a372375b2f3786a0962966aec378d62dc7831b|Wed May 04 19:22:52 CEST 2016|Delete unused methods in ConfigurableMutable*. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=121494418|0|0|2|388|3498|317|116|21|42|7|0|
a6dcca483a2dcfd36e00e5c9eaa8f2158128fa97|Wed May 04 22:54:59 CEST 2016|Annotate the GWT client copy of ImmutableList.add* with @CanIgnoreReturnValue. The server copy already has this annotation. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=121516405|0|0|0|388|3498|317|116|19|2|7|0|
08d290bbba90e954dd2873e8e4e3d1cc96229b36|Wed May 04 23:34:11 CEST 2016|Deprecated Throwables.propagateIfInstanceOf() and propagateIfPossible(). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=121520908|0|0|1|388|3498|317|118|19|13|8|0|
c234ed7f015dc90d0380558e663f57c5c445a288|Thu May 05 14:37:29 CEST 2016|Remove emptyIterator() from Guava. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=121572091|0|0|1|388|3497|317|117|20|53|6|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Iterators.emptyIterator(), newSymbol=]
2268de5221f052673c7ec2e883f8f8c2afe001c2|Wed May 11 01:04:59 CEST 2016|Expose {Int,Long}Math.isPrime to external users. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=121998832|0|0|2|388|3499|317|117|21|21|7|0|
67c6eead31950f1dcb60900b5dd33812cb298f54|Wed May 11 01:49:19 CEST 2016|isPrime: try to improve javadoc ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=122003309|0|0|2|388|3499|317|117|18|21|8|0|
7a7a663c67b006b1a01f2603a2aaea62972aaa70|Wed May 11 06:08:23 CEST 2016|Update public suffix list. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=122019817|0|0|1|388|3499|317|117|18|36|7|0|
8d0c8b531da925e5afa35ac9e9bced969d5213ea|Thu May 12 21:25:42 CEST 2016|Update javadoc of Futures#dereference to point to correct #transformAsync method. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=122184701|0|0|1|388|3499|317|117|18|53|7|0|
47b464a12eb901ad935b43a8720a152cb3a1fd4b|Fri May 13 18:40:19 CEST 2016|Rewrite the LongMath.SIEVE_30 constant in a more readable form. The new form is not numerically equivalent but the difference is only in the ignored bits 30 and 31. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=122266867|0|0|1|388|3499|317|117|18|20|5|0|
370c604dda193d01913c02a05630f3ae80bdd688|Mon May 16 21:05:25 CEST 2016|Use "}{@code @" or similar formulations to prevent things like "@Override" from being interpreted as tags. Remove some @Override tags entirely. Make other fixes as necessary. Move some code in the direction of the one-ish true-ish template-ish "<pre>   {@code ... }</pre>." ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=122443929|0|0|3|388|3499|317|117|20|69|7|0|
7efca38f152334b6bca45c411355607d39b4c4a7|Thu May 19 19:11:07 CEST 2016|Adding WOFF2 media type.|0|0|1|388|3499|318|117|19|62|10|0|
b09e955cf24482736cd6559786cfc10120ab867c|Fri May 20 12:28:33 CEST 2016|Restrict Unsafe.getLong() hack to x86_64 (amd64) and AArch64. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=122817458|0|0|1|388|3499|318|117|19|17|8|0|
7086f2ee96caee74013128bfa80b9fcb21b6a01a|Fri May 20 20:58:34 CEST 2016|Make iterating through predecessors() and successors() more efficient on directed graphs. Avoids doing a hash lookup for every element in the table. A rough benchmark shows that iteration takes slightly less than half the previous time. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=122853102|0|0|1|388|3499|318|117|18|50|8|0|
7037b865b955e0bbe697e735ed62d644d3a6ff01|Mon May 23 23:33:33 CEST 2016|Add a fallback in Ordering.leastOf to ensure the worst case of the quickselect component is bounded to O(k log k). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=123038053|1|0|1|388|3499|318|117|19|56|7|0|
f0351dde0b006721b68cd4926498e66414e137d8|Wed May 25 22:53:14 CEST 2016|Deprecate Ordering.binarySearch. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=123249690|0|0|1|388|3499|318|118|21|57|7|0|
6c23ac1620a6e78bc313fd3e6c0ee2fd6520ac6a|Wed May 25 23:28:07 CEST 2016|Remove unnecessary string concatenation ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=123253690|0|0|1|388|3499|318|118|19|19|6|0|
21af9b60469de976a0f7bfe38f48a5f10b906a9e|Thu May 26 17:34:07 CEST 2016|- Update links to URL and HTML specs where necessary. - Use https for all links, new and old. - Remove claim that the *fragment* will be percent-encoded at *parse* time, as this is apparently not true: "Unfortunately not using percent-encoding is intentional as implementations with majority market share exhibit this behavior." https://url.spec.whatwg.org/#fragment-state ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=123321924|0|0|1|388|3499|318|118|18|7|9|0|
18fec18334b242dc71d9baeadaff78e2323e99d5|Fri May 27 18:39:41 CEST 2016|<td><b> => <th>|0|0|1|388|3499|318|118|18|46|6|0|
52a6955f2a3f7d5e62bcb9561e5fc563b6e7fafb|Fri May 27 20:12:24 CEST 2016|Change MoreExecutors.invokeAnyImpl to accept <long, TimeUnit>. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=123436300|0|0|1|388|3499|318|118|19|55|8|0|
e53a8154368689026b3216fe259be4129c89fcd5|Fri Jun 03 07:42:56 CEST 2016|Make a couple of optimizations to UnsignedLongs.toString(x, radix):|0|0|1|388|3499|318|118|20|17|6|0|
681566ebd5f060433f9dfc5324d84b0454ce4fdb|Sat Jun 04 10:08:14 CEST 2016|Support owner type subtype relationship in TypeToken.isSubtypeOf() and TypeToken.getSubtype() ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=124038295|0|0|2|388|3499|318|118|20|63|7|0|
f3381da3d4697f38384b8f45c16a362518d58a76|Tue Jun 07 00:39:29 CEST 2016|Push asList() cache down into ImmutableCollection subtypes to avoid holding onto the extra reference in ImmutableList. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=124186158|0|0|5|388|3501|318|118|22|65|10|0|
d573ee9196951825eb574551322c5b9a2c23b61c|Tue Jun 07 20:31:55 CEST 2016|Add some missing @Nullable annotations to InetAddresses. Use static imports for Preconditions. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=124267108|0|0|1|388|3501|318|118|20|31|5|0|
477f645acc37e94a541a1998a23127d882277fa1|Tue Jun 07 21:01:17 CEST 2016|Suppress warning from comparing Object to itself. This was identified using Error Prone. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=124270612|0|0|0|388|3501|318|118|19|2|6|0|
015fbbdd21eb52529f841325cfe94323893099d8|Tue Jun 07 21:11:46 CEST 2016|Move Graphs.selfLoopPredicate() to GraphsTest.java ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=124271785|0|0|1|388|3500|318|118|19|51|6|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.selfLoopPredicate(com.google.common.graph.Network<? extends java.lang.Object,E>), newSymbol=]
5cac6264bc946d8532fd64b91da38a85646cb5b4|Tue Jun 07 23:01:13 CEST 2016|Allow linear white space before ';' character in MediaType. This is allowed by the relevant specs, AFAICT. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=124283184|0|0|1|388|3500|318|118|19|60|6|0|
cee9942d5ac735d8d143dad9cee019670f3b8ada|Wed Jun 08 20:00:10 CEST 2016|Document that we don't forward calls to default methods, except when we do. Also, standardize on <b> for Warnings. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=124370400|0|0|18|388|3500|318|118|24|70|23|0|
c550125af4a0da6d2ba5a6dc6d44fa400824d9d4|Wed Jun 08 22:38:52 CEST 2016|Fix some Graph/Network javadoc. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=124387755|0|0|2|388|3498|318|118|21|8|10|0|
ce340b320b78e7c3c758ece0a56ae17dd8e09a09|Thu Jun 09 00:29:12 CEST 2016|*Builder, graph classes: support element ordering using a new ElementOrder class.|1|0|10|390|3514|321|118|20|59|8|3|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Graph.nodeOrder()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network.edgeOrder()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.nodeOrder()]
70f37c12b4cb53f5bce07084a150ababf575596a|Mon Jun 13 17:41:00 CEST 2016|Fix usage example of ImmutableSortedMultiset.Builder.|0|0|1|390|3514|321|118|19|45|9|0|
eee9b2146655e142bd3d39675a9efc5c131b5199|Mon Jun 13 21:18:15 CEST 2016|Add a Charmander to CharMatcher. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=124753981|0|0|1|390|3514|321|118|18|13|7|0|
2d5bf218070babe00f63d663e55828e7d669c539|Tue Jun 14 18:08:38 CEST 2016|Remove @Beta from Escaper and UrlEscapers. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=124844727|0|0|2|390|3514|321|118|20|14|8|0|
d995d54831ca569bbcc3f932ae068d5470062104|Wed Jun 15 20:46:07 CEST 2016|Fixes mismatched parentheses in Graph javadoc. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=124975157|0|0|1|390|3514|321|118|18|8|12|0|
81bab84bb4136603a247ad61a51b699e48d82c4b|Thu Jun 16 05:22:49 CEST 2016|Update javadoc. The previous sample code was not actually doing what the comment describes. In particular, it was calling adjacentNodes() instead of successors(). The comment says "all nodes reachable from node", but adjacentNodes() will also travel AGAINST the direction of the edge (not necessarily "reachable" in the directed case). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125022633|0|0|2|390|3514|321|118|18|8|9|0|
dfe6f1663fff4181d3e24828324b18beabe83a1f|Thu Jun 16 16:34:22 CEST 2016|Make unmodifiableNavigableMap covariant in V.|0|0|1|390|3514|321|118|17|75|13|1|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Maps.unmodifiableNavigableMap(java.util.NavigableMap<K,V>), newSymbol=com.google.common.collect.Maps.unmodifiableNavigableMap(java.util.NavigableMap<K,? extends V>)]
7fbd99f23566e293a6b89db4639b91e31b6053b8|Thu Jun 16 22:02:42 CEST 2016|Change the return type of Network.incidentNodes() from Set<N> to Endpoints<N>. This also replaces the source() and target() methods on Network and moves them to Endpoints. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125092926|1|0|12|391|3520|321|116|28|61|8|14|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractConfigurableNetwork.source(java.lang.Object), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.Graph.nodeOrder()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Network.incidentNodes(java.lang.Object), newSymbol=com.google.common.graph.Network.incidentNodes(java.lang.Object)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Hypergraph.target(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Network.source(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractConfigurableNetwork.target(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.addEdge(com.google.common.graph.MutableNetwork<N,E>,E,java.lang.Iterable<N>), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=com.google.common.graph.Graph.nodeOrder()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Hypergraph, newSymbol=com.google.common.graph.Graph.nodeOrder()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Hypergraph.source(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Network.target(java.lang.Object), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.Network.edgeOrder()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Hypergraph, newSymbol=com.google.common.graph.Network.edgeOrder()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractConfigurableNetwork.incidentNodes(java.lang.Object), newSymbol=com.google.common.graph.AbstractConfigurableNetwork.incidentNodes(java.lang.Object)]
f159e3fc4d9dec1beea0cc39cd887250e6ea36b5|Thu Jun 16 22:58:23 CEST 2016|Delete the existing Hypergraph interface. We're pretty much 100% sure this is not where we want it in the interface hierarchy, and leaving it there as a public interface isn't helping anyone.|0|1|4|390|3518|321|116|20|8|7|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.Hypergraph, newSymbol=]
f5195606e82244b2d5c581aa3b160b798821826a|Fri Jun 17 17:54:07 CEST 2016|Work around javac bug. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125169771|0|0|0|390|3518|321|116|19|2|10|0|
7e9055fe8e74fafd022df80ce7001214c5329cba|Fri Jun 17 18:29:18 CEST 2016|Remove the redundant (inherited from Graph) adjacentNodes() method from Network, as well as some other javadoc cleanup I missed in [] ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125172452|0|0|1|390|3517|321|116|18|7|7|0|
3a70f36acc91ffa8c5c173171673083a3a0d3700|Fri Jun 17 18:54:37 CEST 2016|Update toString() for Endpoints in undirected case. Also, change test to use EqualsTester, which gives us coverage for hashCode(). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125174596|0|0|1|390|3517|321|116|18|44|9|0|
f1871a75754a1f26d0f15722a6a0e5aaa03ec76e|Fri Jun 17 19:09:23 CEST 2016|Clean up the implementation of roots() and move it to Graphs. This is part of the effort to delete GraphProperties.java, as discussed earlier. The other method in GraphProperties is isCyclic(), which I'd like to handle separately (e.g. it should handle undirected graphs if it's going to be in Graphs, or maybe moved to labs/). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125176121|0|0|2|390|3517|321|116|20|52|8|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.GraphProperties.roots(com.google.common.graph.Graph<N>), newSymbol=]
ef0b70ed311c37e0f9d64c5bd36895d4c02235df|Fri Jun 17 19:29:09 CEST 2016|Mark methods in Graphs that take a Predicate as @GoogleInternal until we can migrate to JDK 8's Predicate. Rename the merge*From() methods to copy*(). Change the behavior of copyEdges from copying over all edges (and adding incident nodes as necessary) to only copying over edges where the incident nodes are already present (and thus not adding any additional nodes), as was discussed in API review. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125178123|0|0|1|390|3512|321|116|18|53|10|8|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.mergeNodesFrom(com.google.common.graph.Graph<N>,com.google.common.graph.MutableGraph<N>,com.google.common.base.Predicate<? super N>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Graph<N>,com.google.common.base.Predicate<? super N>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.mergeEdgesFrom(com.google.common.graph.Network<N,E>,com.google.common.graph.MutableNetwork<N,E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Network<N,E>,com.google.common.base.Predicate<? super N>,com.google.common.base.Predicate<? super E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.mergeNodesFrom(com.google.common.graph.Graph<N>,com.google.common.graph.MutableGraph<N>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.mergeEdgesFrom(com.google.common.graph.Network<N,E>,com.google.common.graph.MutableNetwork<N,E>,com.google.common.base.Predicate<? super E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.mergeNodesFrom(com.google.common.graph.Graph<N>,com.google.common.graph.MutableNetwork<N,? extends java.lang.Object>,com.google.common.base.Predicate<? super N>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.mergeNodesFrom(com.google.common.graph.Graph<N>,com.google.common.graph.MutableNetwork<N,? extends java.lang.Object>), newSymbol=]
4736eea644d1d22e3f48bdfe4b315ee0e6288cfa|Sat Jun 18 03:58:50 CEST 2016|Update the immutable and mutable versions of copyOf() to have the correct restriction: don't make copies of Networks that allow parallel edges. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125224138|0|0|3|390|3512|321|116|21|54|8|0|
c514e3258a1da18c5609422743b4eebc2c887b4e|Mon Jun 20 17:19:06 CEST 2016|Give a more realistic usage example for EqualsTester. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125338610|0|0|0|390|3512|321|116|17|2|10|0|
5a6857187b707cdb6ac16fdf7c995b410dc93cb4|Mon Jun 20 21:17:40 CEST 2016|Delete the TODO to "try creating an abstract superclass that NetworkBuilder and GraphBuilder could derive from."|0|0|1|390|3512|321|116|18|15|9|0|
fe259bfc460bb9f67c0d2aa2a5b113c0af0a7200|Mon Jun 20 21:42:34 CEST 2016|Update variable names that referenced old node1/node2 names with new A/B names. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125368052|0|0|3|390|3512|321|116|19|52|7|0|
b8ebf50f13a864264da9dd120753bc5906b6c3e8|Mon Jun 20 21:56:56 CEST 2016|Lower "expected degree" for internal maps, of which we have O(N) per graph/network. This greatly reduces memory consumption for graphs of small average degree, in exchange for a small performance hit for graphs of large average degree. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125369630|0|0|4|390|3512|321|116|19|53|7|0|
668a35673fff8ae3acb8d12a3d5fdda41c1af20e|Mon Jun 20 22:03:22 CEST 2016|Prefer TODO with bug number over alias, plus add a couple TODOs re: graphs with parallel edges. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125370345|0|0|3|390|3512|321|116|19|55|8|0|
1148cc947810a8cbad6177d15d9a05ee97d14ed9|Tue Jun 21 01:14:13 CEST 2016|Add Graphs.replaceEdge() (@GoogleInternal for now). Especially useful if a caller has immutable weighted edges and needs to update an edge weight. Given that we want to encourage immutable elements (as opposed to the mutable weighted edge my team ended up using :P), seems worthwhile. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125392004|0|0|1|390|3512|321|116|17|5|9|0|
e246cf9a801497b64c54de03ca7331d767e8588f|Tue Jun 21 02:05:16 CEST 2016|Improve the performance of addEdge(). This doesn't change the big O runtime (it's already O(1)), but it does eliminate several hash lookups :) ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125397749|0|0|6|390|3512|321|116|19|52|8|0|
a0844f75a6138c438453bd7bb8853e80bf0865a9|Tue Jun 21 02:56:53 CEST 2016|Merge GraphErrorMessageUtils into GraphConstants. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125402353|0|1|8|390|3512|321|116|20|58|9|0|
25468d9a32c4723dd0d13087c0611960c6028dc5|Tue Jun 21 19:34:24 CEST 2016|Rename orderNodes() to nodeOrder() and orderEdges() to edgeOrder().|0|0|3|390|3512|321|116|19|43|8|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.NetworkBuilder.orderEdges(com.google.common.graph.ElementOrder<E1>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.GraphBuilder.orderNodes(com.google.common.graph.ElementOrder<N1>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.NetworkBuilder.orderNodes(com.google.common.graph.ElementOrder<N1>), newSymbol=]
ea4973c60724570d957f25bd827a8cadbba71ce6|Tue Jun 21 19:36:09 CEST 2016|Remove a retain cycle in FluentIterable. Even though "this.iterable = this" is a legitimate java code, it causes a memory leak when it is transpiled to objective-c via j2objc. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125467534|0|0|1|390|3512|321|116|19|60|11|0|
0c83700802007d8741f09232836ac37b0b3c11c4|Tue Jun 21 20:23:33 CEST 2016|Propagate toString() through TrustedListenableFutureTask, for better debug. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125473814|0|0|1|390|3512|321|116|19|20|6|0|
5c2f02f8ecda506398cefc3048aba2da4494e2f8|Tue Jun 21 22:24:42 CEST 2016|I remember why I did the parallel edge check before the self-loop check now! In the MutableGraph case, it's actually more efficient, because we can return early (rather than just throw an exception) in that case. And I have the same order in MutableNetwork just for consistency. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125487467|0|0|2|390|3512|321|116|19|47|6|0|
c0fa2df84f20dee3c58d22b3d18d30b1b836b72b|Tue Jun 21 23:15:27 CEST 2016|Fix typo in private method in Graphs. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125493802|0|0|1|390|3512|321|116|18|54|6|0|
b49d93bc0b428a29f84bc9cbd1537a7b51d8debe|Wed Jun 22 08:46:51 CEST 2016|I thiiiink there's a chance the current removeEdge() impl could still cause a CME. Either way, I have a change that avoids the issue and is more efficient, by removing the self node from the predecessors/successors before we start iterating through them. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125536109|0|0|1|390|3512|321|116|18|13|8|0|
6cf5dc8665a8396637f401cd9aee6985a65cec7b|Wed Jun 22 15:45:38 CEST 2016|Always wait around for the expected interrupt. In the current code, we sometimes stop waiting too early and never receive it. The main thread then waits forever to hear that the interrupt was received. The result is a flaky test. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125560176|0|0|0|390|3512|321|116|17|2|6|0|
fa375cce4ce6415d42342ef502988454a62b211a|Wed Jun 22 17:03:21 CEST 2016|Interrupt the producer thread instead of assuming it will exit naturally. If the SynchronousQueue producer doesn't try to put() in time for the consumer to accept the value, it hangs forever. The result is a flaky test.|0|0|0|390|3512|321|116|18|2|7|0|
9b9286cee07f3b239ae61f25bbea0e2fe583957f|Wed Jun 22 21:45:01 CEST 2016|A teensy weensy optimization for the no-self-loops case. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125596848|0|0|1|390|3512|321|116|18|14|6|0|
3963e35e57ec92dae33ea0b3e299524404159b0b|Wed Jun 22 21:50:11 CEST 2016|Test ImmutableMap.equals in ImmutableMapTest.testEquals. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125597377|0|0|0|390|3512|321|116|17|2|10|0|
acd1d3d410bb822e43990638c822f79854e9cde4|Thu Jun 23 06:45:05 CEST 2016|Make the predicate versions of copyOf() not call expected(NodeEdge)Size, because that may allocate too much memory if most elements don't pass the predicate. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125642699|0|0|1|390|3512|321|116|20|48|6|0|
2278f6654038473e7e9dc09e07686fe6913c78ce|Thu Jun 23 06:45:16 CEST 2016|Remove some TODOs I added a while ago that probably shouldn't be TODONE.|0|0|3|390|3512|321|116|17|50|7|0|
29976218c6e986bc836706fa5e5fef737f10a2f0|Thu Jun 23 14:42:14 CEST 2016|Remove trailing whitespace. It's marginally complicated a couple Java 8 branch integrations for me. Also, add trailing newlines, and replace tabs with spaces. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125668183|0|0|7|390|3512|321|116|68|80|7|0|
a2fde5411366a29259483c521955ef1fdcef280b|Thu Jun 23 18:41:31 CEST 2016|Delete some incorrect javadoc. ImmutableGraph doesn't evan *have* an edgesConnecting() method. For ImmutableNetwork, the statement isn't quite true either. In the case of no parallel edges allowed, it's actually O(1) (thanks to [] Given that, I think it makes sense to just remove the statement entirely. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125686408|0|0|2|390|3512|321|116|34|54|10|0|
aac086af38b6a8e68ca9de741fb6644b43e45608|Thu Jun 23 19:34:50 CEST 2016|Make sure all public classes/interfaces in common.graph have @Beta and @since.|0|0|12|390|3512|321|116|22|60|8|6|BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.AbstractGraph, newSymbol=com.google.common.graph.Graph.nodeOrder()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Network.incidentNodes(java.lang.Object), newSymbol=com.google.common.graph.Network.incidentNodes(java.lang.Object)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Network.target(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Network.source(java.lang.Object), newSymbol=],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.AbstractNetwork, newSymbol=com.google.common.graph.Graph.nodeOrder()],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.AbstractNetwork, newSymbol=com.google.common.graph.Network.edgeOrder()]
9d2a5e9beaf310d81134e3629e5ffec1854f420c|Fri Jun 24 07:52:55 CEST 2016|Make degree(node) on directed networks O(1) instead of O(D), at the cost of a teensy bit of memory (a self loop counter). In actuality it doesn't seem to take up any extra memory, perhaps due to how the object is padded/aligned. Additionally, this CL makes iterating through incidentEdges() slightly faster on directed networks if no self-loops are present. In the undirected case, adding and removing self-loop edges is now slightly faster.|0|0|9|390|3512|321|116|19|60|10|0|
4c816891bd5b7eeb6c9787a73f5a0bc9aba8bfd7|Fri Jun 24 17:48:12 CEST 2016|More safety checks when adding and removing edges, plus simplify the code. Rather than return a boolean, addEdge now asserts that it *always* add an edge (we avoid calling it at all if it wouldn't). Similarly for removing edges, removeEdge() now asserts that it always removes an edge - unless the graph is undirected and it's a self-loop edge. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125784233|0|0|5|390|3512|321|116|20|53|8|0|
ecabde5b336c79801f6d3eebb9266833abc85f99|Fri Jun 24 20:00:04 CEST 2016|Make the load factor for "inner" (per node/edge) hash maps and sets 1.0. Note that non-multi networks use HashBiMaps, which already have an unmodifiable load factor of 1.0. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125796201|0|0|5|390|3512|321|116|20|57|7|0|
4643834036b3af60e052bfa735a0addd04eabf85|Sat Jun 25 01:07:43 CEST 2016|I was reading through the class-level javadoc (which could use some cleaning up, but I think jrtom said he's working on that), and this passage struck me. The latter two options don't seem like something that would actually happen. For example, we allow nodes of any type, so an impl where the nodes store the topology and cannot be shared across graphs doesn't really make sense.|0|0|2|390|3512|321|116|18|9|8|0|
3b64d9c34377736ece64aec0207f62b6e5bc376a|Sat Jun 25 16:10:01 CEST 2016|Fix typo. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125863097|0|0|1|390|3512|321|116|18|42|11|0|
a54c34542dc5c3c2bfa4d9f10a8bc9c565d3835b|Sat Jun 25 16:16:11 CEST 2016|Fix broken generic types in ElementOrder. Added two tests, neither of which compile with the existing code! ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125863282|0|0|1|390|3512|321|116|18|39|8|2|BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.graph.ElementOrder.natural(), newSymbol=com.google.common.graph.ElementOrder.natural()],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_CHANGED, impactedSymbol=com.google.common.graph.ElementOrder.sorted(java.util.Comparator<S>), newSymbol=com.google.common.graph.ElementOrder.sorted(java.util.Comparator<S>)]
0ad7e8f68622fc13eb9bb4a881b9ae3ec63a8f47|Sat Jun 25 23:21:49 CEST 2016|Update example code snippet slightly (existing one doesn't techincally compile). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125873135|0|0|1|390|3512|321|116|18|44|9|0|
ef3b720d2a51b973c567416e97e3a7514517f737|Sun Jun 26 17:42:39 CEST 2016|Move the static "constructor" methods in ElementOrder above the class methods (as done in e.g. Endpoints). Also, remove "final" from the static methods, since it's not standard practice to include on static methods (and the class itself is final). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125901101|0|0|1|390|3512|321|116|19|42|8|0|
58c157015408bd6a11d3be9e4dd76cf617d3db53|Sun Jun 26 17:45:21 CEST 2016|Use some fancy logic to reduce the number of equality checks in certain cases for undirected endpoints. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125901163|0|0|1|390|3512|321|116|17|39|8|0|
e5a731c3b7507efadc2a61b7c1bf69b964a646c4|Mon Jun 27 18:03:42 CEST 2016|The JavaDocs for LinkedHashMultimap#keySet() don't specify the iteration order of the returned set, so making the documentation more specific. The new JavaDocs were copied from Multimap#keySet(), with the 2nd paragraph added by me. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125961795|0|0|1|390|3513|321|116|20|54|10|0|
50b4633420711d95606d42e5a2f0abd862771d6d|Mon Jun 27 21:05:20 CEST 2016|Delete the common.graph.algorithms subpackage. Move the... unusual retainWithTransity() method into the same package as its only caller. Move inducedSubgraph() into Graphs (dropped the "get" prefix) and tried to apply some sense of ordering to the class. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125983079|0|0|1|390|3514|321|116|20|52|7|0|
49c91f7d855d2334b1417e3b64767b2aed29a2bb|Mon Jun 27 22:55:55 CEST 2016|Makes copyNodes() and copyEdges() @GoogleInternal. kevinb mentioned earlier that he thinks those methods should be @GoogleInternal for now.|0|0|1|390|3511|321|116|18|53|9|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyNodes(com.google.common.graph.Graph<N>,com.google.common.graph.MutableGraph<N>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyEdges(com.google.common.graph.Network<N,E>,com.google.common.graph.MutableNetwork<N,E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyNodes(com.google.common.graph.Graph<N>,com.google.common.graph.MutableNetwork<N,? extends java.lang.Object>), newSymbol=]
7dbc4dff487c38fe0531f0fd4cd989f0b0329c38|Mon Jun 27 23:15:51 CEST 2016|Have more helpful error messages. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=125997504|0|0|2|390|3511|321|116|22|46|7|0|
c482dbe283fe2d87d9ea001f3fda74132134456c|Tue Jun 28 03:56:05 CEST 2016|Super nit fix: move <p> into the same line as comment (this is how rest of common.graph is formatted). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126025605|0|0|1|390|3511|321|116|17|38|7|0|
165ef0d34adffb8a5ac84b859e9d58cd68412193|Tue Jun 28 16:51:34 CEST 2016|Mention getOnlyElement() as an alternative in the Javadoc for getFirst().|0|0|1|390|3511|321|116|17|61|7|0|
2eecfca0cc07d3773dbb51a71bfb53aae8ca774e|Tue Jun 28 21:51:52 CEST 2016|Suppress SelfComparison error. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126106581|0|0|0|390|3511|321|116|21|2|8|0|
26304fc503be158226f1af31e06173a8d158fb62|Thu Jun 30 04:08:20 CEST 2016|Automated g4 rollback of changelist 125826869.|0|0|2|390|3511|321|116|19|8|7|0|
b03410a83c5c5aed312264846a5ea611be1093a9|Thu Jun 30 17:32:55 CEST 2016|Use N and E instead of S and T in get*MapForBuilder() methods. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126305518|0|0|2|390|3511|321|116|17|48|6|0|
b62bb981723123e7fa33dec0193ca6597f8ad54b|Thu Jun 30 18:10:19 CEST 2016|Update comment to be more accurate/descriptive. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126308525|0|0|1|390|3511|321|116|17|50|7|0|
47685055994a5f873c3f2d2f41190a519a883bf8|Thu Jun 30 19:42:27 CEST 2016|Fixing missing dep in concurrent. Not sure how targets are only now failing: [] ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126318059|0|0|0|390|3511|321|116|19|2|9|0|
1b1163b7e2c121d4a5b25b8966714201551976c4|Thu Jun 30 21:33:27 CEST 2016|Fix DoubleMath rounding bug identified in Guava issue 2509.|0|0|1|390|3511|321|116|18|18|9|0|
a5b1ce806d6b6e9271debc430d335638bbb327e9|Fri Jul 01 23:01:28 CEST 2016|Replace use of MapMaker.makeComputingMap in Ordering. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126444165|0|0|1|390|3511|321|116|17|48|7|0|
1a4d70b4ae4d3dc01670ce825d1666dc8a66cabf|Wed Jul 06 06:37:18 CEST 2016|Fix typo. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126665968|0|0|1|390|3511|321|116|17|8|7|0|
d215851eaa46fe012abc4232a9a65544c52e3a9c|Wed Jul 06 16:27:39 CEST 2016|Permit forwarding from a Future<V> to a Future<? extends V>. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126696175|0|0|2|390|3511|321|116|19|43|9|2|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ForwardingListenableFuture.delegate(), newSymbol=com.google.common.util.concurrent.ForwardingListenableFuture.delegate()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ForwardingFuture.delegate(), newSymbol=com.google.common.util.concurrent.ForwardingFuture.delegate()]
f941b2d560f71d98c07c049d0a22cdf2f443f5b7|Thu Jul 07 03:57:56 CEST 2016|An optimization for Graphs and Networks, inspired by Michael. Introduce "MapIteratorCache" and "MapRetrievalCache". MapIteratorCache is extremely light-weight and optimizes the follow case:|2|0|4|390|3511|321|116|22|51|10|0|
f1f4c88f47c7c2a260a0d9410392e233eaada068|Fri Jul 08 01:20:05 CEST 2016|Move oppositeNode() from Graphs to Endpoints and rename it otherNode(). Also make a few methods final. It changes the following code:|0|0|4|390|3511|321|116|20|60|8|3|BC[kind=FIELD_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractConfigurableNetwork.nodeConnections, newSymbol=com.google.common.graph.AbstractConfigurableNetwork.nodeConnections],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.oppositeNode(com.google.common.graph.Network<N,? extends java.lang.Object>,java.lang.Object,java.lang.Object), newSymbol=],BC[kind=FIELD_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractConfigurableNetwork.edgeToReferenceNode, newSymbol=com.google.common.graph.AbstractConfigurableNetwork.edgeToReferenceNode]
8a2e1844e0b16cc476a5fc9bb5e4b78691610bba|Fri Jul 08 04:48:31 CEST 2016|Avoid using MapRetrievalCache unless node lookup is expensive. The class constructs "CacheEntry" objects when adding to the cache, which if the cache is not used makes us slower, and even if the cache is used is roughly a wash speed-wise if map lookup is fast (e.g. a HashMap or ImmutableMap, and an object with a reasonable hashCode()). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126874176|0|0|2|390|3511|321|116|19|54|8|0|
6427916a307897e56796f37609506d1062d72163|Fri Jul 08 08:37:16 CEST 2016|Add the method Graphs.endpoints() that does what you expect: returns the endpoints corresponding to each edge in a graph. The whole "we print every edge in an undirected graph's toString() twice, and that's a feature not a bug *wink*" annoyed me. Also there's other cases, such as copyOf() and and getWeaklyConnectedComponents(), where we don't want to process each edge twice. In those particular cases they happen to be no-ops, but for cases where it's not, or where you do something computationally expensive, doubling up on undirected edges is bad :( ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126884706|0|0|2|390|3511|321|116|18|58|9|0|
7850a145998c2dd7c01f256d85f967bab0ca3294|Fri Jul 08 13:57:38 CEST 2016|Add ConcurrentHashMultiset.create(ConcurrentMap). Deprecated and 'MOE insert public' for ConcurrentHashMultiset.create(MapMaker). Migrate [] users to the latter.|0|0|1|390|3512|321|117|21|57|6|0|
df95a87ee451be485889487bd481695e0df8c03e|Fri Jul 08 14:00:49 CEST 2016|Delete MapMaker.makeComputingMap() and ComputingConcurrentHashMap. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126901506|0|1|1|390|3512|321|117|22|47|7|0|
cf2ee16221e38a2e600975f448b71e21fb321275|Fri Jul 08 18:36:04 CEST 2016|Update MapCacheTest so it's not flaky. Ensure the mapCache is cleared before every test so state is not persisted across tests. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126918869|0|0|1|390|3512|321|117|22|42|10|0|
6ed0a709a546f1d2c3de6a56c032c2c5261926ae|Sat Jul 09 02:35:18 CEST 2016|Update definitions of equals() and hashCode() for Graph/Network. The new hashCode() shouldn't change any behavior (of course) but should be more efficient for directed graphs. equals() does change behavior in certain corner cases (see [] but it was arguably broken before. To keep things simple, we now flat out say directed != undirected. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126965617|0|0|3|390|3512|321|117|20|56|9|0|
1e17b2598bdc8b7257a01f4457230838262132d3|Sat Jul 09 04:33:01 CEST 2016|Migrate from easymock to mockito in javatests/com/google/common/cache ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126971307|0|0|0|390|3512|321|117|19|2|6|0|
3f24df5f4ff41d0b70fdc8845bd4c4cadca896e2|Sat Jul 09 04:41:07 CEST 2016|Migrate from easymock to mockito in javatests/com/google/common/util/concurrent ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126971523|0|0|0|390|3512|321|117|18|2|7|0|
18080d258c897f4e357d95675c9394c54ad1719c|Sat Jul 09 04:43:38 CEST 2016|Increase timeout for each open-source GWT test method from 5 minutes to 10. The test that does static initialization of MathTesting is timing out. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126971588|0|0|0|390|3512|321|117|20|2|8|0|
390c506448d47842888943f2fb9371f51e3cbb75|Sat Jul 09 18:03:19 CEST 2016|Migrate from easymock to mockito in javatests/com/google/common/io ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=126993635|0|0|0|390|3512|321|117|19|2|7|0|
cfc06d3d2f2eec021b6d58d0c50e6884a4b63869|Sat Jul 09 18:31:40 CEST 2016|Fix 2 small typos in common.math Stats classes.|0|0|2|390|3512|321|117|18|19|6|0|
bf357415a7ef30e3100e7e8e2fc6b80129a9b74b|Sat Jul 09 22:50:10 CEST 2016|Update Public Suffix List. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127000299|0|0|1|390|3512|321|117|17|36|10|0|
acbdb82fa74bbe28ab1d81376f38d7868af8ebee|Sun Jul 10 22:07:05 CEST 2016|Slightly rearrange the methods in NodeConnections (I prefer all the Set-returning methods to be together). The subclasses still implement the methods "in order" due to their particular hierarchy. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127035785|0|0|2|390|3512|321|117|19|54|8|0|
e5367f117079576ba10675ae78ed4752f250c640|Mon Jul 11 18:33:32 CEST 2016|Fix typo in ForwardingMultiset.|0|0|1|390|3512|321|117|19|42|6|0|
373d18a79d446b2770b7b16545c6599203088aae|Mon Jul 11 19:33:37 CEST 2016|Enforce that various iterators are unmodifiable to prevent potential bugs. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127101187|0|0|5|390|3513|321|117|19|68|7|2|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Set.iterator(), newSymbol=com.google.common.collect.Sets$SetView.iterator()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Set.iterator(), newSymbol=com.google.common.collect.Sets$SetView.iterator()]
b610655ef7729fd5870d5a804e5fe48a119268bd|Mon Jul 11 20:15:46 CEST 2016|Migrate from easymock to mockito in javatests/com/google/common/hash ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127106598|0|0|0|390|3513|321|117|21|2|8|0|
c9839e4799abb13c2504f9cec7fae2743dbf441d|Mon Jul 11 21:01:46 CEST 2016|Migrate from easymock to mockito in javatests/com/google/common/collect ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127112056|0|0|0|390|3513|321|117|18|2|7|0|
78272bb5fda64a50355e82634deb2076dfab3b11|Mon Jul 11 21:36:57 CEST 2016|Split testFuzzyCompare(), which seems to be the main test to time out recently. This should reduce the flakiness to more tolerable levels. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127115918|0|0|0|390|3513|321|117|20|2|7|0|
f64d1070bf6f8a5d6778f736ceb2f26254286918|Tue Jul 12 01:04:58 CEST 2016|Remove the method Graphs.roots(). “roots” as we’re defining them isn’t really a standard term of art (I can only find references to ROOTED graphs, which have exactly one root). Additional reasons to remove:|0|0|1|390|3512|321|117|17|52|7|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.roots(com.google.common.graph.Graph<N>), newSymbol=]
6439299ec90bf6af70e7651ca4cc8a5a468edbd2|Tue Jul 12 01:32:33 CEST 2016|Remove the isDirected() method from Endpoints. Also remove Graphs.addEdge(), which was only used inside Graphs, and I wasn't a huge fan of (it's super easy to implement yourself if you need the functionality). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127142376|0|0|5|390|3511|321|117|19|65|8|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Endpoints.isDirected(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.addEdge(com.google.common.graph.MutableNetwork<N,E>,E,com.google.common.graph.Endpoints<N>), newSymbol=]
8319b5479afdf51629b8a08144604c40fbd6141a|Tue Jul 12 16:22:18 CEST 2016|Update link to Style Guide.|0|0|0|390|3511|321|117|18|2|7|0|
8be417067dc8a2d3c312d38cc712b7ea3d446dc5|Tue Jul 12 16:38:22 CEST 2016|Fixed the typo for javadoc|0|0|1|390|3511|321|117|16|44|7|0|
cb6938e0dac102685ded36d70e6225b01f1874d3|Tue Jul 12 21:45:09 CEST 2016|Make Endpoints.of(Un)Directed package private. I don't think it makes sense to create Endpoints outside the context of a Graph. Also, exposing these methods might encourage clients to try to make graphs with "mixed" (directed and undirected) edges, or even use Endpoints as a hacked up Pair. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127230487|0|0|1|390|3509|321|117|20|43|9|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Endpoints.ofUndirected(N,N), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Endpoints.ofDirected(N,N), newSymbol=]
163988050d56e39e36e95e5f938baf6429077a0e|Wed Jul 13 21:33:19 CEST 2016|Suppress error for comparing objects to themselves|0|0|0|390|3509|321|117|18|2|8|0|
7d45b192cf1bf3a45990afeb840a382760111dee|Wed Jul 13 22:54:18 CEST 2016|More test coverage! ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127355528|0|0|0|390|3509|321|117|17|2|7|0|
ab7808a6c737b1ae9125f074f552f7d89103ef2b|Wed Jul 13 23:10:16 CEST 2016|Make ImmutableNetwork.copyOf() more efficient in the case of directed networks that allow self loops. Sets.intersection().size() is linear in the size of the first set, whereas this is O(1) assuming degree() is O(1) (which at least in our impl, it is). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127357590|0|0|1|390|3509|321|117|17|50|9|0|
522debc80a9d3df903a018ea54f8aa419e82c44e|Thu Jul 14 02:51:23 CEST 2016|Add the Forwarded header (RFC 7239) to HttpHeaders.java. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127381583|0|0|1|390|3509|322|117|19|6|8|0|
501e3353f543e2cb3e0f147ec1329dbc7c7a6f3e|Thu Jul 14 02:53:29 CEST 2016|Update edgesConnecting().size() and edgesConnecting().isEmpty() to be more efficient for Networks with parallel edges. In particular, take advantage of the cached successor multisets. Currently the methods are always O(D). This will also be O(D) if successors hasn't been invoked, but will be O(1) for future calls. For example, with something like:|1|0|3|390|3509|322|117|19|49|8|0|
94cd09b519d6c9dfdd18b28cbe4b4d005300c600|Thu Jul 14 18:11:36 CEST 2016|Fix typo in GraphBuilder.nodeOrder() javadoc. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127438088|0|0|1|390|3509|322|117|17|13|10|0|
339d243bab64b744df808036de72cd1c5ebccc80|Thu Jul 14 19:53:02 CEST 2016|Update the javadoc for the MutableGraph/Network interfaces. Update three things:|0|0|4|390|3509|322|117|17|46|9|0|
9e54741abdccb0eb10cb1b3e3ccd98485e202db0|Thu Jul 14 23:01:40 CEST 2016|Delete the ImmutableSet.copyOf() inside edgesConnecting() for immutable networks. Three main points here:|0|0|1|390|3508|322|117|18|51|9|0|
a01998946b92508ab53b3fc8939744c1061dd135|Fri Jul 15 06:59:15 CEST 2016|Remove the public equal/hashCode/toString methods from Graphs. There are a variety of reasons for doing this:|0|0|6|390|3502|322|117|19|60|8|6|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.equal(com.google.common.graph.Graph<? extends java.lang.Object>,com.google.common.graph.Graph<? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.equal(com.google.common.graph.Network<? extends java.lang.Object,? extends java.lang.Object>,com.google.common.graph.Network<? extends java.lang.Object,? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.toString(com.google.common.graph.Network<? extends java.lang.Object,? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.hashCode(com.google.common.graph.Network<? extends java.lang.Object,? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.hashCode(com.google.common.graph.Graph<? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.toString(com.google.common.graph.Graph<? extends java.lang.Object>), newSymbol=]
474993ee985a387bfe3084011d1703cab6b517e1|Fri Jul 15 16:40:29 CEST 2016|Eliminate some duplicated code. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127538907|0|0|3|390|3502|322|117|19|56|8|0|
b79501ac1cf46d791a0a2f44ac208ee84247f9b3|Fri Jul 15 18:22:15 CEST 2016|Small tweaks to some methods in AbstractGraph/Networks. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127546964|0|0|2|390|3502|322|117|17|45|11|0|
453d9218face0014267fe39fc1e172c231b203a9|Fri Jul 15 18:30:24 CEST 2016|Rephrase the equals() javadoc in Graph. Remove same statement from Network since there currently are no subinterfaces of Network. Clean up a reference to "relation" (that's impressive it snuck in considering we ditched that name long before we actually checked in any code!). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127547695|0|0|2|390|3502|322|117|18|9|8|0|
d6ef78ff26c28401c4bd8a61b75cfdf052b65696|Fri Jul 15 19:19:31 CEST 2016|Rename NodeConnections to NetworkConnections and NodeAdjacencies to GraphConnections. Have a base interface called "NodeConnections". This change is just cosmetic right now (although we do refer to these things as "connections" everywhere, so it's nice to actually have "NodeConnections" be the base interface), but it will make more sense in the context of ValueGraph (there will be a ValueGraphConnections).|10|9|7|390|3502|322|117|23|63|8|4|BC[kind=FIELD_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractConfigurableNetwork.nodeConnections, newSymbol=com.google.common.graph.AbstractConfigurableNetwork.nodeConnections],BC[kind=FIELD_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractConfigurableGraph.nodeConnections, newSymbol=com.google.common.graph.AbstractConfigurableGraph.nodeConnections],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractConfigurableNetwork.checkedConnections(java.lang.Object), newSymbol=com.google.common.graph.AbstractConfigurableNetwork.checkedConnections(java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractConfigurableGraph.checkedConnections(java.lang.Object), newSymbol=com.google.common.graph.AbstractConfigurableGraph.checkedConnections(java.lang.Object)]
bb7a1ce573a6da955e095869bd3e06cb1449ae9e|Fri Jul 15 21:48:11 CEST 2016|Update imports ordering to the new java import order.|0|0|3|390|3502|322|117|29|61|9|0|
d17832598fd0b23265b3c29039490e47b23182b3|Sat Jul 16 00:04:40 CEST 2016|An optimization for removeNode() on undirected graphs. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127583081|0|0|1|390|3502|322|117|24|15|10|0|
595613322ec3972dc669c53f3d2dfaaec9af5c01|Sat Jul 16 00:18:16 CEST 2016|Add some test coverage for removeEdge(). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127584532|0|0|0|390|3502|322|117|19|2|9|0|
52b889e3d5b259afeb3c19a0f0115c8f999b221d|Sat Jul 16 17:46:30 CEST 2016|Change HashBasedTable to be backed by LinkedHashMaps so iteration order is deterministic. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127625411|0|0|1|390|3502|322|117|19|43|11|0|
d0ddcb8616dbfad3cb14f5fa4b54f866f3a7f4ff|Tue Jul 19 00:33:14 CEST 2016|Update imports ordering to the new java import order. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127766798|0|0|0|390|3502|322|117|91|2|8|0|
095942751f789e930877cd734355afb4b7a837a4|Tue Jul 19 01:06:06 CEST 2016|Update imports ordering to the new java import order. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=127770522|0|0|0|390|3502|322|117|74|2|8|0|
288ca09bc98b3d2a20beade2133378706884705c|Thu Jul 14 01:41:24 CEST 2016|Replace calls to deprecated Throwables.propagate() with "throwIfUnchecked(e)" (if it is possibly unchecked) and "throw new RuntimeException(e)".|0|0|1|390|3502|322|117|32|50|8|0|
545da1dd55a20982645f365f2f30b53ce52af39b|Fri Jul 22 18:46:24 CEST 2016|Optimize Ascii toUpperCase/toLowerCase for generic charsequences ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=128182386|0|0|1|390|3502|322|117|22|14|7|0|
202ba853a79bdbb987bedb54839ee79109b397fb|Fri Jul 22 20:51:13 CEST 2016|Remove unused import. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=128196200|0|0|0|390|3502|322|117|19|2|7|0|
01a834af3e320ada8457a2b8ccdbdf43e0bbeed7|Mon Jul 25 20:37:09 CEST 2016|Add MapMakerInternalMap to BenchmarkHelpers, mostly for the sake of getting support for MapMemoryBenchmark.|0|0|0|390|3502|322|117|22|2|8|0|
15f94ddbb6f1537bb5a8651c08a4c4fa592879a7|Mon Jul 25 20:40:11 CEST 2016|Fix typo in Splitter.limit javadoc.|0|0|1|390|3502|322|117|18|13|7|0|
85461bd3a1f2ccab17293650ad7660a481ddee25|Mon Jul 25 22:01:19 CEST 2016|Super source Objects to have Objects#equal(String, String) to improve JS performance.|1|0|1|390|3502|322|117|17|11|8|0|
2979ffab1dd3ff6c2d0e9c24d399f2008608932c|Mon Jul 25 23:11:34 CEST 2016|Graph.java: fix typo in documentation|0|0|1|390|3502|322|117|19|8|8|0|
1b2cb0589e53da75777f857d526327dfbf0f2890|Tue Jul 26 17:25:37 CEST 2016|Super source Strings#isNullOrEmpty to improve JS performance.|0|0|2|390|3502|322|117|20|13|6|0|
c00b6e07ad609901919093c74012147b64910213|Tue Jul 26 21:09:57 CEST 2016|Automated g4 rollback of changelist 128473677.|0|0|2|390|3502|322|117|18|12|6|0|
c46f7980cacd5dd91cef64117e1bd0f7419a1c85|Wed Jul 27 17:31:06 CEST 2016|Object shouldn't be tested for equality with itself. This was identified using Error Prone check. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=128588135|0|0|0|390|3502|322|117|19|2|8|0|
bfbcebedcef09d26538e5ad5c9a7cbe7d99fddc0|Thu Jul 28 04:22:08 CEST 2016|Object shouldn't be tested for equality with itself. This was identified using Error Prone check. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=128657125|0|0|0|390|3502|322|117|23|2|6|0|
d6235bd2cf3a551780b071c7022b2c8d2c96e955|Thu Jul 28 18:57:35 CEST 2016|Automated g4 rollback of changelist 128499385.|0|0|2|390|3502|322|117|20|14|9|0|
b6381b286a8cd45f1b7533b4e76abe202e8a5c23|Fri Jul 29 19:57:56 CEST 2016|Update MutableGraph javadoc to state in no uncertain terms that there can only be a single edge connecting a pair of nodes. Delete TODOs regarding parallel edges for Graphs, which we will not do.|0|0|7|390|3502|322|117|21|58|6|0|
4bfb25c13ad69f837c5171172517b9b109d6d5f6|Fri Jul 29 20:19:35 CEST 2016|Add guarantee of insertion-based order to HashBiMap. Preserve insertion order in GWT as well.|0|0|2|390|3502|322|117|19|52|9|0|
48affd07a86210f6e1b02a080a59d2b894adeeb7|Fri Jul 29 21:01:05 CEST 2016|Rename otherNode() to adjacentNode() in Endpoints.|0|0|3|390|3502|322|117|24|59|11|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Endpoints.otherNode(java.lang.Object), newSymbol=]
c48fdcf1825a68426f205542c77aff30c49804d6|Fri Jul 29 22:45:37 CEST 2016|Update Guava's J2ObjC dependency to version 1.1. This version includes the @RetainedWith annotation.|0|0|0|390|3502|322|117|18|2|10|0|
5803c43d7e79b969b12fb61ed423dbb07fddfc6c|Mon Aug 01 17:07:52 CEST 2016|Redesign of MapMakerInternalMap with the motivation of saving a lot of memory by not wastefully having stuff that's unneeded. The algorithm (the j.u.concurrent.ConcurrentHashMap-inspired segments of hash tables) is untouched.|0|0|3|390|3502|322|117|18|69|10|0|
3776f45d1054faaa5e368db33dc5ebcc38af0292|Mon Aug 01 22:37:42 CEST 2016|Flatten the Graph->Network hierarchy. In other words, it's no longer true that a Network IS A Graph. Instead, provide an asGraph() method that allows for viewing a Network as a Graph. Also, update a lot of code that should have been using Graph (instead of Network) to use Graph.|0|0|9|390|3512|322|117|27|66|8|3|BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network.asGraph()],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.AbstractNetwork, newSymbol=com.google.common.graph.AbstractNetwork]
f5b1c23b1604c4bdfb9902801e1fb61f17ac9ffa|Tue Aug 02 06:11:18 CEST 2016|Minor style tweak (doesn't actually change anything, but the better symmetry makes me happy).|0|0|1|390|3512|322|117|18|44|9|0|
71766941fdf7c29b88c9ae15e04c8532d603a642|Wed Aug 03 04:07:30 CEST 2016|Remove the *degree() methods from the Graph/Network interfaces. In a followup CL, we'll add a (correct) implementation of degree() as a static utility method in Graphs. But I'd like to get the client-affecting changes (i.e. ones where the longer I wait the more merge conflicts I get) out ASAP.|0|0|5|390|3500|322|117|22|56|10|12|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractGraph.inDegree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractNetwork.inDegree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractNetwork.outDegree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractGraph.degree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Network.outDegree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.inDegree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.outDegree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractNetwork.degree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Network.inDegree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.degree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Network.degree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractGraph.outDegree(java.lang.Object), newSymbol=]
828103fee56ece0dc1a613a330c995e10e553bbf|Thu Aug 04 19:21:16 CEST 2016|Use J2ObjC's @RetainedWith annotation to prevent leaks resulting from reference cycles between inverse maps.|0|0|9|390|3500|322|117|23|103|14|0|
e2483714e1cf3cf2ff11c6954f228ed0dc0d8d7e|Thu Aug 04 19:22:58 CEST 2016|Preliminary ValueGraph interfaces.|2|0|0|392|3505|322|117|21|8|10|0|
62ab4d2820243c1fac6c232a1cf7b7dc455ca107|Thu Aug 04 20:23:06 CEST 2016|Make the Endpoints subclasses private. Expose a package-private isDirected() method. The instanceof check felt a little hacky to me.|0|0|2|392|3505|322|117|19|51|9|0|
8f4ff6f348be4bf9ffd17e5a90d0f4b5f78aa9e2|Fri Aug 05 00:27:01 CEST 2016|Demote Network.adjacentEdges() from an interface to a utility method.|0|0|3|392|3505|322|117|20|55|9|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Network.adjacentEdges(java.lang.Object), newSymbol=],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.Graphs.parallelEdges(com.google.common.graph.Network<N,E>,java.lang.Object), newSymbol=com.google.common.graph.Graphs.parallelEdges(com.google.common.graph.Network<? extends java.lang.Object,E>,java.lang.Object)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.Graphs.parallelEdges(com.google.common.graph.Network<N,E>,java.lang.Object), newSymbol=com.google.common.graph.Graphs.parallelEdges(com.google.common.graph.Network<? extends java.lang.Object,E>,java.lang.Object)]
b501c7cec28c94d39c172c58fd7b5f506f019295|Fri Aug 05 16:32:08 CEST 2016|Update to GWT 2.8.0-rc1.|0|0|0|392|3505|322|117|19|2|9|0|
943bff9a21627e48cdd64f6d53cc8317aaafc76f|Fri Aug 05 21:45:40 CEST 2016|Add a service provider for the regex library used by common.base (e.g. Splitter.onPattern). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=129471520|4|0|3|392|3505|322|117|21|49|11|0|
7aa9178daece0553616f192dcd7a2fca771994c2|Sat Aug 06 16:55:31 CEST 2016|Rename MutableGraph.addEdge(N, N) to MutableGraph.putEdge(N, N) (to indicate that Graphs do not support parallel edges and for consistency with the upcoming ValueGraph interface). Change the order of parameters in MutableNetwork.addEdge(E, N, N) to MutableNetwork.addEdge(N, N, E).|0|0|5|392|3505|322|117|23|54|10|12|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Network.adjacentEdges(java.lang.Object), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=com.google.common.graph.MutableGraph.putEdge(N,N)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.MutableGraph.addEdge(N,N), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Network.outDegree(java.lang.Object), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.Network.asGraph()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.inDegree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Network.inDegree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.outDegree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.MutableNetwork.addEdge(E,N,N), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.degree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Network.degree(java.lang.Object), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.MutableNetwork.addEdgeV2(N,N,E)]
061da3b34c3497877bb65db6874f4e9610bed2e8|Mon Aug 08 04:09:24 CEST 2016|Fix a test not marked @Test|0|0|0|392|3505|322|117|21|2|10|0|
d58c05a1b4340676d85bf41fdfe4dcebcb0d7f23|Mon Aug 08 19:39:22 CEST 2016|AbstractGraphTest: use Truth-style assertions where possible.|0|0|0|392|3505|322|117|19|2|8|0|
f407f14352abeed3c38aba36b2032f9556933de2|Mon Aug 08 20:07:38 CEST 2016|while-statement did not loop|0|0|1|392|3505|322|117|18|47|10|0|
a3029230279a9d448bca6be6fd1ba14f941630ad|Fri Jan 08 00:21:33 CET 2016|Improve EvictingQueue.addAll()'s performance by skipping the head of collections larger than the size of the queue. Also clear the backing queue in such cases to avoid calling .remove() n times.|0|0|1|392|3505|322|117|19|41|11|0|
739a6f681c622033709f69b7145b61e226b9a852|Tue Aug 09 00:29:24 CEST 2016|Add the following method to the Graph interface:|1|0|9|392|3508|322|117|26|61|8|5|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Network.adjacentEdges(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractGraph.inDegree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractGraph.outDegree(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractGraph.degree(java.lang.Object), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.edges()]
a25dfcde87307642316239d6f2ab23f4109de09a|Tue Aug 09 01:42:00 CEST 2016|Remove the "? super" from the return type of the nodeOrder/edgeOrder methods. It doesn't actually provide any additional functionality for the user, just a mild annoyance. Also this is in line with the recommendation here:|0|0|6|392|3508|322|117|20|57|8|3|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graph.nodeOrder(), newSymbol=com.google.common.graph.Graph.nodeOrder()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Network.nodeOrder(), newSymbol=com.google.common.graph.Network.nodeOrder()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Network.edgeOrder(), newSymbol=com.google.common.graph.Network.edgeOrder()]
b3b5b648499b186a5cdd0361339332f224b7b98a|Tue Aug 09 02:57:55 CEST 2016|Remove a few unnecessary casts that were previously required due to the old "? super" signature. Some slight tweaks to AbstractNetwork.toString() method (no behavioral changes).|0|0|3|392|3508|322|117|19|52|8|0|
5562218b96f0b262deb5c0d2288c1bcc339dbbb2|Tue Aug 09 18:13:56 CEST 2016|Make ImmutableTable serializable.|0|0|5|392|3508|322|117|21|59|10|0|
5178ace93305d4c203ae866f7c3a442f952d8e99|Tue Aug 09 21:12:12 CEST 2016|Remove logging of regex compiler.|0|0|1|392|3508|322|117|21|12|9|0|
80a312f5a6c565d9dfe1355d723222c7ad8f4d1f|Wed Aug 10 05:53:27 CEST 2016|Some tweaks to the Endpoints class:|0|0|1|392|3507|322|117|20|17|9|21|BC[kind=METHOD_REMOVED, impactedSymbol=java.util.Collection.stream(), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.Endpoints, newSymbol=com.google.common.graph.Endpoints],BC[kind=METHOD_REMOVED, impactedSymbol=java.util.Collection.parallelStream(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.util.AbstractCollection.isEmpty(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.util.AbstractCollection.remove(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.util.AbstractCollection.toArray(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Endpoints.iterator(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.util.AbstractCollection.addAll(java.util.Collection<? extends E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.util.AbstractCollection.containsAll(java.util.Collection<? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.util.AbstractCollection.retainAll(java.util.Collection<? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.util.AbstractCollection.toArray(T[]), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.util.Collection.toArray(java.util.function.IntFunction<T[]>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Endpoints.contains(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.util.AbstractCollection.toString(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.util.AbstractCollection.clear(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.util.Collection.removeIf(java.util.function.Predicate<? super E>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.util.Collection.spliterator(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.util.AbstractCollection.add(E), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Endpoints.size(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=java.util.AbstractCollection.removeAll(java.util.Collection<? extends java.lang.Object>), newSymbol=]
8cc9ed6f04ed6d785227249a1fd1be621c45b17a|Wed Aug 10 21:04:44 CEST 2016|Bump timeout after recent flaky failure.|0|0|0|392|3507|322|117|19|2|8|0|
e076a9d722a8eb6bdb3f4da5aee9306a0376821b|Thu Aug 11 01:04:00 CEST 2016|Endpoints.java: revert language change in Endpoints.adjacentNode()'s exception message; "does not contain" seems more appropriate even though Endpoints is no longer a Collection.  "is incident to" implies that "Endpoints" is really a misnomer for "Edge", which is sort of OK for Graph but not so much for Network, and "contain" works in both cases.|0|0|1|392|3507|322|117|17|13|8|0|
62c8259058f3349cee51b2dd392bfe11664d4e9a|Thu Aug 11 14:29:35 CEST 2016|Rename addEdgeV2() to addEdge().|0|0|3|392|3507|322|117|20|51|8|4|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.MutableNetwork.addEdgeV2(N,N,E), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Network.nodeOrder(), newSymbol=com.google.common.graph.Network.nodeOrder()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Network.edgeOrder(), newSymbol=com.google.common.graph.Network.edgeOrder()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.MutableNetwork.addEdge(N,N,E)]
e8ed22a752dfd16ee3ff83f4233654775357b300|Thu Aug 11 17:21:46 CEST 2016|Use StringBuilder.append(a).append(b) instead of sb.append(a + b) in Iterators.java.|0|0|1|392|3507|322|117|21|52|9|0|
df95c9ee241355679bcda83803d551186b01d727|Thu Aug 11 18:15:21 CEST 2016|Fix compile-time constant expression overflows|0|0|0|392|3507|322|117|18|2|9|0|
c82e55f354858a7abbf4516db54e13599e1612f4|Thu Aug 11 20:24:37 CEST 2016|Use BitSet under GWT, as it's now available there. This lets us remove our manual emulation of BinaryTreeTraverser, and it moves us a step closer to allowing precomputed CharMatchers there (if we want to someday, which we might not due to memory concerns).|0|0|2|392|3507|322|117|18|49|7|0|
572fec480544f11385dc8462d88621776fae2ec8|Fri Aug 12 16:20:33 CEST 2016|Update Ordering javadoc to explain the Java 8 situation. Now with branchiness.|0|0|1|392|3507|322|117|20|47|9|0|
af1ce0bb68e01c1d04a0886e6f6bc3f537c57f43|Sat Aug 13 03:02:32 CEST 2016|Expand test coverage. Make validateGraph() a static method so ValueGraphTest can use it (a MutableValueGraph is a not MutableGraph so it can't extend AbstactGraphTest directly). Move removeEdge_existingEdge() up in the test hierarchy.|0|0|0|392|3507|322|117|20|2|8|0|
3a26a954c12ce3ba0540f93f7be62fc011304748|Sat Aug 13 03:59:14 CEST 2016|Update isCyclic() to work on both directed and undirected graphs. This is part of the effort to move it to Graphs (which I'll do in a followup CL), so we can delete the GraphProperties class!|0|0|1|392|3507|322|117|18|50|9|0|
b476c9eda993dbca13b48880ae61680a4cb6c131|Sat Aug 13 08:35:19 CEST 2016|Add some test coverage.|0|0|0|392|3507|322|117|19|2|10|0|
57ec8ce480d75c69f90f72e4faaf13dda25a7f67|Sat Aug 13 09:31:27 CEST 2016|ValueGraph implementation.|5|0|11|394|3517|322|118|23|58|8|9|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractConfigurableGraph.nodeOrder(), newSymbol=com.google.common.graph.AbstractConfigurableGraph.nodeOrder()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractConfigurableNetwork.nodeOrder(), newSymbol=com.google.common.graph.AbstractConfigurableNetwork.nodeOrder()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graph.nodeOrder(), newSymbol=com.google.common.graph.Graph.nodeOrder()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractConfigurableNetwork.adjacentEdges(java.lang.Object), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.Graph.edges()],BC[kind=FIELD_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractConfigurableGraph.nodeConnections, newSymbol=com.google.common.graph.AbstractConfigurableGraph.nodeConnections],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractConfigurableGraph.checkedConnections(java.lang.Object), newSymbol=com.google.common.graph.AbstractConfigurableGraph.checkedConnections(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph.edgeValueOrDefault(java.lang.Object,java.lang.Object,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractConfigurableNetwork.edgeOrder(), newSymbol=com.google.common.graph.AbstractConfigurableNetwork.edgeOrder()]
dc03be881cc6ff13ef5769c8b2eaa99e24cad4d8|Sun Aug 14 18:05:51 CEST 2016|Shift the nodeOrder/edgeOrder methods down in the Graph/Network interfaces. These are definitely "properties" of the graph, and should be under the label as such. Note that the AbstractConfigurable* implementation classes already have the methods in this order.|0|0|3|394|3517|322|118|19|10|9|0|
4b77bfafa9a59414a732e6f298f34b468e5e92a7|Mon Aug 15 17:01:42 CEST 2016|Delete TestGraphBuilder/TestNetworkBuilder. Remove the testing subpackage from common.graph.|0|0|0|394|3517|322|118|42|2|6|0|
13cdfeeb204c4b3786be57fb5a0ea113b29ced31|Mon Aug 15 19:43:55 CEST 2016|Clean up the javadoc for the mutable graph interfaces.|0|0|3|394|3517|322|118|21|9|6|4|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableValueGraph, newSymbol=com.google.common.graph.Graph.edges()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graph.nodeOrder(), newSymbol=com.google.common.graph.Graph.nodeOrder()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableValueGraph, newSymbol=com.google.common.graph.ValueGraph.edgeValueOrDefault(java.lang.Object,java.lang.Object,V)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=com.google.common.graph.Graph.edges()]
afdde25395a15a3f293ec9546eddcbfeb456093b|Mon Aug 15 20:05:00 CEST 2016|Fix source links.|0|0|0|394|3517|322|118|18|2|7|0|
0f0f616ef7962d97748e2b1bbbd539e96dcbc7b4|Mon Aug 15 20:57:22 CEST 2016|Add the methods Graphs.reachableNodes() and Graphs.transitiveClosure(). Three teams have already implemented similar logic! Also, looking through the remaining uses of the legacy Digraph, the only thing preventing many from being converted to common.graph is the lack of transitive closure. So I'd say there's very high demand for this.|0|0|2|394|3519|322|118|18|50|7|0|
2febb986da9ae9755dc0ead50c7890480ee87a97|Mon Aug 15 23:51:46 CEST 2016|Move GraphProperties.isCyclic() to Graphs, delete the GraphProperties class. Rename method to hasCycle(), because isCyclic() implies that it might be O(1). Also to be consistent if we ever add other "has" methods (e.g. hasSelfLoop(), hasTriangleSubgraph(), etc.).|0|1|1|393|3519|322|118|20|55|11|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.GraphProperties, newSymbol=]
6e62ae569837d8d2fc9d51c3ac6eddf0468f9143|Tue Aug 16 00:07:41 CEST 2016|Define equality for Graphs so that a Graph never equals a ValueGraph. This allows ValueGraphs to have the expected behavior when you query valueGraphA.equals(valueGraphB) (i.e. values are taken into account as well).|4|3|12|394|3527|322|118|23|65|9|7|BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.graph.AbstractConfigurableGraph.edgeCount, newSymbol=],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.ImmutableGraph, newSymbol=com.google.common.graph.ForwardingGraph.delegate()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractConfigurableGraph.containsNode(java.lang.Object), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graph.nodeOrder(), newSymbol=com.google.common.graph.Graph.nodeOrder()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.edges(), newSymbol=com.google.common.graph.ForwardingGraph.edges()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractConfigurableGraph.checkedConnections(java.lang.Object), newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.graph.AbstractConfigurableGraph.nodeConnections, newSymbol=]
53f72d87a9b98498398fe3d4a583c08961e5a98f|Tue Aug 16 00:37:57 CEST 2016|Delete the unused, @GoogleInternal copy* methods (in particular, copyNodes, copyEdges, and their Predicate-based counterparts). We're missing the ValueGraph version for all of these, and in the copyEdges case, also the Graph version. The Predicate-based methods have the obvious issue that we'd want to release with the Java-8 Predicate, not the Guava Predicate. copyNodes() and copyEdges() have the unfortunate issue of there not being an obvious correct answer for the whether the source or destination should come first in the parameters. And finally, copyEdges() requires us to decide what to do in the event that the destination graph doe not contain the incident nodes (and neither option is particularly intuitive). Overall, we'd rather not have to support these methods at this point.|0|0|1|394|3527|322|118|20|53|8|0|
ed84d09dff4e10673b2a28ed2d12d09865b34d86|Tue Aug 16 00:38:22 CEST 2016|Add a bit of test coverage for value graphs.|0|0|0|394|3527|322|118|19|2|7|0|
0798e33d8384abc87e673cdbca52b80ed5904ccf|Tue Aug 16 17:20:19 CEST 2016|Delete the NodeConnections interface. As an implementation detail we previously took advantage of the shared interface, but that is no longer the case, and such a trivial interface doesn't seem worth keeping around.|0|1|2|394|3527|322|118|17|7|7|0|
949b399eb099f9ebddb101139b6883229a744483|Tue Aug 16 18:25:18 CEST 2016|Slightly update wording on Graph.equals() javadoc.|0|0|1|394|3527|322|118|17|8|8|0|
99d3a02aaa9ad571c380fad7c2ac3b1377785b29|Tue Aug 16 19:08:52 CEST 2016|Shuffling from internal-only change. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=130430413|0|0|0|394|3527|322|118|19|2|11|0|
151e30fc903a5b6ed2c62367fea9150e929d931d|Wed Aug 17 00:09:38 CEST 2016|Add Hashtable to TestsForMapsInJavaUtil.|0|0|0|394|3527|322|118|19|2|9|0|
ceee77fafdc9bdc5e2e6df85e231879c4ab6d755|Wed Aug 17 18:46:23 CEST 2016|Rename "Graph" to "BasicGraph". Flip the inheritance hierarchy. Now, BasicGraph<N> extends ValueGraph<N, Presence>.|6|7|13|395|3525|323|118|30|64|7|16|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Endpoints.of(com.google.common.graph.Graph<? extends java.lang.Object>,N,N), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.Graph, newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Network.asGraph(), newSymbol=com.google.common.graph.Network.asGraph()],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.GraphBuilder, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.reachableNodes(com.google.common.graph.Graph<N>,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ValueGraphBuilder.from(com.google.common.graph.Graph<N>), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.AbstractGraph, newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractNetwork.asGraph(), newSymbol=com.google.common.graph.AbstractNetwork.asGraph()],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.inducedSubgraph(com.google.common.graph.Graph<N>,java.lang.Iterable<? extends N>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.hasCycle(com.google.common.graph.Graph<? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Graph<N>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.transitiveClosure(com.google.common.graph.Graph<N>), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.AbstractValueGraph, newSymbol=com.google.common.graph.AbstractValueGraph]
c3f9fef2e589d1555873349cce8c380f2c131653|Wed Aug 17 18:52:26 CEST 2016|Update error message for calling source/target on endpoints of an undirected edge.|0|0|1|395|3525|323|118|21|11|7|0|
41becc60f5e1d8b121846c890478d39e6ec42979|Wed Aug 17 20:55:32 CEST 2016|Rename ValueGraph to Graph.|7|7|11|395|3525|323|118|26|69|7|19|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableValueGraph.copyOf(com.google.common.graph.ValueGraph<N,V>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.transitiveClosure(com.google.common.graph.ValueGraph<N,? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.ValueGraph<N,V>), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.AbstractValueGraph, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Endpoints.of(com.google.common.graph.ValueGraph<? extends java.lang.Object,? extends java.lang.Object>,N,N), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractNetwork.asGraph(), newSymbol=com.google.common.graph.AbstractNetwork.asGraph()],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.AbstractBasicGraph, newSymbol=com.google.common.graph.AbstractBasicGraph],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.inducedSubgraph(com.google.common.graph.ValueGraph<N,V>,java.lang.Iterable<? extends N>), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.MutableValueGraph, newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Network.asGraph(), newSymbol=com.google.common.graph.Network.asGraph()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.reachableNodes(com.google.common.graph.ValueGraph<N,? extends java.lang.Object>,java.lang.Object), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.ImmutableValueGraph, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.hasCycle(com.google.common.graph.ValueGraph<? extends java.lang.Object,? extends java.lang.Object>), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.ImmutableBasicGraph, newSymbol=com.google.common.graph.ImmutableBasicGraph],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.BasicGraphBuilder.from(com.google.common.graph.ValueGraph<N,? extends java.lang.Object>), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableValueGraph.copyOf(com.google.common.graph.ImmutableValueGraph<N,V>), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.BasicGraph, newSymbol=com.google.common.graph.BasicGraph],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.ValueGraphBuilder, newSymbol=]
ec6f0cffe68e0736c04783b61f980f1271064dd9|Wed Aug 17 21:45:16 CEST 2016|Make equals/hashcode methods in AbstractGraph/Network final, since changing the behavior of these while still implementing the interface is incorrect.|0|0|2|395|3525|323|118|20|55|9|4|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.hashCode(), newSymbol=com.google.common.graph.AbstractGraph.hashCode()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.equals(java.lang.Object), newSymbol=com.google.common.graph.AbstractGraph.equals(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractNetwork.hashCode(), newSymbol=com.google.common.graph.AbstractNetwork.hashCode()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractNetwork.equals(java.lang.Object), newSymbol=com.google.common.graph.AbstractNetwork.equals(java.lang.Object)]
d0a31db68a8ef6ff2d2e53b694dc77308ce0d77e|Wed Aug 17 21:47:20 CEST 2016|Update some javadoc. Remove old @SuppressWarnings.|0|0|5|395|3525|323|118|20|55|7|5|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.hashCode(), newSymbol=com.google.common.graph.AbstractGraph.hashCode()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.equals(java.lang.Object), newSymbol=com.google.common.graph.AbstractGraph.equals(java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractNetwork.asGraph(), newSymbol=com.google.common.graph.AbstractNetwork.asGraph()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractNetwork.hashCode(), newSymbol=com.google.common.graph.AbstractNetwork.hashCode()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractNetwork.equals(java.lang.Object), newSymbol=com.google.common.graph.AbstractNetwork.equals(java.lang.Object)]
22936fd61d4ea05644acec71317003812f3f907b|Wed Aug 17 21:47:57 CEST 2016|Rename SimpleEdgesConnecting to EdgesConnecting to be consistent with our naming pattern for NetworkConnections (*NetworkConnections and *MultiNetworkConnections).|1|1|3|395|3525|323|118|19|50|7|0|
9718ea57e02620a44683465358ca8705438b89ec|Wed Aug 17 23:06:38 CEST 2016|Change the definition of hashcode for Networks (map of edges to endpoints) to more closely mirror hashcode for Graphs (map of edges to value). Also the map we're basing the hashcode on is now half the size for undirected networks, which is nice (a downside is that isolated nodes don't affect the hashcode, but I'm not too worried about that).|0|0|2|395|3525|323|118|17|51|7|0|
ed00daeb58e8ba143bb0cdfd4547c57985e2c862|Thu Aug 18 17:47:51 CEST 2016|Add more test coverage for Immutable graphs/networks.|0|0|0|395|3525|323|118|18|2|8|0|
72ad7a5ecbd9f04f7763ee873fa6eacdf40ce571|Thu Aug 18 18:02:28 CEST 2016|Move Network validation into a static method (will be useful for adding Network coverage to MutationTest later).|0|0|0|395|3525|323|118|17|2|7|0|
aad58839648feb938333a92330a99f9fa093a70b|Thu Aug 18 18:10:15 CEST 2016|Remove reference to hypergraphs in test!|0|0|0|395|3525|323|118|17|2|10|0|
a29aed7dd8b3163f9156f1af6d003f004b677e8c|Thu Aug 18 19:02:58 CEST 2016|Add *degree() methods back to Graph/Network interfaces, with correct formal definition this time (self-loops count twice).|0|0|4|395|3537|323|118|21|59|10|6|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network.inDegree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.outDegree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.degree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.inDegree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network.degree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network.outDegree(java.lang.Object)]
eb62df758064852a95a8095b4d3b2ff61a225cd4|Thu Aug 18 19:20:50 CEST 2016|Optimize directed graphs to consume less memory, at the cost of additional code complexity. Some very rough benchmarks also seem to indicate this has slightly faster runtime. I suspect this is due to improved cache performance/locality when using a single Map.|0|0|1|395|3537|323|118|20|44|6|0|
15dee03f00908a7d621ed93b358e376c4b2c96a2|Thu Aug 18 19:54:29 CEST 2016|More test coverage for graphs! Test adding and removing nodes/edges repeatedly. Currently only for Graph, will add similar coverage for Network later.|0|0|0|395|3537|323|118|18|2|8|0|
e16c9e16b2e645d884944b721522aeb85e4c8bbf|Thu Aug 18 20:00:16 CEST 2016|Update some javadoc in the graph builders, add sample code. Run g4 fix on the files.|0|0|3|395|3537|323|118|16|15|6|0|
ed63eb90b1f2feba71d7d3cde8c4611b853add6b|Sat Jul 16 22:16:06 CEST 2016|Completely overhaul top-level javadoc for common.graph interfaces in light of the new interface hierarchy. Spend a lot of time answering what I think will be the #1 question users have: should I use a Graph or a Network? Spend a lot less time defining graph theory terms, that's what wikipedia is for :) plus the method-level javadoc defines terms as necessary. Overall, make it a lot more concise. Javadoc that's too long for anyone to bother reading is just as good as javadoc that doesn't exist!|0|0|6|395|3537|323|118|19|12|8|13|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.Network.degree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.BasicGraph, newSymbol=com.google.common.graph.Graph.degree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableBasicGraph, newSymbol=com.google.common.graph.Graph.outDegree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.Network.outDegree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=com.google.common.graph.Graph.degree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=com.google.common.graph.Graph.outDegree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableBasicGraph, newSymbol=com.google.common.graph.Graph.degree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.BasicGraph, newSymbol=com.google.common.graph.Graph.outDegree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.Network.inDegree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=com.google.common.graph.Graph.inDegree(java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Network.asGraph(), newSymbol=com.google.common.graph.Network.asGraph()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableBasicGraph, newSymbol=com.google.common.graph.Graph.inDegree(java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.BasicGraph, newSymbol=com.google.common.graph.Graph.inDegree(java.lang.Object)]
d0b8e4a1edf3497aef345e93a170c46f6cbc7036|Thu Aug 18 23:40:49 CEST 2016|Update Network.asGraph()'s edge value methods to be consistent with how they're defined in the interfaces. Update tests to fail with the old implementation.|0|0|2|395|3537|323|118|20|56|6|0|
657c5a8fe1ba24d36835f0ae927051654faf3745|Thu Aug 18 23:51:26 CEST 2016|Some more cleanup of javadoc. Add specific language regarding undirected graphs since I feel the behavior there is non-obvious.|0|0|5|395|3537|323|118|19|10|8|0|
408a57887a14efeb3941b98c1b0de47fb4fa5127|Fri Aug 19 01:44:31 CEST 2016|Fix compile-time constant expression overflows ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=130697805|0|0|1|395|3537|323|118|17|13|7|0|
fe6a5c506a24a078fb48932741716524a2a5bb21|Fri Aug 19 01:51:52 CEST 2016|Super nit: move allowsParallelEdges() above allowsSelfLoops() in the Network interface (this is the order they're presented in NetworkBuilder, as well as the order in the implementing class).|0|0|1|395|3537|323|118|18|9|6|0|
2ce1eab5195e4dac688c790b35009eb96a493cb9|Fri Aug 19 01:56:32 CEST 2016|Fix typo|0|0|1|395|3537|323|118|19|9|9|0|
7d350c1eba46ad4776ddcf839219e56d15db5541|Fri Aug 19 17:04:32 CEST 2016|Expand on "question 3" from the graph/network javadoc, which I felt was a little hard to parse. Also some misc. javadoc cleanup.|0|0|3|395|3537|323|118|19|11|7|0|
d7a12d09fe0f4ee389a7a9bde75415a64fa249cd|Fri Aug 19 17:16:45 CEST 2016|Add NetworkMutationTest (parallel to GraphMutationTest).|0|0|0|395|3537|323|118|17|2|10|0|
98124f5f1dc4b6102c7c03032e3a6d705326914c|Fri Aug 19 18:38:45 CEST 2016|Change javadoc to refer to Mutable* interfaces. Technically, Graph/Network don't dictate anything when adding edges, because they don't have methods for adding edges.|0|0|2|395|3537|323|118|17|9|7|0|
adeb3c60455b381842ea745b8272282191695e37|Fri Aug 19 20:57:26 CEST 2016|Slightly update javadoc for inducedSubgraph(). Since edges() has different return type in Graph vs Network, have to use slightly different terminology here.|0|0|1|395|3537|323|118|19|55|6|0|
e1a9594a370ae39773dde429b3d912e48f07dc3f|Fri Aug 19 22:31:45 CEST 2016|Fix typo|0|0|1|395|3537|323|118|19|51|7|0|
8fef23a205c895d9fb45b2da4cbb243eab652f0f|Sat Aug 20 00:08:22 CEST 2016|Fix some stale language in a test.|0|0|0|395|3537|323|118|17|2|7|0|
12ef690bfbb1b28576ffe9b6c54bd17a6ea68410|Sat Aug 20 00:42:53 CEST 2016|Make Endpoints implement Iterable.|0|0|1|395|3538|323|118|17|43|9|0|
29398f1f2222ac019a57aba9a7bf5d07d03936a4|Sat Aug 20 01:18:31 CEST 2016|Delete the unused Graphs.parallelEdges(). Promote Graphs.adjacentEdges (back) to interface method, with a default impl in AbstractNetwork.|0|0|3|395|3538|323|118|22|54|8|3|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network.adjacentEdges(java.lang.Object)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.parallelEdges(com.google.common.graph.Network<? extends java.lang.Object,E>,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.adjacentEdges(com.google.common.graph.Network<? extends java.lang.Object,E>,java.lang.Object), newSymbol=]
3a2804bad68215ea046ad679958a29b5cbced8b8|Sat Aug 20 17:28:31 CEST 2016|Change allowsSelfLoops() to default to false for Graph/NetworkBuilder. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=130840045|0|0|4|395|3538|323|118|23|15|8|0|
825d8dcf1f3d310635223af42c72f5fdecd03324|Sun Aug 21 12:13:32 CEST 2016|Fix indentation.|0|0|1|395|3538|323|118|21|44|8|0|
dbfa8710de66c7cff24962fbce6ee02d2d5840de|Sun Aug 21 13:55:22 CEST 2016|Remove some superfluous checkNotNulls in NetworkConnections. On the nodes/edges, these are internal classes and those parameters have already been checked. On the calls to super.remove*, they've also already been checked.|0|0|4|395|3538|323|118|18|51|8|0|
4d5f8e0242e94256edd2d59bfb002adb44c083a2|Mon Aug 22 04:12:44 CEST 2016|Minor javadoc tweak.|0|0|3|395|3538|323|118|18|10|8|0|
ccccbf25427fbc2141ff9b502c6cbe467ac2a967|Mon Aug 22 17:10:48 CEST 2016|Add Graphs.transpose() static utility methods for viewing the transpose of a graph. See: https://en.wikipedia.org/wiki/Transpose_graph|0|0|1|395|3543|323|119|20|56|9|0|
c9914b84572ad3fdc572a016a0be4caaf785a00f|Mon Aug 22 19:40:47 CEST 2016|Return the underlying graph/network for multiple calls to Graphs.transpose()|0|0|1|395|3543|323|119|19|50|8|0|
fb3d380a567f088bd464fb9c9dc159980bf8bfcf|Mon Aug 22 21:42:21 CEST 2016|Prefer hardcoding constant over calculating at runtime.|0|0|1|395|3543|323|119|17|6|8|0|
f0cfb17400a63ec566886edc22c98f1e98b281e3|Mon Aug 22 21:43:26 CEST 2016|Add Vector tests to guava-testlib's TestsForListsInJavaUtil|0|0|0|395|3543|323|119|18|2|8|0|
e9482f34d0960a1b789301905e6ce59123d8a0ff|Tue Aug 23 16:26:59 CEST 2016|Disabling SelfEquals check for test|0|0|0|395|3543|323|119|18|2|8|0|
484e083653bef124948c449edc56195323b8d00a|Tue Aug 23 18:15:07 CEST 2016|Add @Nullable annotations.|0|0|2|395|3543|323|119|20|53|7|0|
af1dabf1b37fd74bfe074ad6d7a7fe8da5a61d12|Tue Aug 23 20:00:39 CEST 2016|NullPointerTester should not require @Nullable on the param of an equals() override|0|0|0|395|3543|323|119|18|2|10|0|
16d03d56aa85457a91b48f5b05dbf1701b2e880d|Tue Aug 23 20:34:46 CEST 2016|Allow atomic removal of 0 values from AtomicLongMap|0|0|1|395|3544|323|119|20|57|10|0|
6c63cf3c8a9d94821e2b24a96fb4c3564377051f|Wed Aug 24 00:27:39 CEST 2016|Fix bug in Helpers.isEmpty.|0|0|0|395|3544|323|119|20|2|8|0|
760da0368b49188928c6efd7eb150d3df7fe96e4|Wed Aug 24 20:48:52 CEST 2016|Use ArrayDeque and PriorityQueue under GWT (where they're newly available), and provide synchronizedQueue, synchronizedDeque, and MinMaxPriorityQueue there. This also lets us delete our manual implementation of TreeTraverser and avoid LinkedList internally.|0|0|8|395|3544|323|119|21|66|9|0|
5ebbc983c70c3be177bcedaed991615f75fa14c5|Wed Aug 24 23:49:07 CEST 2016|Automated g4 rollback of changelist 131198531.|0|0|8|395|3544|323|119|24|67|8|0|
3208687a98d6decf4074389d6b2b40e667ac6dae|Thu Aug 25 16:01:27 CEST 2016|Make nonCancellationPropagating available to GWT.|0|0|1|395|3544|323|119|25|58|12|0|
cfd409b2d0b6ed0ee35589d8471a44689eddccc4|Thu Aug 25 19:17:00 CEST 2016|Add @Beta to new method that hasn't yet been API reviewed.|0|0|1|395|3544|323|119|23|62|9|0|
fd3c30f0efd09435c010f5fab52495554242ab52|Thu Aug 25 20:33:31 CEST 2016|Make it more difficult to get StackOverflowErrors from hooking chains of futures together with setFuture|0|0|3|395|3544|323|119|18|60|9|0|
bf011acab6f16f61abe35581cdbc2cfc86e488cd|Thu Aug 25 21:14:54 CEST 2016|Fix typo just because.|0|0|1|395|3544|323|119|21|55|11|0|
3cbc829d062920b02efc4f99953f28b189a1641e|Thu Aug 25 21:34:36 CEST 2016|Try to explain Sets.newHashSetWithExpectedSize() more accurately and usefully.|0|0|1|395|3544|323|119|20|69|10|0|
212b62566935763aeb4d0dd9082b1238b4b6cb58|Sun Aug 28 04:25:32 CEST 2016|Add some javadoc stating that immutable graphs are thread safe.|0|0|5|395|3545|323|119|21|62|13|1|BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableGraph.edgeCount, newSymbol=]
91b0b20cdff4d5cd8ff07befbf1fb3e6b27a7286|Tue Jul 26 20:48:00 CEST 2016|Fix the serialization of sparse immutable tables.|0|0|2|395|3545|323|119|20|57|9|0|
cfe05dfda3ba79aa1bd3acce6b4e766eb7b9bc00|Thu Sep 01 06:04:06 CEST 2016|Changes to common.graph. Sorry for the churn, but after this things should be settled down for a while (and we'll be launching v20 soon!). Changes include:|10|9|16|394|3546|322|118|34|77|10|77|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.BasicGraph$Presence, newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=com.google.common.graph.MutableGraph.putEdge(N,N)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.inducedSubgraph(com.google.common.graph.BasicGraph<N>,java.lang.Iterable<? extends N>), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.Graph<N,V>), newSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.Graph<N>)],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.graph.AbstractNetwork.equals(java.lang.Object), newSymbol=com.google.common.graph.Network.equals(java.lang.Object)],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.BasicGraphBuilder, newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Graph<N,V>), newSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Graph<N>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.toString(), newSymbol=com.google.common.graph.ForwardingGraph.toString()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graph.edges(), newSymbol=com.google.common.graph.Graph.edges()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.GraphBuilder.allowsSelfLoops(boolean), newSymbol=com.google.common.graph.GraphBuilder.allowsSelfLoops(boolean)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.ConfigurableNetwork.incidentNodes(java.lang.Object), newSymbol=com.google.common.graph.ConfigurableNetwork.incidentNodes(java.lang.Object)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.Graphs.transitiveClosure(com.google.common.graph.Graph<N,? extends java.lang.Object>), newSymbol=com.google.common.graph.Graphs.transitiveClosure(com.google.common.graph.Graph<N>)],BC[kind=TYPE_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.GraphBuilder, newSymbol=com.google.common.graph.GraphBuilder],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableGraph.edgeValueOrDefault(java.lang.Object,java.lang.Object,V), newSymbol=],BC[kind=TYPE_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=com.google.common.graph.MutableGraph],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.Graphs.inducedSubgraph(com.google.common.graph.Graph<N,V>,java.lang.Iterable<? extends N>), newSymbol=com.google.common.graph.Graphs.inducedSubgraph(com.google.common.graph.Graph<N>,java.lang.Iterable<? extends N>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableGraph.checkedConnections(java.lang.Object), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Network.incidentNodes(java.lang.Object), newSymbol=com.google.common.graph.Network.incidentNodes(java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Network.asGraph(), newSymbol=com.google.common.graph.Network.asGraph()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.GraphBuilder.from(com.google.common.graph.Graph<N,? extends java.lang.Object>), newSymbol=com.google.common.graph.GraphBuilder.from(com.google.common.graph.Graph<N>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableGraph.edgeValue(java.lang.Object,java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.asBasicGraph(com.google.common.graph.BasicGraph<N>), newSymbol=],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.Graph<N,V>), newSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.Graph<N>)],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.graph.AbstractGraph.equals(java.lang.Object), newSymbol=com.google.common.graph.Graph.equals(java.lang.Object)],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableGraph.nodeConnections, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.Endpoints, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.edgeValueOrDefault(java.lang.Object,java.lang.Object,V), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.MutableGraph.putEdgeValue(N,N,V), newSymbol=],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.GraphBuilder.build(), newSymbol=com.google.common.graph.GraphBuilder.build()],BC[kind=TYPE_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.Graphs.transpose(com.google.common.graph.Graph<N,V>), newSymbol=com.google.common.graph.Graphs.transpose(com.google.common.graph.Graph<N>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph.edgeCount(), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.ImmutableGraph<N,V>), newSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.ImmutableGraph<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.Network.adjacentEdges(java.lang.Object)],BC[kind=TYPE_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.AbstractGraph, newSymbol=com.google.common.graph.AbstractGraph],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.asBasicGraph(com.google.common.graph.Graph<N,? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractNetwork.asGraph(), newSymbol=com.google.common.graph.AbstractNetwork.asGraph()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.GraphBuilder.directed(), newSymbol=com.google.common.graph.GraphBuilder.directed()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graphs.inducedSubgraph(com.google.common.graph.Graph<N,V>,java.lang.Iterable<? extends N>), newSymbol=com.google.common.graph.Graphs.inducedSubgraph(com.google.common.graph.Graph<N>,java.lang.Iterable<? extends N>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graphs.transitiveClosure(com.google.common.graph.Graph<N,? extends java.lang.Object>), newSymbol=com.google.common.graph.Graphs.transitiveClosure(com.google.common.graph.Graph<N>)],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.ImmutableBasicGraph, newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractNetwork.asGraph(), newSymbol=com.google.common.graph.ImmutableNetwork.asGraph()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableGraph.containsNode(java.lang.Object), newSymbol=],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.outDegree(java.lang.Object), newSymbol=com.google.common.graph.ForwardingGraph.outDegree(java.lang.Object)],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.ImmutableGraph, newSymbol=com.google.common.graph.ForwardingGraph.delegate()],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Graph<N,V>), newSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Graph<N>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.edgeValue(java.lang.Object,java.lang.Object), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.AbstractBasicGraph, newSymbol=],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.Graphs.inducedSubgraph(com.google.common.graph.Graph<N,V>,java.lang.Iterable<? extends N>), newSymbol=com.google.common.graph.Graphs.inducedSubgraph(com.google.common.graph.Graph<N>,java.lang.Iterable<? extends N>)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.BasicGraph<N>), newSymbol=],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.Graph<N,V>), newSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.Graph<N>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.Graphs.hasCycle(com.google.common.graph.Graph<? extends java.lang.Object,? extends java.lang.Object>), newSymbol=com.google.common.graph.Graphs.hasCycle(com.google.common.graph.Graph<? extends java.lang.Object>)],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.ImmutableGraph<N,V>), newSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.ImmutableGraph<N>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.GraphBuilder.nodeOrder(com.google.common.graph.ElementOrder<N1>), newSymbol=com.google.common.graph.GraphBuilder.nodeOrder(com.google.common.graph.ElementOrder<N1>)],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.MutableBasicGraph, newSymbol=],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.Graphs.transpose(com.google.common.graph.Graph<N,V>), newSymbol=com.google.common.graph.Graphs.transpose(com.google.common.graph.Graph<N>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.Graphs.reachableNodes(com.google.common.graph.Graph<N,? extends java.lang.Object>,java.lang.Object), newSymbol=com.google.common.graph.Graphs.reachableNodes(com.google.common.graph.Graph<N>,java.lang.Object)],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.graph.AbstractNetwork.hashCode(), newSymbol=com.google.common.graph.Network.hashCode()],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.ImmutableGraph<N,V>), newSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.ImmutableGraph<N>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractNetwork.asGraph(), newSymbol=com.google.common.graph.ImmutableNetwork.asGraph()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.inDegree(java.lang.Object), newSymbol=com.google.common.graph.ForwardingGraph.inDegree(java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractGraph.edges(), newSymbol=com.google.common.graph.AbstractGraph.edges()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.transpose(com.google.common.graph.BasicGraph<N>), newSymbol=],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.degree(java.lang.Object), newSymbol=com.google.common.graph.ForwardingGraph.degree(java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.MutableGraph.removeEdge(java.lang.Object,java.lang.Object), newSymbol=com.google.common.graph.MutableGraph.removeEdge(java.lang.Object,java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.GraphBuilder.expectedNodeCount(int), newSymbol=com.google.common.graph.GraphBuilder.expectedNodeCount(int)],BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.graph.AbstractGraph.hashCode(), newSymbol=com.google.common.graph.Graph.hashCode()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.GraphBuilder.undirected(), newSymbol=com.google.common.graph.GraphBuilder.undirected()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractGraph.edges(), newSymbol=com.google.common.graph.ForwardingGraph.edges()],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.GraphBuilder.from(com.google.common.graph.Graph<N,? extends java.lang.Object>), newSymbol=com.google.common.graph.GraphBuilder.from(com.google.common.graph.Graph<N>)],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.BasicGraph, newSymbol=],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Graph<N,V>), newSymbol=com.google.common.graph.Graphs.copyOf(com.google.common.graph.Graph<N>)],BC[kind=TYPE_FORMAL_TYPE_PARAMETERS_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph, newSymbol=com.google.common.graph.ImmutableGraph],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph, newSymbol=com.google.common.graph.ImmutableGraph],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.edges(), newSymbol=com.google.common.graph.ForwardingGraph.edges()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.GraphBuilder.build(), newSymbol=com.google.common.graph.GraphBuilder.build()],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graphs.transpose(com.google.common.graph.Graph<N,V>), newSymbol=com.google.common.graph.Graphs.transpose(com.google.common.graph.Graph<N>)]
f7a8a000cf97ed29af366a88ce220c14c8b3fb3c|Thu Sep 01 06:33:44 CEST 2016|Make the "constructor" methods EndpointPair.ordered()/unordered() public (and make the ones accepting a Graph/Network package-private).|0|0|1|394|3546|322|118|21|43|10|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.EndpointPair.of(com.google.common.graph.Network<? extends java.lang.Object,? extends java.lang.Object>,N,N), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.EndpointPair.of(com.google.common.graph.Graph<? extends java.lang.Object>,N,N), newSymbol=]
5e8b9f6314d30bc97c77e17511decfcf85abb815|Thu Sep 01 09:14:41 CEST 2016|Scope an (internal) return type to UnmodifiableIterator.|0|0|1|394|3546|322|118|19|49|11|0|
58f40144cd50246dfebd00d36e372527ba912d0b|Thu Sep 01 18:58:09 CEST 2016|Add ValueGraph.edgeValues(). Remove ValueGraph.edgeValueOrDefault(node, node).|0|0|7|394|3547|322|118|23|60|12|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableValueGraph.edgeValueOrDefault(java.lang.Object,java.lang.Object,V), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph.edgeValues()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ValueGraph.edgeValueOrDefault(java.lang.Object,java.lang.Object,V), newSymbol=]
8f3bb256e076de739b26e597bd5263aa22ea3f4f|Thu Sep 01 22:29:13 CEST 2016|ValueGraph.java: modify edgeValues() Javadoc to clarify that the behavior of get() if passed an EndpointPair not in the graph is different from the behavior of edgeValue() if passed two nodes not connected in the graph.|0|0|1|394|3547|322|118|18|9|10|0|
db8cac30f1441a9bef0a4ebc47c46bd97716c121|Thu Sep 01 22:57:14 CEST 2016|Fix Eclipse warning (missing #).|0|0|1|394|3547|322|118|18|10|11|0|
c4d971943595a00693cd547b23fac1720957ec77|Fri Sep 02 01:09:42 CEST 2016|Refactor test utility methods to match graph mutation signatures.|0|0|0|394|3547|322|118|23|2|10|0|
38f5a373214a2246393f1274a1e71ee809d33526|Fri Sep 02 12:32:33 CEST 2016|Specify in the javadoc the behavior of Graphs.equivalent() when both parameters are null. Run g4 fix on the file.|0|0|1|394|3547|322|118|20|52|9|0|
192c4b1c1dfbae11a3b4705f135ede409faf3426|Sun Jul 31 17:33:13 CEST 2016|Add some missing @Nullable annotations.|0|0|5|394|3547|322|118|18|67|10|0|
ece87b099d211a4bc52f18cef24f3cce10fb52e9|Fri Sep 02 18:24:47 CEST 2016|guava-testlib: Cover Collections.unmodifiableMap|0|0|0|394|3547|322|118|21|2|11|0|
0c350b5c61e48d1732ef1f5b1bd82bf92ca4caaa|Fri Sep 02 21:32:04 CEST 2016|guava-testlib: Cover checked{,Sorted}{Map,Set}|0|0|0|394|3547|322|118|17|2|10|0|
00cc27551213ddcceac578765cc2d305189264db|Fri Sep 02 23:39:08 CEST 2016|guava-testlib: Cover Collections.unmodifiableSortedMap()|0|0|0|394|3547|322|118|17|2|10|0|
3ca1145c6b9ab856810b9300542da815a22b5a6c|Sat Sep 03 02:16:23 CEST 2016|Eliminate checkNotNulls where they're clearly they're not necessary (i.e. when we dereference the variable on the immediately following line). Also remove the "variableName" message in some of them, particularly when they're internal variables.|0|0|12|394|3547|322|118|20|68|10|0|
fb8a4db811b0153555a69679069d7a28bad5ee62|Sat Sep 03 02:36:50 CEST 2016|Suppress some unused warnings in Eclipse.|0|0|0|394|3547|322|118|19|2|10|0|
d7a8ec278d82466bef86eecffa03ac8e7c3ad557|Sat Sep 03 06:46:44 CEST 2016|Refer to Network references as "network" instead of "graph". Note that we've already started doing this, but (as you can see) are fairly inconsistent with it.|0|0|2|394|3547|322|118|19|54|9|0|
3ce29544a5ba20cae8d134583e2b0b9f5439d1a1|Sun Sep 04 05:56:16 CEST 2016|Some minor common.graph tweaks to avoid equals() checks when unnecessary.|0|0|2|394|3547|322|118|21|48|11|0|
21aed0fcf3fec4e7566c8ae10b95491d6f90d734|Mon Sep 05 06:30:11 CEST 2016|Increase test coverage for common.graph. Ensure properties besides just those covered by Graphs.equivalent() are copied over as well.|0|0|0|394|3547|322|118|20|2|10|0|
bc506b9b4c2caf6ef77f02c9a181a60321e38635|Tue Sep 06 08:28:36 CEST 2016|Rename parameter.|0|0|1|394|3547|322|118|18|44|10|0|
d2b300f8d1aff1b58b2353b369b079741c8fc379|Tue Sep 06 18:48:01 CEST 2016|Avoid duplication of code in ImmutableValueGraph. Surprised I didn't realize this sooner :-/ the backing graph is a ValueGraph, so we can just call through. This also let's us do some other nice things:|0|0|6|394|3547|322|118|19|59|9|3|BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph$ValueBackedImpl.backingGraph, newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph, newSymbol=com.google.common.graph.ImmutableGraph],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.ImmutableValueGraph, newSymbol=com.google.common.graph.ImmutableValueGraph]
2d3386b9a3162c093ca22524711308a5c48b4299|Wed Sep 07 04:36:13 CEST 2016|Move some javadoc out of the graph implementation classes (where we don't really expect people to be poking their noses). Mention briefly in the graph interfaces.|0|0|5|394|3547|322|118|20|46|9|0|
41e03385ee37287845312b1d15c5d7bb378d660c|Wed Sep 07 09:20:47 CEST 2016|Run g4 fix on all the files in common.graph.|0|0|23|394|3547|322|118|34|75|12|0|
29972d7c185b6acd0ca09132c315cf8eebbb051a|Wed Sep 07 17:06:43 CEST 2016|Add a test for passing ListenableFuture<?> instances to whenAllComplete. It doesn't always work as we'd like :(|0|0|0|394|3547|322|118|22|2|10|0|
66d4fbbac0c56aae90582c62d74f1bb437d275d4|Wed Sep 07 17:34:46 CEST 2016|Swap the nodes of an unordered EndpointPair to prevent callers from relying on the "ordering" of an unordered pair. Remove some superfluous "this." prefixes in ElementOrder (we generally only include "this." when assigning to a member variable).|0|0|2|394|3547|322|118|19|53|10|0|
93efad911b41aec2199bd72b9ee4bcec017e8507|Sun Aug 07 18:56:40 CEST 2016|Clean up some exceptions. In general, the pattern we try to follow is that if the user provides an invalid argument (e.g. a node not in a graph), we throw an IllegalStateException with a detailed error message. If it's an internal method and something is wrong on our end, we throw an IllegalStateException (and don't usually bother with an error message).|0|0|5|394|3547|322|118|20|61|11|0|
1b4881c26e8701ad2f3ed835743fe0705c01c840|Wed Sep 07 22:52:47 CEST 2016|Use AssertionError for default case.|0|0|1|394|3547|322|118|20|50|10|0|
35c56277f3127ef90a488cf595d4d1c43d58c925|Fri Sep 09 01:01:24 CEST 2016|Update Public Suffix List. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=132612873|0|0|1|394|3547|322|118|18|40|12|0|
fa7b9050c3632090928a3a34dbdf97fc55bc5e3d|Fri Sep 09 19:25:01 CEST 2016|Temporarily allow creation of a CharMatcher from a BitSet for internal purposes. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=132688558|0|0|1|394|3548|322|119|19|16|10|0|
0ab8b1f42ee68f7a42bf75e9359e9e08aaac3430|Mon Sep 12 22:18:44 CEST 2016|Warn Android users that default Stopwatch behavior may be bad for their health.|0|0|1|394|3548|322|119|17|10|8|0|
4c776946209739bcb248f30400193da6bdf895b4|Tue Sep 13 00:02:48 CEST 2016|Add note about replacements for BYTES constants, isFinite(), and hashCode() methods in Java 8.|0|0|8|394|3548|322|119|20|39|11|0|
112e7eb1358ab4bcbaea7a61e195fba29b7e0d13|Tue Sep 13 00:35:40 CEST 2016|Optimize Graphs.transitiveClosure() to avoid copying to a List in the undirected case. Credit to jbduncan for the idea!|0|0|1|394|3548|322|119|21|56|9|0|
9656d92aa0164845760762769db4b2e786443e0e|Tue Sep 13 06:15:24 CEST 2016|Increase test coverage for Networks. Add clarifying statement in javadoc for inEdges() and outEdges(). Modify the sanityCheck method to also check that a set is equals() to its ImmutableSet copy (this will also make sure the set doesn't have duplicate elements).|0|0|1|394|3548|322|119|18|9|9|0|
201802a2ac0aae761b19ec0ceab7be536aca080d|Tue Sep 13 16:11:42 CEST 2016|Add the .vtt type used for HTML5 video subtitles. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=132996392|0|0|1|394|3548|323|119|18|62|12|0|
7d8b71c29b5ee1117cf65ac249fff1f809517765|Tue Sep 13 16:38:26 CEST 2016|Add another test for Iterables.removeIf. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=132998224|0|0|0|394|3548|323|119|19|2|9|0|
d90dacbc2f750079624cc95734cd0892a1de9016|Tue Sep 13 17:21:01 CEST 2016|Fix typo.|0|0|1|394|3548|323|119|18|49|8|0|
c27c6732c9b690f1ae6c8f3fa53e23cebcbc8c85|Mon Sep 12 18:29:23 CEST 2016|Prepare for Java 8.|0|0|2|394|3548|323|119|18|47|7|0|
850e58bc7e01ef3ec12e64f4198881b3b772a81a|Tue Sep 13 20:29:50 CEST 2016|Add some test coverage for ElementOrder.comparator().|0|0|0|394|3548|323|119|21|2|6|0|
c93a083e9d0c61170e3c0c9183d558d78322dcd4|Tue Sep 13 22:23:19 CEST 2016|Improve docs on the FluentIterable-Stream connection (part 1).|0|0|1|394|3548|323|119|19|60|7|0|
8883cd544ef886ecd6c939363490c67d2d1958ce|Wed Sep 14 18:05:53 CEST 2016|RegularImmutableSet extends ImmutableSet.Indexed.|0|0|1|394|3548|323|119|21|33|9|0|
6662777b4bbe4bb49f3d044281ea1929af38108d|Wed Sep 14 18:37:43 CEST 2016|Optimization of RegularImmutableMap.|0|0|3|394|3548|323|119|20|59|8|0|
b319db437eaff28841274bb04d4cfbab7327d744|Wed Sep 14 19:35:58 CEST 2016|Update an @link in javadoc.|0|0|0|394|3548|323|119|19|2|7|0|
a0f46c92c5c3ba95e9221da930a5970957af456b|Wed Sep 14 21:11:55 CEST 2016|Try to explain the Stream equivalent for filter(Class) a little better. (And stop caring about the paltry benefits of `e -> e instanceof Foo` over `Foo.class::isInstance`.)|0|0|1|394|3548|323|119|17|59|7|0|
db5b3f59ba55b87685df20aa8b4dd35a820694cb|Wed Sep 14 22:35:17 CEST 2016|Avoid using "i.e." in first sentence of javadoc so the javadoc generator doesn't prematurely cut off the summary.|0|0|3|394|3548|323|119|19|11|7|0|
db98117f5615aa359d5f34deb39bd57884a91491|Wed Sep 14 23:37:42 CEST 2016|Delete MapConstraints.constrainedBiMap()|0|0|1|394|3547|323|119|20|54|9|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapConstraints.constrainedBiMap(com.google.common.collect.BiMap<K,V>,com.google.common.collect.MapConstraint<? super K,? super V>), newSymbol=]
a6995adad802a7d21a8223916d8dcfd4209e5998|Thu Sep 15 00:14:01 CEST 2016|Delete MapConstraints.constrainedSetMultimap() and constrainedSortedSetMultimap()|0|0|1|394|3545|323|119|18|51|6|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapConstraints.constrainedSetMultimap(com.google.common.collect.SetMultimap<K,V>,com.google.common.collect.MapConstraint<? super K,? super V>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapConstraints.constrainedSortedSetMultimap(com.google.common.collect.SortedSetMultimap<K,V>,com.google.common.collect.MapConstraint<? super K,? super V>), newSymbol=]
c462d69329709f72a17a64cb229d15e76e72199c|Thu Sep 15 01:31:16 CEST 2016|Fix imports in all Guava packages.|0|0|390|394|3545|323|119|256|484|25|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.AbstractFuture.cancel(boolean), newSymbol=com.google.common.util.concurrent.AbstractFuture$TrustedFuture.cancel(boolean)]
152bf28cade06c33587779dba1c2f0f88f1db815|Thu Sep 15 06:10:32 CEST 2016|Fix typo in javadoc.|0|0|1|394|3545|323|119|52|48|21|0|
e7700e6f78d9594d1ee37d43bf4e0aa1e58b4e7a|Thu Sep 15 06:10:46 CEST 2016|Fix another typo in javadoc.|0|0|2|394|3545|323|119|19|10|7|0|
7009118a0601ea3a2ff2629d10e47c3138078f55|Thu Sep 15 16:41:26 CEST 2016|Make flaky test less likely to flake. The test currently fails if a thread stalls for more than 50s. I've increased that to 9999ms.|0|0|0|394|3545|323|119|18|2|6|0|
881a0cc8322d3147ae1c11b8bdf3cc6baed04a77|Thu Sep 15 17:34:38 CEST 2016|Delete MapConstraints.constrainedMultimap()|0|0|1|394|3544|323|119|19|50|6|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap<K,V>,com.google.common.collect.MapConstraint<? super K,? super V>), newSymbol=]
2d9d38c335bc38adc7045c90283f8e4f90048b6e|Thu Sep 15 18:34:08 CEST 2016|Create TreeTraverser.using().|0|0|2|394|3545|323|119|21|56|5|0|
a01a16a72597d635805b1f28b61c3a4a72cb6e33|Thu Sep 15 20:03:40 CEST 2016|Some additional test coverage for undirected graphs + minor cleanup.|0|0|2|394|3545|323|119|23|54|10|0|
4fed015b8a30a7453b61d4ff3bbf777d6a0b2abe|Thu Sep 15 22:31:09 CEST 2016|Remove Constraint stuff from package-info.|0|0|0|394|3545|323|119|17|2|8|0|
8c03af3ba66ceca0c99007c6931c16cd82a6eb0b|Fri Sep 16 16:01:48 CEST 2016|Delete MapConstraints.notNull()|0|0|2|394|3544|323|119|21|54|9|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.MapConstraints.notNull(), newSymbol=]
69fe97fdf4a0d8e3e4cdaa392e66e8dc2e08821b|Fri Sep 16 16:42:42 CEST 2016|Some cleanup in EndpointPairIterator.|0|0|1|394|3544|323|119|22|46|7|0|
6ded67ff124f1be4f318dbbeae136d0c995faf37|Fri Sep 16 16:56:33 CEST 2016|Small refactor of AbstractGraph.edges() (move to inner class instead of anonymous class).|0|0|1|394|3544|323|119|18|48|6|0|
8025f5489b0cea538ada78f8c6590292d4ae461d|Mon Sep 19 18:25:57 CEST 2016|Increase GWT test timeout. Apparently the GWT Maven plugin considers tests to have succeeded if they time out!|0|0|0|394|3544|323|119|19|2|9|0|
f3118bffc136c93f0d85ee929f7262e0b2d700e2|Mon Sep 19 20:51:47 CEST 2016|Tell Travis to wait for Maven to finish.|0|0|0|394|3544|323|119|19|2|5|0|
c1b7bf5e39bd7483dc3925a14eb546a89a00ea1e|Tue Sep 20 18:28:19 CEST 2016|Use ArrayDeque and PriorityQueue under GWT (where they're newly available), and provide synchronizedQueue, synchronizedDeque, and MinMaxPriorityQueue there. This also lets us delete our manual implementation of TreeTraverser and avoid LinkedList internally.|0|0|8|394|3544|323|119|21|60|6|0|
cb3a29fb67936c2bc52b1cfee08cedab62950282|Wed Sep 21 07:21:34 CEST 2016|Remove the offset and size fields from RegularImmutableList.|0|0|1|394|3544|323|119|22|34|5|0|
1ef01141f1e62dd157d401e24a152d2b3f5114d9|Wed Sep 21 17:44:47 CEST 2016|Put scary doc on hashString and less scary doc on hashUnencodedChars.|0|0|3|394|3544|323|119|19|19|6|0|
ff41ff1ee2133b47ab413a28f006c28a1f9ec2ef|Wed Sep 21 19:19:33 CEST 2016|If File.exists throws an exception when constructing a ClassPath instance, ignore that entry in the classpath rather than propagating the exception.|0|0|1|394|3544|323|119|19|56|5|0|
c298e2dcfed6c3f42407477b9fc6fc5094d88468|Wed Sep 21 19:52:31 CEST 2016|Bump Travis timeout. It's still too low, e.g.,|0|0|0|394|3544|323|119|17|2|11|0|
98fc976258eb6b37adb78528b003e4eb09ea8dae|Wed Sep 21 20:38:30 CEST 2016|Update GWT deps to 2.8.0-rc2.|0|0|0|394|3544|323|119|17|2|7|0|
b0babb69b05ed4d15cce74635ae96cf8ba78c85f|Thu Sep 22 04:27:57 CEST 2016|HostAndPort.java: Deprecate getHostText() in favor of getHost(). ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=133907054|0|0|1|394|3545|323|120|19|14|6|0|
e9522d04f7c9ebf4549cd4017b0d9fa520b5a2b4|Thu Sep 22 05:10:10 CEST 2016|Fix a typo.|0|0|1|394|3545|323|120|19|14|6|0|
2ee096111a29f2d5637b93fafc99bd541faead19|Thu Sep 22 18:32:37 CEST 2016|Remove a stray 'the'.|0|0|1|394|3545|323|120|18|53|7|0|
0e19548257d527d7ba8ef01cc6c2255377c67467|Thu Sep 22 23:39:43 CEST 2016|Fix comment that had gone out of date.|0|0|1|394|3545|323|120|19|58|5|0|
c7e634a022749035909b851557f04ae7f5dd7b35|Fri Sep 23 19:11:52 CEST 2016|Increase GWT timeout again.|0|0|0|394|3545|323|120|18|2|9|0|
11628dd9c1d1cce954a15d46079abbc5e74ceced|Fri Sep 23 19:11:59 CEST 2016|Increase more timeouts to reduce test flakiness, as in CL 133260276.|0|0|0|394|3545|323|120|16|2|5|0|
267fac11a42ad56158ff9f6158a0a8a36223ed86|Sat Sep 24 00:32:29 CEST 2016|Javadoc improvement(?) pass to Function/Functions. To be continued.|0|0|2|394|3545|323|120|18|47|7|0|
b1929feeb03a96c2ad420f0965e8f3bda530b365|Sun Sep 25 19:40:46 CEST 2016|Assorted cleanup of cancellation: - Eliminate our overrides of interruptTask() (other than one in a test of interruptTask()). - Make cancel() final under GWT. - Simplify a few tests. - Add or improve boilerplate comments about visibility of fields.|0|0|5|394|3545|323|120|21|56|5|0|
f02ea7e285d73bb13fe02a4a05802b4710fa3d44|Tue Sep 27 01:19:41 CEST 2016|Add edgeValueOrDefault() method to ValueGraph interface, and remove Map-returning edgeValues() for now. This CL effectively rolls back []|0|0|4|394|3545|323|120|22|58|5|4|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableValueGraph.edgeValues(), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph.edgeValueOrDefault(java.lang.Object,java.lang.Object,V)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractValueGraph.edgeValues(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ValueGraph.edgeValues(), newSymbol=]
ed30c57898385fad5d862414c264244ee35f0e5d|Tue Sep 27 17:20:21 CEST 2016|Add paragraph to javadoc for Network.edgesConnecting().|0|0|1|394|3545|323|120|19|10|9|0|
c6a92d7fcc762a200edd1731771db06bab30ea92|Tue Sep 27 19:03:26 CEST 2016|Tweak Network.edgesConnecting() javadoc so people don't think it returns a path of edges.|0|0|1|394|3545|323|120|17|10|7|0|
69496f5940ae16ffafe7ab5102dc6fe04937490a|Tue Sep 27 19:49:23 CEST 2016|Update Mockito version to 2.1.0-RC.1|0|0|0|394|3545|323|120|18|2|6|0|
b60f02fc3553cf071fd9a4bf9c1e26b7d83c0467|Tue Sep 27 23:20:15 CEST 2016|Use an anonymous class for AbstractGraph.edges() This was changed recently ([] because of some planned changes we ended up going a different direction with, so now I think it makes more sense inlined.|0|0|1|394|3545|323|120|18|44|6|0|
7e751d1fd186317ac1ee1381e069b56ccaa65a48|Wed Sep 28 00:42:37 CEST 2016|Change some javadoc to reference node U and V in the context of connectivity (to be consistent with methods on EndpointPair).|0|0|3|394|3545|323|120|17|11|5|0|
a05019e9d933c60395526afa6f657dcdcfb87c68|Thu Sep 29 20:08:48 CEST 2016|Remove redundant String.format call|0|0|1|394|3545|323|120|19|15|6|0|
d69c143db45cfa4a5650e78dfbc9aa79233bfd29|Thu Sep 29 20:18:25 CEST 2016|Apply IntelliJ-suggested language feature migrations.|0|0|4|394|3545|323|120|20|67|9|0|
3d8cbb3170deed81ee18db835c8481e0a73b2ffa|Thu Sep 29 20:38:23 CEST 2016|Replace unnecessary StringBuilder calls with String concat|0|0|4|394|3545|323|120|19|47|7|0|
e0fb7507e53e7a641935d2e24bfc687f9f2028da|Thu Sep 29 20:38:24 CEST 2016|Remove unused imports|0|0|2|394|3545|323|120|20|72|7|0|
7dc13685f02c853bd05a8af57bc4c1aae230e630|Thu Sep 29 20:55:52 CEST 2016|Remove reference to a deprecated method|0|0|1|394|3545|323|120|18|51|5|0|
be55ffa1284e56bb0a168a144b35b0b394da375d|Thu Sep 29 21:50:07 CEST 2016|(partial) Automated g4 rollback of changelist 134687034.|0|0|1|394|3545|323|120|18|15|5|0|
58986e98ddc00501be697faef89c8ac454b94ac5|Fri Sep 30 13:41:10 CEST 2016|Apply a handful of automated "returns @Nullable" suggestions.|0|0|3|394|3545|323|120|20|42|8|0|
e6f030b4afda2f4ac54a3f36c3d0e8b738772576|Fri Sep 30 13:46:11 CEST 2016|Remove CharacterFilter(BitSet) along with CharMatcher.fromBitSet, which was introduced as a temporary helper for the migration. (partial rollback of CL 132688558, plus some additional changes)|0|0|1|394|3544|323|119|18|14|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.fromBitSet(java.util.BitSet), newSymbol=]
ee94a94f524c1a7a5e916b023449b650b0af33b3|Fri Sep 30 18:43:13 CEST 2016|Replace unnecessary StringBuilder calls with String concat|0|0|1|394|3544|323|119|17|12|5|0|
845a2b5b046ea3de2848f27288864d3d1977ea1e|Fri Sep 30 22:03:59 CEST 2016|Remove ancient `@Beta` annotations, making these APIs "final". (They can still be removed via 2-year deprecation cycle.) Also touched up a bit of javadoc here and there.|0|0|19|394|3544|323|119|23|126|7|0|
d70b2b3d9ee90922ee382d2144c51310320af4a6|Fri Sep 30 22:34:15 CEST 2016|Implement edgeValue() via edgeValueOrDefault() instead of vice versa. For edgeValue() this is the same efficiency, but makes edgeValueOrDefault() perform fewer hash lookups.|0|0|2|394|3544|323|119|21|50|6|1|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.graph.AbstractValueGraph.edgeValueOrDefault(java.lang.Object,java.lang.Object,V), newSymbol=com.google.common.graph.ValueGraph.edgeValueOrDefault(java.lang.Object,java.lang.Object,V)]
782eac76781420dbecf4aa1031d718eb375c7a96|Sat Oct 01 01:58:23 CEST 2016|Migrate users from HostAndPort.getHostText() to HostAndPort.getHost(). These methods behave identically, but the former name is deprecated. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=134844363|0|0|1|394|3544|323|119|18|8|11|0|
5c3454a2d87ac27d381653747916b4a369dc6b52|Mon Oct 03 21:20:20 CEST 2016|Fix particularly unfortunate typo in ValueGraph javadoc.|0|0|1|394|3544|323|119|19|9|6|0|
3e3da1d3dea1081b2134546a973e1e5e7ce90a01|Tue Oct 04 04:12:48 CEST 2016|Fix typo in ValueGraphBuilder.|0|0|1|394|3544|323|119|19|15|5|0|
adc36ab47b87696e794d4cc63760dfb02c1c0365|Tue Oct 04 21:42:05 CEST 2016|Update Mockito version to 2.1.0|0|0|0|394|3544|323|119|17|2|5|0|
3cb09d1e686400d1d70e0280bb13e41535290281|Tue Oct 04 21:50:41 CEST 2016|Update removal target for APIs that should be removed in 20.0 but which actually won't be.|0|0|5|394|3544|323|119|19|85|6|0|
ca9c3513be29aa84a054e1c6a322dbbbbc4beda5|Wed Oct 05 15:52:30 CEST 2016|Remove stale links from 'Learn about Guava'|0|0|0|394|3544|323|119|21|2|6|0|
c3e538694c8f055cc57e50ac49be091bef58d8bb|Wed Jul 13 19:03:10 CEST 2016|usage of American English spelling for "license"|0|0|0|394|3544|323|119|16|2|8|0|
ce76b8eaf4c623d61ed73c64e4fbb22907cadee4|Wed Oct 05 19:03:30 CEST 2016|No need to disable doclint completely. Disabling high-level HTML issues should be enough|0|0|0|394|3544|323|119|17|2|6|0|
48daa0a71422bf38fb08f9149df614d411a8192f|Wed Oct 05 19:03:45 CEST 2016|Skip GWT tests on Travis. They're just too slow.|0|0|0|394|3544|323|119|16|2|5|0|
3d7c23f11a8a4541daf7cdf3461af97364b054bc|Thu Oct 06 23:53:22 CEST 2016|Rewrite MutableClassToInstanceMap to avoid using ConstrainedMap. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=135408484|0|0|1|394|3547|323|119|16|46|6|3|BC[kind=METHOD_NOW_ABSTRACT, impactedSymbol=com.google.common.collect.MapConstraints$ConstrainedMap.delegate(), newSymbol=com.google.common.collect.ForwardingMap.delegate()],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.MapConstraints$ConstrainedMap.putAll(java.util.Map<? extends K,? extends V>), newSymbol=com.google.common.collect.MutableClassToInstanceMap.putAll(java.util.Map<? extends java.lang.Class<? extends B>,? extends B>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.MapConstraints$ConstrainedMap.entrySet(), newSymbol=com.google.common.collect.MutableClassToInstanceMap.entrySet()]
b0b302c0853f78df97ba9673082bca191c091fe7|Fri Oct 07 17:56:31 CEST 2016|Delete constraints APIs.|0|4|0|392|3543|323|117|20|2|6|2|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.MapConstraints, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.MapConstraint, newSymbol=]
d495460c48e05e635db1aa604befd534f15c582b|Fri Oct 07 18:17:59 CEST 2016|Add @since 20.0 to BaseEncoding.canDecode.|0|0|1|392|3543|323|117|20|24|6|0|
ecabb5e5944271d31a93b0054f548da40a9c01f3|Fri Oct 07 19:45:49 CEST 2016|Updated Guava README to mention Guava 20.0-rc1.|0|0|0|392|3543|323|117|18|2|8|0|
536aeaa802fbfe1c53209bc6422976adf5b48ad8|Fri Oct 07 20:53:10 CEST 2016|Shuffling from internal-only change.|0|0|1|392|3543|323|117|17|35|6|0|
fe8d349aa0dd8d57d65c2ab26ec42285f60ed879|Fri Oct 07 20:54:06 CEST 2016|Remove Iterator tester infrastructure, which has never had any real tests. (We do perform IteratorTester-based testing through CollectionIteratorTester and ListListIteratorTester.)|0|0|0|392|3543|323|117|20|2|6|0|
0d43a8f7cfc8d5f1c7aa363f5191e5d213e08d9b|Fri Oct 07 22:56:41 CEST 2016|Bring over some API documentation from []|0|0|1|392|3543|323|117|20|45|6|0|
337f44c1677ae628e4d218ce9260c59a2f518976|Sat Oct 08 03:14:18 CEST 2016|As currently defined, the hashcode of every unordered EndpointPair which is a self-loop is zero! This is particularly not good for graphs with many self-loops, such as the transitive closure graph, where every node has an incident self-loop. Change hash to use + instead of ^ (this still preserves the property of symmetry, even with overflow).|0|0|1|392|3543|323|117|18|41|5|0|
4f87e773ef3e99c83f224d7f94f961690e073b95|Mon Oct 10 22:07:02 CEST 2016|Suppress an intentional type mismatch.|0|0|0|392|3543|323|117|17|2|5|0|
dbf37a8b12159763f7721ea79644de9080d53e99|Mon Oct 10 23:45:11 CEST 2016|Add new RangeSet methods accepting Iterable<Range<C>>.|0|0|4|392|3552|323|119|20|65|9|3|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.RangeSet, newSymbol=com.google.common.collect.RangeSet.removeAll(java.lang.Iterable<com.google.common.collect.Range<C>>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.RangeSet, newSymbol=com.google.common.collect.RangeSet.enclosesAll(java.lang.Iterable<com.google.common.collect.Range<C>>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.RangeSet, newSymbol=com.google.common.collect.RangeSet.addAll(java.lang.Iterable<com.google.common.collect.Range<C>>)]
0915b414d10d0737ac8fbd4819462d8141a09c8d|Tue Oct 11 16:11:46 CEST 2016|Allow MemoizingSupplier to release its delegate to the GC where possible.|0|0|1|392|3552|323|119|22|10|5|0|
d67899df652c8a889c578a53a639d4c399925e2c|Wed Oct 12 00:02:53 CEST 2016|Update the Guava tagline on github.|0|0|0|392|3552|323|119|17|2|6|0|
62ea465e4f0bc0cf79f4cee0cb5cc6a56576de52|Fri Oct 14 20:16:34 CEST 2016|Add @SafeVarargs to some methods Lists.|0|0|1|392|3552|323|119|17|59|7|0|
f30f6b907bb40e7c9d1075205896fe83b5b1bcdb|Fri Oct 14 20:36:56 CEST 2016|Optimize allocation in nonCancellationPropagating|0|0|1|392|3552|323|119|21|56|6|0|
55acb1dc34f07d029d8a73378a981c1f94c92b9e|Fri Oct 14 23:53:12 CEST 2016|Shuffling from internal-only change.|0|0|1|392|3552|323|119|17|56|9|0|
ae80b8af934d280bd739f24959f7468a1ef5c077|Mon Oct 17 18:12:11 CEST 2016|Fixes a documentation error regarding the return type/value|0|0|1|392|3552|323|119|18|20|7|0|
7970182d52338b1b1517479ee2e007f1c318be23|Mon Oct 17 18:38:13 CEST 2016|Prepare for Public Suffic List update, which removes the '!' rule that this file was using.|0|0|0|392|3552|323|119|19|2|5|0|
87eb1b59bc3316c85067d5d9c404c3d6e5b835f0|Tue Oct 18 04:01:06 CEST 2016|Update Public Suffix List.|0|0|1|392|3552|323|119|20|36|6|0|
079c5100feb1356c99e0b6642b6b84e7fbccca3a|Wed Oct 19 15:47:48 CEST 2016|Stop stripping @LazyInit annotations. The annotation has been released in public Error Prone.|0|0|18|392|3552|323|119|56|106|8|0|
95d622574fe3236777c6c9649e1044bd01178122|Thu Oct 20 22:49:27 CEST 2016|Add JDK Deque implementations to Queue tests.|0|0|0|392|3552|323|119|20|2|5|0|
9b4c062c1a588509d3948fef8170ee400d3b145b|Thu Oct 20 23:57:38 CEST 2016|Make Charsets.ISO_8859_1 GwtCompatible. Also run google-java-format over the files.|0|0|1|392|3552|323|119|20|9|5|0|
c91323f873e93f88d9f30b5e503f72a11e1f0486|Mon Oct 24 19:19:42 CEST 2016|graphs_explained.md: file being added to facilitate reviewed changes to https://github.com/google/guava/wiki/GraphsExplained.|0|0|11|392|3552|323|119|19|65|5|0|
3637f153e2ed42670583ba07e8dac680f3917f90|Mon Oct 24 19:43:34 CEST 2016|Update to GWT 2.8.0-rc3.|0|0|0|392|3552|323|119|19|2|7|0|
6a3ec685306baefba7e78c0b18cb43771b2ad34d|Mon Oct 24 22:21:24 CEST 2016|Move ForwardingBlockingDeque into c.g.c.u.c.|1|0|1|393|3568|323|120|17|39|7|0|
f809a6c794bbef61241905e5cda04316a4a694c0|Tue Oct 25 17:47:21 CEST 2016|Graph[Builder].java et al.: fix representation of angle brackets in Javadoc.  *sigh*|0|0|7|393|3568|323|120|20|62|7|0|
a0d7cb868e63d0504764c9fa329ebe6664369280|Tue Oct 25 19:55:48 CEST 2016|Shuffling from internal-only change.|0|0|2|393|3568|323|120|20|56|9|0|
3978c76e0d8aa8018266c6f6581a7a3064c37a9f|Tue Oct 25 20:50:42 CEST 2016|Update to GWT 2.8.0|0|0|0|393|3568|323|120|19|2|6|0|
790362755a65efab7c0133060e6f2bded4d6c9a9|Tue Oct 25 21:18:24 CEST 2016|Fix bad Javadoc tags.|0|0|4|393|3568|323|120|19|59|6|0|
e102fa4a86dad34f375e06c8ce0f52ea264588c3|Tue Oct 25 22:00:00 CEST 2016|Lint Javadoc for HTML and syntax, and fix errors. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=137191293|0|0|23|393|3568|323|120|32|178|11|0|
4cdc40b1b583b410ab7c89ebab9dc9c4ca5861e1|Wed Oct 26 00:07:09 CEST 2016|Shuffling from internal-only change.|0|0|1|393|3568|323|120|28|51|8|0|
6b20d80ef7c21dcef3778d43ee54e7a7e9dec881|Wed Oct 26 01:59:40 CEST 2016|Start on documenting Iterables to explain the connection to Streams.|0|0|2|393|3568|323|120|18|64|7|0|
673e20eead5344f346357d58ea590dd67b44708f|Thu Oct 27 18:35:43 CEST 2016|Fix links to murmurhash3.cpp|0|0|3|393|3568|323|120|20|26|7|0|
d330fc7f880b49e9d45a44e7650d95a6f7afbe23|Thu Oct 27 18:39:51 CEST 2016|Make AtomicLongMap serializable. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=137404691|0|0|1|393|3568|323|120|18|52|6|0|
5a5a6cf012b5bc4638f75fdf9d975086f0161c12|Fri Oct 28 17:45:13 CEST 2016|Make Forwarding[Listenable]Future GwtCompatible.|0|0|2|393|3568|323|120|18|40|7|0|
9b494fbe1983f7bb49312d307b5da01f954c03d0|Fri Oct 28 20:29:39 CEST 2016|Mark Utf8 as emulated, since it has @GwtIncompatible methods.|0|0|1|393|3568|323|120|19|11|6|0|
166af44043222077630027e4a935cb9462de5bd6|Fri Oct 28 21:18:14 CEST 2016|Migrate from deprecated Guava APIs to replacements:  Objects.firstNonNull() -> MoreObjects.firstNonNull()  Objects.ToStringHelper -> MoreObjects.ToStringHelper|0|0|0|393|3568|323|120|18|2|8|0|
93f58c7358fd0c604b58cba7b7dd73b5208af0ef|Fri Oct 28 23:22:31 CEST 2016|Update README to point to 20.0 as the latest release and update version numbers to 21.0-SNAPSHOT.|0|0|0|393|3568|323|120|20|2|5|0|
128b7f932530a1d0772f143b98872d91ee32cc14|Sat Oct 29 03:39:59 CEST 2016|Fix link to Release 20|0|0|0|393|3568|323|120|17|2|5|0|
29c8c65e6e8138b30a45eda1177e4305b7f65499|Sat Oct 29 00:07:26 CEST 2016|Fix a couple things in README.|0|0|0|393|3568|323|120|16|2|5|0|
40cd7fcba0ab317f106c9a59114964a5a643f6aa|Sat Oct 29 00:21:39 CEST 2016|Fix the extra space that shows up in ValueGraph's javadoc summary.|0|0|1|393|3568|323|120|16|10|5|0|
5367a2d0687ec4c1901f693559cd4d2d14ca65d1|Sat Oct 29 02:23:14 CEST 2016|Add ImmutableList.sortedCopyOf.|0|0|2|393|3570|323|120|22|55|9|0|
55524c66de8db4c2e44727b69421c7d0e4f30be0|Mon Oct 31 19:08:30 CET 2016|Fix #1190|0|0|1|393|3570|323|120|21|13|8|0|
c5231cfd14de78cd50099e095798fba6726cbe9e|Mon Oct 31 19:15:27 CET 2016|fixes serialization errors when serializing a RegularImmutableAsList|0|0|0|393|3570|323|120|17|2|5|0|
ef386251e5cc485fb72890fff67830340635e44b|Tue Nov 01 16:18:48 CET 2016|Introduce InternerBuilder, which allows tweaking of the concurrency level of the to-be-built Interner. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=137825551|0|0|1|394|3575|323|120|18|50|6|0|
c414be307af45d8197f3d8b2db256cb369f948af|Tue Nov 01 16:38:39 CET 2016|Fix some typos in guava/*|0|0|17|394|3575|323|120|27|141|9|0|
7108582d5dd3b7ce7e6fce53b9407591bfcea17c|Tue Nov 01 18:33:21 CET 2016|Make Ints.{to,from}ByteArray GWT compatible.|0|0|1|394|3575|323|120|24|23|8|0|
0f3f53a1f51495023a8552df6db25ac8ed44ae2e|Tue Nov 01 18:55:48 CET 2016|Add @since for Interners.Builder.|0|0|1|394|3575|323|120|20|47|8|0|
3365f88e3bd761ea88a1324b0fbd9628bf261c57|Wed Nov 02 18:20:03 CET 2016|Remove emulated=true.  The class no longer needs to be emulated since there's nothing GwtIncompatible in it.|0|0|1|394|3575|323|120|17|22|7|0|
0bab3764871d492f736d487eb45b7010e8c8f080|Wed Nov 02 19:10:47 CET 2016|Fix typo in comments|0|0|1|394|3575|323|120|18|49|5|0|
19db9fa37c74be9762ba22b8b6105dcda6b9d9c6|Wed Nov 02 20:23:16 CET 2016|fix warning on eclipse|0|0|1|394|3575|323|120|19|44|5|0|
db72cd2ba6e4e6026f769bda5dc2160e0b54ba41|Wed Nov 02 21:57:28 CET 2016|Fixes a reference cycle between WeakValueEntry instances and their WeakValueReference.|0|0|1|394|3575|323|120|19|61|6|0|
d4593835188550859a05537676d01944fa2eab01|Thu Nov 03 17:05:22 CET 2016|Removes unnecessary (and unsafe) @Weak annotation that is causing crashes on iOS.|0|0|1|394|3575|323|120|20|36|8|0|
73e382fa877f80994817a136b0adcc4365ccd904|Thu Nov 03 20:04:47 CET 2016|Release Java 8 changes to Guava.|9|0|74|400|3661|324|134|72|338|14|25|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.getOrDefault(java.lang.Object,V), newSymbol=com.google.common.collect.ImmutableMap.getOrDefault(java.lang.Object,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Collection.removeIf(java.util.function.Predicate<? super E>), newSymbol=com.google.common.collect.ImmutableCollection.removeIf(java.util.function.Predicate<? super E>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.merge(K,V,java.util.function.BiFunction<? super V,? super V,? extends V>), newSymbol=com.google.common.collect.ImmutableMap.merge(K,V,java.util.function.BiFunction<? super V,? super V,? extends V>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.replace(K,V,V), newSymbol=com.google.common.collect.ImmutableMap.replace(K,V,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>), newSymbol=com.google.common.collect.ImmutableMap.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.computeIfPresent(K,java.util.function.BiFunction<? super K,? super V,? extends V>), newSymbol=com.google.common.collect.ImmutableMap.computeIfPresent(K,java.util.function.BiFunction<? super K,? super V,? extends V>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.SortedSet.spliterator(), newSymbol=com.google.common.collect.ImmutableSortedSet.spliterator()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Set.spliterator(), newSymbol=com.google.common.collect.ImmutableCollection.spliterator()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.remove(java.lang.Object,java.lang.Object), newSymbol=com.google.common.collect.ImmutableMap.remove(java.lang.Object,java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.compute(K,java.util.function.BiFunction<? super K,? super V,? extends V>), newSymbol=com.google.common.collect.ImmutableMap.compute(K,java.util.function.BiFunction<? super K,? super V,? extends V>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.Multiset.forEach(java.util.function.Consumer<? super E>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.replace(K,V), newSymbol=com.google.common.collect.ImmutableMap.replace(K,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.forEach(java.util.function.BiConsumer<? super K,? super V>), newSymbol=com.google.common.collect.HashBiMap.forEach(java.util.function.BiConsumer<? super K,? super V>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.ImmutableList.forEach(java.util.function.Consumer<? super E>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.List.spliterator(), newSymbol=com.google.common.collect.ImmutableList.spliterator()],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.Maps$KeySet.forEach(java.util.function.Consumer<? super K>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.forEach(java.util.function.BiConsumer<? super K,? super V>), newSymbol=com.google.common.collect.ImmutableSortedMap.forEach(java.util.function.BiConsumer<? super K,? super V>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.Maps$KeySet.forEach(java.util.function.Consumer<? super K>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>), newSymbol=com.google.common.collect.HashBiMap.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.ImmutableList.forEach(java.util.function.Consumer<? super E>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.computeIfAbsent(K,java.util.function.Function<? super K,? extends V>), newSymbol=com.google.common.collect.ImmutableMap.computeIfAbsent(K,java.util.function.Function<? super K,? extends V>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Collection.spliterator(), newSymbol=com.google.common.collect.ImmutableCollection.spliterator()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.List.replaceAll(java.util.function.UnaryOperator<E>), newSymbol=com.google.common.collect.ImmutableList.replaceAll(java.util.function.UnaryOperator<E>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.List.sort(java.util.Comparator<? super E>), newSymbol=com.google.common.collect.ImmutableList.sort(java.util.Comparator<? super E>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.putIfAbsent(K,V), newSymbol=com.google.common.collect.ImmutableMap.putIfAbsent(K,V)]
85eba51dc93caabd074c8e0e7a5ddde8ec8f1108|Thu Nov 03 21:09:07 CET 2016|Change travis config to not try to build on JDK7.|0|0|0|400|3661|324|134|45|3|9|0|
9a3b74501c70289a46fbc09f137990e21bb35423|Thu Nov 03 22:01:23 CET 2016|Fix JDK8 compilation errors in non-test code.|0|0|2|400|3661|324|134|19|74|10|0|
69f8837408af6a4e52c2f2baf0c5e6744e3b9b42|Thu Nov 03 22:06:28 CET 2016|Add Multimaps.toMultimap(keyFunction, valueFunction, multimapSupplier) collector.|0|0|1|400|3662|324|134|20|73|10|0|
a70ab0168d75db566d7e974220a0d0b17e514cf8|Thu Nov 03 22:15:28 CET 2016|Simplify some Table implementation details.|0|0|2|400|3662|324|134|22|47|5|0|
c34433a6d6062ffb23eb3878355024ae08517495|Fri Nov 04 14:35:32 CET 2016|Fix links to javadoc.io for Maven Javadoc Plugin|0|0|0|400|3662|324|134|18|2|5|0|
8665e6d9325ed091346081c7a21871d58a9c04be|Fri Nov 04 14:37:53 CET 2016|Fix ForwardingMultimapTest|0|0|0|400|3662|324|134|18|2|6|0|
fd0d6822a449003f5c74ddbf2e0351397f20cdce|Fri Nov 04 14:42:28 CET 2016|Use a newer JDK 8 for travis build|0|0|0|400|3662|324|134|19|2|6|0|
b43760617011dff5424ff301290ce67bca68c891|Fri Nov 04 14:46:20 CET 2016|Remove a redundant statement in TreeRangeMap.remove().|0|0|1|400|3662|324|134|17|53|7|0|
10f56d4cf475aaaa9a94d64b0c9e7495c43fcbc0|Fri Nov 04 15:53:04 CET 2016|Continue uploading snapshots now that we're building only with JDK 8.|0|0|0|400|3662|324|134|18|2|6|0|
86fb7001aecb8954dd15ee3c64e7172b4a6e512a|Fri Nov 04 15:54:13 CET 2016|Automated g4 rollback of changelist 138114495.|0|0|2|400|3662|324|134|18|69|9|0|
aa06fbd86fd3d0447733202f6a4dc8b3f83ddfb4|Fri Nov 04 16:07:08 CET 2016|Make SloppyTearDown.logger private.|0|0|0|400|3662|324|134|21|2|7|0|
700b11a874766945967f37501ed364ac07632ac5|Fri Nov 04 17:19:36 CET 2016|Open source Comparators.|1|0|0|401|3665|324|134|18|39|5|0|
90434a14edfbbd2487f1a28b195556f3302e68b2|Fri Nov 04 19:28:13 CET 2016|Note that Guava for Java 8 is coming.|0|0|0|401|3665|324|134|20|2|6|0|
709624fafd1540fc1d8144794fa86fb890f0d303|Fri Nov 04 22:09:05 CET 2016|Go back to Collections.sort() instead of List.sort() to eliminate difference between forks, since the former just delegates to the latter anyway.|0|0|2|401|3665|324|134|18|71|10|0|
59bb189b0b06ddaf28c4df833879a645746ca210|Mon Nov 07 20:20:53 CET 2016|Defer overlap checking in ImmutableRange{Set,Map}.Builder to the build() call, which matches the behavior in ImmutableMap.Builder and allows significantly faster handling of the case where ranges are inserted in predictable order.|0|0|2|401|3665|324|134|21|67|6|0|
a707ddc0e363aad68824b79e288f6b863a1579fd|Mon Nov 07 21:27:59 CET 2016|Update link to GWT docs that died with Google Code.|0|0|0|401|3665|324|134|22|2|5|0|
0c769144624136bddc00c9f1c1f4bfdbd3f4ce31|Tue Nov 08 01:57:02 CET 2016|Warn about overriding Converter.reverse().|0|0|1|401|3665|324|134|19|55|5|0|
bab5273ad9903ddffd4a748924374246ebb441ec|Tue Nov 08 03:46:52 CET 2016|Automated g4 rollback of changelist 56995761.|0|0|5|401|3665|324|134|20|33|6|0|
3dcc44d755609ad760ab2d885efb5a0d952e3e48|Tue Nov 08 16:20:51 CET 2016|Fix some typos in guava-[gwt,testlib,tests]/*|0|0|0|401|3665|324|134|20|2|8|0|
a6db51da4bf3c8e521929ae82ab229974c1bc2cb|Tue Nov 08 21:35:28 CET 2016|Make some AbstractMapBasedMultimap helper methods static.  (As part of the process, make Sets.unmodifiableNavigableSet GWT-compatible, as NavigableSet is no longer an issue.)|0|0|3|401|3665|324|134|20|75|6|0|
0c2cd39185c3dac8a3ae5f3c3289e77e1c2356ff|Tue Nov 08 22:00:52 CET 2016|Improve the Spliterator of Multimap values-for-key collections.|0|0|1|401|3665|324|134|22|59|6|0|
c2641e083e31fdbd9c09b33ca6a3546f5f69fe28|Wed Nov 09 20:51:45 CET 2016|Add mapWithIndex overloads mapping IntStream -> Stream, etc.|0|0|1|404|3671|324|134|20|46|6|0|
503d6949e44f31c6cd9de77c8385947add8e20b9|Wed Nov 09 21:24:41 CET 2016|Add a value-merging collector for ImmutableTable.|0|0|1|404|3672|324|134|21|60|6|0|
cd9a472e2588ec53109be8a1927cd4cb2af0f0d6|Wed Nov 09 21:50:28 CET 2016|Add mutable Table collector to Tables, including a version with a merge function to match Collectors.toMap and ImmutableMap.toImmutableMap.|0|0|1|404|3674|324|134|24|57|8|0|
9d028d0014840f295c35e1edd85e049d561864a3|Wed Nov 09 22:11:43 CET 2016|Add @Beta to the ImmutableTable collectors.|0|0|1|404|3674|324|134|21|55|7|0|
6b1046fbe17c1e40f554df906973a57b28d72e42|Fri Nov 11 21:09:05 CET 2016|Include java.lang.Lang from java.util.Util. This is necessary now that our java.util contains classes that use java.lang.InterruptedException.|0|0|0|404|3674|324|134|19|2|5|0|
cd00291bea68804ec55415ce845cafd983c7bdc3|Fri Nov 11 21:24:12 CET 2016|Use ForwardingWrapperTester in Forwarding*MultimapTest.|0|0|0|404|3674|324|134|18|2|6|0|
e38225a3c2a2c611aefe00dd8a40f8eed97cc2f3|Mon Feb 08 22:06:50 CET 2016|Reflect Navigable* support in GWT in TreeMultimap.|0|0|2|404|3674|324|134|18|58|5|0|
98f3b6ae48e3067f0b51e643d52fbb6b503365e8|Fri Nov 11 23:41:28 CET 2016|Document and deprecate mutations on SetView, which already documents its unmodifiability, as suggested by cushon@.|0|0|1|404|3681|324|141|19|65|9|7|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.AbstractCollection.clear(), newSymbol=com.google.common.collect.Sets$SetView.clear()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.AbstractSet.removeAll(java.util.Collection<? extends java.lang.Object>), newSymbol=com.google.common.collect.Sets$SetView.removeAll(java.util.Collection<? extends java.lang.Object>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.AbstractCollection.remove(java.lang.Object), newSymbol=com.google.common.collect.Sets$SetView.remove(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.AbstractCollection.add(E), newSymbol=com.google.common.collect.Sets$SetView.add(E)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.AbstractCollection.addAll(java.util.Collection<? extends E>), newSymbol=com.google.common.collect.Sets$SetView.addAll(java.util.Collection<? extends E>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Collection.removeIf(java.util.function.Predicate<? super E>), newSymbol=com.google.common.collect.Sets$SetView.removeIf(java.util.function.Predicate<? super E>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.AbstractCollection.retainAll(java.util.Collection<? extends java.lang.Object>), newSymbol=com.google.common.collect.Sets$SetView.retainAll(java.util.Collection<? extends java.lang.Object>)]
1e63909061cc0391c2ec91d7ba985fb0be9a75e7|Fri Nov 11 23:47:02 CET 2016|Use GWT's provided Arrays.copyOf and Arrays.copyOfRange where possible|0|0|15|404|3681|324|141|26|99|9|0|
e6541799ee6fcae412645075fabb5ea65fd07d49|Mon Aug 22 00:18:01 CEST 2016|Suppress warning for modification of immutable collections|0|0|0|404|3681|324|141|21|2|6|0|
0e2a6cb0fd2f5d95f58f63867d6ff2ff36505b8e|Mon Nov 14 17:58:51 CET 2016|Override Multiset.size() to clarify add additional javadocs.|0|0|1|404|3682|324|141|19|61|6|0|
bd3633c4f98b8545c968356c73de18164abe07a2|Mon Nov 14 23:25:09 CET 2016|Use ForwardingWrapperTester to simplify a few more Forwarding*Test.|0|0|0|404|3682|324|141|22|2|6|0|
77a57f215fb6eb5a2c982ac1843299f21deb53d3|Wed Nov 16 14:13:12 CET 2016|Use ForwardingWrapperTest to simplify last round of ForwardingTestCase subclasses.|0|0|1|404|3682|324|141|22|40|8|1|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.Multiset.forEach(java.util.function.Consumer<? super E>)]
fb7fb7d39fc523d6f5ddd109250c153effdc776d|Wed Nov 16 19:40:54 CET 2016|Migrate last users of ForwardingTestCase and delete it.|0|0|0|404|3682|324|141|21|2|5|0|
17784aebfdd7c24f5476352361f5e87867a247a4|Wed Nov 16 20:58:57 CET 2016|Add flatteningToMultimap collectors.|0|0|3|404|3685|324|141|22|75|7|0|
3d81db1ab25f05be167d7a1b6e0fbe7a5d2b236b|Thu Nov 17 01:32:54 CET 2016|Add more docs on the relationship between c.g.c.c view methods and Streams.|0|0|4|404|3685|324|141|25|94|6|0|
d773e9f04c5b099b52cde43d37d8d9a21ebf0e3d|Thu Nov 17 19:59:44 CET 2016|fix typo|0|0|1|404|3685|324|141|21|61|5|0|
f67ab864bde63fa6602b5688de0440957ffeaa2e|Fri Nov 18 21:28:23 CET 2016|Remove methods scheduled for deletion in Guava 21.|0|0|3|403|3663|324|134|20|70|9|8|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.MoreExecutors.sameThreadExecutor(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Objects.toStringHelper(java.lang.Object), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Objects.firstNonNull(T,T), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Objects.toStringHelper(java.lang.String), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.base.Objects$ToStringHelper, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Objects.toStringHelper(java.lang.Class<? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ConcurrentHashMultiset.create(com.google.common.collect.MapMaker), newSymbol=],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.Multiset.forEach(java.util.function.Consumer<? super E>)]
16e3f26fd31ced35fa8a71ab2b1091ce9157a90f|Mon Nov 21 23:22:41 CET 2016|Add Booleans.{true,false}First.|0|0|1|403|3665|324|134|23|17|6|0|
2ef955163b3d43e7849c1929ef4e5d714b93da96|Mon Nov 28 20:38:37 CET 2016|Fix two bugs in MinMaxPriorityQueue (introduced in [] First is a bug in removeAt(int) that sometimes causes the wrong element to be removed. Second is a bug that sometimes causes certain elements to be iterated over more than once if elements were removed during iteration.|0|0|1|403|3665|324|134|21|45|6|0|
adce8999989d80c80fda3607dac324cbd47681c1|Mon Nov 28 20:48:53 CET 2016|Fail more clearly when escapers run out of buffer space.|0|0|2|403|3665|324|134|22|16|6|0|
526ba0d4b72902cc1d4a2430c57fa56565f60453|Thu Dec 01 02:15:03 CET 2016|Update Public Suffix List.|0|0|1|403|3665|324|134|19|40|6|0|
e7e4c5f115ca3edf6d126f3dd2682a54d7305cdb|Thu Dec 01 18:12:25 CET 2016|Adds @RetainedWith to ImmutableSet.asList to prevent the reference cycle from causing leaks in Objective-C.|0|0|1|403|3665|324|134|19|50|8|0|
397d2a62c4cdbf37e22b303acc7800b14a3c4534|Thu Dec 08 16:53:29 CET 2016|Fix iteration+removal bug for reference-equal objects|0|0|1|403|3665|324|134|20|46|4|0|
15b547abb7015069bb464833a72f433d82b83829|Sat Dec 03 01:07:11 CET 2016|Add toJavaUtil instance method, which is handier and also doesn't have to be marked @Nullable.|0|0|1|403|3666|324|134|21|12|6|0|
20dbb7318d6a3da8111ce2299e840d7baded8f66|Tue Dec 06 01:50:42 CET 2016|Add Reflection annotation to j.c.g.common.util.concurrent.AbstractFuture for j2objc compile, in order to strip all other transpiled java reflections.|0|0|1|403|3666|324|134|21|60|6|0|
2a14314eb4a1fd64b5fadbef3a35a7b8fa4d3fce|Tue Dec 06 18:26:19 CET 2016|Remove non-interface methods from TreeBasedTable implementations.|0|0|1|403|3666|324|136|21|56|5|0|
e4981dbeef1b44771c27e9c13d5ee4177b3453c8|Tue Dec 06 18:27:51 CET 2016|Remove non-interface methods from Multimap implementations.|0|0|2|403|3666|324|138|22|62|10|0|
f81aa2d4ebdd92d2594989eabce878b60327e8a4|Tue Dec 06 20:29:55 CET 2016|Annotate Multimap with @CompatibleWith annotations to enforce type-compatibility with keys and values as appropriate.|0|0|1|403|3666|324|138|20|55|5|0|
1684cbd29c26cfb6254b8781936a242fd3a3fc2c|Wed Dec 07 06:50:23 CET 2016|Annotate Graph and Network with @CompatibleWith as appropriate.|0|0|6|403|3666|324|138|20|12|5|0|
04a28f4dd88f2c8ad85becb3d375cced2d6c86ad|Wed Dec 07 20:56:04 CET 2016|Add set-arithmetic operations to ImmutableRangeSet, as discussed in []|0|0|1|403|3669|324|138|19|54|7|0|
ff620804b0f6c89c7c168b692b0c98d7110623f4|Thu Dec 08 00:55:17 CET 2016|Update Public Suffix List.|0|0|1|403|3669|324|138|24|41|6|0|
67405979835b19d0f1da463a7de005cebd4ff053|Thu Dec 08 19:41:01 CET 2016|Stop scaring Cache.asMap() users away from new Java 8 methods, which Louis made work really well long ago.|0|0|1|403|3669|324|138|17|57|7|0|
5a42baf73ca755366e9aeff5567b2ef70d891852|Fri Dec 09 05:41:48 CET 2016|Add a disclaimer to Files/MoreFiles.getFileExtension that clarifies that it is unable to account for filesystem-specific quirks and instead only uses the information available in the File/Path API.|0|0|2|403|3669|324|138|20|72|6|0|
fc6515d1314c37227e81324806ffd6fb25b8d597|Fri Dec 09 22:59:53 CET 2016|Warn about upcoming deprecation of Multimap static factory methods.|0|0|2|403|3669|324|138|20|58|6|0|
17b120d7ec6fb29abf8f128ce270c0c647661e7b|Mon Dec 12 17:35:44 CET 2016|Remove unneeded JSNI from Objects.equals|0|0|0|403|3669|324|138|18|2|6|0|
3f4aec3dda699482bef2c3669e42561dc3b5957e|Mon Dec 12 20:05:28 CET 2016|Make ImmutableMultiset.elementSet() return ImmutableSet.|0|0|2|403|3670|324|138|19|68|7|2|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.Multiset.elementSet(), newSymbol=com.google.common.collect.ImmutableMultiset.elementSet()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.Multiset.elementSet(), newSymbol=com.google.common.collect.ImmutableMultiset.elementSet()]
6fff60802ed6d8157b6178842ff9d164aa0fe928|Mon Dec 12 20:33:28 CET 2016|Add UnsignedInts.{checked,saturated}Cast.|0|0|1|403|3672|324|138|21|16|5|0|
52013d5724feda8f07c2c30e9cccb85db037b6ed|Tue Dec 13 23:00:37 CET 2016|Fix typos in UnsignedInts docs|0|0|1|403|3672|324|138|18|18|9|0|
770ad744831b14cf051242359181ca51c504c97f|Wed Dec 14 00:02:37 CET 2016|Add a "constrainToRange" method to constrain a value to a closed interval.|0|0|6|403|3678|324|138|25|32|6|0|
b2c7384b371115007567704de13821972cd562e5|Wed Dec 14 00:11:35 CET 2016|Add {Sets,Maps}.toImmutableEnum{Set,Map} Collectors.|0|0|2|403|3681|324|138|24|94|7|0|
5087f785bed999500743e2775192ffc17d14bce6|Wed Dec 14 11:47:29 CET 2016|guava-testlib: Cover Collections.synchronizedNavigable{Map,Set}().|0|0|0|403|3681|324|138|23|2|6|0|
586995d7b6afdb680ef63d58f5b225bb6e09aa25|Wed Dec 14 20:14:58 CET 2016|I think this recommendation will go over better. (It happens to be identical to what we already had on the java 7 branch.)|0|0|1|403|3681|324|138|20|55|6|0|
f80757d4de5f187ace24ebeb39939396494a23c8|Thu Dec 15 19:08:38 CET 2016|Improve EqualsTester doc|0|0|0|403|3681|324|138|22|2|7|0|
d4c3c2da7ecaf514c649b836470b6f7d86009c34|Thu Dec 15 20:12:36 CET 2016|Annotate Table and Multiset with @CompatibleWith|0|0|2|403|3681|324|138|17|59|5|0|
a11c1f923c3094717cc3310b2b71f06f08c35d0f|Thu Dec 15 23:11:05 CET 2016|Update Truth dependency to 0.31 and add truth-java8-extension dependency for guava-gwt tests.|0|0|0|403|3681|324|138|19|2|6|0|
5a4d9bc5cd7bac6be3512d57b53960a34904cff1|Mon Dec 19 22:21:39 CET 2016|Inline two vestigial single-use helper methods.|0|0|1|403|3681|324|138|18|60|5|0|
4d025889e59ef9fb8e3886ce51cd021022429142|Mon Dec 19 23:44:51 CET 2016|Fix 2 javadoc typos introduced by []|0|0|1|403|3681|324|138|19|53|6|0|
14c08642e4048ffc5151d31728404edc6bf2562e|Tue Dec 20 17:26:44 CET 2016|Add a custom gwt serializer for the Range object|1|0|1|403|3681|324|138|22|49|9|0|
dbc3258d66075a766d1a67ca08b8631d617af681|Wed Dec 21 00:13:33 CET 2016|Implement Throwables.getCauseAs(Throwable, Class), which safely casts a Throwable's cause and ensures that the exception thrown on a bad cast has the original exception as its cause.|0|0|1|403|3682|324|138|22|12|6|0|
8dac290de1588c158c3eaea84890776a4986c0a4|Wed Dec 21 18:15:50 CET 2016|Fix occasional hangs. Also, include LinkedBlockingDeque in our public tests, since we've required Java 6 for a long time. Plus, use static imports, Stopwatch, and Truth, and reformat.|0|0|0|403|3682|324|138|18|2|5|0|
424695b378bb2eeb7d147a126aa497e0c196243d|Wed Dec 21 21:34:15 CET 2016|Specify that EvictingQueue is FIFO.|0|0|1|403|3682|324|138|17|41|6|0|
f74b9dec6b2447b4e81b555a8f8fe0c37e427eb4|Wed Dec 28 00:54:21 CET 2016|Add a toString() to the Runnable created by Futures.addCallback.  While not typically exposed to the user, the Runnable may still be seen in logging and/or debugging output.|0|0|1|403|3682|324|138|20|64|6|0|
e7936c2c38761c81f78323244e5405e826dc50e6|Wed Dec 28 05:40:36 CET 2016|Add a TODO; inadvertently update some copyright dates.|0|0|0|403|3682|324|138|20|2|6|0|
c27d09cd654a684375b361f94506419477dd9b40|Wed Dec 28 19:05:19 CET 2016|Consistently use java.util.function interfaces in arguments to Collector factories (https://github.com/google/guava/issues/2694)|0|0|2|403|3682|324|138|18|81|8|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Multimaps.toMultimap(com.google.common.base.Function<? super T,? extends K>,com.google.common.base.Function<? super T,? extends V>,com.google.common.base.Supplier<M>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Tables.toTable(java.util.function.Function<? super T,? extends R>,java.util.function.Function<? super T,? extends C>,java.util.function.Function<? super T,? extends V>,com.google.common.base.Supplier<I>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Multimaps.flatteningToMultimap(com.google.common.base.Function<? super T,? extends K>,com.google.common.base.Function<? super T,? extends java.util.stream.Stream<? extends V>>,com.google.common.base.Supplier<M>), newSymbol=]
34891e692832c45bdca08bb4168bea1778d98256|Wed Dec 28 19:31:01 CET 2016|Stop qualifying references to local types.|0|0|2|403|3682|324|138|21|62|5|0|
f40d687ae2a3501c1eab068638f8ab6b1cf872c0|Wed Dec 28 20:24:17 CET 2016|Update Guava README to mention 21.0-rc1.|0|0|0|403|3682|324|138|19|2|6|0|
717a8f10865223ccb0a7168ccfde1d43d541cd5b|Wed Dec 28 20:32:20 CET 2016|Make Maps.toImmutableEnumMap use j.u.f.Function.|0|0|1|403|3682|324|138|18|89|8|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Maps.toImmutableEnumMap(com.google.common.base.Function<? super T,? extends K>,com.google.common.base.Function<? super T,? extends V>,java.util.function.BinaryOperator<V>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.Maps.toImmutableEnumMap(com.google.common.base.Function<? super T,? extends K>,com.google.common.base.Function<? super T,? extends V>), newSymbol=]
d2493a9a7d20d484c508ca293b4bf10bf0cca80e|Tue Aug 30 17:36:01 CEST 2016|Release @Immutable annotations in common.graph. We've already released them in other packages.|0|0|5|403|3682|324|138|24|62|6|0|
305a4b97c56ca04d7e487c59b21b148479561117|Thu Dec 29 17:55:46 CET 2016|Remove unused imports.|0|0|4|403|3682|324|138|22|90|9|0|
4003d1a2d6d6d4edca2c9f6ebf4f0bb629d1fc12|Sat Dec 31 01:59:49 CET 2016|Remove more unused imports.|0|0|1|403|3682|324|138|22|88|8|0|
ba6e0cb2e18960c3565b80fa15b493d0c0849e19|Sat Dec 31 02:23:30 CET 2016|Fix javadoc errors reported by IntelliJ IDEA.|0|0|17|403|3682|324|138|25|160|9|0|
d9f088a61c80fa47d09ccf05a8c3608a47c5e4c0|Tue Jan 03 03:10:37 CET 2017|Tweaks from shuffling of internal hash functions.|0|0|0|403|3682|324|138|23|2|6|0|
154e9fb53bdecc068b394e3450e00197855e52d1|Tue Jan 03 19:50:22 CET 2017|Mark RemovalListener and Weigher as Java 8 FunctionalInterfaces|0|0|2|403|3682|324|138|19|8|8|0|
cc596a037d46c65496c04d34e8717f63693c9cf8|Tue Jan 03 23:06:12 CET 2017|Avoid isNotInstanceOf(), which can wrongly succeed under -XdisableClassMetadata.|0|0|0|403|3682|324|138|23|2|6|0|
b710437f4727a57f23fb2b750e13fc89ee8d1012|Wed Jan 04 01:02:37 CET 2017|Apply `assertTrue(obj instanceof Class)` -> `assertThat(obj).isInstanceOf(Class.class)` refactorings to c.g.common.|0|0|0|403|3682|324|138|23|2|6|0|
7b53ffdf0d4c7616566cb6953cce15e9247c04c2|Wed Jan 04 01:17:23 CET 2017|Add example anti-pattern to getCauseAs() Javadoc.|0|0|1|403|3682|324|138|19|14|8|0|
1efc5ce983c02cfaa2ce3338bdfaa1f583b66128|Wed Jan 04 03:05:18 CET 2017|Add RangeMap.putCoalescing() in order to support coalesced RangeMap entries.|0|0|3|403|3685|324|139|21|58|5|1|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.RangeMap, newSymbol=com.google.common.collect.RangeMap.putCoalescing(com.google.common.collect.Range<K>,V)]
3aadd26e9e7fe6f9dacc782045e9e5207cf3b0a6|Wed Jan 04 22:18:51 CET 2017|Add MoreFiles.equal() - Files/MoreFiles feature parity.|0|0|2|403|3686|324|139|20|63|9|0|
1767cde568042d6cba069cdf13cc0e9ec4fb7ba8|Wed Jan 04 23:13:14 CET 2017|Add @since to RangeMap.putCoalescing().|0|0|1|403|3686|324|139|20|42|5|0|
1554ca732769fc93a4a198eb5764c2e7bcea3f17|Thu Jan 05 00:00:11 CET 2017|Better phrasing of Throwables.getCauseAs() documentation.|0|0|1|403|3686|324|139|18|12|4|0|
be87e5ba9046a8f7827df0d8e0ff77e528d7cdee|Fri Jan 06 17:41:10 CET 2017|Annotate AbstractFuture with @DoNotMock.|0|0|1|403|3686|324|139|19|58|6|0|
79f777a7576bcb363b1a5fab8a7ec653f48d4c05|Fri Jan 06 19:28:13 CET 2017|Mention rc2.|0|0|0|403|3686|324|139|19|2|6|0|
6df14d7ccb07d5d61f11849c201345504b5e836a|Wed Jan 11 17:02:33 CET 2017|Deprecate CheckedFuture.|0|0|4|403|3686|324|146|19|59|5|0|
6df8b3ca1d1d6b2dfe3aff0316079da61937eef9|Wed Jan 11 19:35:59 CET 2017|Expose collectors for Multisets accepting per-element counts|0|0|4|403|3689|324|146|24|71|6|0|
65ffec58dcbb7547109896d5d96ae0581dca4cc8|Wed Jan 11 20:14:15 CET 2017|Fix "Feburary" typo.|0|0|4|403|3689|324|146|23|60|5|0|
896c51abd32e136621c13d56b6130d0a72f4957a|Thu Jan 12 22:19:22 CET 2017|To fix external bug https://github.com/google/guava/issues/2152.|0|0|1|403|3689|324|146|20|67|6|0|
b0b03e7936397e68960383d2086f342f74d1c1bc|Thu Jan 12 23:17:35 CET 2017|Update README for Guava 21.0 final and set snapshot version to 22.0-SNAPSHOT.|0|0|0|403|3689|324|146|22|2|6|0|
6c02e370ae4256ea1ed027c41cc20639ca09a1a5|Wed Jan 18 04:33:36 CET 2017|Make it so ValueGraph no longer extends Graph. Instead, provide a ValueGraph.asGraph() method. In a followup change, this will allow us to handle equals()/hashCode() "normally" and delete the Graphs.equivalent() methods.|0|0|10|403|3706|324|146|22|65|6|10|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.Graph<N>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ValueGraphBuilder.from(com.google.common.graph.Graph<N>), newSymbol=],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.edgeCount(), newSymbol=com.google.common.graph.ConfigurableValueGraph.edgeCount()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph$ValueBackedImpl.delegate(), newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph$ValueBackedImpl.backingValueGraph, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph.copyOf(com.google.common.graph.ImmutableGraph<N>), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph.asGraph()],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.ImmutableValueGraph, newSymbol=com.google.common.graph.ImmutableValueGraph],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.AbstractValueGraph, newSymbol=com.google.common.graph.AbstractValueGraph]
d0dc9ce896df6299de427063fa69bd348937ef1f|Wed Jan 18 05:02:14 CET 2017|Now that ValueGraph no longer extends Graph, change all the common.graph interfaces to handle equals()/hashCode() "normally". Deprecate Graphs.equivalent().|0|0|7|403|3712|324|149|26|73|6|6|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.ValueGraph.equals(java.lang.Object), newSymbol=com.google.common.graph.AbstractValueGraph.equals(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.ValueGraph.hashCode(), newSymbol=com.google.common.graph.AbstractValueGraph.hashCode()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.Graph.hashCode(), newSymbol=com.google.common.graph.AbstractGraph.hashCode()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.Graph.equals(java.lang.Object), newSymbol=com.google.common.graph.AbstractGraph.equals(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.Network.equals(java.lang.Object), newSymbol=com.google.common.graph.AbstractNetwork.equals(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.Network.hashCode(), newSymbol=com.google.common.graph.AbstractNetwork.hashCode()]
e616b8ec9612eeb5ad2b616b4809e16ec8a53bc0|Thu Jan 19 08:02:16 CET 2017|Introduce a package-private BaseGraph interface and AbstractBaseGraph class. This allows us to remove a large amount of code duplication. It also gives us a small reduction in constant overhead for Graphs.|2|0|9|403|3702|324|149|22|61|5|15|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractValueGraph.edgeCount(), newSymbol=com.google.common.graph.AbstractBaseGraph.edgeCount()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractValueGraph.outDegree(java.lang.Object), newSymbol=com.google.common.graph.AbstractBaseGraph.outDegree(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.ValueGraph.equals(java.lang.Object), newSymbol=com.google.common.graph.AbstractValueGraph.equals(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.inDegree(java.lang.Object), newSymbol=com.google.common.graph.AbstractBaseGraph.inDegree(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.ValueGraph.hashCode(), newSymbol=com.google.common.graph.AbstractValueGraph.hashCode()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.Graph.hashCode(), newSymbol=com.google.common.graph.AbstractGraph.hashCode()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.edgeCount(), newSymbol=com.google.common.graph.AbstractBaseGraph.edgeCount()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.outDegree(java.lang.Object), newSymbol=com.google.common.graph.AbstractBaseGraph.outDegree(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.edges(), newSymbol=com.google.common.graph.AbstractBaseGraph.edges()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractGraph.degree(java.lang.Object), newSymbol=com.google.common.graph.AbstractBaseGraph.degree(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractValueGraph.degree(java.lang.Object), newSymbol=com.google.common.graph.AbstractBaseGraph.degree(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractValueGraph.edges(), newSymbol=com.google.common.graph.AbstractBaseGraph.edges()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.Graph.equals(java.lang.Object), newSymbol=com.google.common.graph.AbstractGraph.equals(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.AbstractValueGraph.inDegree(java.lang.Object), newSymbol=com.google.common.graph.AbstractBaseGraph.inDegree(java.lang.Object)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.ImmutableGraph.delegate(), newSymbol=com.google.common.graph.ImmutableGraph.delegate()]
e3f9ba6a707b03559910bceffb74244ac9a8db13|Thu Jan 19 19:50:14 CET 2017|Finally add Tables.synchronizedTable, which has seemed to continually fall through the cracks...|0|0|2|403|3703|324|149|20|63|5|0|
26adf8f40095d21904711b9edf94ac258754bce7|Thu Jan 19 21:48:06 CET 2017|Shuffling from internal-only change.|0|0|0|403|3703|324|149|20|2|5|0|
7c59e96177901f12491cf25a409956f1649fa42e|Fri Jan 20 20:46:38 CET 2017|Add the methods Graph.hasEdge() and ValueGraph.hasEdge(). Also add some test coverage for ValueGraph.asGraph().|0|0|5|403|3705|324|149|19|51|6|2|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.hasEdge(java.lang.Object,java.lang.Object)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph.hasEdge(java.lang.Object,java.lang.Object)]
6dfbabda7906ec343bcc2e54e1c34957d90bae68|Fri Jan 20 21:29:26 CET 2017|Support interface static methods and default methods for NullPointerTester.|0|0|0|403|3705|324|149|20|2|9|0|
c41557c3563e4b20c0b16680c304f26887b14283|Fri Jan 20 21:33:45 CET 2017|Change NullPointerTester to work for Stream parameters.|0|0|0|403|3705|324|149|20|2|6|0|
829613401de295d6c6be65ff08d67d02cbbdf5ab|Fri Jan 20 21:33:51 CET 2017|Link to https://github.com/google/guava/wiki/Why-we-deprecated-Throwables.propagate|0|0|1|403|3705|324|149|19|12|5|0|
3def13f60ae4a72e59a8426aab6e3568613fe9e4|Fri Jan 20 22:50:31 CET 2017|Add the method Network.edgeConnecting().|0|0|4|403|3707|324|149|20|58|6|1|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network.edgeConnecting(java.lang.Object,java.lang.Object)]
39a92f259efe0dc73221af42b8f7e5f84b0130f4|Mon Jan 23 23:14:27 CET 2017|Among the Futures methods that run user callbacks, those that don't take an Executor will be deleted.  This CL migrates them to the counterparts that take MoreExecutors.directExecutor() as such Executor in the parameter list, exactly the way that the old method works.|0|0|1|403|3707|324|149|20|91|5|0|
1ab917eac078a6c9f6cfefee6859855b6037a9b9|Tue Jan 24 01:17:56 CET 2017|Among the Futures methods that run user callbacks, those that don't take an Executor will be deleted.  This CL migrates them to the counterparts that take MoreExecutors.directExecutor() as such Executor in the parameter list, exactly the way that the old method works.|0|0|1|403|3707|324|149|20|58|9|0|
8a991157845af123f701f223c8f2ecc245e82977|Tue Jan 24 20:45:23 CET 2017|Make TearDownStack thread-safe|0|0|0|403|3707|324|149|22|2|6|0|
7fa9839366d4eeb0e4c942b11f2ba8162ad40481|Thu Jan 26 00:10:41 CET 2017|Among the Futures methods that run user callbacks, those that don't take an Executor will be deleted.  This CL migrates them to the counterparts that take MoreExecutors.directExecutor() as such Executor in the parameter list, exactly the way that the old method works.|0|0|3|403|3707|324|149|19|59|6|0|
28148e763d5eea95f532df630e8eb87b993935d2|Mon Jan 30 22:09:46 CET 2017|Allow ignoring Constructors in NullPointerTester|0|0|0|403|3707|324|149|18|2|6|0|
bfbeca9d086110432cda723050f37e1fe7a60e1f|Mon Jan 30 22:34:32 CET 2017|Test that all MediaType constants are unique.|0|0|0|403|3707|324|149|18|2|5|0|
7356947cb2caf73d6155255bdcc2906e45e973d6|Tue Jan 31 04:00:37 CET 2017|Deprecate several redundant methods in Files, cross-reference functionality added to JDK's Files class (hence not in Guava's MoreFiles).|0|0|2|403|3707|324|157|19|62|8|0|
0e29934933f33379de953727171f7ca1ec616a58|Tue Jan 31 18:27:07 CET 2017|Make annotation dependencies non-optional.|0|0|0|403|3707|324|157|20|2|6|0|
93e4fb0aaf1c2304589f431c644f4bb7fc9e7363|Tue Jan 31 20:33:16 CET 2017|Added a new tests case that proves RateLimiter works even for very small numbers.|0|0|0|403|3707|324|157|17|2|5|0|
18309f0adb47de9593b3f189d213e72a526a048c|Fri Feb 03 02:46:32 CET 2017|Avoid mentioning ImmutableSortedSet in the ImmutableSet implementation.|0|0|1|403|3707|324|157|18|50|6|0|
612ea8749817abc6137755ca8e8af0b5a1411026|Fri Feb 03 16:40:22 CET 2017|Make RegularImmutableSet extend ImmutableSet directly, not ImmutableSet.Indexed.|0|0|1|403|3707|324|157|21|38|5|0|
46a324c292a8c2927bc452956d75134b2f084396|Fri Feb 03 21:44:31 CET 2017|Avoid mentioning ImmutableSortedMap in the ImmutableMap implementation.|0|0|1|403|3707|324|157|18|55|6|0|
aaae2e9a6b9cab0429f4589f89603742f28f6bd0|Fri Feb 03 22:55:14 CET 2017|Optimize ContiguousSet.asList() for the three built-in DiscreteDomains.|0|0|2|403|3707|324|157|20|57|7|0|
cac2e34369fe1b6b71ef0006e6fc50766fee8147|Sat Feb 04 01:01:35 CET 2017|Have ImmutableMaps for zero and one element use RegularImmutableMap instead of {Empty,Singleton}ImmutableBiMap, avoiding pulling in ImmutableBiMap and all its dependencies.|0|0|2|403|3707|324|157|22|60|7|0|
484c00a67537285255ac9311e339b0169fc28647|Mon Feb 06 18:55:24 CET 2017|Don't have a special class for Iterators.unmodifiableListIterator(), instead using Iterators.forArray(ObjectArrays.EMPTY_ARRAY).|0|0|1|403|3707|324|157|20|51|11|0|
994a379dc3b787c34afb0c3de65e26bede59bd81|Mon Feb 06 19:56:26 CET 2017|Delete SingletonImmutableList.|0|1|1|403|3707|324|157|23|47|6|0|
a1a83d407f3f19891b7032e151d945363c441780|Tue Feb 07 19:24:25 CET 2017|Add emptiesFirst/Last to Comparators for easily comparing java.util.Optional values.|0|0|1|403|3709|324|157|21|40|5|0|
9a0670aeef95035f5caf3814d0daf16ee60a353a|Tue Feb 07 23:56:07 CET 2017|Eliminate references to Joiner in toString static utilities, inlining the joining logic explicitly.|0|0|3|403|3709|324|157|23|96|10|0|
6be638b6cd854cc8be93210bc173e22d88d74593|Wed Feb 08 00:16:45 CET 2017|Eliminate SingletonImmutableSet, partially folding it into RegularImmutableSet.|0|1|2|403|3709|324|157|23|47|6|0|
92ff172e173dcf16376e9b429827dfc99dd6354f|Wed Feb 08 18:13:51 CET 2017|Update version guarantee for our tests|0|0|0|403|3709|324|157|19|2|6|0|
9f2e28d6ffb74733b397b84ac25139ae3e012c33|Wed Feb 08 19:25:30 CET 2017|Automated g4 rollback of changelist 146841288.|1|0|2|403|3709|324|157|19|51|6|0|
108c4422b3e1d5d272cefe6bc4dd1433c8708c1c|Wed Feb 08 19:47:35 CET 2017|Don't use a Predicate in Iterators.contains.  This saves an embarrassing number of classes.|0|0|1|403|3709|324|157|21|53|8|0|
f267c4a0c11104099537ace3be89d97b96ebde95|Wed Feb 08 22:59:40 CET 2017|Turn Iterators.emptyModifiableIterator into an enum singleton instead of an anonymous inner class.|0|0|1|403|3709|324|157|17|53|5|0|
aafccea1e471dd936966182b3e2a1dd03358ef8f|Thu Feb 09 23:05:09 CET 2017|Don't use ImmutableSet.of() for the keySet of ImmutableMap.of().|0|0|1|403|3709|324|157|18|60|7|0|
0fd20594150e5493138e83462b25b81db2507f49|Mon Feb 13 19:13:11 CET 2017|Move the the static constant empty iterator to live in its implementation class, ArrayItr.|0|0|1|403|3709|324|157|19|52|6|0|
fbe153c49da10a7a0a96e003017028c15b2814f2|Tue Feb 14 01:19:01 CET 2017|Push down the implementation of ImmutableMap.createKeySet() into its implementations, because ProGuard can't figure out how to eliminate createKeySet even when it's overridden in the only ImmutableMap implementation it knows of.|0|0|3|403|3709|324|157|21|72|8|0|
ccd010f72a8025e51087a7f85d2be29817a0d29c|Tue Feb 14 19:20:21 CET 2017|Copied from cpovirk's CL 147393681 to submit while cpovirk is OOO.|0|0|0|403|3709|324|157|21|2|9|0|
63a3a9bb02dedcb4dcda9647ec466f6ac0839ade|Tue Feb 14 19:39:24 CET 2017|Eliminate references to ObjectArrays in the closure of ImmutableSet and ImmutableMap.|0|0|4|403|3709|324|157|19|58|5|0|
217659fcd585d0512f77c020835f2a56db059ce5|Tue Feb 14 22:43:22 CET 2017|Push down the implementation of createValues() into the subclasses of ImmutableMap.|0|0|3|403|3709|324|157|19|71|11|0|
89a8e3f6757b809ee43e4f7d172ba3b5af9b4c36|Wed Feb 15 18:47:49 CET 2017|Fix cases where GWT sometimes couldn't infer which types are serialized. And finally revise our (internal-only) tests to catch these problems and the problem fixed by CL 147488537.|4|0|4|403|3709|324|157|25|64|5|0|
6f96135d896e671b14f69c90d6d989f0652da1e6|Wed Feb 15 21:56:21 CET 2017|Fix "SecretSpecKey" typo in Hashing javadoc|0|0|1|403|3709|324|157|19|21|5|0|
b17fe0d57083d37f87301dd912f9548ec11d305d|Fri Feb 17 01:35:17 CET 2017|Push down definition of ImmutableSortedSet.createDescendingSet to subclasses, so we don't get DescendingImmutableSortedSet unless we actually have an ImmutableSortedSet implementation that uses it.|0|0|4|403|3709|324|157|19|64|10|2|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Collection.removeIf(java.util.function.Predicate<? super E>), newSymbol=com.google.common.collect.ImmutableCollection.removeIf(java.util.function.Predicate<? super E>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.SortedSet.spliterator(), newSymbol=com.google.common.collect.ImmutableSortedSet.spliterator()]
5907979766f539d8aa810459bd0194adefd10c95|Fri Feb 17 20:52:05 CET 2017|Suppress @GuardedBy errors.|0|0|4|403|3709|324|157|24|90|6|0|
623896f9180bd20c05b8c550f4323038f86803d0|Fri Feb 17 22:47:31 CET 2017|Added SuccessorGraph/PredecessorGraph.|2|0|4|405|3713|324|157|23|20|7|0|
891d64ba1835e3aa5f7bf827ebe09b4972c07830|Sat Feb 18 02:26:38 CET 2017|Some rework of Equivalence javadocs. Remove a message that no longer applies there.|0|0|1|405|3713|324|157|18|43|6|0|
717ece9ad6c9a3e27987b65efb400e79d671eefc|Sat Feb 18 21:04:26 CET 2017|{*Graph, Network}.java: change documentation of allowsSelfLoops() and allowsParallelEdges() to correct the type of exception that is thrown when one attempts to modify them in a way that the constraint prevents (e.g., adding a self-loop to a graph that doesn't allow them).|0|0|2|405|3713|324|157|18|15|5|0|
5076898002c108516cadc50179856e0bb2815fa4|Sat Feb 18 00:47:38 CET 2017|Fixed signature compatibility issue.|0|0|4|405|3713|324|157|17|16|8|0|
c0b74877c604d6c8190b03d8470435048650f815|Tue Feb 21 18:21:19 CET 2017|Explain the segmented nature of maximumWeight better.|0|0|1|405|3713|324|157|19|63|5|0|
7cb2291988f653a27237cfaf8e98e2a27bea2690|Tue Feb 21 19:26:51 CET 2017|Instead of using the SortedLists utility class, go straight to Collections.binarySearch in the implementation of RegularImmutableSortedSet.|0|0|1|405|3713|324|157|19|46|5|0|
15c2b776614a2be35668eba77af1bfe5a7cec2fd|Tue Feb 21 19:53:44 CET 2017|Rename Multiset collector parameter names to be consistent with other collector factories.|0|0|1|405|3713|324|157|19|58|6|0|
8a930bc2d352cb4c8def02d982b795f0ae48a229|Tue Feb 21 20:39:11 CET 2017|Allow Funnel<? super T> for BloomFilter.readFrom()|0|0|1|405|3713|324|157|22|21|6|1|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.hash.BloomFilter.readFrom(java.io.InputStream,com.google.common.hash.Funnel<T>), newSymbol=com.google.common.hash.BloomFilter.readFrom(java.io.InputStream,com.google.common.hash.Funnel<? super T>)]
7c11b8d9220b710d5598b774e22cc774f68f40e7|Wed Feb 22 17:45:17 CET 2017|Make classpath scans over circular symlinks predictable.|0|0|1|405|3713|324|157|19|62|9|0|
31efcb491afa1b287f21565e71acc4059729403d|Wed Feb 22 19:23:43 CET 2017|ByteProcessor does not operate on lines.|0|0|1|405|3713|324|157|18|7|6|0|
1aea9748a3e0a73e8b82270c01ccf8bb92264f4c|Wed Feb 22 19:31:54 CET 2017|Make the tests for Quantiles use up-to-date Truth technology. My main motiviation here is to stop using hasValuesWithin, which is going away. While I'm at it, let's start using comparingValuesUsing for the Map assertions to avoid the unpleasant loop, and inline the helpers, which aren't really useful now that we've done that.|0|0|0|405|3713|324|157|23|2|7|0|
9e2592468378e55556e28d643a6437322d35c480|Thu Feb 23 17:36:42 CET 2017|Make ListenerCallQueue functionality available outside the concurrent package internally. Changes: - encapsulate list of listeners functionality - rename Callback interface to Event and make it lambda-compatible - move "methodName" to just be toString() on Event, which also defers/avoids unnecessary allocations - remove @GuardedBy suppression|0|0|3|405|3713|324|157|19|77|6|0|
e375c341d1a447b02f6ab5f8a3db43e2943e0d00|Thu Feb 23 18:26:43 CET 2017|Annotate some flaky slow tests as @AndroidIncompatible.|0|0|0|405|3713|324|157|19|2|9|0|
327440e01dbe1d7f9f3b09f5866e4e6b19709cb6|Thu Feb 23 21:15:30 CET 2017|Avoid reference to PeekingIterator in RegularImmutableSortedSet.containsAll, inlining that logic instead of pulling in the extra class.|0|0|1|405|3713|324|157|19|48|6|0|
01d67d3f7b372279eb7af4469ec82f30c1ef08df|Thu Feb 23 23:14:43 CET 2017|Switch ImmutableSortedMap over to using AbstractMap.SimpleImmutableEntry instead of ImmutableMapEntry.|0|0|2|405|3713|324|157|20|71|10|0|
278019a9d822e2909663fb0455fbb18f195b9929|Thu Feb 23 23:48:09 CET 2017|Inline the logic of Ordering.onKeys() to get from a key comparator to an entry comparator with only one class instead of more.|0|0|1|405|3713|324|157|21|66|7|0|
45a0e3a8df9be0823ac38c668fbd177c4ee63de3|Fri Feb 24 00:10:22 CET 2017|Support an optional label when enqueuing listener events, to make using method references more palatable.|0|0|1|405|3713|324|157|19|47|5|0|
5b1fc2e6dac60e84e8bd59a29e66883a911e7cd3|Fri Feb 24 16:21:28 CET 2017|Update Public Suffix List.|0|0|1|405|3713|324|157|19|38|5|0|
379757e3b1c22fef4b19181e404c6abb7ad58d50|Mon Feb 27 19:11:07 CET 2017|Deprecate and better document many hash functions.|0|0|1|405|3713|324|159|17|21|6|0|
53e2de6e9cbb7fe686c3a28180770b884c02d1e3|Wed Mar 01 14:52:23 CET 2017|For constant field declarations, you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List). This communicates to your callers important semantic guarantees.|0|0|0|405|3713|324|159|19|5|5|0|
2203451442f390f6fb9aeea95a90f790d8a4a061|Wed Mar 01 21:50:16 CET 2017|For constant field declarations, you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List). This communicates to your callers important semantic guarantees.|0|0|0|405|3713|324|159|19|2|6|0|
4906fbbaeb22559563be02b0e765fda15426baff|Thu Mar 02 16:15:38 CET 2017|google-java-format Stopwatch (and test) to minimize diffs introduced by []|0|0|1|405|3713|324|159|21|11|5|0|
719173f3c3b75f12992635e2cb60d5cffaab7d8f|Thu Mar 02 20:39:20 CET 2017|Add Stopwatch.elapsed() which returns a java.time.Duration|0|0|1|405|3714|324|159|18|11|6|0|
f1372238af0da9ba3d3b068fbe244c55a3104b57|Fri Mar 03 00:11:30 CET 2017|Add javadoc of common ways to obtain a non-public-constructable objects.|0|0|4|405|3714|324|159|20|66|5|0|
c7769b29de954b3469fb1d9a25a80cb333fdd0ae|Fri Mar 03 18:50:38 CET 2017|Add CharSource.lines().|0|0|5|405|3715|324|159|23|63|8|0|
5b4cd94406bc2ab1c6a1370e5650c8ee9ee64a70|Fri Mar 03 21:20:27 CET 2017|Fix bad reference to BufferedReader#readLine by adding parens so it doesn't somehow assume it should refer to the package-private version of the method that takes a boolean argument.|0|0|1|405|3715|324|159|18|54|5|0|
2162846b059a0aa4729eb6ba9cf6f6a8e73fa9be|Fri Mar 03 23:11:15 CET 2017|Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).|0|0|0|405|3715|324|159|19|2|6|0|
d86487fa294b1efa9f2b08c5569b9fca5efa1445|Mon Mar 06 16:30:51 CET 2017|Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).|0|0|0|405|3715|324|159|20|2|6|0|
269da6a8236e75eb4221e648bbe7351f84063632|Mon Mar 06 17:29:00 CET 2017|Among the Futures methods that run user callbacks, those that don't take an Executor will be deleted.  This CL migrates them to the counterparts that take MoreExecutors.directExecutor() as such Executor in the parameter list, exactly the way that the old method works.|0|0|2|405|3715|324|159|21|59|6|0|
ad998b11bdf7c33b730b2248e7438e90b14e39f3|Mon Mar 06 18:21:35 CET 2017|Add CharSource.forEachLine(Consumer).|0|0|1|405|3716|324|159|19|54|8|0|
8355d07391a07cda264e65718ee6e83678bc0e52|Mon Mar 06 19:25:54 CET 2017|Use the valuesSpliterator() method we added to AbstractTable.|0|0|1|405|3716|324|159|21|37|5|0|
663a903b61003342b628eac9494573cab13a1316|Mon Mar 06 19:31:03 CET 2017|Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).|0|0|0|405|3716|324|159|18|2|6|0|
3d27caceeb1b90fb868d98e6d690394d3cff339a|Mon Mar 06 21:30:38 CET 2017|Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).|0|0|0|405|3716|324|159|17|2|5|0|
296972864f901744a7eb16698ecbbcbfaabf1989|Tue Mar 07 16:11:01 CET 2017|Reimplement inCompletionOrder() (courtesy lukes@). (Also, make it available under GWT, but possibly I could have done that without reimplementing?)|0|0|1|405|3716|324|159|18|58|6|0|
1445486132811e9ce175ce463356c659d8e6339d|Tue Mar 07 16:22:02 CET 2017|It was senseless to hold these nifty collectors back from Guava (sorry).|0|0|1|405|3718|324|159|23|42|7|0|
31985701e877434941c97891ba732478f0e97258|Thu Mar 09 02:09:23 CET 2017|Make MediaType.charset() a little cheaper.|0|0|1|405|3718|324|159|20|62|5|0|
c8765bc9e09df13164a8513efc91141767239eea|Thu Mar 09 16:51:39 CET 2017|Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).|0|0|1|405|3718|324|159|17|66|6|0|
0e2a0eede5bf85f3c1f64e5752501eddf9ab7202|Fri Mar 10 18:55:57 CET 2017|Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).|0|0|0|405|3718|324|159|19|2|6|0|
2848e96221c469b08c7693a18afba72219443f5f|Mon Mar 13 16:43:14 CET 2017|Added missing tests to ImmutableList.sortedCopyOf() (using natural order).|0|0|1|405|3718|324|159|18|43|8|0|
ea7b9e3af6844d4f5a2efe7dc98ee30f88c8cfbb|Tue Mar 14 21:15:08 CET 2017|Added a test that improves test coverage of the nested class MapViewOfValuesAsSingletonSets (via asMultimap).|0|0|1|405|3718|324|159|21|64|9|0|
eb62a02b48b4c55362aba4b98a182887f132397f|Wed Mar 15 16:56:21 CET 2017|Apply '@ForOverride' annotation to Equivalence.doEquivalent & doHash.|0|0|1|405|3718|324|159|23|45|5|0|
1d3051de806987f41f69edfd21cb0a8cff0e1dcb|Wed Mar 15 19:42:37 CET 2017|Added a test for copyOf when the collection is an EnumSet.  In the process generalized the abstract classes so that we could call copy of.|0|0|0|405|3718|324|159|19|2|5|0|
2b8af31fb49ecabdbefe66df8b369e1b137d10f2|Thu Mar 16 17:21:24 CET 2017|Fix external bug #2751.|0|0|1|405|3718|324|159|20|56|5|0|
32c885b3cc561f64dae7efed3d5fee516ad359fa|Thu Mar 16 19:50:07 CET 2017|Preconditions.java: reword the section on Performance to clarify what aspects of performance are actually expected to be an issue in practice.|0|0|1|405|3718|324|159|20|14|5|0|
7bde6040bf36313a5e2567fa0eaf7cefb46d4bdc|Thu Mar 16 21:46:21 CET 2017|Fix LocalCache.compute deadlock issue, also added unittests.|0|0|1|405|3718|324|159|18|85|5|0|
c817079ac853763127078dcceed4e65e5a9374ad|Mon Mar 20 21:21:09 CET 2017|Added tests to cover some forEach code in Iterables. (Which means these tests should not be in the Java7 version).|0|0|1|405|3718|324|159|24|67|9|0|
1ad44a00d1301b610feca0ae80be458a0d0c0392|Mon Mar 20 23:09:51 CET 2017|Removed {Successor,Predecessor}Graph.nodes().|0|0|4|405|3716|324|159|22|18|5|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.PredecessorGraph.nodes(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.SuccessorGraph.nodes(), newSymbol=]
d4c01969d0ec27928063d94880f001fe6245aa2f|Tue Mar 21 18:40:56 CET 2017|Add @FunctionalInterface to AsyncCallable.|0|0|1|405|3716|324|159|17|54|6|0|
af5e29f3fd05df9a05e597380b6922cc9fc15995|Tue Mar 21 22:46:42 CET 2017|Do not copy in Immutable{List,Set,SortedSet} construction.|0|0|9|405|3716|324|159|24|78|8|0|
196f59d7e94532f04cbcbf56b34c8dfcd52626a9|Wed Mar 22 17:52:33 CET 2017|Added TimeLimiter.{call,run}WithTimeout() methods with improved exception behavior and more readable method signature.|0|0|3|405|3728|324|159|23|52|6|4|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.util.concurrent.TimeLimiter, newSymbol=com.google.common.util.concurrent.TimeLimiter.callWithTimeout(java.util.concurrent.Callable<T>,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.util.concurrent.TimeLimiter, newSymbol=com.google.common.util.concurrent.TimeLimiter.runUninterruptiblyWithTimeout(java.lang.Runnable,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.util.concurrent.TimeLimiter, newSymbol=com.google.common.util.concurrent.TimeLimiter.runWithTimeout(java.lang.Runnable,long,java.util.concurrent.TimeUnit)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.util.concurrent.TimeLimiter, newSymbol=com.google.common.util.concurrent.TimeLimiter.callUninterruptiblyWithTimeout(java.util.concurrent.Callable<T>,long,java.util.concurrent.TimeUnit)]
14978e59e56fc770853c3fe3cecd6b8c4d97997b|Wed Mar 22 18:26:05 CET 2017|Moved TimeLimiter's class-level documentation to newProxy() and replaced it with more general info.|0|0|1|405|3728|324|159|19|15|6|0|
c5225fc88eccd9990e9e0e2c8f7c6f8255015a32|Wed Mar 22 19:15:07 CET 2017|Implemented new TimeLimiter methods in FakeTimeLimiter.|0|0|1|405|3728|324|159|19|19|7|0|
4c67c7213f3080cb8ffcee99d006635df224f149|Wed Mar 22 20:51:08 CET 2017|Reorder methods so we (a) aren't splitting overloads anymore and (b) have them in the order: stream starters, stream combiners, stream chainers, and terminal ops.|0|0|1|405|3728|324|159|18|50|6|0|
85849257e9e7fd27cfa517402c079d268cccd275|Thu Mar 23 16:16:06 CET 2017|make NullPointerTester.isNullable() use @CheckForNull too|0|0|0|405|3728|324|159|21|2|5|0|
dbeed4ae4cd45409ef6ad9fa66f203a45250c2f0|Thu Mar 23 17:11:26 CET 2017|Implemented new TimeLimiter methods in SimpleTimeLimiter.|0|0|1|405|3728|324|159|20|54|5|0|
61110e175fc90fa2e8d675c8de85dff4ed699b07|Thu Mar 23 23:36:01 CET 2017|Fix embarrassing forEachEntry bug in ImmutableSortedMultiset.|0|0|1|405|3728|324|159|19|51|7|0|
948c3d8353ab0b069c63929ca9226922f59f671e|Fri Mar 24 00:53:02 CET 2017|Deprecated SimpleTimeLimiter's constructors and added a static factory method.|0|0|1|405|3729|324|159|20|54|6|0|
ffe3412b986325b0d2e7d266ca829d62983e919d|Fri Mar 24 15:21:58 CET 2017|Deprecated the old TimeLimiter.callWithTimeout() method now that its replacements have been fully implemented.|0|0|3|405|3729|324|162|20|53|5|0|
f3ff0becb73f674290dfe5791a4222da6c59c9d0|Fri Mar 24 17:25:03 CET 2017|Update docs for AbstractFuture subclassers to recommend afterDone(). Also, fix a typo in BloomFilter.|0|0|2|405|3729|324|162|18|68|5|0|
15ba0ea3f295a2fe322ceebaccba347ae0fe3f21|Fri Mar 24 22:31:09 CET 2017|Rewrite ImmutableMultiset on Java 7 in terms of the guts of HashMultiset, taking ruthless advantage of its property that it retains insertion order in the absence of removals.|0|0|0|405|3729|324|162|20|3|6|0|
72da1ce15303d395d4e6f659e4ceef41c3dcf935|Sun Mar 26 01:28:12 CET 2017|Deprecate Executor-less Futures methods upon incoming migration completion to the ones with a MoreExecutors.directExecutor(), discouraging internal use, while keeping the open-source version in Guava intact. They and scheduled to be deleted in April 2018.|0|0|1|405|3729|324|169|20|58|8|0|
82cf44994fa37cd79d0f2c3a7de3038df5b51843|Mon Mar 27 18:14:34 CEST 2017|Apply '@ForOverride' to AbstractService.doStart & AbstractService.doStop|0|0|1|405|3729|324|169|19|20|5|0|
d7f2dddae1f04e5040faca34819cb5d1c700d48f|Mon Mar 27 18:55:06 CEST 2017|Add BloomFilter.approximateCount().|0|0|1|405|3730|324|169|19|21|6|0|
f1e86cd6472719de2cf8f9e0f16632e268467ec7|Mon Mar 27 20:59:18 CEST 2017|Inline containment logic in Iterators.removeAll, allowing ImmutableMultiset to avoid retaining Predicates.|0|0|1|405|3730|324|169|20|56|5|0|
8494fa9143fa219bd7acb4fdef1a133a6ba84e69|Mon Mar 27 22:26:32 CEST 2017|Close <ul> element.|0|0|1|405|3730|324|169|18|18|5|0|
f24328a521b3c4fce0cdb854f9d7d36c03a673cf|Mon Mar 27 22:43:54 CEST 2017|Add test in MultisetForEachEntryTester to test multiple copies of a single element.|0|0|0|405|3730|324|169|18|2|8|0|
8f1a088475b51f03b9f28617893510cc74b82b49|Tue Mar 28 01:15:36 CEST 2017|(w/lowasser) Streams.forEachPair()|0|0|1|405|3731|324|169|22|49|6|0|
09f2c448fbd738fd4bfd5b1015dafe2f187be835|Tue Mar 28 02:26:39 CEST 2017|Added more memory benchmarks for collections.|0|0|0|405|3731|324|169|22|2|6|0|
06bf86aa5c00511eb745cb450222054cc4b86e36|Tue Mar 28 09:55:28 CEST 2017|Renamed {Successor,Predecessor}Graph to {Successors,Predecessors}Function.|2|2|2|405|3731|324|169|18|15|5|3|BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.SuccessorGraph, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.PredecessorGraph, newSymbol=]
e5dd39714cc9b0042aa4d1f1ffed61d3e3b3e3ae|Tue Mar 28 20:28:40 CEST 2017|Avoid referencing any Ordering methods except natural() in ImmutableSortedSet.|0|0|2|405|3731|324|169|19|57|7|0|
6d32720dc75e120cca5d4f67d2a5f98db696d929|Tue Mar 28 20:57:39 CEST 2017|Eliminate the static Ordering constant in Multisets, moving it into its own class, to avoid the various problems with static initialization.|0|0|1|405|3731|324|169|21|59|9|0|
557649df91e5f8bab4d5f39d56c81bd47e134b06|Tue Mar 28 21:08:45 CEST 2017|Partial rollback of changelist 150805495.|0|0|9|405|3731|324|169|22|74|13|0|
5090ad5976b8d1641511a62d91cc43716f02e808|Wed Mar 29 02:11:18 CEST 2017|ImmutableIntArray initial version.|1|0|0|407|3760|324|169|24|50|5|0|
de8d63f55ce4db93b33025aa4ac6a5823c8c3e57|Wed Mar 29 18:01:35 CEST 2017|Methods that take a node as parameter now take type N instead of Object.|0|0|24|407|3760|324|169|27|73|8|5|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableValueGraph, newSymbol=com.google.common.graph.ValueGraph.asGraph()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableValueGraph, newSymbol=com.google.common.graph.ValueGraph.hasEdge(N,N)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.Network.edgeConnecting(N,N)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.Graphs.hasCycle(com.google.common.graph.Graph<? extends java.lang.Object>), newSymbol=com.google.common.graph.Graphs.hasCycle(com.google.common.graph.Graph<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=com.google.common.graph.Graph.hasEdge(N,N)]
206a5acd76e8816ca54f4e8dc787e53ed8bfebf4|Wed Mar 29 18:35:24 CEST 2017|Methods that take an edge as parameter now take type E instead of Object.|0|0|6|407|3760|324|169|22|60|5|0|
a542db65cada2cf0de00102bca24d8f55c76d427|Wed Mar 29 21:39:17 CEST 2017|Add @since and a comment.|0|0|1|407|3760|324|169|21|47|9|0|
99d61226b6da2f50d3b5b2c80434b6f93a82899e|Thu Mar 30 21:23:27 CEST 2017|Automated g4 rollback of changelist 151172294.|0|0|0|407|3760|324|169|19|2|6|0|
1fc328e3e43a56f43b2bab25fbaf4d9908a9a8aa|Fri Mar 31 21:01:10 CEST 2017|Fixed bugs in test in that 1 >> x - 1 is actually 1 >> (x - 1).|0|0|0|407|3760|324|169|20|2|6|0|
6225be0aa01da6aa1391837690279f5af5fd0ea9|Fri Mar 31 21:21:06 CEST 2017|Make ImmutableIntArray @GwtCompatible|0|0|1|407|3760|324|169|19|48|6|0|
978fbc178cb0b6b12543f878689744ed542781da|Fri Mar 31 22:34:29 CEST 2017|Remove the singleton list optimization from ImmutableList.sublist|0|0|1|407|3760|324|169|17|43|7|0|
9fad64c2874ab1aa21d3ecad54f19ae4a25f27fd|Fri Mar 31 23:08:20 CEST 2017|Change switch() to if(). (followup to CL 151849104)|0|0|1|407|3760|324|169|18|48|10|0|
62156ea9c16daf4e885cdeb99be1a021acdace63|Mon Apr 03 20:34:17 CEST 2017|Test ImmutableIntArray under GWT.|0|0|0|407|3760|324|169|20|2|5|0|
bf7bc4923a8b66873e77a98706a8ef14488eaafa|Mon Apr 03 23:44:26 CEST 2017|Automated g4 rollback of changelist 151734490.|0|0|0|407|3760|324|169|18|2|6|0|
4ffdee5fc692bf7b5ab8c95269e3aeec1c806eec|Wed Apr 05 05:36:02 CEST 2017|Fix for Android crash caused by mis-aligned call of Unsafe.getLong on a 4-byte aligned field offset.|0|0|1|407|3760|324|169|19|16|5|0|
f4d6360c0741d939037b05146627616419451e0c|Wed Apr 05 14:54:22 CEST 2017|Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).|0|0|0|407|3760|324|169|19|2|6|0|
203b3e338e1941cfee5df5a431cd82e44d2c1a66|Wed Apr 05 16:46:38 CEST 2017|Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).|0|0|0|407|3760|324|169|20|2|8|0|
170610e8f19a6f52c1b44fea4ad65fa6d3228aa1|Wed Apr 05 18:10:27 CEST 2017|BloomFilter.approximateElementCount(): rename from its temporary name, pursuant to API Review.|0|0|1|407|3760|324|169|21|21|8|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.BloomFilter.approximateCount(), newSymbol=]
0ed25bcc1394b767475a88e7be989aee84ff12d7|Wed Apr 05 21:47:21 CEST 2017|isFinite: use `&&` to avoid a ShortCircuitBoolean warning; if there really is benefit to `&` that could be benchmarked/justified in the future.|0|0|2|407|3760|324|169|19|20|5|0|
8420f1bb483a5a0e42cc6b32eb86f6b8f2a820ed|Wed Apr 05 23:20:29 CEST 2017|Eliminate references to ImmutableAsList in ImmutableMultiset.|0|0|1|407|3760|324|169|18|49|6|0|
2552f2668e11aa517b85b64ccca5f1d4507fc622|Thu Apr 06 10:37:20 CEST 2017|Updated the main interfaces javadoc snippet to reflect the new interfaces {Successor,Predecessor}Graph.|0|0|5|407|3760|324|169|22|19|6|0|
d881d014cd5fc4bc46790836b9febd3ba438079b|Thu Apr 06 22:14:14 CEST 2017|Implement CharSink.writeLines(Stream[, String]).|0|0|1|407|3762|324|169|19|15|5|0|
cf65da75d56898a4961ccc02b2fc50a7fbafa3d8|Sat Apr 08 00:38:19 CEST 2017|Harmonize NPE @throws clauses on FluentIterable.toXX() methods and friends|0|0|4|407|3762|324|169|21|104|11|0|
6a6d365a66fdb4cc7971fa0471593fef9a234be3|Mon Apr 10 18:18:26 CEST 2017|Update Public Suffix List.|0|0|1|407|3762|324|169|24|38|6|0|
36388ab2659702401a1bef554d102906a158171e|Mon Apr 10 20:17:20 CEST 2017|Remove Spliterator characteristic SIZED after a trySplit operation in CollectSpliterators.flatMap.|0|0|1|407|3762|324|169|19|38|5|0|
55ea7068c374058ddc6a956957297cd1a881c759|Mon Apr 10 20:18:14 CEST 2017|Make smear() produce accurate results under GWT, hopefully. This appears to solve the problem reported in HashMultiset under GWT.|0|0|1|407|3762|324|169|21|50|7|0|
7a68b7bf103b6cd83e60b0d444c63d1a4e6a1479|Tue Apr 11 01:22:14 CEST 2017|Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).|0|0|0|407|3762|324|169|22|2|7|0|
5dee802e8f416d5c5d8bec9a1ea350d33d6698aa|Tue Apr 11 21:58:04 CEST 2017|minor enhancements to serializingexecutor|0|0|1|407|3762|324|169|20|14|7|0|
667a0d0a722edd410c4b900637e211ebae18cc59|Tue Apr 11 23:51:05 CEST 2017|Reformatting.|0|0|0|407|3762|324|169|17|2|5|0|
4754abf0e349b59f82f8bc959c99808a04f5c432|Tue Apr 11 23:58:04 CEST 2017|Assign otherwise ignored Future return values to local variables. This change is part of [] which will eventually make it an error to ignore the return value of methods that return Future.|0|0|0|407|3762|324|169|21|2|5|0|
62d3295e4a39274aaae0dd2e4a13430c72ec534a|Wed Apr 12 03:39:20 CEST 2017|Implement ancient TODO to use EqualsTester. Use reserialize() with it to prove that absent() still equals itself after a round-trip.|0|0|0|407|3762|324|169|23|2|5|0|
1a6f679f075a3b6fc84298be8d9fadefe3d00e52|Wed Apr 12 20:00:20 CEST 2017|First round of adding tests for the Lists.*Impl package-private methods.|0|0|1|407|3762|324|169|18|61|5|0|
5f44518fd1709be2b4145b759a488712850e5106|Wed Apr 12 20:56:08 CEST 2017|Advertise Comparators.least/greatest collectors from TopKSelector.|0|0|1|407|3762|324|169|20|40|6|0|
01bf8d29a279759a576fd86682f83ccce11657db|Wed Apr 12 21:06:21 CEST 2017|ImmutableIntArray is serializable.|0|0|1|407|3765|324|169|23|52|6|0|
84a14ed75656d1ff932a1192ad050fe9e12e6450|Wed Apr 12 23:22:25 CEST 2017|Add Java8-specific methods: copyOf(Stream), Builder.addAll(Stream), stream(), forEach(IntConsumer). (w/lowasser)|0|0|1|407|3769|324|169|19|46|10|0|
ce9b72aca77e144ddc7caa2284a7805775d1b9ac|Wed Apr 12 23:54:25 CEST 2017|ImmutableIntArray.asList().stream() is now "efficiently splittable".|0|0|1|407|3769|324|169|19|52|5|0|
fc77a95208d850878fa978f4df768e7b2cdf7c1a|Fri Apr 14 20:05:42 CEST 2017|Remove "nullness" suppressions added in CL 152864813. They are only necessary when running the Checker Framework, and we don't. (And they won't be necessary for the Checker Framework, either, after its' upgraded.)|0|0|0|407|3769|324|169|23|2|7|0|
10fe7b6743921e1ee1415f178ddf30f0365a436c|Fri Apr 14 21:23:12 CEST 2017|Skip GWT tests by default.|0|0|0|407|3769|324|169|23|2|6|0|
e7490fa9553356850b8cee77b1b5510780c2ce61|Fri Apr 14 22:32:46 CEST 2017|For APIs that require Java 7, strip them from Guava-Android entirely, not just from our internal copy of Guava-Android. This prevents a third-party library from using them, only to fail when used with our internal Guava-Android.|0|1|3|407|3769|324|169|19|54|8|0|
ede4f49324d2e27f0938d6800df81d2dbd48943d|Fri Apr 14 22:53:41 CEST 2017|Internal @AndroidIncompatible docs: - It's not for prod APIs. - It works through a special MOE config.|0|0|0|407|3769|324|169|19|2|7|0|
af7ab7e1be1a87cbfb739be64799d8a11adcbbca|Fri Apr 14 23:46:11 CEST 2017|Remove docs that specify which equals() element we return.|0|0|1|407|3769|324|169|19|84|9|0|
cbe841c3f8cffd18cea980d2745867521393dd44|Mon Apr 17 22:17:54 CEST 2017|Test coverage for equals(). With this, coverage for the file looks good enough to me.|0|0|0|407|3769|324|169|19|2|5|0|
0fc2c0c91ca6651f46ab5daf469f9efabf8ea895|Tue Apr 18 16:09:21 CEST 2017|Update misleading comment in RegularImmutableList; it is used even for lists with 1 item now that SingletonImmutableList has been removed.|0|0|1|407|3769|324|169|18|36|6|0|
f1d9dd1eac94f43cebefed73d695ca5c3dc9ca48|Tue Apr 18 19:50:02 CEST 2017|Document that we don't forward calls to default methods, Multimap edition. (followup to CL 124370400 now that Multimap has a default method)|0|0|4|407|3769|324|169|20|39|9|0|
a952dac581d7c9207a5b0fa1ff28c6eb81f9c2c9|Wed Apr 19 15:46:43 CEST 2017|Fix typo in Javadoc link.|0|0|1|407|3769|324|169|20|3|5|0|
9b94fb3965c6869b0ac47420958a4bbae0b2d54c|Thu Apr 20 23:33:38 CEST 2017|Begin exporting sources of Guava for Android.|0|0|0|407|3769|324|169|378|2|6|0|
c2933b6954dda50676cfbe6eed7acc4230e6b6e4|Fri Apr 21 18:34:15 CEST 2017|Add "X-DNS-Prefetch-Control" header.|0|0|1|407|3769|325|169|45|6|6|0|
e8055622b25682f53ff9ca3b2c89a3fcfe9c6c45|Fri Apr 21 19:24:08 CEST 2017|Add missing common.primitives to Guava for Android.|0|0|0|407|3769|325|169|40|2|6|0|
8ed1aec5cdfe3f88e94ec9a03707d56dd9ac3b2f|Mon Apr 24 17:19:25 CEST 2017|Remove stale comment about Java 8 APIs.|0|0|0|407|3769|325|169|34|2|8|0|
813e0366fa399531035b8359f70da61cc8b499c3|Mon Apr 24 17:46:33 CEST 2017|Make some generics explicit that the maven-compiler-plugin can't figure our when compiling for Java 7|0|0|1|407|3769|325|169|31|58|5|0|
03f68e64d2b5ae4b30b9376a2643a9ee56fd2e1b|Mon Apr 24 18:06:12 CEST 2017|Don't release SourceSinkFactories that are java7-specific (i.e. use java.nio)|0|0|0|407|3769|325|169|31|5|5|0|
38e537e6ed6e9e9a1908a68300c7d18327bc5bc5|Mon Apr 24 18:49:42 CEST 2017|ImmutableLongArray. Regenerated the int-based classes using it as the model.|1|0|1|409|3805|325|169|29|54|6|0|
67cbc789e9cd523c38a75eda917fe7b6e42518f8|Tue Apr 25 22:20:09 CEST 2017|Make some changes to generics so the Android branch can compile externally with -source 7 -target 7|0|0|3|409|3805|325|169|35|62|6|0|
c198afe6dd2938ab972c78fc506c9282592061ea|Tue Apr 25 23:35:10 CEST 2017|Fork common.reflect and remove a few tests from the java7 branch that don't work on Android|0|0|0|409|3805|325|169|44|2|8|0|
36150b3ac22811ebaabf51ee76d32b3d2427fb05|Wed Apr 26 16:54:59 CEST 2017|Make Immutable*ArrayTests have javac7-compatible generics.|0|0|0|409|3805|325|169|33|2|7|0|
a35f9ec4931326f9f6ab173c60d15e7e4ffb4425|Wed Apr 26 17:24:24 CEST 2017|Move ClassInSubpackage... actually into a subpackage. This looks to have not been moved correctly when forking common.reflect|0|0|0|409|3805|325|169|31|2|7|0|
f19c9f1a74ec2fbdd5efa4e3e6b249c8667a4164|Wed Apr 26 17:55:29 CEST 2017|Add pom.xml files for Guava-Android|0|0|0|409|3805|325|169|31|2|7|0|
8f4b4943fe130f0538247b77b0e2125ad40f90f7|Wed Apr 26 17:55:29 CEST 2017|Move poms to the proper directory. MOE got confused because it ran against Ron's CL but with a config file from before Ron's CL.|0|0|0|409|3805|325|169|29|2|6|0|
d8d21a3ae0f67aed0a9363a6e87ea116874150bc|Wed Apr 26 21:27:41 CEST 2017|Link java7 branch javadocs to javase/7, not 8|0|0|0|409|3805|325|169|31|2|6|0|
c3219bd56ce239f215ff9f05d27fc6250f6d6efb|Wed Apr 26 23:16:25 CEST 2017|Assorted javadoc fixes in com.google.common|0|0|8|409|3805|325|169|36|123|5|0|
c3fe1be6005c7cff988d0b964876c1db967fac5b|Thu Apr 27 20:08:10 CEST 2017|Test the android branch (in TAP for [], and Travis for Github)|0|0|0|409|3805|325|169|36|2|5|0|
cd8fb02a9c762707e5b7bbc22507dc8569efe430|Thu Apr 27 20:49:28 CEST 2017|Provide specializations of MapMakerInternalMap's internal data structures, notably InternalEntry, for the case where the value type is a singleton. This is Interners's exact use case.|0|0|3|409|3805|325|169|34|67|6|0|
c6f1fab908370b689249709bbfdd34985e7563d6|Thu Apr 27 21:13:58 CEST 2017|Run mvn on the android branch without running `cd`, so that we don't mess up base the directory|0|0|0|409|3805|325|169|34|2|6|0|
f35bb61b508e7976994da1f91786340b4923cb8e|Fri Apr 28 17:34:29 CEST 2017|Fix deploy_snapshot for android snapshots|0|0|0|409|3805|325|169|28|2|6|0|
f92fbe4e0eeacbfc1eb947acab04760f9adeb7f5|Fri Apr 28 20:16:54 CEST 2017|Add a script for setting the version for guava and guava-android.|0|0|0|409|3805|325|169|29|2|9|0|
b7cec214a7aa9efb7a989f9e509b4ae21dd328f4|Mon May 01 19:04:16 CEST 2017|Fix ImmutableLongArray.hashCode()|0|0|2|409|3805|325|169|31|51|6|0|
870046dfd34b9d2d2c944015ffce5c7e7e3406ba|Mon May 01 20:09:55 CEST 2017|Remove HostAndPort.getHostText() (scheduled for removal in 22.0).|0|0|1|409|3804|325|168|30|14|6|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.net.HostAndPort.getHostText(), newSymbol=]
df13a6a748528dcd01f0a943bd44baffba90a4a3|Tue May 02 02:59:29 CEST 2017|Make it clearer that Cut doesn't implement equals without hashCode|0|0|1|409|3804|325|168|30|50|6|0|
36f003175073e645d0cf5f8467778ab63879c304|Tue May 02 20:32:49 CEST 2017|Partial rollback of changelist 151480429.|0|0|0|409|3804|325|168|31|2|5|0|
8f7bbd4c73f72b504d79c9c7fc5cb75396483de1|Tue May 02 22:37:41 CEST 2017|ImmutableDoubleArray|1|0|0|411|3840|325|168|29|49|8|0|
6092a4a8b1087f92d0c3169b9e96d53c54ca95c4|Tue May 02 23:34:41 CEST 2017|Make BloomFilter concurrent.|4|0|2|411|3840|325|168|36|32|6|0|
108b8309fae3dc7794d528b9e2c6bafd6a6be726|Wed May 03 01:02:31 CEST 2017|Rewrite ImmutableSortedMultiset.Builder on Android to avoid using TreeMultiset, which allocates a ton of objects and also uses a ton of code.|0|0|1|411|3840|325|168|31|50|5|0|
1904b1a8034f208ea18cf849d36315e4ef0a1146|Wed May 03 20:02:38 CEST 2017|Added test for addAllImpl.|0|0|0|411|3840|325|168|33|2|5|0|
fb98ccb2140750a66050fc86e3b19e58a0af12b3|Thu May 04 15:06:08 CEST 2017|Make toImmutableList() and toImmutableSet() collectors singletons.|0|0|1|411|3840|325|168|31|49|6|0|
51310fb7ce3749f38165664966cd883395b643a7|Thu May 04 21:35:11 CEST 2017|Fix https://github.com/google/guava/issues/2804 issues with nested Iterators.concats on partially advanced iterators.|0|0|2|411|3840|325|168|29|55|7|0|
76245f6337f3b695357319699b07d44164768794|Thu May 04 23:07:18 CEST 2017|Some simple changes to Iterators to reduce ProGuard retention and allocation.|0|0|1|411|3840|325|168|37|56|6|0|
9349ca6c6d6f9396692aba1f5e3576a6e68f2feb|Thu May 04 23:21:51 CEST 2017|asList() views are serializable.|0|0|3|411|3840|325|168|34|51|5|0|
86c69d974db94391675e8d1e8d6edb87f89343ad|Fri May 05 10:20:45 CEST 2017|Migrate Executor-less Futures callback methods to the ones with an Executor, while applying MoreExecutors.directExecutor() for identical behavior.|0|0|2|411|3840|325|168|35|67|5|0|
071fcf6e47ae00b76b541c7ae2e253eb2fae09d3|Fri May 05 21:36:26 CEST 2017|new MapMaker().makeMap() just returns a ConcurrentHashMap.  Inline that logic into Maps.newConcurrentMap().|0|0|1|411|3840|325|168|33|83|11|0|
8e7ff6a20794497109bcdae369c15d81d35dc3e7|Fri May 05 22:06:44 CEST 2017|Implementation of Sets.combinations(Set, int), approved by []|0|0|2|411|3841|325|168|39|74|6|0|
961061a1de6331881343342d50381b5805918e4d|Sat May 06 01:54:27 CEST 2017|Correcting a JavaDoc in Immutable Primitive arrays.|0|0|3|411|3841|325|168|37|54|5|0|
e68c0e674b22b9d49d402e0151aa15e8c645bd4b|Mon May 08 19:37:18 CEST 2017|EnumCountHashMap is an implementation detail, not a public type.|0|0|0|411|3841|325|168|29|2|5|0|
a2c6fc17b66424fa2c545531b52f13c3a0afa9ab|Mon May 08 22:45:09 CEST 2017|Reduce use of Predicates in Maps.filter variants.|0|0|1|411|3841|325|168|31|81|7|0|
69f2d98a2a5bd8a9d77c618cc5a10efa4f97d98f|Mon May 08 23:01:03 CEST 2017|Added tests for Lists.IndexOfImpl|0|0|0|411|3841|325|168|33|2|9|0|
7b2c5ccbf7b1c8c6715a6c5aa9aded6420205d83|Mon May 08 23:24:14 CEST 2017|Fix buggy advice.|0|0|1|411|3841|325|168|33|11|5|0|
e4263fc33637608bf4055fbe3e06bffc877cec5b|Tue May 09 16:30:19 CEST 2017|Manual fix-ups before we google-java-format.|0|0|3|411|3841|325|168|34|89|6|0|
f5383c763766d91b20af835efc09974c283fc408|Tue May 09 22:39:39 CEST 2017|Avoid referencing ContiguousSet directly in Range, instead just using SortedSet.  This actually constitutes a general optimization, since we make it O(1) for all SortedSets and not just ContiguousSets, but it also makes a big difference to ProGuard:|0|0|1|411|3841|325|168|34|50|6|0|
d5c4ea28bffb87f89b69588ab4d86e7d2b23ef88|Tue May 09 23:10:14 CEST 2017|Avoid generating separate classes for the two BoundType enum instances.|0|0|1|411|3841|325|168|32|35|5|0|
2ae174e13d795cf61169eba8b843eda8aed94282|Wed May 10 01:06:05 CEST 2017|Pull LOWER_BOUND_FN and UPPER_BOUND_FN into their own classes, instead of having them be static constants in Range itself.  They aren't actually used in Range itself, just in other APIs using Range.|0|0|1|411|3841|325|168|31|52|8|0|
5b8b71c1375b2222736b3f58528df99180ec8a1d|Wed May 10 19:23:22 CEST 2017|Fix link to whitespace comparison doc.|0|0|1|411|3841|325|168|33|14|6|0|
24c728189bf1546920e37cffad7c13e15712f380|Wed May 10 19:55:12 CEST 2017|Merge some classes in Iterables that don't really need to be split.|0|0|2|411|3841|325|168|32|69|5|0|
7d463d975988a5aa1ffe4f7c76527e6968bda378|Fri May 12 16:42:05 CEST 2017|Remove some misleading interruption docs: - Our interruption behavior doesn't fully match the JDK. My point in CL 23833126 was that both AbstractFuture and the JDK implementations throw if the thread was interrupted *before* the get() call as well as during. But:   - We differ from the JDK in a different area: We throw InterruptedException even if the get() call wouldn't have had to wait. (We see this as a feature: Since the task is apparently cancelled anyway, we might as well take this opportunity to abort.)   - My phrasing may be equally misleading in the other direction: It may suggest that get() throws if the thread was *ever* interrupted in the past. More generally, by changing the phrasing at all, I may be suggesting a change in behavior where none exists. - InterruptedException support is probably in some sense "optional," but there's no reason to call it out as specifically optional for AbstractFuture.|0|0|1|411|3841|325|168|34|60|5|0|
19c39725be34efafa59edf6238713e97f6565eb1|Fri May 12 22:32:27 CEST 2017|Explain/advertise CacheLoader.from() better.|0|0|1|411|3841|325|168|27|62|8|0|
c7344737d6311d81c213aaef58e5536ecc57c252|Tue May 16 23:23:27 CEST 2017|Don't build a full Multiset in the Java 7 branch of Collections2.isPermutation, just using the underlying hash table structure.|0|0|0|411|3841|325|168|30|2|6|0|
e361b664359de989a2390e5ccb2efed420882e9a|Wed May 17 00:07:22 CEST 2017|Use ImmutableList.sortedCopyOf instead of Ordering.immutableSortedCopy.|0|0|1|411|3841|325|168|28|55|6|0|
e94dd5ae1fc35480ebd99af201d2d46a671a8e4e|Wed May 17 00:59:05 CEST 2017|Avoid allocation and references to Predicates where possible in Collections2.|0|0|1|411|3841|325|168|27|58|6|0|
f8c04290c9cfe7599b9c33f045ccafbbd9b501b0|Wed May 17 12:13:38 CEST 2017|Correct a slightly inaccurate claim in the javadoc of the equals() methods on Stats and PairedStats. If strictfp is not in force, we can't actually guarantee getting equal statistics even for the same values in the same order.|0|0|2|411|3841|325|168|34|22|5|0|
78dab8037a51b63e0e0a92ac0c4a427591d97219|Wed May 17 19:14:27 CEST 2017|Stick to IntMath in Collections2.orderedPermutations.size.|0|0|1|411|3841|325|168|28|51|8|0|
abf316f72678d722f0f31b45e7b75cc7209d20e8|Wed May 17 19:47:06 CEST 2017|Avoid having a static Joiner constant in Predicates.  This typically eliminates both Joiner and the Predicates class itself, which was prevented from being optimized away by the presence of the static constant.|0|0|1|411|3841|325|168|30|51|7|0|
54087fa7ccc66021f11e3d1bf478f44542ad9856|Wed May 17 20:16:08 CEST 2017|Simplify Iterators.concat and optimize it for minimizing allocations, while preserving the smart behavior for nested Iterators.concats.|0|1|2|411|3841|325|168|32|69|7|0|
eb3d015d84cd0bb9804335b3832b63005406dbff|Wed May 17 21:23:11 CEST 2017|Reduce allocations in filtered views of {Sorted,Navigable}Set.|0|0|1|411|3841|325|168|34|69|8|0|
20472b631602847af5d2797d9b991d4deae5e86d|Wed May 17 22:00:07 CEST 2017|Automated g4 rollback of changelist 156329581.|1|0|2|411|3841|325|168|36|72|6|0|
cc2b970f45d28a9258dbd9c01fda97a4ba293c20|Fri May 19 01:00:27 CEST 2017|Omit PackageSanityTests from open-source Guava.|0|0|0|411|3841|325|168|32|2|12|0|
4068f7b94c63ffd1d81636be79c42542876c8fd6|Fri May 19 01:16:46 CEST 2017|Roll forward of [] going back to exactly the original semantics while we're at it.|0|1|2|411|3841|325|168|31|71|6|0|
58fa7011ce024c0c904d4e0dd6cba78fcd08975d|Fri May 19 19:46:02 CEST 2017|Add tests for Lists.lastIndexOfImpl (Also removed one warning from ListsTest).|0|0|0|411|3841|325|168|31|2|7|0|
bc996973fe6ce1ecb67803aa1ff5bdf5df59d182|Mon May 22 18:56:43 CEST 2017|common.graph classes: mark types and methods as @GoogleInternal that are not yet ready for release in Guava 22.|0|2|8|409|3835|325|168|41|71|5|9|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.hasEdge(N,N), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.SuccessorsFunction, newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.graph.PredecessorsFunction, newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractNetwork.edgeConnecting(N,N), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Network.edgeConnecting(N,N), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ValueGraph.hasEdge(N,N), newSymbol=]
8297ad4522220c069d4a28a489a0c31d0c577a5e|Mon May 22 20:19:37 CEST 2017|Run StreamsTest and ComparatorsTest under GWT.|0|0|0|409|3835|325|168|31|2|6|0|
aafc7d686304e3b0b0cecdf4182adc7402c57be3|Mon May 22 20:24:33 CEST 2017|Reduce the number of different ranges TreeRangeMap attempts to test with; these were taking exorbitant amounts of time in Android tests.|0|0|0|409|3835|325|168|32|2|9|0|
759ed127385c9d83354b9758fcb8db7c8a79175f|Tue May 23 01:39:05 CEST 2017|Inline some filtering logic, etc. into Sets views to reduce code retention and allocation of Predicate objects.|0|0|1|409|3835|325|168|31|66|5|0|
4d0e0af4b495249cd1c25a30c5024d215b003093|Tue May 23 17:14:38 CEST 2017|Update main readme to describe the main and Android flavors of Guava, and how to depend on them.|0|0|0|409|3835|325|168|31|2|6|0|
f816d1a0ebef9c590aca70bf9b6a642f02528bcb|Tue May 23 22:13:20 CEST 2017|Update Guava versions to 23.0-SNAPSHOT.|0|0|0|409|3835|325|168|29|2|7|0|
0d8ebd19d6463d1bf8db2ba497ea3a5f6573cef9|Wed May 24 00:13:18 CEST 2017|Avoid reallocating a new unmodifiableSortedSet wrapper on every operation on Sets.unmodifiableNavigableSet.|0|0|1|409|3835|325|168|30|61|5|0|
a8e515863adcb5de5d698e0a4fc1382fa2afbc4a|Wed May 24 00:51:17 CEST 2017|Reduce allocation in Iterators.concat.|0|0|1|409|3835|325|168|35|58|8|0|
fce5e62628a1eb3eab4dfdb7b6f2ce7fa3567557|Wed May 24 01:07:11 CEST 2017|Just admit that newConcurrentMap returns and will always return a ConcurrentHashMap.|0|0|1|409|3835|325|168|38|83|8|0|
a52c22b1ca567fd4184f5438ff0ff0d00621cecf|Wed May 24 17:43:54 CEST 2017|Apply '@ForOverride' to Converter.doForward & Converter.doBackward|0|0|1|409|3835|325|168|32|58|6|0|
6b203dc664cc5359b02bde1abb86efdb1c1ead53|Wed May 24 19:48:19 CEST 2017|Update guava-gwt version to 23.0-SNAPSHOT; missed this last time since it isn't under current.|0|0|0|409|3835|325|168|31|2|6|0|
349c6e0167614635908f20acd67cf07bedff2fd3|Wed May 24 22:01:41 CEST 2017|Start measuring DoubleMath's ProGuard retention, and optimize it by inlining some things: LongMath.isPowerOfTwo, and DoubleUtils.ONE_BITS.|0|0|2|409|3835|325|168|30|19|5|0|
2a6752bf39338d3d861cec436bce9e7600f57385|Wed May 24 22:20:20 CEST 2017|Make initialization of Longs.asciiDigits lazy so ProGuard can eliminate Longs entirely from its users.|0|0|1|409|3835|325|168|30|23|8|0|
511730968ce8b82708c61e74e9c2c2bdaec51d57|Wed May 24 23:39:41 CEST 2017|Move UnsignedLongs static constants to a static class, to allow other UnsignedLongs methods to get inlined.|0|0|1|409|3835|325|168|29|18|6|0|
a35860eadb4400f069e306ccd76f1a19ecfb3ba1|Thu May 25 01:04:54 CEST 2017|common.graph classes: clean up documentation, change Object references to generic type indicators where possible in the internal implementation classes (this was already done for the public APIs).|0|0|12|409|3835|325|168|37|62|6|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graph.hasEdge(N,N), newSymbol=]
26970483185d6d62bbed3f048a9e12e3b6c80c2a|Thu May 25 02:32:44 CEST 2017|Fixes incorrectly-ordered arguments to calls to assertEquals ([] This change has been automatically generated by an Error Prone check that detects incorrect argument ordering on calls to assertEquals-style methods. See []|0|0|0|409|3835|325|168|36|2|6|0|
16cb7b6ea7443cff86a2d097646f6eec470c2aba|Thu May 25 18:12:39 CEST 2017|Update SNAPSHOT versions in README.|0|0|0|409|3835|325|168|35|2|7|0|
a419bfe81a95f2e7bb01d33f74ecaa98e03394f3|Thu May 25 18:52:59 CEST 2017|Change toMultiset() to accept ...Function<? super T, ...>.|0|0|1|409|3835|325|168|30|59|8|1|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Multisets.toMultiset(java.util.function.Function<T,E>,java.util.function.ToIntFunction<T>,java.util.function.Supplier<M>), newSymbol=com.google.common.collect.Multisets.toMultiset(java.util.function.Function<? super T,E>,java.util.function.ToIntFunction<? super T>,java.util.function.Supplier<M>)]
ae98be88f1ec366a911c19e7aafa1a0704e28422|Thu May 25 21:18:03 CEST 2017|Start adding testing for ProGuard and allocation testing for common.hash.|0|0|0|409|3835|325|168|28|2|5|0|
303fc3f3a623a7278ff11e114fa935200ff7080f|Thu May 25 22:04:37 CEST 2017|Eliminate most holder classes from c.g.c.hash.Hashing, but still keep those constants lazily generated -- e.g. moving the static constant to its own implementation class.|0|0|6|409|3835|325|168|30|28|6|0|
312aeb938bd35b5b7c8930e19ff5d1ca38e49424|Thu May 25 22:28:05 CEST 2017|Added some Unit Tests|0|0|0|409|3835|325|168|32|2|5|0|
f064c13c15d67373666307f6beb3ae842d9813e3|Thu May 25 22:40:43 CEST 2017|Avoid garbage allocation in simple hashBytes calls with Murmur3.|0|0|2|409|3835|325|168|32|23|5|0|
2bfed8709b80a4bf52f07e9def492a783caa51ff|Tue May 30 16:29:59 CEST 2017|Delete com.google.math.Sample.|0|0|0|409|3835|325|168|29|2|6|0|
107f311e182d4b8298a10093ae4c5c6bc02641ec|Tue May 30 21:54:47 CEST 2017|FluentFuture.|3|0|3|410|3842|325|168|32|74|7|0|
dd0135801d003f34f6bfd1503a09e69e3b7090b9|Tue May 30 22:13:37 CEST 2017|Fixes incorrectly-ordered arguments to method calls ([]|0|0|0|410|3842|325|168|28|2|5|0|
6fed8d453d66a3a80aabb00baa7500087ad4e6e3|Wed May 31 21:26:16 CEST 2017|Fix @since tag.|0|0|1|410|3842|325|168|28|49|6|0|
c92e1c749c18f08c17feaf273bdcfeb3d1053ca0|Wed May 31 21:27:19 CEST 2017|Reorganize abstract HashFunction and Hasher implementations to simplify common.hash and potentially prepare for exposing these skeletal implementations.|2|1|11|410|3842|325|168|39|28|6|0|
fac8339c87815fb7deca0cf01d61a5146355723f|Thu Jun 01 00:17:39 CEST 2017|PredecessorsFunction, SuccessorsFunction: remove @GoogleInternal annotation, now that we've resolved the "what type should the method return?" question.|2|0|2|412|3844|325|168|33|11|5|0|
6b9f45d390961fc72aef5362b57b89e396cf8761|Fri Jun 02 05:47:58 CEST 2017|Update Public Suffix List.|0|0|1|412|3844|325|168|29|41|6|0|
bfac9e503fb5d48aec2ad1b309b505b3931269ad|Fri Jun 02 16:50:26 CEST 2017|Increase timeout.|0|0|0|412|3844|325|168|31|2|6|0|
7d05fe59887ed05c1a254daa161cfc088e90ee55|Fri Jun 02 21:22:16 CEST 2017|Upgrade Truth to 0.33.|0|0|0|412|3844|325|168|31|2|6|0|
b4fc54a63768fc5a85935e38fe2694b0563aba81|Fri Jun 02 21:24:15 CEST 2017|In 4 files, manually include a TestCase in its own suite(). This lets the open-source build run those tests.|0|0|0|412|3844|325|168|31|2|5|0|
6d8771908c8eb77f8478fb772fcad090a902884f|Fri Jun 02 22:25:42 CEST 2017|Run nested classes in the open-source build.|0|0|0|412|3844|325|168|32|2|5|0|
b366b2fb1840d4df542a69a8021a2e5498f7eec2|Fri Jun 02 22:56:26 CEST 2017|Fixes incorrectly-ordered arguments to calls to assertEquals ([] This change has been automatically generated by an Error Prone check that detects incorrect argument ordering on calls to assertEquals-style methods. See []|0|0|0|412|3844|325|168|31|2|8|0|
4867ca09bc6e65b298688899d259e033e2c8cdcd|Fri Jun 02 23:04:23 CEST 2017|Reduce sizes of exhaustive/random MinMaxPriorityQueue tests; they're taking way too long.|0|0|0|412|3844|325|168|32|2|6|0|
d62fb4b351eb4c074e5d207519d6e9891a67f971|Mon Jun 05 21:29:38 CEST 2017|Disable some tests externally until GWT releases a version with the problematic bug fixed.|0|0|0|412|3844|325|168|33|2|7|0|
4e41d621c3f413eb31da2d31b6c9d9713cd851f6|Tue Jun 06 19:08:43 CEST 2017|Propagate cancellation for Futures.inCompletionOrder|0|0|1|412|3844|325|168|35|62|6|0|
b52953f7fd4425e6998d32d22fc0ee4529ce8402|Tue Jun 06 20:18:03 CEST 2017|Resurrect SingletonImmutableList on server side only.|1|0|1|412|3844|325|168|42|50|8|0|
c602af0409089b10a35038581ee011236eb44529|Tue Jun 06 20:48:16 CEST 2017|Adding ByteBuffer support to Hashing APIs.|0|0|10|412|3847|325|168|87|29|9|3|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.hash.PrimitiveSink, newSymbol=com.google.common.hash.PrimitiveSink.putBytes(java.nio.ByteBuffer)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.hash.Hasher, newSymbol=com.google.common.hash.Hasher.putBytes(java.nio.ByteBuffer)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.hash.HashFunction, newSymbol=com.google.common.hash.HashFunction.hashBytes(java.nio.ByteBuffer)]
69804d7f9f7acd0a92cb73311252df2bc58e8cf7|Wed Jun 07 01:59:08 CEST 2017|Automated g4 rollback of changelist 158168944.|0|0|10|412|3844|325|168|39|28|6|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.PrimitiveSink.putBytes(java.nio.ByteBuffer), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.Hasher.putBytes(java.nio.ByteBuffer), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.hash.HashFunction.hashBytes(java.nio.ByteBuffer), newSymbol=]
fffd2b1f67d158c7b4052123c5032b0ba54a910d|Wed Jun 07 17:16:20 CEST 2017|Add @ReflectionSupport to AggregateFutureState, AtomicDouble and InterruptibleTask.|0|0|3|412|3844|325|168|38|52|8|0|
2d30d5eda0f37e9c0b2dec21f19837b8d41f2699|Thu Jun 08 21:56:16 CEST 2017|Update Javadoc plugin to a version that understands the Java 9 version scheme: https://issues.apache.org/jira/browse/MJAVADOC-442|0|0|0|412|3844|325|168|32|2|6|0|
46b73bb6c40aaf319aac43ead838628ad4b59de1|Thu Jun 08 22:36:51 CEST 2017|Under Java 8, use Math.nextDown instead of FpUtils.nextDown.|0|0|0|412|3844|325|168|29|2|5|0|
ad013e848b4c8ef3b85746df69282ff6343b9d7d|Fri Jun 09 00:04:49 CEST 2017|Adding ByteBuffer support to Hashing APIs. Rollforward now that broken user is fixed.|0|0|10|412|3847|325|168|35|27|6|3|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.hash.PrimitiveSink, newSymbol=com.google.common.hash.PrimitiveSink.putBytes(java.nio.ByteBuffer)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.hash.Hasher, newSymbol=com.google.common.hash.Hasher.putBytes(java.nio.ByteBuffer)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.hash.HashFunction, newSymbol=com.google.common.hash.HashFunction.hashBytes(java.nio.ByteBuffer)]
9121020b37bf975122e0f8fc710a1c981297b6ad|Fri Jun 09 05:10:42 CEST 2017|Skip static methods, like the forthcoming Set.of.|0|0|0|412|3847|325|168|32|2|8|0|
16f42af9e1f1ae37ef4ed52c1f0d705aebaf8194|Fri Jun 09 21:01:28 CEST 2017|Don't expect java.ext.dirs under Java 9.|0|0|0|412|3847|325|168|31|2|6|0|
94a96d1ec0c0167a4c5b9350f125429fed3d1d4c|Mon Jun 12 19:43:34 CEST 2017|Mark Immutable(IntLongDouble)Array with the errorprone @Immutable annotation|0|0|3|412|3847|325|168|30|55|6|0|
d87949ab9d95fdd486080151a66fbf0c2373b981|Mon Jun 12 20:23:01 CEST 2017|Move all surefire configuration to the parent pom.|0|0|0|412|3847|325|168|30|2|6|0|
f7c641de871e80ba27ac3bce72d8ed0b095e6949|Mon Jun 12 21:11:28 CEST 2017|Use a newer version of Mockito, as necessary for Java 9.|0|0|0|412|3847|325|168|29|2|6|0|
8311be9b7353b9580649559a5f3ee699672e3085|Mon Jun 12 21:27:29 CEST 2017|Recognize Java-9-style version strings.|0|0|0|412|3847|325|168|29|2|7|0|
d8de12dfdb6b6beeec13e8341ea5e85e40201e7f|Tue Jun 13 00:57:00 CEST 2017|Abstract common.graph classes: add Javadoc warnings that methods implemented in these classes should not be overridden without cause.|0|0|3|412|3847|325|168|31|61|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractBaseGraph.hasEdge(N,N), newSymbol=]
304c634d977127085b49f174fd1aafefd09b2bf5|Tue Jun 13 02:30:34 CEST 2017|Add toString() to some Future subclasses.|0|0|7|412|3848|325|168|36|73|6|0|
729592303fde5f9ce2a7ec2aaeb558c62601a64b|Tue Jun 13 17:44:34 CEST 2017|Have ImmutableMap go back to using a specialized singleton implementation for size = 1 maps.|0|0|1|412|3848|325|168|35|60|8|0|
941932c2c4a10a11df6453ec7bc78f55e12617ce|Tue Jun 13 18:06:15 CEST 2017|Test Android code on Travis with two different environments to hopefully avoid timeouts|0|0|0|412|3848|325|168|29|2|5|0|
0ef619507ded5f35d9a974c817403586dee5af6f|Tue Jun 13 18:21:34 CEST 2017|Change implementation of Byte/CharSource.isEmpty to avoid opening a stream when the size of the source is known to be >0.|0|0|2|412|3848|325|168|29|62|9|0|
aa5656a140f3d8073ee5422e3e25576041dab39f|Tue Jun 13 23:44:14 CEST 2017|Expand common.hash ByteBuffer support, adding a default AbstractHasher hashBytes implementation and expanding HashTestUtils to test more about the hashing of ByteBuffers.|0|0|1|412|3848|325|168|32|8|5|0|
c03373ba4d757904e3300d857464b459e7ce25f2|Wed Jun 14 15:44:03 CEST 2017|MutableGraph.java: fix Javadoc link.|0|0|1|412|3848|325|168|33|9|6|0|
d9d6e7b27c114b7b2541f91c450121d27325d6a7|Wed Jun 14 17:59:31 CEST 2017|Optimize murmur3_32 hashString(CharSequence, UTF_8) to unroll the Utf8 directly into the hasher rather than converting it to a byte array.|0|0|1|412|3848|325|168|36|26|6|0|
8f22dbc8ea0c1abdf044846057f6df8201ee9961|Fri Jun 16 15:08:21 CEST 2017|Don't fail tests just because we can't securely delete recursively.|0|0|0|412|3848|325|168|33|2|7|0|
a0f26cc0ea343ce1d88d521f8b9ded3c677da032|Fri Jun 16 18:39:45 CEST 2017|Output "java.util.Map.Entry" under Java 9, as the JDK does. Under previous JDKs, we continue to output "java.util.Map.java.util.Map.Entry," just as those JDKs do.|0|0|1|412|3848|325|168|31|54|7|0|
32011a8047f56ec0b9205294518d018e2a106f0e|Fri Jun 16 22:58:40 CEST 2017|Marginally improve what Maven prints for javac errors (by upgrading maven-compiler-plugin).|0|0|0|412|3848|325|168|29|2|6|0|
ecd2e52e45d2d8cc6c512bd66a4b6748e69c4669|Mon Jun 19 21:40:37 CEST 2017|Prepare common.graph for Java-8-specific changes.|0|0|0|412|3848|325|168|46|2|5|0|
6a932bfef2e0e199c71537301c42c2bb6c1561ad|Tue Jun 20 18:53:45 CEST 2017|Stop claiming that Guava has only one dependency.|0|0|0|412|3848|325|168|35|2|5|0|
3561a940b6f7523be5ec69080a939dd0912f04b5|Sat Jan 07 17:25:02 CET 2017|Fix typo in FluentIterable#stream javadoc|0|0|1|412|3848|325|168|29|62|6|0|
240a807d3d1cbcad99481ede9530af0cdfadf47c|Wed Jun 21 23:57:06 CEST 2017|Network.java: fork edgeConnecting() for java7/Android: * current/.../Network.java now provides   java.util.Optional<E> edgeConnecting(N, N)   E edgeConnectingOrNull(N, N) * java7/.../Network.java now provides   E edgeConnectingOrNull(N, N)|0|0|3|412|3852|325|168|32|65|9|2|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network.edgeConnecting(N,N)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network.edgeConnectingOrNull(N,N)]
a1027f367b9387994e8c3327127fe68b542fa459|Thu Jun 22 20:53:01 CEST 2017|common.graph tests: unify some duplicate constructs (enums, methods, constants) and put them in TestUtil.java.|0|0|0|412|3852|325|168|36|2|5|0|
a3e5514784cfe739f9e3b28bb24bdb0e24711a9c|Thu Jun 22 22:21:00 CEST 2017|Fix doc which was incorrect in the null case, and add a few words about a behavior some users have been depending on (that it intercepts NPE and CCE).|0|0|1|412|3852|325|168|32|68|7|0|
c6812506b7c92a67fa6aa6b85df5cb2d04156e30|Fri Jun 23 19:42:40 CEST 2017|Update Guava to depend on Truth 0.34.|0|0|0|412|3852|325|168|34|2|6|0|
05ee9c9bb43cf0c509a94247d57dba128ebe1163|Fri Jun 23 20:38:07 CEST 2017|Only get values from Map in Maps.immutableEnumMap once.  Fixes https://github.com/google/guava/issues/2854 .|0|0|1|412|3852|325|168|32|81|7|0|
440c639c017c6d1ea6ce303554e6a0cd52c271bd|Mon Jun 26 15:57:33 CEST 2017|Prepare for Java-8-specific changes to common.hash.|0|0|0|412|3852|325|168|51|3|9|0|
98fc407531ef6588e6e81c8737107e84abe5f29b|Mon Jun 26 18:43:23 CEST 2017|AbstractNetwork: add a functionally correct (if not super-efficient) implementation of edgesConnecting(), because it's easy to do wrong.|0|0|1|412|3853|325|168|34|55|6|0|
df3d140681a84b088db3f0602de7dd612b336240|Mon Jun 26 19:25:43 CEST 2017|Fix Javadoc missing "code" typos.|0|0|1|412|3853|325|168|32|66|5|0|
2daf6f6d1668b44d0d489b936db50ecf2b358160|Mon Jun 26 20:29:21 CEST 2017|Add BloomFilter collector, now that common.hash is forked.  Finishes off https://github.com/google/guava/issues/2810.|0|0|1|412|3855|325|168|33|22|6|0|
c7e4e8c7cb06a15c657b9502024bbbe679465e68|Mon Jun 26 22:29:53 CEST 2017|Propagate CL 160170507's doc changes to the java7 branch.|0|0|0|412|3855|325|168|31|2|6|0|
c14cd014c494386f669f3bb26c8d4a6ea3af6e67|Wed Jun 28 14:38:36 CEST 2017|Remove extra punctuation in single-sentence @return|0|0|1|412|3855|325|168|31|15|5|0|
49e145257d6dfb36ca1dd17a144d81c635504b9e|Thu Jun 29 00:00:12 CEST 2017|hasEdge(): rename to hasEdgeConnecting(), remove @GoogleInternal annotation, and add to Network as well.|0|0|8|412|3859|325|168|37|78|6|3|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network.hasEdgeConnecting(N,N)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph.hasEdgeConnecting(N,N)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.hasEdgeConnecting(N,N)]
b8f00a8b52efc6d382d87be3a1c7b506fb537f7f|Thu Jun 29 23:50:56 CEST 2017|Fix AbstractFuture.toString()'s message on futures that failed. Expanded unit tests to match the expected strings more completely.|0|0|1|412|3859|325|168|34|64|7|0|
a6d5c57f397cb79da071311efb333e9909d3bb05|Fri Jun 30 10:15:58 CEST 2017|Remove unnecessary from() calls for things that are already FluentIterables|0|0|1|412|3859|325|168|37|68|6|0|
f8d905771028396cd88c7a40af3712df047a5e4a|Mon Jul 03 23:35:21 CEST 2017|Add simple `closed` and `closedOpen` ContiguousSet factories for int and long.|0|0|1|412|3863|325|168|34|50|7|0|
654a2bb847f80eb08bc47e6fbf021fd099ba0ac4|Thu Jul 06 02:26:43 CEST 2017|Open up pendingToString()|0|0|1|412|3864|325|168|37|65|8|0|
c1018f57bde175a1504b6f954644456d6bf6ff1e|Thu Jul 06 04:53:29 CEST 2017|Add cross-references to sibling Preconditions and Verify methods, to aid discoverability.|0|0|2|412|3864|325|168|32|13|5|0|
4d81347ebea1e51705a620d1c57d0c9bca9cab31|Thu Jul 06 17:25:41 CEST 2017|Add @since for pendingToString().|0|0|1|412|3864|325|168|32|61|5|0|
9feba7c949ef9fd2092c05c29dcbe0ddba7a7cf5|Thu Jul 06 17:44:21 CEST 2017|Add an Automatic-Module-Name manifest entry.|0|0|0|412|3864|325|168|31|2|5|0|
d333cc92360b9afc92787fe964566a6ba9fc0d20|Thu Jul 06 18:11:25 CEST 2017|Update code.google.com link to github in Murmur3Hash32Test|0|0|0|412|3864|325|168|29|2|6|0|
bcb3d6528966b1fb33fdcfd51c2ef16b190cb611|Thu Jul 06 21:26:30 CEST 2017|Remove static map allocation and map lookup in base.Defaults.|0|0|1|412|3864|325|168|29|11|8|0|
2164075634b195a9ff72a577c78478b827fe6dd3|Thu Jul 06 23:09:13 CEST 2017|Fix broken {@link} comment in AbstractFuture.|0|0|1|412|3864|325|168|32|61|7|0|
3af4c3f4cb7a60a059e6714ab516bbf3b6e69117|Fri Jul 07 00:00:36 CEST 2017|Fix some more broken {@link} comments.|0|0|1|412|3864|325|168|31|49|5|0|
31e08d06683a65c85dd9f1b743599494e2c2be5c|Fri Jul 07 18:10:36 CEST 2017|Prepare common.graph for GWT/j2cl usage.|0|0|13|412|3864|325|168|41|73|6|2|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.Network.equals(java.lang.Object), newSymbol=com.google.common.graph.AbstractNetwork.equals(java.lang.Object)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.Network.hashCode(), newSymbol=com.google.common.graph.AbstractNetwork.hashCode()]
826bda60d3c84c8142da6f0e8576c68540d51891|Fri Jul 07 21:44:37 CEST 2017|Throw IllegalArgumentException if a loop in the causal chain is detected in Throwables.getCausalChain() and Throwables.getRootCause().|0|0|1|412|3864|325|168|32|12|5|0|
0f6096df9105ecbbb2d32017eae8fd63562ab298|Fri Jul 07 22:05:13 CEST 2017|ValueGraph.edgeValue*: change from * V edgeValue(), V edgeValueOrDefault() to * Optional<V> edgeValue(), V edgeValueOrNull()|0|0|9|412|3864|325|168|37|71|9|10|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ValueGraph.edgeValueOrDefault(N,N,V), newSymbol=],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.ValueGraph.edgeValue(N,N), newSymbol=com.google.common.graph.ValueGraph.edgeValue(N,N)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph.edgeValueOrNull(N,N)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractValueGraph.edgeValue(N,N), newSymbol=com.google.common.graph.AbstractValueGraph.edgeValue(N,N)],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.AbstractValueGraph, newSymbol=com.google.common.graph.ValueGraph.edgeValueOrNull(N,N)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.ValueGraphBuilder.from(com.google.common.graph.ValueGraph<N,? extends java.lang.Object>), newSymbol=com.google.common.graph.ValueGraphBuilder.from(com.google.common.graph.ValueGraph<N,V>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.graph.ValueGraphBuilder.from(com.google.common.graph.ValueGraph<N,? extends java.lang.Object>), newSymbol=com.google.common.graph.ValueGraphBuilder.from(com.google.common.graph.ValueGraph<N,V>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.AbstractValueGraph.edgeValue(java.lang.Object,java.lang.Object), newSymbol=com.google.common.graph.AbstractValueGraph.edgeValue(N,N)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableValueGraph.edgeValueOrDefault(java.lang.Object,java.lang.Object,V), newSymbol=],BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_ADDED, impactedSymbol=com.google.common.graph.ValueGraphBuilder.from(com.google.common.graph.ValueGraph<N,? extends java.lang.Object>), newSymbol=com.google.common.graph.ValueGraphBuilder.from(com.google.common.graph.ValueGraph<N,V>)]
bae9a59c562acacd1be81c4421fb2c96b6efcc18|Fri Jul 07 22:25:01 CEST 2017|Make documentation on iteration order more explicit.|0|0|5|412|3864|325|168|34|75|13|0|
85765fb568e60631e06b315237d2f10ceffb89ea|Tue Jul 11 04:32:03 CEST 2017|Add @SafeVarargs to Predicates.or(Predicate<? super T>...).|0|0|1|412|3864|325|168|34|49|6|0|
247a0bb83d37d4ae67f307ea2872780d8b8bd1f1|Tue Jul 11 15:56:31 CEST 2017|Don't include the toString() of the future if it completes while the timeout expires.|0|0|1|412|3864|325|168|31|60|7|0|
8ad3a8a2e34b0678765fdb527f6a1813b223341f|Tue Jul 11 19:21:34 CEST 2017|Add @since 23.0 to new (or with new return type) edgeValue methods in ValueGraph.|0|0|1|412|3864|325|168|31|11|6|0|
a0a62ac531ad052c8f7ca6e979d6f0759e5e2e60|Tue Jul 11 21:24:23 CEST 2017|Fix >100 violation in ImmutableMap doc update.|0|0|1|412|3864|325|168|36|59|7|0|
9af3558717f000154e8c623a6b3dbb0655698ba6|Wed Jul 12 17:38:59 CEST 2017|Make RateLimiter.create parameter order consistent.|0|0|1|412|3864|325|168|31|20|6|0|
fc3d9d75f3c991deff0e81317e21ac5ac588643d|Wed Jul 12 18:40:59 CEST 2017|Switch to using AtomicReference, since only one field needs CAS.|0|0|3|412|3864|325|168|33|64|5|0|
66b3e26aadf5ec82808a0965b2a894addb0970e9|Thu Jul 13 01:46:12 CEST 2017|ValueGraph.java: restore edgeValueOrNull() to edgeValueOrDefault().|0|0|5|412|3864|325|168|34|65|6|4|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ValueGraph.edgeValueOrNull(N,N), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph.edgeValueOrDefault(N,N,V)],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.AbstractValueGraph, newSymbol=com.google.common.graph.ValueGraph.edgeValueOrDefault(N,N,V)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ConfigurableValueGraph.edgeValueOrNull(N,N), newSymbol=]
2453d95687e56cdc84af127a4c722f853e269618|Thu Jul 13 19:06:24 CEST 2017|ValueGraph.java: remove bogus @since 23.0 on edgeValueOrDefault.|0|0|1|412|3864|325|168|33|11|10|0|
d6c6d253d22bf80ce5420c9d2aba59af9263d8ef|Thu Jul 13 21:05:25 CEST 2017|Optimize CharSource.wrap(CharSequence) for when the CharSequence is a String|0|0|1|412|3864|325|168|29|57|6|0|
4a6ce819542d5fe440bd5d13956bb4e46084325c|Thu Jul 13 22:35:55 CEST 2017|common.graph: create (package-protected) ForwardingValueGraph and ForwardingNetwork classes, and use those (and ForwardingGraph) to simplify the implementation of the Transposed* inner classes in Graphs.|2|0|2|412|3864|325|168|33|61|7|0|
a2c7f54378dc2585f8524f59d71e56353ac0a1ba|Thu Jul 13 23:50:26 CEST 2017|Optimize CharStreams.copy to take advantage of known Readable/Appendable types.|0|0|1|412|3864|325|168|33|19|5|0|
68c8619d8ccd8811dd5408b828b7e3a45f07f21d|Thu Jul 13 23:55:22 CEST 2017|Shutdown the original executor in getExitingScheduledExecutorService.|0|0|1|412|3864|325|168|30|64|6|0|
1d7f652e1866fbd9bfce7f20a9ba124638a4367a|Fri Jul 14 00:53:37 CEST 2017|Add @SafeVarargs to Predicates.and(Predicate<? super T>...).|0|0|1|412|3864|325|168|34|48|7|0|
dd78480631626802e22edc4d6d12fc869288e954|Fri Jul 14 03:48:27 CEST 2017|Update Public Suffix List.|0|0|1|412|3864|325|168|29|38|5|0|
b6c86db89a9cb828a47ca893f7a958c6a4f378b6|Fri Jul 14 22:25:42 CEST 2017|Short-circuit null check in Throwables#lazyStackTraceIsLazy|0|0|1|412|3864|325|168|30|14|6|0|
71b5b85e1d219b706702356108fe1a9b2fbb15c1|Fri Jul 14 23:05:50 CEST 2017|Add submitAsync and scheduleAsync methods, to ease the deprecation of Futures.dereference|0|0|2|412|3866|325|168|33|66|5|0|
ee12894c9d9c6b057efd3465391ab0f779b8af94|Mon Jul 17 18:05:19 CEST 2017|Implement ByteSource.asCharSource(charset).read() using the decoding string constructor instead of streaming the contents into a StringBuilder.|0|0|1|412|3866|325|168|34|55|7|0|
73a1a498cf735d10457335c97a780f0e9a17c0a1|Mon Jul 17 19:21:00 CEST 2017|Add deprecation notice to Futures.dereference|0|0|1|412|3866|325|169|32|68|5|0|
551343910c2974abf0e81d7728d975c6164f26b3|Mon Jul 17 20:44:52 CEST 2017|Automated g4 rollback of changelist 162220754.|0|0|1|412|3866|325|169|41|56|5|0|
f6af85997cf46e040edfbbe8f9d1b4038435d5e6|Tue Jul 18 00:00:17 CEST 2017|Rollforward [] which was rolled back in [] because it caused some tests using appengine to fail with IOExceptions when calling FileInputStream.available().  The workaround in the rollforward is to not call the method.  The one case where we were calling it we had actually already called a similar method, so trying again doesn't seem valuable anyway.|0|0|2|412|3866|325|169|31|64|5|0|
71703b40b42c96dd1fef03a760e2e648db11f792|Wed Jul 19 01:04:08 CEST 2017|Use specialized spliterators for Primitives.asList utilities.  Addresses https://github.com/google/guava/issues/2874 .|0|0|3|412|3866|325|169|31|29|6|0|
cf1478062f646ec0d7e1d96f8ab52e7194b50ce8|Thu Jul 20 21:20:56 CEST 2017|Fix interruption leak in submitAsync and whenAllComplete().callAsync().|0|0|3|412|3866|325|169|32|63|10|0|
f89c0039a925d681cd7f4990e9a86bbe0179aeca|Thu Jul 20 23:00:00 CEST 2017|Add @ForOverride to AbstractFuture.afterDone now that https://github.com/google/error-prone/issues/342 is fixed.|0|0|2|412|3866|325|169|36|71|5|0|
a732620a1475039df983f20dc4111f2cb0a51ce3|Thu Jul 20 23:19:06 CEST 2017|Forgot to specify equals().|0|0|3|412|3866|325|169|34|57|6|0|
384deaf4b7a632a9d28bf2b309ce137feacdad4b|Thu Jul 20 23:25:48 CEST 2017|Plug ImmutableIntArray in Ints, etc.|0|0|3|412|3866|325|169|32|29|5|0|
6d764735d00ca9782b4bbbac777b8709f8a0aa9c|Fri Jul 21 02:23:00 CEST 2017|Super-minor cleanup to AggregateFuture|0|0|1|412|3866|325|169|29|59|5|0|
73e17314732faf33224987fc37df9c3860296888|Fri Jul 21 20:54:05 CEST 2017|Fix a bug in AbstractFuture.setFuture|0|0|1|412|3866|325|169|33|63|8|0|
2ed2c6fab7dd31e9bc86701d202ccbf364c1e661|Fri Jul 21 22:51:05 CEST 2017|Warn a little more about weakKeys resulting in == key comparisons, even in the asMap view.|0|0|1|412|3866|325|169|33|62|7|0|
04d8a7ebd85a88837f840a5c16a5085609e065d9|Mon Jul 24 17:50:10 CEST 2017|Fix an interruption bug from CL 162649353, but do so in a way that doesn't reintroduce yet another bug that that CL fixed.|0|0|1|412|3866|325|169|31|13|5|0|
0eebe158820481f09a9405569c44423cd0b84e0f|Mon Jul 24 20:24:52 CEST 2017|Remove some methods that are scheduled for removal in 23.0, along with one that was apparently scheduled for removal in 21.0.|0|0|4|412|3862|325|165|35|71|6|7|BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.util.concurrent.SimpleTimeLimiter.<init>(java.util.concurrent.ExecutorService), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.FakeTimeLimiter.callWithTimeout(java.util.concurrent.Callable<T>,long,java.util.concurrent.TimeUnit,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.TimeLimiter.callWithTimeout(java.util.concurrent.Callable<T>,long,java.util.concurrent.TimeUnit,boolean), newSymbol=],BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.util.concurrent.SimpleTimeLimiter.<init>(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(java.util.concurrent.Callable<T>,long,java.util.concurrent.TimeUnit,boolean), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.FluentIterable.of(E[]), newSymbol=],BC[kind=CLASS_NOW_ABSTRACT, impactedSymbol=com.google.common.util.concurrent.SimpleTimeLimiter, newSymbol=com.google.common.util.concurrent.SimpleTimeLimiter]
f885eec20a909645c6edfef412bf39a8ec4c30b4|Mon Jul 24 23:46:53 CEST 2017|Take advantage of suppressed exceptions in ServiceManager now that Guava is on Java 8.|0|0|1|412|3862|325|165|36|82|5|0|
934e3840945d3b866f80c28135a0369cb32d7163|Wed Jul 26 16:37:38 CEST 2017|Use diamond operator.|0|0|18|412|3862|325|165|79|166|8|1|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.Multiset.forEach(java.util.function.Consumer<? super E>)]
40e4be42409251b80efecb7ced96fbce8b4af90d|Thu Jul 20 18:55:18 CEST 2017|Mention 23.0-rc1 in Guava README.|0|0|0|412|3862|325|165|61|2|5|0|
2d4c517de9f12ba4dd2d9f720e700d7c835ecc4c|Thu Jul 27 19:15:16 CEST 2017|Remove Maven version badge from README.|0|0|0|412|3862|325|165|28|2|5|0|
2c8e33543f4df90af29186215159b721b59696db|Fri Jul 28 16:35:09 CEST 2017|Add notes about Java8 to UnsignedBytes, UnsignedInts, and UnsignedLongs.|0|0|3|412|3862|325|165|30|23|5|0|
719f2c581f4f09f55c2121c6ac469c7f4314ceab|Fri Jul 28 23:54:02 CEST 2017|Add collectors for ImmutableRangeSet and ImmutableRangeMap.|0|0|3|412|3864|325|165|32|62|7|0|
8f203c48cbbfe47569d8101a12a8fc9384e09674|Mon Jul 31 20:23:01 CEST 2017|Avoid importing ImmutableList from Ordering.|0|0|2|412|3864|325|165|33|54|6|0|
74f5ccae9f8875ee063065534e1bccf90458652b|Mon Jul 31 22:16:11 CEST 2017|Make ListenableScheduledFuture GwtCompatible.|0|0|1|412|3864|325|165|31|13|6|0|
59dbb4532455eb9a9428025120d926268d48ef01|Tue Aug 01 19:41:13 CEST 2017|Shuffling from internal-only change.|0|0|0|412|3864|325|165|31|2|5|0|
a4c537ad34b241ba01fd9b0c9326bbcd71e2b60a|Tue Aug 01 21:28:40 CEST 2017|Change CacheBuilder constructor modifier to private, and rewrite corresponding tests|0|0|1|412|3864|325|165|32|62|6|0|
14c0d5f37ce76a081dbd1863e4f1d33f8f61cb52|Wed Aug 02 03:30:55 CEST 2017|Minor fix in comment.|0|0|1|412|3864|325|165|36|69|8|0|
106e7ee5433dad1d66a6b93aeb0e13e137900464|Wed Aug 02 21:49:53 CEST 2017|Update removal data for dereference().|0|0|1|412|3864|325|165|33|67|6|0|
4740f24c9aa35cc6c71aa7359018432853e5e7ee|Wed Aug 02 23:45:50 CEST 2017|Avoid dependency on CharMatcher in BaseEncoding.|0|0|1|412|3864|325|165|33|23|5|0|
a8373f17c4ea0b2ad87b7bad71f9a2b27c2c28a1|Fri Aug 04 18:36:46 CEST 2017|Catch NoClassDefFoundError and generic Error, the types thrown by JVM8 and by modern versions of Android.|0|0|0|412|3864|325|165|30|2|5|0|
d37fe31537e6362cd99239e0f8f6d3ae596f2db0|Mon Aug 07 19:35:44 CEST 2017|Update Guava README for 23.0 and update snapshot versions.|0|0|0|412|3864|325|165|29|2|5|0|
6388c64e93228d99d8af872f6e2c3740dda19b4e|Tue Aug 08 17:04:07 CEST 2017|Suppress tests broken by CL 164180554's emulator upgrade to API level 15.|0|0|0|412|3864|325|165|30|2|8|0|
ecdcdf03ae7fb502b766e6d44a2f3d1ce64f429d|Tue Aug 08 17:09:58 CEST 2017|Fix broken Javadoc link in UnsignedLongs.toString(long)|0|0|1|412|3864|325|165|33|19|6|0|
ec242d7d1ff8dd68dfd4355b4089267e4aaedef7|Tue Aug 08 18:41:46 CEST 2017|Ignore the lazyStackTraceIsLazy test on Java 9, for now.|0|0|0|412|3864|325|165|31|2|5|0|
6290373588ef914111f0896b8d0c86a15b7f0f6b|Tue Aug 08 20:06:57 CEST 2017|Fix typo in AbstractService log message.|0|0|1|412|3864|325|165|28|21|5|0|
fd6b6e1cbdec0bff0753ac0d5cb82740d00c5ea8|Thu Aug 10 01:12:36 CEST 2017|In ImmutableCollection.ArrayBasedBuilder, keep a forceCopy flag to allow builder types to force a copy even if the entire array has not been used.|0|0|3|412|3864|325|165|30|73|9|0|
9e964b3326b56e35f459d843b48a7ced88091b6f|Thu Aug 10 19:04:39 CEST 2017|common.graph: remove j2cl annotations, as no one's using it from j2cl, it has no immediate prospective users, and it doesn't support Network-related capabilities anyway.|0|0|14|412|3864|325|165|41|68|8|0|
7928bbe079303c54373453353c9ef2cd7de9365e|Thu Aug 10 19:45:37 CEST 2017|Add ImmutableList.builderWithExpectedSize API.|0|0|2|412|3865|325|165|33|49|7|0|
44eb16b1bc5ce5928675b6e34cd521d861ff0696|Thu Aug 10 19:53:51 CEST 2017|Test that a failed/cancelled input doesn't cause us to cancel other inputs. (It's debatable whether that's the long-term behavior we want, but we should at least document that current behavior properly.)|0|0|1|412|3865|325|165|36|61|6|0|
8158909d7bda9f98a4576f89eb5fd88cb12c2bd6|Thu Aug 10 20:41:45 CEST 2017|Add Immutable{Map,BiMap}.builderWithExpectedSize API.|0|0|5|412|3867|325|165|41|70|6|0|
c412a2a1dcef61402c54a8094a39c042e6b2b1d6|Fri Aug 11 17:52:00 CEST 2017|Fix javadoc link by including package name.|0|0|1|412|3867|325|165|34|55|5|0|
7e4b3875c63758b1a91bb3a82d7240f414e8ae49|Fri Aug 11 18:24:55 CEST 2017|Polishing|0|0|7|412|3867|325|165|49|141|8|0|
a3da73204a12c81331e5dc21bfcf709e0a4a9b07|Fri Aug 11 20:17:48 CEST 2017|Fixes #2905|0|0|0|412|3867|325|165|50|2|6|0|
d7501abccbd666a8db4dff77fa110c801a094c75|Mon Aug 14 23:54:10 CEST 2017|Add ImmutableSet.builderForExpectedSize.  Currently, the implementation is that if and only if a size is specified up front, the builder starts generating the hash table online and deduping elements.|0|0|2|412|3868|325|165|35|53|5|0|
d21e3b97f1ea4e43d7b0467ad109011780dd988c|Tue Aug 15 17:36:23 CEST 2017|Fix @since tags for collectors that didn't make 23.0.|0|0|2|412|3868|325|165|35|62|5|0|
d46ffd3d0e289c6fb1be3e820f57679615675f48|Tue Aug 15 17:55:47 CEST 2017|Update Guava's JUnit dependencies to 4.11 (the version in [])|0|0|0|412|3868|325|165|30|2|8|0|
0c81386a239370c073572212079efc727c911d0b|Wed Aug 16 18:03:56 CEST 2017|Use diamond operator in collect ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=165450412|0|0|57|412|3868|325|165|86|209|9|2|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>), newSymbol=com.google.common.collect.AbstractBiMap.replaceAll(java.util.function.BiFunction<? super K,? super V,? extends V>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.Multiset.forEach(java.util.function.Consumer<? super E>)]
2da8a91a3702c6a318aaaeaa1f7164856a480d17|Wed Aug 16 18:30:33 CEST 2017|Use diamond operator in base+cache+concurrent. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=165453531|0|0|22|412|3868|325|165|73|137|7|0|
8cdd8c718cceb67bd94c83fe60544ff46f9f4460|Thu Aug 17 17:33:38 CEST 2017|Use diamond operator for rest. ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=165581940|0|0|24|412|3868|325|165|57|117|12|0|
2eed29bd6a913e72c3eeae173b84948b0e3d2353|Thu Aug 17 20:59:34 CEST 2017|On second thought, back out a few diamond operators in the mainline when they don't also work with Java 7 type inference. This minimizes diffs between the branches.|0|0|2|412|3868|325|165|37|66|6|0|
82ae659392d5a3f2ecd8ef478e73319e86fed5dd|Fri Aug 18 01:12:36 CEST 2017|Use given throwable as the cause for the IAE that's thrown during loop detection.|0|0|1|412|3868|325|165|31|12|6|0|
97f1b638e22d0a31fbe19221d78ca7a7ba2b68d2|Fri Aug 18 01:28:57 CEST 2017|Multicatch!|0|0|13|412|3868|325|165|48|133|7|2|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.Maps$KeySet.forEach(java.util.function.Consumer<? super K>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.Maps$KeySet.forEach(java.util.function.Consumer<? super K>)]
0f664c613a3ab9f4a302f7891157c89579830e6a|Fri Aug 18 01:41:36 CEST 2017|Store the CancellationException.class (as we do in other tests), not the cause of the CancellationException.|0|0|0|412|3868|325|165|47|2|6|0|
c428cbb42f767451d973a0b543112aa992ce9ad2|Fri Aug 18 16:34:41 CEST 2017|catch (SomeException e) {   // Expected }|0|0|0|412|3868|325|165|48|2|6|0|
d8bf23b9d0f51d29bf7d75f10e93dd5fa3a8f351|Fri Aug 18 16:48:37 CEST 2017|Remove a dangling closing bracket from Javadoc|0|0|1|412|3868|325|165|40|11|6|0|
16f262fbde011c89d770472540c33bdb4588371b|Fri Aug 18 17:57:56 CEST 2017|Use diamond operator for all test targets except 'collect'|0|0|0|412|3868|325|165|47|2|5|0|
f438db66650063f9faa91c592054873c8392e512|Fri Aug 18 18:05:04 CEST 2017|Use diamond for collect tests.|0|0|0|412|3868|325|165|77|2|6|0|
89fb0654edc987741441c5329fee606a4a2a9224|Fri Aug 18 22:52:54 CEST 2017|[guava concurrent] Added MoreExecutors.sequentialExecutor(), and its documentation.|0|0|1|412|3869|325|165|45|60|6|0|
c2db40a99121238db368f6bfaabe2b81b615e927|Fri Aug 18 23:05:48 CEST 2017|Specifically instruct people who are calling dereference(transform(...)) to call transformAsync(...).|0|0|1|412|3869|325|165|34|71|5|0|
9bf42862f877a0ed8234bd484aa0089a3773ccd4|Mon Aug 21 16:30:39 CEST 2017|ImmediateFuture.toString() implementation to provide the returned value or exception. Provides for all ImmediateFutures implementation the same syntax that AbstractFuture uses.|0|0|1|412|3869|325|165|33|56|6|0|
c2c98c55c6bec6477bf2b5a9e82f9cb08c0c962c|Tue Aug 22 20:53:41 CEST 2017|Update Public Suffix list.|0|0|1|412|3869|325|165|36|39|6|0|
3a1a7b25807f94d28367d4dceabbb4b8ec54082b|Mon Aug 28 19:11:39 CEST 2017|Javadoc update when delegate throws exception.|0|0|1|412|3869|325|165|30|10|5|0|
6247a70229b36fcc56af402d3657f71afc481069|Tue Aug 29 14:34:19 CEST 2017|Update Guava's dependency on Truth to 0.35.|0|0|0|412|3869|325|165|28|2|5|0|
d1dbf6036e22700411f04e478e974cef428283ec|Thu Aug 31 20:34:09 CEST 2017|Add java.util.Optional and its derivatives (OptionalInt, OptionalLong, OptionalDouble) to ArbitraryInstances and FreshValueGenerator.|0|0|0|412|3869|325|165|35|2|6|0|
da36449da37d67a52ad4dc99644a1c3ad1720625|Fri Sep 01 16:25:02 CEST 2017|fix typo|0|0|2|412|3869|325|165|37|61|5|0|
adf10c673d2a4c3b22d17f695fa3316966d76984|Wed Jul 26 19:56:46 CEST 2017|Streams.concat: Propagate close to sources streams|0|0|1|412|3869|325|165|34|45|6|0|
82092f975dafb3964f4d4e01354adc974a1b72d8|Fri Sep 01 20:17:52 CEST 2017|[guava concurrent] Renamed SerializingExecutor to SequentialExecutor. Turned SerializingExecutor into a proxy to SequentialExecutor so two Components classes that directly use it have a chance to catch up.|1|1|1|412|3869|325|165|36|64|6|0|
ffc3e679f785cf6780c2bf96bdfdcbde41cec87b|Tue Sep 05 06:59:53 CEST 2017|Remove redundant calls to NullPointerTester#setDefault|0|0|0|412|3869|325|165|29|2|9|0|
61d2a6faec8b27d021b9f37f7dfb6655ae060fad|Thu Sep 07 02:48:25 CEST 2017|Set version numbers to 24.0-jre-SNAPSHOT.|0|0|0|412|3869|325|165|29|2|6|0|
0b9f32ae3c38c9edb41ac8fa7cf240d5c83d3d97|Thu Sep 07 03:10:30 CEST 2017|Remove @CanIgnoreReturnValue from Listening*ExecutorService. Users should do something with the returned Futures, if only log failures.|0|0|2|412|3869|325|165|32|60|6|0|
0725dbcf74a6226ae0c173aed70c098e3293e02b|Thu Sep 07 23:28:15 CEST 2017|MOE strip the "public" from SortedLists' member enums.|0|0|1|412|3869|325|165|30|43|6|0|
221b465d6472d9d95f7820ac8f8ca3bdac14ae5d|Mon Sep 11 09:44:00 CEST 2017|Migrate Executor-less Futures callback methods to the ones with an Executor, while applying MoreExecutors.directExecutor() for identical behavior.|0|0|1|412|3869|325|165|32|69|6|0|
6afde5c3fdcf7aeabde433255d91e76d1da40043|Mon Sep 11 15:08:58 CEST 2017|Fix parameter comments that don't match the formal parameter name|0|0|0|412|3869|325|165|31|2|8|0|
b89a6586f5da3a943e4b412bd61cc6bc199f451f|Mon Sep 11 19:37:06 CEST 2017|Rewrite EnumMultiset to be directly backed by an E[] and an int[], avoiding allocation of boxing objects.|0|0|1|412|3875|325|165|29|51|6|8|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.add(E,int), newSymbol=com.google.common.collect.AbstractMultiset.add(E,int)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.iterator(), newSymbol=com.google.common.collect.AbstractMultiset.iterator()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.entrySet(), newSymbol=com.google.common.collect.AbstractMultiset.entrySet()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.setCount(E,int), newSymbol=com.google.common.collect.AbstractMultiset.setCount(E,int)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.size(), newSymbol=com.google.common.collect.EnumMultiset.size()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.clear(), newSymbol=com.google.common.collect.EnumMultiset.clear()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.remove(java.lang.Object,int), newSymbol=com.google.common.collect.EnumMultiset.remove(java.lang.Object,int)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.AbstractMapBasedMultiset.count(java.lang.Object), newSymbol=com.google.common.collect.EnumMultiset.count(java.lang.Object)]
6f630e9bd3b386720c5971812f23f5c3535841b4|Mon Sep 11 21:52:16 CEST 2017|Add @CanIgnoreReturnValue to EnumMultiset#add|0|0|1|412|3875|325|165|29|55|5|0|
68db9c6ac5c87c39846f4c690f662e52946b93d7|Tue Sep 12 00:49:32 CEST 2017|Fix edge case in EnumMultiset.remove|0|0|1|412|3875|325|165|28|50|6|0|
bfcb6683c15a97e9121ab5a6714f7922a720f048|Tue Sep 12 14:36:44 CEST 2017|The documentation of PredecessorsFunction and SuccessorsFunction now makes it clear that null nodes are forbidden.|0|0|2|412|3875|325|165|35|10|7|0|
a49e1d0fca1b37df1dd3bd32289c97c3fb6f684a|Tue Sep 12 18:12:42 CEST 2017|Add note about nodes being valid Map keys to PredecessorsFunction and SuccessorsFunction.|0|0|2|412|3875|325|165|29|9|10|0|
63898e263ddcdae00fc760fdaf97d90c8a656608|Wed Sep 13 03:05:58 CEST 2017|Make ClassPath search the contents of the "java.class.path" system property for the system class loader in Java 9.|0|0|1|412|3875|325|165|30|61|6|0|
db2e7fe9adcbf44e4964a26be9f3d7b52a52ca21|Wed Sep 13 22:11:34 CEST 2017|Fix tests that assume Class.getClassLoader() returns a URLClassLoader so that they can call getURLs() to instead parse the "java.class.path" system property.|0|0|0|412|3875|325|165|33|2|5|0|
54868978f04f1903e6e1ec70c9766752cf9450d4|Thu Sep 14 18:39:32 CEST 2017|Add Traverser API without implementation.|1|0|0|413|3880|325|165|32|8|6|0|
3a053c298ce800315a92365fbc8f62a08babc09d|Thu Sep 14 19:42:59 CEST 2017|Clarify some docs on Ordering+Comparators|0|0|2|413|3880|325|165|31|49|6|0|
6cdb8e527d89c2e5c1b338fabbbe82aad31b8d37|Fri Sep 15 21:45:10 CEST 2017|Add reverse methods to all primitive arrays in common.primitives.|0|0|8|413|3896|325|165|43|42|10|0|
3e89ed8f86d5ff10fef1637ed808c36a873676e3|Fri Sep 15 22:18:10 CEST 2017|Add sorting methods for the unsigned primitives in common.primitives.|0|0|3|413|3902|325|165|40|22|5|0|
1ed39372ad8a3ce24b97679d41e61f401d854816|Mon Sep 18 13:48:43 CEST 2017|Propagate close for to the inputs of Streams.zip and Streams.mapWithIndex|0|0|1|413|3902|325|165|30|47|6|0|
1202bb2f3663d052e97d62340e1cf445a817efc2|Mon Sep 18 23:08:12 CEST 2017|Merge pull request #2942 from google/sync-master-2017/09/18|0|0|0|413|3902|325|165|31|2|6|0|
bf6141998e60ab1e434db8e4bf4fdc517917407e|Tue Sep 19 18:31:15 CEST 2017|Fix documentation for checkArgument and checkState|0|0|1|413|3902|325|165|31|13|6|0|
52047f9d898bbb4bfb4e2c8b63c63be51be28c45|Thu Jul 27 19:01:18 CEST 2017|Add @GoogleInternal propagateCancellation to Futures.|0|0|5|413|3902|325|165|34|71|10|0|
fe71fdc1eb0efe8e53c43a5b6f8357e307b2b4a8|Tue Sep 19 20:05:39 CEST 2017|Add sortDescending methods in common.primitives.|0|0|10|413|3922|325|165|44|43|6|0|
27b0d3840b057814b403fa8b194bad5914b166a4|Tue Sep 19 21:17:53 CEST 2017|Make propagateCancellation helpers @GoogleInternal.|0|0|1|413|3922|325|165|34|64|7|0|
631696beffc2f8f216b3fb0da32605c472935504|Tue Sep 19 22:33:30 CEST 2017|Add the same overloads that Preconditions has in Verify.|0|0|1|413|3944|325|165|32|12|5|0|
946151d87b7999c614a7ceeb5536047193487f58|Wed Sep 20 18:21:36 CEST 2017|Fix space complexity in forTree() documentation.|0|0|1|413|3944|325|165|31|7|5|0|
ac573800bccecbb72f509d9024acccf48ccb6f4f|Thu Sep 21 17:12:29 CEST 2017|Revert parts of CL 33393713 that changed Splitter.on(",") tests to redundant Splitter.on(',') tests. Use COMMA_SPLITTER in more remaining Splitter.on(',') tests.|0|0|0|413|3944|325|165|29|2|8|0|
36d362ade4d4cc3ca59048af4494ec226003a52a|Thu Sep 21 18:49:18 CEST 2017|Traverser.java: tweak the forGraph() and forTree() documentation to make memory use a bit more clear.|0|0|1|413|3944|325|165|39|9|6|0|
8b4267b28dc8e2be748f03f07005ac45ab9b3223|Fri Sep 22 18:35:33 CEST 2017|Implement Traverser.forGraph().breadhFirst().|0|0|1|413|3944|325|165|29|47|6|0|
76c3823ece47fe170d83c963d7d445c7f87462eb|Mon Sep 25 08:46:57 CEST 2017|common.graph: fix formatting error in Graph/ValueGraph/Network Javadoc.|0|0|3|413|3944|325|165|30|12|5|0|
c95fc106ff08d0652b5d661cab9a73f38697eccc|Mon Sep 25 17:28:43 CEST 2017|Throwables#lazyStackTrace unsupported on IBM JDK 6|0|0|1|413|3944|325|165|30|14|6|0|
e2a4a28427011c05702cf2c1568c5067baed5337|Mon Sep 25 21:03:44 CEST 2017|Make common.collect spliterators backed by an int-indexed function correctly splittable.|0|0|1|413|3944|325|165|31|44|9|0|
3fb7f1b80a39bf4557a87a20b95b2f5bca2d4bd5|Tue Sep 26 18:03:16 CEST 2017|Fix Guava version number re. BloomFilter thread safety.|0|0|1|413|3944|325|165|31|20|5|0|
b458e6fb63d281f778ccb09e534707b3ab8cb190|Tue Sep 26 18:48:34 CEST 2017|Slightly bump the fpp to prevent OOM under JDK9.|0|0|0|413|3944|325|165|29|2|5|0|
6a297bd47bcd0494b300f52352dac570f49fec37|Tue Sep 26 20:34:42 CEST 2017|Fixed a typo in the Predicates class documentation.|0|0|1|413|3944|325|165|30|48|6|0|
3794eb819ccbec40229cd7df4140db80ead227e4|Tue Sep 26 22:54:02 CEST 2017|Change version number in pom files from 24.0 to HEAD(-jre/android-SNAPSHOT).|0|0|0|413|3944|325|165|32|2|6|0|
82fb7f70ffc4474d9d08fc301af02ca979a253e8|Tue Sep 26 23:55:20 CEST 2017|Change "@since 24.0" to "@since NEXT".|0|0|8|413|3944|325|165|32|113|13|0|
e4b10774c57124ba7fc9d0b6ae047e6312cdd974|Wed Sep 27 19:44:31 CEST 2017|Change Futures.dereference removal from Guava 25.0 to January 2018.|0|0|1|413|3944|325|165|34|60|5|0|
956f84398cf1e5f6b536590ca861d4a9d0210258|Wed Sep 27 20:48:23 CEST 2017|Update Preconditions overloads that were added in 20.0 to have @since 20.0 and new Verify overloads to have @since NEXT.|0|0|2|413|3944|325|165|30|14|6|0|
e3b8c0b6f07c1017e80d86758191d6898517a546|Wed Sep 27 21:18:43 CEST 2017|Update @since tags to @since 23.1.|0|0|20|413|3944|325|165|42|131|11|0|
33f372cba88cd687c20874d392f51bfe1069e3ae|Wed Sep 27 22:17:38 CEST 2017|Fix some random Error Prone warnings.|0|0|8|413|3944|325|165|47|106|13|0|
157f1d2af826d0c558c7772d2698fbbaec28b0b1|Wed Sep 27 22:20:38 CEST 2017|Update set_version.sh to handle new versioning scheme and ignore snapshot versions since those are no longer chaning.|0|0|0|413|3944|325|165|39|2|6|0|
50752554b24b5d7f8ee4535435d2330a09de7c5c|Wed Sep 27 22:36:28 CEST 2017|[guava concurrent] Removed the executeFirst() method from SequentialExecutor, and its test case. Switched the internal representation of the task queue back to Queue from Deque.|0|0|1|413|3944|325|165|28|58|6|0|
6d8d9d97f73cb5663f794edd7aaa1c7ede725203|Thu Sep 28 15:34:41 CEST 2017|[guava concurrent] Updated a comment in ListenerCallQueue to point at SequentialExecutor instead of the deprecated SerializingExecutor wrapper interface.|0|0|1|413|3944|325|165|33|52|5|0|
bc27d8a03f5400c08ce627df49a64715634775c5|Thu Sep 28 17:18:39 CEST 2017|Update Verify.java @since NEXT tags to 23.1.|0|0|1|413|3944|325|165|30|13|6|0|
6fba8d15ac48632e259d6b4851615e081e341b6e|Thu Sep 28 17:41:15 CEST 2017|We test on Ice Cream Sandwich now, not Gingerbread.|0|0|0|413|3944|325|165|32|2|11|0|
984b19d5244406e22a537cb90b7cf40b7cd787b0|Thu Sep 28 20:54:19 CEST 2017|Minor noop updates to Future and TimeUnit in preparation of moving.|0|0|0|413|3944|325|165|29|2|6|0|
71f8c47ff2acb1d5359c350d8a872016a3fc5e19|Thu Sep 28 21:50:15 CEST 2017|[guava concurrent] Removed the now-unused suspend() and resume() methods from SequentialExecutor. Removed the special-case visibility. Marked SequentialExecutor final. Removed the now-unused SerializingExecutor migration interface. Updated Javadoc to remove references to the now-gone methods.|0|0|1|413|3944|325|165|28|56|7|0|
e1226062230b160df91d751c7ab61fdc68ecedd5|Fri Sep 29 03:04:32 CEST 2017|Fix Escaper.java comment typo.|0|0|1|413|3944|325|165|34|11|6|0|
07eed063f9dd2b6b6b121f76d9656f8e61fb61c7|Fri Sep 29 13:09:07 CEST 2017|Remove CountDownLatch emulation|0|0|0|413|3944|325|165|33|2|6|0|
9b61b0f4e64f58283656d994cd68d6db7cd9bd55|Fri Sep 29 19:50:56 CEST 2017|For clarity, re-apply @Beta to the CharMatcher constants.|0|0|1|413|3944|325|165|33|15|6|0|
3a3e495603803fa5ef616cb2aa119327ec8e2560|Fri Sep 29 19:50:56 CEST 2017|Document that we're no longer removing stable APIs.|0|0|0|413|3944|325|165|30|2|8|0|
ec9ac201975685e6533a1788e5e8bbefdd9cbc30|Fri Sep 29 20:23:02 CEST 2017|Remove removal dates for non-@Beta deprecations.|0|0|9|413|3944|325|165|36|119|7|0|
fb763eea9e4abcc47391baa5c9d909f4d520c1f6|Mon Oct 02 21:51:35 CEST 2017|Update "current release" to 23.1. Remove API diffs that are available from the release page.|0|0|0|413|3944|325|165|35|2|6|0|
ca438f5a1f69d37e39f506cbdbc09fdb1e569838|Tue Oct 03 17:11:03 CEST 2017|Implement Traverser.forGraph().depthFirst*().|0|0|1|413|3944|325|165|32|49|5|0|
378bb20dcd5e9e84d218348f9bfb166fc2b5d6b4|Tue Oct 03 19:53:01 CEST 2017|Update the farmHashFingerprint64() javadoc to specify how FarmHash's numeric fingerprint is encoded by HashCode#asBytes().|0|0|1|413|3944|325|165|29|22|9|0|
11d3683ddba029aad2c9da7769c528cbe99d6fd3|Tue Oct 03 23:26:37 CEST 2017|Update README to refer to HEAD-jre/android-SNAPSHOT for the snapshot versions.|0|0|0|413|3944|325|165|30|2|7|0|
a8f4ebc429d01150d3e35980373cb8c9c123aeaa|Thu Oct 05 15:38:22 CEST 2017|ValueGraph: fix implementation of edgeValueOrDefault(). Also fixed tests to guard against similar future regressions.|0|0|1|413|3944|325|165|32|19|7|0|
c94822bdfde0a43df9f576df86e5880d1f26fe26|Thu Oct 05 16:55:33 CEST 2017|Documentation improvement: Clarify disambiguities around post-order/pre-order.|0|0|1|413|3944|325|165|32|44|5|0|
918c9e98f3d06e815507c31764e69c38ad2289ed|Thu Oct 05 17:13:03 CEST 2017|All javadoc examples now use the same example graph (also matches the one in the unit test).|0|0|1|413|3944|325|165|27|47|6|0|
2927518ac86e8ed1d09038fb2b03c86c894ea5ca|Thu Oct 05 23:52:05 CEST 2017|Handle InheritableThreadLocals correctly on Java 9.|0|0|1|413|3943|325|165|31|5|5|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.internal.Finalizer.getInheritableThreadLocalsField(), newSymbol=]
da978f40ce0ce13f19dc45023883964d219e001f|Sun Oct 08 19:55:52 CEST 2017|Make sure that local task reference is retained in objc|0|0|1|413|3943|325|165|32|54|6|0|
f2be0be06ef49dee7c5dfcb3a0231c5ecaf5b621|Mon Oct 09 17:38:27 CEST 2017|Add JPMS module name|0|0|0|413|3943|325|165|29|2|6|0|
3dc87b992dc4d3db9ba32f10e575994ab8a8f475|Mon Oct 09 18:54:51 CEST 2017|Rollback [] for AtomicDouble(Array) that added jdk5 support.|0|0|2|413|3943|325|165|31|15|7|0|
fa3239443902d9c06d2ac64f05fa19ef7f8a60c9|Tue Oct 10 10:48:59 CEST 2017|Implement Traverser.forTree().breadthFirst().|0|0|1|413|3943|325|165|33|49|5|0|
9a96b6a9195cbad137bce618104eea5c4217c0a7|Tue Oct 10 18:12:16 CEST 2017|Implement Traverser.forTree().depthFirst*().|0|0|1|413|3943|325|165|28|50|7|0|
54164e74093b8beaa203c844f68e778a7df3a637|Tue Oct 10 18:32:34 CEST 2017|Update Public Suffix data.|0|0|1|413|3943|325|165|36|39|6|0|
9bcedd8f5bd2354d133edcb3e058b8f0d4f28e8f|Tue Oct 10 18:54:22 CEST 2017|Fix bug where ImmutableSortedMap could accept a null key/value pair.|0|0|1|413|3943|325|165|30|60|7|0|
130bead827402e841282eaf8f197c6c4ce64ec4c|Tue Oct 10 19:42:51 CEST 2017|Expand BiMap test suite for forcePut operation, and fix a newly revealed bug in the HashBiMap status quo.|0|0|1|413|3943|325|165|39|53|7|0|
6641f279b1046297cf18d38e2aa44cca93d75042|Tue Oct 10 21:18:30 CEST 2017|Expand BiMapTestSuiteBuilder's tests for setValue calls on entries (which get run on both forward and backward BiMaps).|0|0|1|413|3943|325|165|36|51|5|0|
1f697f51921ec3cf42fb8a37cc148e744bff20ca|Tue Oct 10 21:27:55 CEST 2017|Automated g4 rollback of changelist 163355688.|0|0|0|413|3943|325|165|34|2|10|0|
361eba8e4078a4c80f9be0c9194a7e3c0473aa6d|Wed Oct 11 16:17:00 CEST 2017|ValueGraphTest.java: add a few checks to make sure that we're properly exercising both null and non-null default values.|0|0|0|413|3943|325|165|30|2|6|0|
87439646d6f005a4686dfc68600e894a1137a0b9|Wed Oct 11 16:25:52 CEST 2017|Fix links.|0|0|2|413|3943|325|165|31|60|5|0|
5c2c138547560763d050cf5535a1b94fb8577dda|Wed Oct 11 16:47:49 CEST 2017|Deprecate matchers which cannot work as expected because the API does not support supplementary code points. Clarify some API docs. Point to ICU4J for an actual Unicode library.|0|0|1|413|3943|325|173|32|16|7|0|
6c5c9a543ed9c04b853d78d0382068124ba21880|Wed Oct 11 18:34:54 CEST 2017|Document that negate() @Overrides under Java 8 but not under Java 7.|0|0|1|413|3943|325|173|31|17|6|0|
94116b064ca2383d12eb3c23fe54a2bf1fc39067|Wed Oct 11 21:22:00 CEST 2017|Don't log until static state is fully set up. This prevents a (hypothetical, to my knowledge) bug where a device exhibiting the samsung reflection bug would fail to fall back if an installed logger called a Futures method inline.|0|0|2|413|3943|325|173|33|78|12|0|
b6901ea356dee240f15d5be6fd0b195d212fdc35|Wed Oct 11 22:51:55 CEST 2017|Update deprecation messages for the CharMatcher constants to match the new deprecation messages on the factory methods while still suggesting that the factory methods be used rather than the constants if needed.|0|0|1|413|3943|325|173|33|17|6|0|
7df1ae57b4015ec4e39a3d050eeb6978255df81d|Wed Oct 11 23:58:48 CEST 2017|Make the copying done for guava-gwt not verbose.|0|0|0|413|3943|325|173|30|2|5|0|
964df6b105ccd7f5bccc5462d16a671af0d8e09e|Thu Oct 12 00:13:52 CEST 2017|Remove unnecessary volatile; this boolean value is only relevant if the executor runs the provided runnable inline, which means that the write will always be visible to the read in the catch() statement.|0|0|2|413|3943|325|173|31|70|7|0|
e9d8295062aeb67444c44666588ff8831424a80b|Thu Oct 12 01:26:53 CEST 2017|Update hardcoded digit() and invisible() from Unicode 6.3 to Unicode 9.|0|0|1|413|3943|325|173|32|16|6|0|
539bc1f03080d6fddfce43763468f28f5dacae56|Thu Oct 12 18:54:07 CEST 2017|Update latest release to 23.2.|0|0|0|413|3943|325|173|31|2|6|0|
a3e680ed62b116fd7b3f521b61efa85290c63c7e|Thu Oct 12 20:47:34 CEST 2017|Update AtomicDouble in Java 7 to use AtomicLong directly instead of AtomicLongFieldUpdater.  This is a relatively simple way of protecting against bugs like the Samsung bug, and clm@ and I agreed that the simplification over what e.g. AbstractFuture has had to do was worth the extra allocation.|0|0|0|413|3943|325|173|29|2|5|0|
0ed66d89488c7cdee558aa82b4422993e7bd2fa9|Thu Oct 12 21:10:14 CEST 2017|Update hasPublicSuffix javadoc|0|0|1|413|3943|325|173|28|49|7|0|
957c1a5455508120d224f6d0d8f3bf8afa3630f0|Mon Oct 16 20:51:55 CEST 2017|Fix Striped.lazyWeakReadWriteLock so that holding on to just the read or just the write lock will not allow the ReadWriteLock to be garbage collected, which many users find surprising.|2|0|1|413|3943|325|173|33|60|5|0|
da90c7743b5085e846287f4bdacb9711384b6c39|Mon Oct 16 21:33:47 CEST 2017|Strip the public from ListenerCallQueue.Event in open source.  It's not actually visible, anyway.|0|0|1|413|3943|325|173|30|48|6|0|
50b0e455510e599e418c18ccd65a4b53f9dc3b50|Tue Oct 17 11:55:09 CEST 2017|Traverser: Throw IAE if startNode is not part of the graph and add tests for empty graph case and disjoint trees (forest) case.|0|0|1|413|3943|325|173|33|50|8|0|
2f6370343200faec3de904a5cf2e39345acb33e7|Tue Oct 17 18:44:13 CEST 2017|Add test for a graph with a single root.|0|0|0|413|3943|325|173|31|2|6|0|
01d18f2c3db799d144cc8e3308da3fb2ade19417|Tue Oct 17 22:23:08 CEST 2017|Using Object instead of a specific type irritates some thread safety tests.  Fix that.|0|0|1|413|3943|325|173|28|60|6|0|
40df21bf55c45ca190ac65ed58641b54ef454ef1|Wed Oct 18 00:28:01 CEST 2017|Add the notion of RegistrySuffix to InternetDomainName.|0|0|3|414|3951|327|173|36|53|5|0|
1c760101a7fcd8798eb0c6ad3c277ff190bcb22f|Thu Oct 19 00:12:22 CEST 2017|RELNOTES=Introduce MoreExecutors.newSequentialExecutor, the new name of sequentialExecutor.|0|0|2|414|3952|327|174|32|59|6|0|
e84643cad0ebcfa85ee401e0350b8e05a0468e4d|Thu Oct 19 19:48:57 CEST 2017|Fix minor spelling errors in tests.|0|0|0|414|3952|327|174|34|2|9|0|
384a93b10b52da52dc6ce3608ce80ed28dda7c34|Fri Oct 20 00:01:59 CEST 2017|Use whichever version of nextDown is available.|0|0|0|414|3952|327|174|33|2|6|0|
b72fe8611c3ed4b2782ca79dec170efe5d1fbd0e|Sat Jan 07 16:29:17 CET 2017|Deprecate [Binary]TreeTraverser.|0|0|2|414|3952|327|180|29|46|5|0|
3d90141108935eb7580ddc3e586c5960cc9c68c7|Tue Oct 24 23:20:46 CEST 2017|Avoid using WeakSafeReadWriteLock when not using weak references|0|0|1|414|3952|327|180|33|64|7|0|
0c8ea0fedf357fd8b6c578f9a4e652952bbd1fbf|Wed Oct 25 21:35:28 CEST 2017|Detect HtmlUnit's broken sorting, and skip our tests that depend on proper sorting, at least when running our GWT tests in the open-source build.|0|0|0|414|3952|327|180|32|2|6|0|
570943f5425971955de678e772699de05eb96c63|Thu Oct 26 00:23:25 CEST 2017|Set all @since NEXT to @since 23.3.|0|0|3|414|3952|327|180|30|67|9|0|
19b4d977a9b057c9fa4c3334db0796aeeef8f386|Thu Oct 26 14:34:42 CEST 2017|Add Referrer-Policy to HTTP Headers.|0|0|1|415|3952|336|180|32|6|6|0|
46c31db3c79e58225a663be62b3d115ce2378345|Thu Oct 26 19:58:18 CEST 2017|Upgrade GWT version to 2.8.2, plus:|0|0|0|415|3952|336|180|32|2|6|0|
153ca2f80943957490b2b073cfc1900c2742d326|Thu Oct 26 23:20:40 CEST 2017|Update readme to show new current version 23.3.|0|0|0|415|3952|336|180|31|2|6|0|
2909a996047e575cdac02ea1c06a93a9419271cf|Fri Oct 27 00:30:25 CEST 2017|Add @since tags to some nested types.|0|0|7|415|3952|336|180|32|93|7|0|
3106b4ef159878972100ca5028dc3ab69fac6971|Fri Oct 27 19:34:46 CEST 2017|Fix links to JSR305, and start linking to JDK 9.|0|0|0|415|3952|336|180|36|2|10|0|
ac985ef9cd1f60c4fdcfcb2cd929461cd46e714e|Mon Oct 30 19:29:57 CET 2017|In Java 7 branch, don't bother using Iterators.forArray in RegularImmutable{List,Set}.  The default ImmutableList.listIterator implementation amounts to the same thing, an AbstractIndexedListIterator delegating to the array.|0|0|0|415|3952|336|180|29|2|6|0|
f2ecd139a4dd5fb085208d067509778d7ba1f700|Tue Oct 31 18:24:32 CET 2017|Add private constructor to Traverser.|0|0|1|415|3952|336|180|31|51|7|7|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.Traverser.depthFirstPreOrder(N), newSymbol=com.google.common.graph.Traverser.depthFirstPreOrder(N)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.Traverser.forTree(com.google.common.graph.SuccessorsFunction<N>), newSymbol=com.google.common.graph.Traverser.forTree(com.google.common.graph.SuccessorsFunction<N>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.Traverser.forGraph(com.google.common.graph.SuccessorsFunction<N>), newSymbol=com.google.common.graph.Traverser.forGraph(com.google.common.graph.SuccessorsFunction<N>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.Traverser.breadthFirst(N), newSymbol=com.google.common.graph.Traverser.breadthFirst(N)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.graph.Traverser.depthFirstPostOrder(N), newSymbol=com.google.common.graph.Traverser.depthFirstPostOrder(N)],BC[kind=CONSTRUCTOR_REMOVED, impactedSymbol=com.google.common.graph.Traverser.<init>(), newSymbol=],BC[kind=CLASS_NOW_FINAL, impactedSymbol=com.google.common.graph.Traverser, newSymbol=com.google.common.graph.Traverser]
d31b6ce371d5aed395c86be7e1654061b3f0b45b|Wed Nov 01 18:14:12 CET 2017|Remove @GwtCompatible annotations from classes in the hash package, which have no corresponding .gwt.xml file.|0|0|3|415|3952|336|180|33|14|5|0|
40564c7415ab5fbd2dc89527d38493bc0bd2bf86|Wed Nov 01 21:35:05 CET 2017|[guava concurrent] Upstreamed a modified form of the modified interruption behaviour from a fork of SerializingExecutor. Documented and tested the behaviour thoroughly.|0|0|2|415|3952|336|180|31|65|6|0|
79e8351d357383e3b1f85f029883970fac601c46|Thu Nov 02 19:44:57 CET 2017|Make a small change to README.md to make it simpler to auto-update.|0|0|0|415|3952|336|180|34|2|9|0|
f1b22619682351923e1d34481e6efe499f41745f|Thu Nov 02 19:53:28 CET 2017|Clear the interrupt bit at the end of the test.|0|0|0|415|3952|336|180|31|2|6|0|
946afb87c903ce73708c9d11075aa7df78cdae0f|Thu Nov 02 20:19:47 CET 2017|Print the actual output of failed tests.|0|0|0|415|3952|336|180|29|2|5|0|
c0557dfb7daf57a3073535d6ce55f6556bf7df4c|Thu Nov 02 20:38:44 CET 2017|Run tests in a deterministic order.|0|0|0|415|3952|336|180|28|2|6|0|
2941d8428a2969d0a3e7c90bb072cce6cbd14300|Thu Nov 02 20:48:27 CET 2017|Actually export print_surefire_reports.sh.|0|0|0|415|3952|336|180|30|2|6|0|
0c434ff088d811e34064c6a0720d45962492f090|Thu Nov 02 21:39:06 CET 2017|Optimize ImmutableCollection.Builder.addAll(ImmutableCollection) to use System.arraycopy when possible.|0|0|1|415|3952|336|180|32|61|6|0|
a8a4a18bd6c6d187126085f527abfac9a55b7edf|Thu Nov 02 23:02:54 CET 2017|Wait longer for the interrupt to happen.|0|0|0|415|3952|336|180|28|2|8|0|
2715db783a5caf5210f7703f68a485a96132e3f2|Fri Nov 03 17:33:40 CET 2017|Don't issue a warning for the lack of srcs in the "main" guava-tests jar.|0|0|0|415|3952|336|180|29|2|7|0|
4dc9df884afb50660f7f13905e7ae99465e5f822|Fri Nov 03 20:30:04 CET 2017|Remove redirectTestOutputToFile from guava-testlib configuration.|0|0|0|415|3952|336|180|31|2|7|0|
3cc6ea4f51413794f6e24e693676dbf57b307520|Fri Nov 03 20:57:06 CET 2017|Run nested classes for real this time.|0|0|0|415|3952|336|180|32|2|7|0|
a26b9aad7fef9a9547a654dfa2a84aeacf433fb1|Fri Nov 03 21:00:39 CET 2017|Make all "Tester" classes *end* with "Tester," and simplify our exclusions accordingly.|0|0|0|415|3952|336|180|30|2|6|0|
7399c2b1aac134dab7966bd889dc0f5e75e89e10|Sat Nov 04 03:46:55 CET 2017|Fix range typo in comments of subRangeMap.|0|0|1|415|3952|336|180|29|45|9|0|
1f40cf6380357340b2fd786ff79debf42555676a|Mon Nov 06 16:38:30 CET 2017|Support for empty ArrayTable.|0|0|1|415|3952|336|180|34|56|6|0|
e07a618c27b1a40e9f2eb07ae1b053ea0dcbd13c|Mon Nov 06 20:44:03 CET 2017|Remove no-op check.|0|0|1|415|3952|336|180|33|15|6|0|
a034f5ca1073f9ae4fffc20519b43eb20601eedd|Tue Nov 07 17:09:27 CET 2017|Add Files.fileTraverser().|0|0|1|415|3953|336|180|32|71|7|0|
90ca5ee51618adc6d0c1aabf3f1f8a576a4e4ec2|Tue Nov 07 18:23:36 CET 2017|Add MoreFiles.fileTraverser().|0|0|2|415|3954|336|180|32|66|6|0|
1dee5c1bb5dcfec9ea9c7703262638fda07a7e16|Tue Nov 07 18:42:00 CET 2017|Automated g4 rollback of changelist 174865821.|0|0|2|415|3953|336|180|42|74|9|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.MoreFiles.fileTraverser(), newSymbol=]
9dd731d6879b5e7888133424ed8a9092d93549c9|Tue Nov 07 19:19:32 CET 2017|Automated g4 rollback of changelist 174856751.|0|0|1|415|3952|336|180|35|61|6|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.fileTraverser(), newSymbol=]
3ccb1303de7949c003c3939871a35f8992314e61|Thu Nov 09 15:55:28 CET 2017|Prepare for release 23.4.|0|0|1|415|3952|336|180|32|6|7|0|
ee9ac70a9296645b3f883773eb950961bb12f0d0|Thu Nov 09 16:03:40 CET 2017|Reduce iterations for MinMaxPriorityQueueTest under GWT.|0|0|1|415|3952|336|180|32|36|6|0|
13a6e364fbb35fc518580059a08a6dd2846c153b|Thu Nov 09 16:06:07 CET 2017|Don't construct thousands of strings.|0|0|0|415|3952|336|180|34|2|5|0|
60bb6a87972d7caf8d987700249e34f24286fcde|Thu Nov 09 21:41:42 CET 2017|Don't release guava-tests to Maven Central|0|0|0|415|3952|336|180|31|2|9|0|
692446a3031289a37db2d57b6eb77d95e2ae93bf|Fri Nov 10 05:57:03 CET 2017|Correct gender off-by-one error. :)|0|0|1|415|3952|336|180|30|50|5|0|
b74154f042b9ea7eb28844d8d8fe7a9bb6520dfb|Fri Nov 10 22:58:54 CET 2017|Make package-list files available to the android backport, too.|0|0|0|415|3952|336|180|28|2|6|0|
f6cfba80dfee508b89bcee08669c49ff964b8490|Sun Aug 13 20:47:10 CEST 2017|Roll forward.|0|0|1|415|3953|336|180|29|65|6|0|
af7514acdbff34722b47938fcea41cbe9a5cf0ec|Mon Nov 13 22:52:13 CET 2017|Roll forward.|0|0|2|415|3954|336|180|34|66|6|0|
4f794799aa981eba0000b54004257c0f4fa78b88|Mon Nov 13 23:02:40 CET 2017|Claim that ImmutableCollection classes should still be preferred over Java 9 factories like `Set.of`. https://github.com/google/guava/issues/2969|0|0|1|415|3954|336|180|31|58|9|0|
6220cea0da20a763c7806ee9fb3f21dd4a145863|Tue Nov 14 14:45:48 CET 2017|Update docs that refer to the removed `suspensions` field.|0|0|1|415|3954|336|180|31|58|6|0|
086f67c913052c885a9aea4c6bff71e9ca818a42|Tue Nov 14 19:33:00 CET 2017|Refactor file tree children logic to separate method just like in MoreFiles.|0|0|1|415|3954|336|180|31|62|6|0|
0ad9c44108653a1ac277bcf33b95dde30e689300|Tue Nov 14 20:01:51 CET 2017|Graduate Verify and VerifyException from Beta as requested here: https://github.com/google/guava/issues/2409|0|0|2|415|3954|336|180|31|13|7|0|
fc992745150d95544fec68b9c6e89b5c3bc44b15|Wed Nov 15 22:24:54 CET 2017|Annotate Cache with @CompatibleWith|0|0|1|415|3954|336|180|31|60|6|0|
8959e516f7d19c62a6a0aea9a262af152872797c|Thu Nov 16 19:54:09 CET 2017|Try out @OverridingMethodsMustInvokeSuper, and remove some unnecessary work in AbstractMapTester.|0|0|1|415|3954|336|180|32|64|6|0|
328481cb8b86f97f25e051fe16ad3f2f3b988dce|Thu Nov 16 21:15:05 CET 2017|Import Map.Entry almost everywhere.|0|0|31|415|3954|336|180|94|207|9|0|
901e985598a30fadb194603d6a17142cca00614b|Thu Nov 16 22:39:44 CET 2017|Migrate from jsr305's @Immutable to Error Prone's.|0|0|5|415|3954|336|180|69|88|6|0|
27c07248101cc4828b22724aaaf56ec330c1f155|Thu Nov 16 23:39:49 CET 2017|Remove @ThreadSafe and @NotThreadSafe annotations.|0|0|3|415|3954|336|180|35|71|8|0|
a1ffef8457b88c1a0ac72d128c99196169c1b0ea|Mon Nov 20 16:07:07 CET 2017|Fully qualify some references to javax.annotation.Nullable in files that will likely soon refer to both that Nullable and the Checker Framework's.|0|0|0|415|3954|336|180|32|2|6|0|
16b1a0f3427f3b3119d18fad198bd022f4f3d09f|Mon Nov 20 16:31:04 CET 2017|Carry @CanIgnoreReturnValue over to new methods.|0|0|1|415|3954|336|180|30|13|7|0|
ec48806eeebe0102533da88b8bcdae6bcbf98629|Mon Nov 20 17:25:53 CET 2017|Mutable{Graph, Network, ValueGraph}.java: tighten the contract for the edge-adding methods.  The contract now states that if the specified nodes are not already present in the graph, they are silently added.  (Removes the option of throwing in this case.)|0|0|3|415|3954|336|180|32|10|5|7|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableValueGraph, newSymbol=com.google.common.graph.ValueGraph.hasEdgeConnecting(N,N)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.ValueGraph.edgeValue(N,N), newSymbol=com.google.common.graph.ValueGraph.edgeValue(N,N)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=com.google.common.graph.Graph.hasEdgeConnecting(N,N)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.Network.edgeConnectingOrNull(N,N)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.Network.hasEdgeConnecting(N,N)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Network.edgeConnecting(N,N), newSymbol=com.google.common.graph.Network.edgeConnecting(N,N)],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ValueGraph.hasEdge(N,N), newSymbol=]
d2e5e31dbf0869985b040f23c5fc57b786972b1a|Tue Nov 21 16:04:09 CET 2017|Fix inheriting docs from the JDK.|0|0|0|415|3954|336|180|28|2|6|0|
4b8bc9c4217f1a2a968161b380db5eac2e200aab|Tue Nov 21 16:44:30 CET 2017|Migrate usage of Files.fileTreeTraverser() to Files.fileTraverser().|0|0|0|415|3954|336|180|28|2|6|0|
17de0768eeefbbd8790407544a881e1cca9da5c3|Tue Nov 21 17:48:07 CET 2017|Carry @CanIgnoreReturnValue over to new methods.|0|0|1|415|3954|336|180|31|57|8|0|
ef6283a97b7db54f15e312656584fd72ad70948d|Tue Nov 21 17:55:06 CET 2017|Update Public Suffix data.|0|0|1|415|3954|336|180|35|40|5|0|
1644f6ea9db1279f89d452f05d0dfa18061e35ba|Tue Nov 21 18:39:49 CET 2017|Deprecate Files.fileTreeTraverser() and MoreFiles.directoryTreeTraverser().|0|0|2|415|3954|336|182|31|71|6|0|
dc3210484abc2b817484be5c140bfa583fe3864c|Wed Nov 22 02:27:14 CET 2017|Add Checker Framework to dependencies.|0|0|0|415|3954|336|182|32|2|6|0|
1e4938cd0d3663412c1e36ab1376a177191ef421|Wed Nov 22 03:12:43 CET 2017|Add ImmutableMap.getOrDefault() in the Android branch.|0|0|1|415|3954|336|182|28|69|13|0|
f6c5a143f4b31dbcf860fe38e8f70f4d80c206ba|Wed Nov 22 20:55:45 CET 2017|Prepare for release 23.5.|0|0|2|415|3954|336|182|43|71|7|0|
1e4d01f8246b8465297c3cec8cdd1744f8382e4a|Mon Nov 27 20:03:02 CET 2017|Don't use recursion in MultiInputStream.read().|0|0|1|415|3954|336|182|32|16|6|0|
f089e55e51172023365d2341529d4a126451497b|Tue Nov 28 10:18:40 CET 2017|Adding [Server-Timing] HTTP header.|0|0|1|415|3954|337|182|32|7|8|0|
102f65c81e7eb2d8831b8d9ceb157ac20ce3329b|Tue Nov 28 19:30:58 CET 2017|Add missing @Nullable annotation to ForwardingSortedSet.unsafeCompare(Object, Object).|0|0|1|415|3954|337|182|31|36|8|0|
6f390415c441e464779f668f66ab9074e4bc5e3b|Tue Nov 28 21:02:05 CET 2017|Add missing @Nullable to Preconditions.|0|0|1|415|3954|337|182|39|13|12|0|
d6e0b581cdb14fc86778e02c5e96c49a6385f429|Thu Nov 30 05:16:21 CET 2017|Add missing @Nullable to Finalizer.|0|0|1|415|3954|337|182|37|5|9|0|
c1102f2ff702ee1a9a3f9eed92dd96f4d1e7c626|Thu Nov 30 17:08:54 CET 2017|Promote ReferenceEntry to a top-level class for weird reasons.|1|0|1|415|3954|337|182|87|98|9|0|
f70da79cc3afdd7cc5b3401373e680ea717ab4db|Thu Nov 30 22:52:49 CET 2017|Depend on error_prone_annotations 2.1.3.|0|0|0|415|3954|337|182|36|2|6|0|
6c2fe3711683897c25054ddad1d79de4c59f32dd|Thu Nov 30 23:18:16 CET 2017|Migrate from jsr305's @CheckReturnValue to Error Prone's.|0|0|5|415|3954|337|182|42|89|6|0|
c60f24a21b7e080e21851f06fce1e8f2d782ca93|Thu Nov 30 23:47:10 CET 2017|Migrate from jsr305's @GuardedBy and @OverridingMethodsMustInvokeSuper to Error Prone's.|0|0|11|415|3954|337|182|52|133|9|0|
d06014f7567bad25ce6f9c1ad382f7b2e5e89961|Thu Nov 30 23:55:12 CET 2017|Add missing @Nullable to the fields in ImmutableSet.java|0|0|1|415|3954|337|182|45|54|7|0|
a39ce7c891f7a3599c71d09127e4c5e7c0a222fa|Fri Dec 01 15:49:13 CET 2017|Remove public constructors from SimpleTimeLimiter.|0|0|1|415|3954|337|182|34|55|6|0|
e631915d0b3d3650a4ec051ee11f9059a7e89ee8|Fri Dec 01 16:00:49 CET 2017|Schedule assignableFrom for deletion.|0|0|1|415|3954|337|182|29|47|5|0|
6baf78835926c2f35942ec9446ffd800931dd2c7|Fri Dec 01 16:08:45 CET 2017|Change "late 2017" removal date to January 2018.|0|0|1|415|3954|337|182|31|61|8|0|
b2b942a96a5f05788cdafe40679d5f2db422e1a7|Fri Dec 01 16:22:44 CET 2017|Add @Nullable to MoreObjects.|0|0|1|415|3954|337|182|29|12|6|0|
d1971503d16f829eb98589924325efdbca629948|Fri Dec 01 17:44:00 CET 2017|Update oss-parent to version 9.|0|0|0|415|3954|337|182|31|2|6|0|
87dcd47417cb611d6f0c1f38faaf24477863c1ea|Fri Dec 01 18:51:06 CET 2017|Automated g4 rollback of changelist 177586281.|0|0|1|415|3954|337|182|30|54|6|0|
b1d9d99b61e4012578241246c184a9466d3cae58|Fri Dec 01 22:41:04 CET 2017|Make getUnchecked available under GWT.|0|0|1|415|3954|337|182|31|69|5|0|
d453cf14efb2c419527223cd3dbd0d72608712d1|Fri Dec 01 23:03:46 CET 2017|Remove maven-gpg-plugin configuration from Guava's pom.|0|0|0|415|3954|337|182|35|2|6|0|
de28fd831c629d77a9c1934703bd79b16098191f|Sat Dec 02 02:37:43 CET 2017|[FUTURES] Added Futures.whenAllComplete(..).run(..) to Futures.java|0|0|1|415|3955|337|182|34|65|6|0|
4dbf8572783d697ab9687383af308b200abd0ccb|Mon Dec 04 16:28:47 CET 2017|Remove public constructors from SimpleTimeLimiter.|0|0|1|415|3955|337|182|36|55|6|0|
8b4789c403e9f4e6554852228c5a701a098040ef|Mon Dec 04 17:05:53 CET 2017|I tripped and rewrote HashBiMap in the fully compact form, with no redundant code or storage, like I had assumed was too much work.|0|0|1|415|3955|337|182|35|51|6|0|
fd919e54a55ba169dc7d9f54b7b3485aa7fa0970|Mon Dec 04 17:51:35 CET 2017|google-java-format MOST OF THE THINGS.|0|0|392|415|3955|337|182|665|557|16|5|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.Maps$KeySet.forEach(java.util.function.Consumer<? super K>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.Maps$Values.forEach(java.util.function.Consumer<? super V>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.Maps$KeySet.forEach(java.util.function.Consumer<? super K>)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.Maps$Values.forEach(java.util.function.Consumer<? super V>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=java.lang.Iterable.forEach(java.util.function.Consumer<? super T>), newSymbol=com.google.common.collect.Multiset.forEach(java.util.function.Consumer<? super E>)]
908f2fede67ae5ff3234f6d56630f42c04ecfc6e|Mon Dec 04 18:22:58 CET 2017|Miscellanous followup to CL 177814345:|0|0|1|415|3955|337|182|96|57|20|0|
e8d744eb1399eae061b9b71abf860bfbaba6fb55|Mon Dec 04 21:45:42 CET 2017|Depend on checker-compat-qual instead of checker-qual.|0|0|0|415|3955|337|182|30|3|9|0|
2d0957c2bf1ee888f02119e84d824be8393c6145|Tue Dec 05 03:48:08 CET 2017|Recognize @NullableDecl in NullPointerTester and friends.|0|0|0|415|3955|337|182|35|2|6|0|
aff6fe1841510ed17f4bbf247c42882029eb3f10|Tue Dec 05 20:21:03 CET 2017|Deprecate ConcurrentHashMultiset#createEntrySet()|0|0|1|415|3955|337|183|32|56|7|0|
9df5d9e8fa136902dfb5b1aaf1da6768fc38e838|Thu Dec 07 04:32:18 CET 2017|[guava concurrent] Added "Submitted tasks have a happens-before order as defined in the Java Language Specification" to the documentation of newSequentialExecutor(). This popped up as a useful way to think about this Executor on a related design.|0|0|1|415|3955|337|183|34|58|7|0|
76f93b3f00ff2691f8f4909264aa21688f3a3d65|Thu Dec 07 18:37:55 CET 2017|Fix JSR305 links yet again.|0|0|0|415|3955|337|183|35|2|9|0|
4bd7d17d99316aecb4006873d8f8bb73fe636b78|Thu Dec 07 19:22:57 CET 2017|Make Javadoc output quieter.|0|0|0|415|3955|337|183|32|2|13|0|
6f22af40e1526b8c194e9e36d457bcd37680c6a3|Thu Dec 07 20:58:43 CET 2017|Migrate from jsr305 @Nullable to Checker Framework @NullableDecl. []|0|0|263|415|3955|337|183|245|483|19|0|
12606526ebd5e57798435f584b2db46db906458a|Thu Dec 07 21:35:19 CET 2017|Document why AbstractIteratorTest looks slow under GWT but really isn't.|0|0|0|415|3955|337|183|107|3|25|0|
c223b988e3ece8118f2247b34659e2ff97e5c7fa|Thu Dec 07 21:35:53 CET 2017|Run fewer iterations of testByteArrayRoundTrips.|0|0|0|415|3955|337|183|32|2|7|0|
5326555a3bf848b26058b17dfb6d66de4a5b542d|Thu Dec 07 21:36:21 CET 2017|Reduce iterations of testBuilder_bruteForce under GWT.|0|0|0|415|3955|337|183|33|2|6|0|
08983fb25b9f915d2ca51393697f34c9a3854bbd|Fri Dec 08 17:16:19 CET 2017|Document that it's safe to exclude Guava's annotation dependencies.|0|0|0|415|3955|337|183|30|2|6|0|
610ddd154554d5ca13b524216fef813803ddfcb4|Mon Dec 11 17:45:51 CET 2017|Partial g4 rollback of changelist 170507937.|0|0|1|415|3955|337|183|28|68|6|0|
f58203fbc4ba0597fdbc7cfebe7ff2c5ce6ec1d4|Mon Dec 11 23:29:15 CET 2017|Link to JDK Supplier, just as we link to JDK Function and Predicate.|0|0|3|415|3955|337|183|32|11|8|0|
1edf17d8c84a5c15372b82ab29bc7168d4289a96|Wed Dec 13 18:50:56 CET 2017|Add missing @Nullable to Shorts.ShortArrayAsList.|0|0|1|415|3955|337|183|29|28|8|0|
201af437f443f4d86689b670729adbd67925416c|Wed Dec 13 23:49:21 CET 2017|Add missing @NullableDecl to BaseEncoding.java|0|0|1|415|3955|337|183|31|23|7|0|
794a8ca432c6561ff2495f8155d8f900d79a37c3|Thu Dec 14 00:05:58 CET 2017|Add Uninterruptibles methods for Condition.|0|0|1|415|3956|337|183|34|54|8|0|
2f6e034d896fbd219f52fa47a8d5afd49cb0220c|Thu Dec 14 00:08:47 CET 2017|Switch from @Nullable to @NullableDecl.|0|0|1|415|3956|337|183|33|25|6|0|
207e0716eb9d2540c072d3003a643e80b75f8fc5|Thu Dec 14 15:53:59 CET 2017|Remove an unneeded dependency.|0|0|0|415|3956|337|183|33|2|8|0|
94a971941d12e063cad28b3fae1db6ba3b06fee1|Thu Dec 14 23:58:11 CET 2017|Explicitly document that RateLimiter is thread-safe now that we've removed @ThreadSafe.|0|0|1|415|3956|337|183|32|23|7|0|
c6a2cf04045b3b6852ecc925d0bfd76d77d8936b|Fri Dec 15 16:29:59 CET 2017|Add missing @NullableDecl to OrderedPermutationIterator.nextPermutation|0|0|1|415|3956|337|183|32|55|7|0|
f8818809918b91c07ed2559714ea72d081fbc985|Sat Dec 16 01:04:13 CET 2017|Avoid having ImmutableMultimap/ImmutableListMultimap depend on ImmutableSetMultimap due to serialization shenanigans.|0|0|2|415|3956|337|183|34|64|6|0|
d49a375f71427bf97eed9a31b575f62e24324e6d|Sat Dec 16 01:30:25 CET 2017|Make CompactHash data structures package-private in external Guava.  (Before we didn't expose them at all externally.  This is so they can be used in multimap guts in Android.)|4|0|0|415|3956|337|183|36|58|8|0|
9aaeb95faee253d0742003bab6f1365f27f6aba9|Mon Dec 18 21:21:02 CET 2017|Push down the implementation of ImmutableMultiset.SerializedForm, so ImmutableMultimap.keys() doesn't retain implementations of ImmutableMultiset it doesn't use.|0|0|3|415|3956|337|183|37|71|9|0|
d21ad7b1a035997fa000dedc7e60e4a434539362|Mon Dec 18 22:33:13 CET 2017|Don't bother sharing a superclass of ImmutableMultimap.values().iterator and ImmutableMultimap.entries().iterator.|0|0|1|415|3956|337|183|31|60|6|0|
d181e111ada75de243598c2522e725905adcdcc3|Tue Dec 19 01:43:47 CET 2017|Use maps directly in ImmutableMultimap.Builder, instead of delegating to a mutable multimap.|0|0|3|415|3956|337|183|33|66|6|0|
ba01ab2a8778af76c78a5c1e5bc29c56bbd38731|Tue Dec 19 02:57:12 CET 2017|Push view creation down to subtypes of AbstractMultimap, so ImmutableMap can strip them out.|0|0|6|415|3956|337|183|35|81|6|0|
b3b74c0ddbd8dbd9e4307661143de574adb3400f|Tue Dec 19 20:00:06 CET 2017|Add missing @NullableDecl on fields in google common base.|0|0|3|415|3956|337|183|38|59|8|0|
ccc239f85a4a0b3620148c54df1c55cb2db71d53|Tue Dec 19 20:22:51 CET 2017|Start some simple improvements to multimaps in code size and allocation count.|0|0|6|415|3956|337|183|33|66|8|0|
7a839f7c0827ee82d3b9781f6943465dd575c049|Tue Dec 19 22:10:32 CET 2017|Don't mention ImmutableSortedSet in Sets.unmodifiableNavigableSet.  That was causing many immutable collections to get retained by mutable multimap usages.|0|0|1|415|3956|337|183|37|65|7|0|
798774bf0ca9f5d641b949b041b601c92f784fde|Tue Dec 19 22:20:01 CET 2017|Use compact data structures in ImmutableMultimap builders.|0|0|3|415|3956|337|183|33|66|9|0|
e365f2f1393d41dcc38f4e4c25ed4cc518ee568f|Wed Dec 20 19:52:15 CET 2017|Add @since NEXT to FutureCombiner.run.|0|0|1|415|3956|337|183|35|65|8|0|
ce4bc9bc7b9ae10e2da1ba8c4ade01a69be6f608|Wed Dec 20 19:54:14 CET 2017|Add missing @NullableDecl on the fields "instance" in Suppliers.|0|0|1|415|3956|337|183|30|13|7|0|
01cfa0b47c2e57029f8d0f7772cdbbb843ec733f|Wed Dec 20 21:36:04 CET 2017|Add missing @Nullable annotations on the fields in the reflect package.|0|0|2|415|3956|337|183|32|69|8|0|
df3df9e2ef9bffe86eb7ac627e59d900cfd5788a|Wed Dec 20 22:19:47 CET 2017|Link to the things I wrote about our Javadoc link problems.|0|0|0|415|3956|337|183|31|2|6|0|
9acfe48a7801dff159080aef8503350efd69e448|Wed Dec 20 22:37:31 CET 2017|Don't use Iterables.transform in Maps.{key,value}Iterator.|0|0|1|415|3956|337|183|29|82|10|0|
a37ccd13af00ed9f938b6382125b38cc41eb58c0|Wed Dec 20 23:33:57 CET 2017|Add dummy test methods to Compact(Linked)HashSetTest so that the Maven test runner doesn't complain.|0|0|0|415|3956|337|183|36|2|12|0|
5cb62f8b84ec0aeec933b7da3250c341cbea7432|Wed Dec 20 23:41:31 CET 2017|Prepare for release 23.6.|0|0|3|415|3956|337|183|34|65|8|0|
079db3945c9c62d235aa788c268409e36fc8a478|Thu Dec 21 19:29:46 CET 2017|Add a recommendation to the Guava README that libraries using Guava use the Beta Checker.|0|0|0|415|3956|337|183|31|2|8|0|
04df3ed0e53ce52ceb172405696245943b98243d|Thu Dec 21 23:09:57 CET 2017|Link directly to instructions for repackaging Guava.|0|0|0|415|3956|337|183|29|2|9|0|
cabe970448982758adaa7850b71c95fb8611a20b|Thu Dec 21 23:44:51 CET 2017|{#id} doesn't work from the Github Wiki, I think, only from github.io sites (e.g., http://google.github.io/truth/faq#imports).|0|0|0|415|3956|337|183|29|2|8|0|
44dcaef1404c592c07bd7f09987adcb906b0c0f7|Fri Dec 22 00:18:01 CET 2017|Make Stopwatch.toString() work under j2cl, which checks casts more strictly than GWT.|0|0|0|415|3956|337|183|27|2|8|0|
b8e50369243a9ff4603c81328e0c1dc0d626db50|Fri Dec 22 00:23:58 CET 2017|Add missing nullness annotations to the fields in the concurrent package in guava.|0|0|6|415|3956|337|183|32|82|9|0|
2219b8ba2c584ecb73ef0f425e467a53925692aa|Fri Dec 22 17:21:29 CET 2017|Add @MonotonicNonNullDecl to UnmodifiableSortedMultiset.|0|0|1|415|3956|337|183|34|41|8|0|
7146b1752454252110bf0f8b414524102462d664|Fri Dec 22 17:23:23 CET 2017|Add missing nullness annotations on the fields in the hash package in guava.|0|0|1|415|3956|337|183|33|9|5|0|
ac0503b50d25eb3ec2c8e459d24d9664d70664ef|Fri Dec 22 17:27:10 CET 2017|Add missing nullness annotations on the fields in the base package in guava.|0|0|1|415|3956|337|183|32|56|8|0|
3cc099880dd4183e5fade1ea9524968b2e4e95b0|Fri Dec 22 17:27:57 CET 2017|Add mising nullness annotations to the fields in the io package in guava.|0|0|6|415|3956|337|183|36|28|11|0|
39f94051bb9f4ee355cbe0ecf706328a4518d574|Fri Dec 22 17:31:48 CET 2017|Add @MonotonicNonNullDecl to TreeRangeSet.|0|0|1|415|3956|337|183|33|57|9|0|
cc7db9c93ca1d900de2c8bd47d0091533c014966|Fri Dec 22 17:37:54 CET 2017|Add missing nullness annotation on the field in WellBehavedMap|0|0|1|415|3956|337|183|35|49|7|0|
96294be6f728d3d88a67cc125cca18e32cd99b2e|Fri Dec 22 21:41:39 CET 2017|Add missing nullable annotations on the fields in the cache package.|0|0|4|415|3956|337|183|33|102|8|0|
e3d3b2a2f40e675154b31f254dab75d0be483f32|Wed Dec 27 19:07:37 CET 2017|Push down logic of AbstractMapBasedMultimap.createAsMap into subtypes.|0|0|3|415|3956|337|183|33|73|7|0|
734578a386670aa812b5c2f76ad78a968cb7196a|Wed Dec 27 19:50:53 CET 2017|Push down logic of AbstractMapBasedMultimap.createKeySet into subtypes.|0|0|3|415|3956|337|183|37|74|6|0|
8912f0781a45c7313544fe7013ef8db94ee2c963|Wed Dec 27 20:01:36 CET 2017|Add nullness annotation to the filed "holder" in Streams.|0|0|1|415|3956|337|183|36|48|7|0|
d0383634dc3c6eb93e31797f13058c5eb331e3dd|Wed Dec 27 22:18:45 CET 2017|Push down AbstractMapBasedMultimap.wrapCollection logic into subtypes.|0|0|5|415|3956|337|183|34|71|7|0|
0f7dd9d15ce52b4a4064e6cdd9af3eba6c63992f|Wed Dec 27 22:27:32 CET 2017|Add nullness annotations on the field in Sets.java|0|0|1|415|3956|337|183|39|68|7|0|
699e66a65dfc803988ddb06998415cd80e9430cf|Wed Dec 27 22:32:03 CET 2017|Add @NullableDecl to the fields of TreeMultiset|0|0|1|415|3956|337|183|31|60|7|0|
289cff4981aebc8d84e890c18fe209a60305d26e|Wed Dec 27 22:44:46 CET 2017|Attempt to fix bugs where objects that are incompatible with eachother are tested for equality (generally: Lists and Sets, or Classes of incompatible types).|0|0|0|415|3956|337|183|35|2|7|0|
77859722f2ab83141b8392cc4ecf52cd4552e32e|Wed Dec 27 22:58:30 CET 2017|Add nullness annotations on the fields in NaturalOrdering.|0|0|1|415|3956|337|183|32|41|6|0|
63c0965408de1d39c3a336d2fe6cfb910dc7054b|Wed Dec 27 22:59:36 CET 2017|Add @NullableDecl on the field in TopKSelector.java|0|0|1|415|3956|337|183|32|43|6|0|
56b1cc77ee8f1005f2979bb603981adf5cc05f87|Wed Dec 27 23:00:32 CET 2017|Add @NullableDecl on the field in TreeBasedTable.|0|0|1|415|3956|337|183|33|55|9|0|
114d32094d3c956d7975cb7d3e43236351184ec4|Wed Dec 27 23:01:31 CET 2017|Add nullness annotations on the fields in Synchronized.java|0|0|1|415|3956|337|183|30|47|5|0|
5c9ed4923b21863a317ed971ba51247e8c8feba9|Wed Dec 27 23:06:48 CET 2017|Add nullness annotations on the fields in RegularImmutableMultiset.java|0|0|1|415|3956|337|183|34|57|7|0|
8721f2cfc5a55b7b1608d04d11e531ee72cbf216|Wed Dec 27 23:07:10 CET 2017|Add @Nullable on the field in Tables.java|0|0|1|415|3956|337|183|31|52|6|0|
5cd74d28a2994554e01cbc33501a13e3ffd09e04|Wed Dec 27 23:07:39 CET 2017|Add nullness annotations on the fields in StandardTable.java|0|0|1|415|3956|337|183|32|56|6|0|
51177f97bc5bb50e0242db164a267722be078c9e|Thu Dec 28 03:47:20 CET 2017|Add nullness annotations on the fields in Multisets.java|0|0|1|415|3956|337|183|32|59|6|0|
4351f43196b47d0b5acd86ba82b354ab103b3735|Thu Dec 28 03:47:31 CET 2017|Add nullness annotations on the field in Multimaps.java|0|0|1|415|3956|337|183|34|68|6|0|
472d252f684b5f09f21f701c95dbd627aef96b5d|Thu Dec 28 03:48:08 CET 2017|Add nullness annotations on the field in MinMaxPriorityQueue.|0|0|1|415|3956|337|183|31|45|5|0|
a84923fdb4def9b8c7fd0777d0b66954d91eb2db|Thu Dec 28 03:48:24 CET 2017|Add nullness annotations on the fields in Maps.java|0|0|1|415|3956|337|183|35|85|8|0|
239a56316a1089f52eb9466bf271c8a4fa6c1390|Thu Dec 28 03:48:47 CET 2017|Add nullness annotations on the fields in MapMaker.java|0|0|1|415|3956|337|183|32|55|11|0|
99730a15a616b841902ae58a55241e7e1392a80f|Thu Dec 28 03:51:59 CET 2017|Add nullness annotations on the fields in MapMakerInternalMap.java.|0|0|1|415|3956|337|183|31|65|5|0|
9f592b5eaf405c6e886465077755efe609bba1b8|Thu Dec 28 03:52:09 CET 2017|Add nullness annotations on the fields in Lists.java|0|0|1|415|3956|337|183|31|61|7|0|
defe4e880cb9c6e8c949ad86ef5fb3ae86b433d0|Thu Dec 28 18:36:01 CET 2017|Add nullness annotations on the fields in MapMakerInternalMap.java|0|0|1|415|3956|337|183|34|69|5|0|
2a045c839c0de9b72d746eed334a267e8879019c|Thu Dec 28 19:48:58 CET 2017|Add nullness annotations on the fields in LinkedListMultimap.java|0|0|1|415|3956|337|183|31|57|10|0|
3a93661aa078bf7e7ef000afb86fa4f528076d37|Thu Dec 28 23:07:12 CET 2017|Add nullness annotations on the fields in ImmutableTable.java|0|0|1|415|3956|337|183|34|57|5|0|
8c8d60c59121aadc8d2b04fa4f7a30363598f28b|Tue Jan 02 19:43:10 CET 2018|Eliminate the apparently unnecessary Multimaps.Keys.KeysEntrySet.|0|0|1|415|3956|337|183|31|65|6|0|
0587768e3e83429a74f2c9d2bda198e5052e8c04|Tue Jan 02 19:54:37 CET 2018|Add nullness annotations on the fields in AbstractBiMap.java|0|0|1|415|3956|337|183|35|53|6|0|
25b25fc244979651535dcc00cf79366bb6890621|Tue Jan 02 19:55:13 CET 2018|Add annotations on the fields in GeneralRange.java|0|0|1|415|3956|337|183|31|44|5|0|
232f23d1ecd87609577b821f9e75fb3726d756cd|Tue Jan 02 19:57:35 CET 2018|Add nullness annotations on the fields in ImmutableRangeSet.java|0|0|1|415|3956|337|183|35|62|6|0|
395e8d1de97e2de6498f3c277022f551328b9a41|Tue Jan 02 19:58:12 CET 2018|Add nullness annotations on the fields in ImmutableMap.java|0|0|1|415|3956|337|183|33|59|7|0|
dab6c597fce2e59f280642bfbe0044f83eb0947f|Tue Jan 02 20:02:10 CET 2018|Add nullness annotations on the fields in ImmutableEntry.java|0|0|1|415|3956|337|183|34|53|6|0|
b6492022b5122cf3f73820d1cc4ce78794558541|Tue Jan 02 21:15:57 CET 2018|Add nullness annotations on the fields in LinkedHashMultimap.java|0|0|1|415|3956|337|183|36|56|6|0|
6824c4d104836e6de387eecf9f3da87ecd57c0d7|Tue Jan 02 22:30:36 CET 2018|Add nullness annotations on the fields in Iterators.java|0|0|1|415|3956|337|183|31|57|11|0|
d40791fc6c13a8f99633de71c7fd8cb7269bcd04|Tue Jan 02 22:34:14 CET 2018|Push down implementation of Multiset.iterator() from AbstractMultiset.|0|0|5|415|3959|337|183|42|72|6|0|
a956b8d9045410e5f086b73ca444f170e264f04e|Tue Jan 02 23:00:10 CET 2018|Add nullness annotations on the fields in ImmutableMultimap.java|0|0|1|415|3959|337|183|38|67|9|0|
035ea9accf591ecbb5522add76a3c2e348837f69|Tue Jan 02 23:03:11 CET 2018|Add nullness annotations on the fields in ImmutableSetMultimap.java|0|0|1|415|3959|337|183|31|66|6|0|
72e9658a58bf55eeb6a5ee29b526bd7817614ab5|Tue Jan 02 23:10:35 CET 2018|Add nullness annotations on the fields in AbstractSortedMultiset.java|0|0|1|415|3959|337|183|36|49|6|0|
42529bc38bc611f555e21b0b78f7c005269f9786|Tue Jan 02 23:15:40 CET 2018|Add nullness annotations on the field in AbsatractIterator.java|0|0|1|415|3959|337|183|54|42|7|0|
fff4c80b01b5ff66dcb4e4141666b3b5faebc6b9|Tue Jan 02 23:16:24 CET 2018|Add nullness anntations on the field in AbstractMapBasedMultimap.java|0|0|1|415|3959|337|183|69|62|5|0|
f3fe08a62b99c75dfa107949af399888fb2fa944|Tue Jan 02 23:18:12 CET 2018|Add nullness annotations on the fields in Cut.java|0|0|1|415|3959|337|183|31|49|6|0|
169fba64b372659806c332dac64cf4e1fa179934|Tue Jan 02 23:25:54 CET 2018|Add nullness annotations on the field in CompactLinkedHashMap.java|0|0|1|415|3959|337|183|32|51|6|0|
18a736e95f4d73304dbef1b892d644482342558e|Tue Jan 02 23:29:12 CET 2018|Add nullness annotations on the fields in CompactLinkedHashSet.java|0|0|1|415|3959|337|183|31|41|13|0|
78cdd38f9731cb27a968fb333275f53c4e79d6ef|Tue Jan 02 23:39:06 CET 2018|Add nullness annotations on the field in AbstractSequentialIterator.java|0|0|1|415|3959|337|183|32|35|6|0|
3d99dd6a582d1c753a71a63b80b611a9a7a582da|Tue Jan 02 23:39:12 CET 2018|Add nullness annotations on the fields in AbstractMultimap.java|0|0|1|415|3959|337|183|33|53|6|0|
1e855072cf7c0a452eff3a31e3a555a0412713a8|Tue Jan 02 23:39:35 CET 2018|Add nullness annotations on the fields in CompactHashSet.java|0|0|1|415|3959|337|183|31|44|8|0|
342e38bc8402d81d536ae1e5461aa6b70f55a107|Tue Jan 02 23:39:44 CET 2018|Add nullness annotations on the fields in HashBiMap.java|0|0|1|415|3959|337|183|34|53|7|0|
5aee3ac7de63517156e3616cfc10322d192c47ec|Tue Jan 02 23:40:01 CET 2018|Add nullness annotations on the field in AbstractMapBasedMultiset.java|0|0|1|415|3959|337|183|30|53|6|0|
6419216ceb8d709486c5fe1957437d39b4d81a9f|Tue Jan 02 23:54:48 CET 2018|Add nullness annotations on the fields in CompactHashMap.java|0|0|1|415|3959|337|183|36|57|7|0|
a33e717b645e1d15357e7a8c4df37d798214d897|Wed Jan 03 00:12:13 CET 2018|Add nullness annotations on the fields in ArrayTable.java|0|0|1|415|3959|337|183|33|54|6|0|
ae70a5c3968a49cc122f106ac44e3a14c4896801|Wed Jan 03 15:47:37 CET 2018|Make "emptiesFirst(naturalOrder())" infer the type more reliably.|0|0|1|415|3959|337|183|33|42|6|2|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Comparators.emptiesFirst(java.util.Comparator<T>), newSymbol=com.google.common.collect.Comparators.emptiesFirst(java.util.Comparator<? super T>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Comparators.emptiesLast(java.util.Comparator<T>), newSymbol=com.google.common.collect.Comparators.emptiesLast(java.util.Comparator<? super T>)]
002f4bd6008580b4549a424cb279109f2ae4c13d|Wed Jan 03 20:58:50 CET 2018|Add nullness on the fields in AbstractBiMap.java|0|0|1|415|3959|337|183|31|54|9|0|
e6b9bb496259856213c30b3bcfc992e84564e4ff|Wed Jan 03 21:57:05 CET 2018|Fix bug where Multiset.elementSet.remove did not propagate changes to Multiset.size.|0|0|1|415|3959|337|183|37|69|8|0|
092114536b415f8aca3150387fc5c02ab258f22d|Wed Jan 03 22:42:11 CET 2018|Add nullness annotations on the field in AbstractMultiset.java|0|0|1|415|3959|337|183|38|46|8|0|
d6d92bdd072f0ef5b51eb00ecd078b8b438e20e5|Wed Jan 03 23:00:11 CET 2018|Add nullness annotations on the field in AbstractMapBasedMultiset.java|0|0|1|415|3959|337|183|36|62|9|0|
d07879cc68d09e76d832582e135692f2ad9becc0|Wed Jan 03 23:30:17 CET 2018|Add nullness annotations on the field in AbstractMapBasedMultimap.java|0|0|1|415|3959|337|183|36|63|7|0|
dc737c7a66ec753bf713ada5e24273ab045ba25b|Thu Jan 04 00:41:09 CET 2018|Add nullness annotations on the fields in AbstractTable.java|0|0|1|415|3959|337|183|80|45|10|0|
b2ab1f0a0bf3849085f55acbd01e3768f995aeb7|Fri Jan 05 18:21:25 CET 2018|Add nullness annotations on the fields in LinkedHashMultimap.java|0|0|1|415|3959|337|183|34|67|11|0|
e467252e0db647f1086188ab1093c6fe3294e2ab|Fri Jan 05 18:25:43 CET 2018|Add nullness annotations on the fields in TreeMultiset.java|0|0|1|415|3959|337|183|37|65|7|0|
0be2e30fc0911f2915e1f0ab623d1311ecaac175|Fri Jan 05 18:28:41 CET 2018|Add nullness annotations on the field in ConcurrentHashMultiset.java|0|0|1|415|3959|337|183|33|54|8|0|
a015b4a87fcadba6baf7f21fe8f728b2aeae2f1d|Fri Jan 05 18:31:44 CET 2018|Add nullness annotations on the fields in Maps.java|0|0|1|415|3959|337|183|34|88|13|0|
8025c8e4fdab14b930fffda9d47aa20fec98aa5f|Fri Jan 05 18:31:47 CET 2018|Add nullness annotations on the fields in StandardTable.java|0|0|1|415|3959|337|183|34|53|7|0|
a7ae471cf91038da4dd454a96b8867bad5ce3fca|Fri Jan 05 18:33:40 CET 2018|Add nullness annotations on the fields in DescendingMultiset.java|0|0|1|415|3959|337|183|31|43|9|0|
9f0f396d5800173b45677149180c87a9fb876049|Fri Jan 05 18:33:48 CET 2018|Add nullness annotations on the fields in ImmutableMultiset.java|0|0|1|415|3959|337|183|33|46|8|0|
13c2a0b00d4c354dc9406f0d0601bb7aad44e2c7|Fri Jan 05 18:34:33 CET 2018|Add nullness annotations on the fields in MinMaxPriorityQueue.java|0|0|1|415|3959|337|183|33|48|8|0|
08e19cbd533582acfcd6c274146707e89004819e|Fri Jan 05 18:35:41 CET 2018|Add nullness annotations on the fields in AbstractScheduledService.java|0|0|1|415|3959|337|183|33|63|9|0|
2ad712b3109854cc45aede386a0d6205930795f5|Fri Jan 05 18:37:37 CET 2018|Add nullness annotations on the fields in AggregateFuture.java|0|0|1|415|3959|337|183|29|63|6|0|
419467f34db1a7b57dccd7c225381c1e068c157a|Fri Jan 05 18:38:43 CET 2018|Add nullness annotations on the fields in TreeBasedTable.java|0|0|1|415|3959|337|183|32|57|9|0|
992116b28a806a1655a3849b4584eb265d6c2c96|Fri Jan 05 18:43:33 CET 2018|Add nullness annotations on the field in LinkedListMultimap.java|0|0|1|415|3959|337|183|33|62|7|0|
10ccb819ae4946fe6143590e3fedaea60eaf223f|Mon Jan 08 21:38:07 CET 2018|Let our internal Android test runner run AbstractPackageSanityTestsTest's nested test class directly.|0|0|0|415|3959|337|183|33|2|9|0|
078b85f0c64040c337f297e7e99187f642a92d88|Mon Jan 08 22:31:25 CET 2018|Overhaul Android {Hash,LinkedHash}Multiset to operate much more directly on ObjectCountHashMap, eliminating many unnecessary classes, allocations, and even calls to hashCode on the elements.|0|0|9|415|3960|337|183|42|96|11|0|
c0c117a04ab47f2fb380311efec97a7d9851cd6e|Tue Jan 09 17:48:21 CET 2018|Fix some simple cases of stack overflow in AbstractFuture.toString()|0|0|1|415|3960|337|183|41|62|7|0|
d2dad01718097b54703159bd703ddaf43479b1d3|Tue Jan 09 20:49:55 CET 2018|Annotate all public AbstractTester subclasses with @Ignore.|0|0|0|415|3960|337|183|120|2|11|0|
c911eb8cb4b010a1973640b2399206e9ac36de3e|Wed Jan 10 19:30:39 CET 2018|Update Public Suffix data.|0|0|1|415|3960|337|183|46|50|8|0|
b007d6db4ab71c5fc94623cac6eb8a90e227ff3a|Wed Jan 10 21:47:14 CET 2018|Make checkedMultiply available under GWT.|0|0|1|415|3960|337|183|33|23|10|0|
7462c09319af3e1972ef6739b612800d417aec08|Wed Jan 10 22:53:15 CET 2018|Improve handling of Function argument so that it shows up in toString() while the future is running|0|0|1|415|3960|337|183|41|64|7|0|
d788bc15f0721b94f6f79f0a9063247083745a27|Thu Jan 11 00:51:10 CET 2018|common.graph: add incidentEdges() method to Graph/ValueGraph.|0|0|4|415|3962|337|183|41|67|8|2|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph.incidentEdges(N)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.incidentEdges(N)]
7da42d206b81c8fe184f73a9314fd8ffcf565560|Sat Jan 13 01:00:17 CET 2018|Add MediaType.withParameters(String attribute, Iterable<String> values)|0|0|1|415|3963|337|183|34|65|9|0|
a43b4aa7f43c4fad61ca20c3c6744a6f4f1b68ed|Sat Jan 13 01:46:03 CET 2018|Fix REE handling in SerializingExecutor.|0|0|1|415|3963|337|183|32|59|10|0|
d2d9a2947260a9e90189c66bcaeb67f0a49fcbfc|Tue Jan 16 19:15:48 CET 2018|Avoid loading some javax.annotation classes|0|0|0|415|3963|337|183|33|2|8|0|
ce73003d8420a091fd36ca2c7c23deb6437e4fe1|Tue Jan 16 21:11:23 CET 2018|Code cleanup.|0|0|7|415|3963|337|183|35|82|6|0|
8afcda2d3cdfcf92d4d19862073b8cdf0f159f2a|Wed Jan 17 00:27:16 CET 2018|Suppress warnings from existing nested futures.|0|0|0|415|3963|337|183|36|2|8|0|
d71d86f6513e8a96e5d9860df0592dead3587d61|Wed Jan 17 15:28:20 CET 2018|Remove org.apache.maven.plugins, which is the default:|0|0|0|415|3963|337|183|34|2|6|0|
b0a6cfeb6d88710ff4ca1e3d277ff6b815fb66bf|Wed Jan 17 16:05:56 CET 2018|Update maven-javadoc-plugin to 3.0.0.|0|0|0|415|3963|337|183|30|2|8|0|
8eb3ea467668f63a78f03527adf7053d6502434d|Wed Jan 17 18:41:16 CET 2018|Fix tests that assume Class.getClassLoader() returns a URLClassLoader so that they can call getURLs() to instead parse the "java.class.path" system property.|0|0|0|415|3963|337|183|30|2|5|0|
1881ceab1265aa32c39c09a6f38392772bab52e5|Wed Jan 17 19:46:49 CET 2018|Add allocation measurements for basic immutable collection operations.|0|0|2|415|3963|337|183|32|54|8|0|
831db2b231dbe0b970ffb37f7fed96ea16d60967|Wed Jan 17 23:46:45 CET 2018|Improve allocation behavior of ImmutableMultiset.Builder.addAll(Multiset).|0|0|0|415|3963|337|183|35|2|9|0|
57787964acb81ea339d70cc7478af59e9f9ba70a|Thu Jan 18 00:29:45 CET 2018|Include method name and parameters in the message of the ArithmeticException during overflows.|0|0|3|415|3963|337|183|37|26|9|0|
f7d5b0f6de5568c1901b5fb0fd442330518535c9|Thu Jan 18 15:57:16 CET 2018|Remove AbstractMultiset's default O(n) (or worse) implementations of size(), count(), and clear().|0|0|5|415|3964|337|183|38|74|18|0|
8be5ace4b008c0076badb1e3955ebd411111792a|Thu Jan 18 19:51:43 CET 2018|*Graph.java: add @since NEXT to incidentEdges(), and retire the use of @inheritDoc in favor of just copying the documentation over wholesale.  (This preserves the @throws tags in the subinterfaces.)|0|0|3|415|3964|337|183|39|14|11|0|
393066e5b5d1e34f2b8b7cce778d45a12dbe4c66|Thu Jan 18 20:14:00 CET 2018|Adding [HTTP2-Settings] HTTP header.|0|0|1|415|3964|338|183|34|6|7|0|
c8cca4a31d615444b6644fcfeb095d860254f56d|Thu Jan 18 21:39:01 CET 2018|Add implementation for EnumMultiset.forEachEntry.|0|0|1|415|3965|338|183|32|60|9|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.Multiset.forEachEntry(java.util.function.ObjIntConsumer<? super E>), newSymbol=com.google.common.collect.EnumMultiset.forEachEntry(java.util.function.ObjIntConsumer<? super E>)]
39ec61e6e98065d14e12cda3bf543e7a295fbf51|Thu Jan 18 22:55:27 CET 2018|Add even more toString details to Futures.|0|0|5|415|3965|338|183|37|65|9|0|
c046982d128519c5da68327b32eaa91f072c8c7e|Fri Jan 19 00:04:14 CET 2018|Add efficient TreeMultiset.forEachEntry.|0|0|1|415|3966|338|183|37|58|12|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.Multiset.forEachEntry(java.util.function.ObjIntConsumer<? super E>), newSymbol=com.google.common.collect.TreeMultiset.forEachEntry(java.util.function.ObjIntConsumer<? super E>)]
5b39c8b9fe6f52ded7edf4be8812d7a62eeeb6fa|Fri Jan 19 21:44:04 CET 2018|Improve allocation behavior of Multiset copying and addAll implementations in both Guava versions.|0|0|2|415|3966|338|183|37|68|8|0|
7b65f8eb78c2dd31ff6f4b4bd564645b343b69fc|Sat Jan 20 03:32:02 CET 2018|Clarify purpose of CacheBuilder.newBuilder's function signature.|0|0|1|415|3966|338|183|32|69|8|0|
f91ef6ca6dd95bd3806c8b573f54cd429abc5857|Mon Jan 22 22:33:59 CET 2018|Remove a couple of APIs scheduled for removal in January 2018.|0|1|5|414|3960|338|180|37|89|7|3|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.collect.BinaryTreeTraverser, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.MoreExecutors.sequentialExecutor(java.util.concurrent.Executor), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.dereference(com.google.common.util.concurrent.ListenableFuture<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>), newSymbol=]
41fa39fa7279c8fc94c7c3bb0367e2a5068d78c7|Tue Jan 23 08:35:15 CET 2018|Remove Graphs.equivalent() methods. Please use graphA.equals(graphB), or Objects.equals(graphA, graphB) instead.|0|0|1|414|3957|338|177|43|63|5|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.equivalent(com.google.common.graph.Graph<? extends java.lang.Object>,com.google.common.graph.Graph<? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.equivalent(com.google.common.graph.Network<? extends java.lang.Object,? extends java.lang.Object>,com.google.common.graph.Network<? extends java.lang.Object,? extends java.lang.Object>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.Graphs.equivalent(com.google.common.graph.ValueGraph<? extends java.lang.Object,? extends java.lang.Object>,com.google.common.graph.ValueGraph<? extends java.lang.Object,? extends java.lang.Object>), newSymbol=]
d57a40e546cfe6daa8cdfe3fb9c5c8dafb446227|Tue Jan 23 19:23:14 CET 2018|Delete deprecated Predicates.assignableFrom(Class). Please use Predicates.subtypeOf(Class) instead.|0|0|1|414|3956|338|176|33|55|9|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Predicates.assignableFrom(java.lang.Class<? extends java.lang.Object>), newSymbol=]
bf1931b9d9a68e3ef7c3c1ba1c5377aaac06bb9d|Wed Jan 24 17:51:57 CET 2018|Stop using `forward.new InverseEntrySet()` because javac9 generates Objects.requireNonNull() calls for it.|0|0|0|414|3956|338|176|36|3|12|0|
9f0269fd0a43458850b5d3989bf5033d35d8679f|Wed Jan 24 20:35:04 CET 2018|Restrict length of varargs array in immutable collection factory methods|0|0|5|414|3956|338|176|39|66|8|0|
b928d40eb637706755def56c8e93ba859271e66e|Fri Jan 26 22:33:03 CET 2018|"Fix" Types.toString doc for arrays.|0|0|1|414|3956|338|176|34|56|8|0|
11e5f8ebc8508d8313bde7a421846747ce324034|Mon Jan 29 22:33:23 CET 2018|Mark HashFunction @Immutable.|1|0|12|414|3956|338|176|39|33|10|0|
abd0906f6ed288671b75aa6f828a6ba904fe4477|Wed Jan 31 23:15:11 CET 2018|Prepare for release 24.0.|0|0|5|414|3956|338|176|36|78|8|0|
49f562c03c92ce7111f456876ca3ee34faf3d8c1|Thu Feb 01 00:35:13 CET 2018|Replace @link reference to an old, removed API with @code.|0|0|1|414|3956|338|176|32|71|8|0|
49454c4afb0c681bb3df519bc9635170f8be82c7|Thu Feb 01 01:12:07 CET 2018|Work around breakage in which release builds run maven-javadoc-plugin 2.7 in child poms, even though pluginManagement tells them to use 3.0.0.|0|0|0|414|3956|338|176|33|2|8|0|
06395ae25fc0756503b0b4550009c66f7a354688|Fri Feb 02 20:48:39 CET 2018|In Java 8 branch, fall back to j.u.HashMap based implementation in ImmutableMap if hash flooding appears probable.  (Partially motivated by external feature requests, partially by []|1|0|3|414|3956|338|176|37|68|7|0|
42361d3784e15efde9975340f411a28ffda57279|Mon Feb 05 20:20:04 CET 2018|Add meaningful null check messages to ImmutableTable.|0|0|1|414|3956|338|176|39|74|10|0|
198c384ccdb14af182fea9b484963ba6c249fb7d|Mon Feb 05 22:04:35 CET 2018|Remove incorrect Javadoc.|0|0|0|414|3956|338|176|35|2|8|0|
594e3b73fe99b66110920c5fd7f2a6ddb95f2e6d|Tue Feb 06 17:44:22 CET 2018|Hide class used from Google-internal test.|0|0|0|414|3956|338|176|36|2|15|0|
a132ce0d0fb0307cfa0ae0b8f51b5b37dc6f4729|Thu Feb 08 19:43:54 CET 2018|In Java 8 branch, fall back to j.u.HashMap based implementation in ImmutableBiMap if hash flooding appears probable.  (Partially motivated by external feature requests, partially by []|1|0|2|414|3956|338|176|56|87|10|0|
7abf5990b29f19a7e8c458b63af73c88523e1820|Thu Feb 08 20:41:03 CET 2018|Group overloads together.|0|0|50|414|3956|338|176|88|273|16|0|
26b09c1fd30c23bc0e48701ff7131f2de1e5fe35|Thu Feb 08 21:28:41 CET 2018|Adds the @Immutable annotation to InternetDomainName.java.|0|0|1|414|3956|338|176|71|50|14|0|
a98632ee83a6c4c93f4b31820437f68ddde041dd|Fri Feb 09 19:12:02 CET 2018|In Java 8 branch, fall back to an ImmutableSet backed by j.u.HashSet (and its binary tree magic) if apparent hash flooding is detected.|2|0|9|414|3956|338|176|36|85|8|0|
afe6ff88023693d9c825b8d619dab56276fa8885|Fri Feb 09 21:05:27 CET 2018|Add hash flooding protection to ImmutableMultiset, falling back to a JDK HashMap backed implementation when probable flooding is detected.|1|0|2|414|3956|338|176|35|65|10|0|
c92686d75ac754065f298da2e342f6bc70ee8bdc|Mon Feb 12 23:12:35 CET 2018|Add hash flooding protection to HashBiMap.|0|0|2|414|3956|338|176|39|62|5|0|
34ee6ec7a731ff2d4b23fedd3a10a768c2049507|Mon Feb 12 23:59:00 CET 2018|Add linear 16 audio type. We are using L16 audio in our project ([] and need this field defined to match our mime type.|0|0|1|414|3956|339|176|35|65|8|0|
94ff327176a098541d432a029e354a5828e6de5a|Tue Feb 13 02:36:40 CET 2018|Migrate uses of the double-brace initialization pattern to factory methods or builders|0|0|0|414|3956|339|176|32|2|6|0|
17ccf5c69c533ac694823829d0fa8a8a1b57f03e|Tue Feb 13 19:18:57 CET 2018|Fix @since tag from CL 185440742.|0|0|1|414|3956|339|176|38|69|7|0|
0e6b381b484774adb0466106dade91341fda11b9|Tue Feb 13 23:43:02 CET 2018|Document that the compact collections aren't universal wins.|0|0|4|414|3956|339|176|34|59|11|0|
f21f6f623fb6b64c4eefd1cf4f4fdae709f983a9|Wed Feb 14 21:09:18 CET 2018|Update Public Suffix data.|0|0|1|414|3956|339|176|41|44|6|0|
06b08063e2dbf3386a12e5bb9be9cec6432994ae|Fri Feb 16 23:13:05 CET 2018|Add @Override to some serialization methods.|0|0|2|414|3956|339|176|33|65|10|0|
e64553ed6ca419993abfae2f0b474cbe6cf7df81|Fri Feb 16 23:55:46 CET 2018|Hide Downloading/Downloaded lines from output.|0|0|0|414|3956|339|176|40|2|11|0|
9ebd95a9a84a21e96bf2f077f4cc93efc14e9b86|Tue Feb 20 16:50:31 CET 2018|Always expect a suppressing Closer.|0|0|0|414|3956|339|176|44|2|7|0|
45b0489d4ae7f6e71e4359eae48cb15d112d9317|Mon Feb 26 21:56:28 CET 2018|Automated g4 rollback of changelist 185433235.|0|0|2|414|3956|339|176|35|60|11|0|
ea66419b6aa52678816df77caa304e617255cca5|Wed Feb 28 04:13:13 CET 2018|Correct a typo in ImmutableBiMapTest.|0|0|0|414|3956|339|176|35|2|5|0|
cbc53084465d3a95cdb8cbd79da21624e3086d5d|Fri Mar 02 22:09:40 CET 2018|Traverser.java: add support for multiple start nodes.|0|0|1|414|3959|339|176|33|53|8|3|BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.Traverser, newSymbol=com.google.common.graph.Traverser.depthFirstPreOrder(java.lang.Iterable<? extends N>)],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.Traverser, newSymbol=com.google.common.graph.Traverser.breadthFirst(java.lang.Iterable<? extends N>)],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.Traverser, newSymbol=com.google.common.graph.Traverser.depthFirstPostOrder(java.lang.Iterable<? extends N>)]
d710bd82209651d6525fef7c917ae8534327e779|Sat Mar 03 15:50:34 CET 2018|Fix List<Foo<?>>.isSubtypeOf(List<Foo<?>>).|0|0|2|414|3959|339|176|36|66|6|0|
e47fc1636b1cab1bbe0652545cc3ea7f6d62d7b9|Sun Mar 04 12:45:59 CET 2018|Add isSubtypeOf() "pre"-condition check before getSubtype() returns.|0|0|1|414|3959|339|176|35|64|7|0|
7f1defafe4155a4e14a9805cb6c14fa406b390f3|Wed Mar 07 02:58:43 CET 2018|Change all instances of encoded.subSequence() to use a simple start index offset, which reduces the Java memory footprint for TrieParser by at at least 130 MBs. This is because the original call to subSequence() would generate a new String on the heap for each call, where as just using an offset avoids the need to generate a new String all together.|0|0|1|414|3959|339|176|33|46|10|0|
9b9a17535673a34a2f6aa770ca97a75bafc7a251|Tue Mar 13 14:53:56 CET 2018|Add X-Download-Options header (IE8 header to control the "Open" button on the download dialog).|0|0|1|414|3959|340|176|31|6|7|0|
8ec13b0cde7aaec648a429a2318ad626794ab79f|Wed Mar 14 17:14:40 CET 2018|Add @since NEXT to new methods on Traverser.|0|0|1|414|3959|340|176|28|49|6|0|
444ff98e688b384e73d7b599b4168fed8003eb3f|Wed Mar 14 21:53:27 CET 2018|Prepare for release 24.1.|0|0|3|414|3959|340|176|32|83|6|0|
e24fddc5fff7fd36d33ea38737b6606a7e476845|Fri Mar 16 00:21:58 CET 2018|In Ascii, define a constant for the character case bitmask, and use it in place of 0x20 and 0x5f throughout the class.|0|0|1|414|3959|340|176|35|13|8|0|
6cd80a9443ab2d8f15c8bff60b289e3b5d94a9d0|Mon Mar 19 17:00:57 CET 2018|Make ByteSource.read() use sizeIfKnown(), if available, to help avoid extra byte array allocations/copies.|0|0|4|414|3959|340|176|36|75|7|0|
e50ce7e7ed79fbce1901081838c8e0f9269d4128|Tue Mar 20 19:21:54 CET 2018|Stop using ByteArrayOutputStream in ByteStreams.toByteArray methods.|0|0|1|414|3959|340|176|33|17|9|0|
a2ce5d38d717f45c60901e618f6c3e0c0fa9a9a0|Tue Mar 20 20:13:28 CET 2018|Set serialVersionUID in TypeToken.java|0|0|1|414|3959|340|176|31|64|6|0|
eff86554100e0e39c1f2f148d21dfb9626d2a52b|Tue Mar 20 21:23:22 CET 2018|Automated rollback of e50ce7e7ed79fbce1901081838c8e0f9269d4128|0|0|1|414|3959|340|176|31|18|6|0|
4f27e367ebf5a3e6dc5bcb922c0512eeebe3431d|Wed Mar 21 19:35:58 CET 2018|HashBiMap: unnecessary call to rehashIfNecessary|0|0|1|414|3959|340|176|29|50|10|0|
d0d5bd73d86efa5f3e4989ca589c9c7fc0b232b2|Thu Mar 22 03:57:06 CET 2018|Stop using ByteArrayOutputStream in ByteStreams.toByteArray methods.|0|0|1|414|3959|340|176|31|18|6|0|
38d2f3296b722e7d84a01d31037e31fade13951c|Fri Mar 23 22:53:26 CET 2018|Supersource nullToEmpty and emptyToNull in Strings.java to native JS.|0|0|2|414|3959|340|176|32|13|6|0|
ddaf710bedddf89bdd85c4f3cc5c767a03fc5e5e|Mon Mar 26 21:25:14 CEST 2018|Open source refactorings directory.  This is knowingly very simple, without yet documentation or many refactorings; it's a prototype first.|0|0|0|414|3959|340|176|31|2|6|0|
21f4dd72d436d62a07a89f6f818370c0574854c4|Mon Mar 26 22:19:14 CEST 2018|Ignore FinalizableReferenceQueueClassLoaderUnloadingTest in JDK 9.|0|0|1|414|3959|340|176|29|10|6|0|
a12ef6b46b26fe178021c099e3db6a8a99f5174e|Tue Mar 27 23:30:56 CEST 2018|Fix https://github.com/google/guava/issues/3081.|0|0|1|414|3959|340|176|31|94|10|0|
9bf6d959014abb08f6d42902c9ce252e16ac0ea4|Fri Mar 30 23:26:56 CEST 2018|Add java.time.Duration overloads to CacheBuilder:   cacheBuilder.expireAfterAccess(Duration)   cacheBuilder.expireAfterWrite(Duration)   cacheBuilder.refreshAfterWrite(Duration)|0|0|1|414|3962|340|176|32|64|6|0|
9e4e0e1dbb2bdcea79c7fd2470b2ccefbdaff2ac|Mon Apr 02 17:46:08 CEST 2018|remove maven-badges.herokuapp.com from readme|0|0|0|414|3962|340|176|30|2|7|0|
3ad8bffdc73cf604f8d32da450b2cfabe9785c0e|Wed Apr 04 21:21:06 CEST 2018|Slightly discourage the use of the <long, TimeUnit> overloads on CacheBuilder.|0|0|1|414|3962|340|176|29|66|8|0|
a652fa0d6354c78334f5ef9833ad1082333975c0|Thu Apr 05 03:00:24 CEST 2018|Fix tests that failed if we couldn't recursively delete securely by using Jimfs and just getting rid of the whole file system each time.|0|0|0|414|3962|340|176|28|2|6|0|
6cfbe16f0db316ec93698cff2e8bbcdf9b295214|Thu Apr 05 22:31:47 CEST 2018|Fix typo in Future javadoc.|0|0|0|414|3962|340|176|29|2|9|0|
ed5e8f7e10512f61d5ef947245f754cb72f821af|Wed Apr 11 02:17:02 CEST 2018|Remove pre-mature optimization of storing a total bit size for ConcatenatedHashFunction.|0|0|1|414|3962|340|176|29|23|8|0|
0dbd46b13a8df13998f69caa368359c878f36b67|Wed Apr 11 17:09:16 CEST 2018|Update Public Suffix data.|0|0|1|414|3962|340|176|28|38|6|0|
c84ffbfa6a3ccc941592d796b0ab35e282a661e9|Mon Apr 16 17:28:07 CEST 2018|Fix toString of NonSerializableMemoizingSupplier|0|0|1|414|3962|340|176|31|11|8|0|
b1bc2300943df6f67149b8f44a435162e1d8a73f|Mon Apr 16 22:09:04 CEST 2018|Use Splitter instead of String.split, in InternetDomainName.|0|0|1|414|3962|340|176|32|51|10|0|
bf37f69a19bd78118b4601ee5b840cd1ffcaf508|Mon Apr 16 23:11:06 CEST 2018|Use Splitter for IPv6, too. This eliminates usage of java.util.regex from this file (which is used via String.split, otherwise).|0|0|1|414|3962|340|176|39|67|10|0|
49a77de5fcf6f859e3a98df0fa1e91d7868cde39|Tue Apr 17 18:13:57 CEST 2018|Use Diamond.|0|0|0|414|3962|340|176|33|2|8|0|
2d3f1be46eebf47d1b7188cdd33d31882fee7235|Tue Apr 17 18:45:41 CEST 2018|Automated rollback of a12ef6b46b26fe178021c099e3db6a8a99f5174e.|0|0|1|414|3962|340|176|31|86|6|0|
acf29b389bc9ff8701f69d05b30e9d899bc10e35|Wed Apr 18 18:46:22 CEST 2018|Don't enable use of Unsafe.getLong() on aarch64 devices.|0|0|1|414|3962|340|176|31|20|10|0|
d61375f7260e138e393822c2d1bda42a88419fc9|Thu Apr 19 20:17:10 CEST 2018|Adding a new (initially internal, pending API Review) static factory to Striped.|0|0|1|414|3962|340|176|32|63|6|0|
e214f901e84ca370466c1393c7917f38059bde53|Fri Apr 20 21:19:40 CEST 2018|Make SuppliersTest.testMemoizeExceptionThrown() actually memoize the suppliers before testing them.|0|0|0|414|3962|340|176|32|2|13|0|
3383db7fdb965ec9bb61a4cfbe8acbca72d31b1b|Fri Apr 20 22:28:45 CEST 2018|Use https for API docs|0|0|0|414|3962|340|176|32|3|12|0|
5d8209c28d83a7bc6e3153970efe4b795e8ad88d|Mon Apr 23 21:04:06 CEST 2018|Strip @DoNotMock annotations|0|0|2|414|3962|340|176|33|68|10|0|
f89ece5721b2f637fe754937ff1f3c86d80bb196|Tue Apr 24 20:05:03 CEST 2018|Avoid presizing arrays.|0|0|1|414|3962|340|176|33|19|6|0|
a0edc852497f111222d18b65b4ee634466561c0d|Tue Apr 24 20:06:58 CEST 2018|Re-fix https://github.com/google/guava/issues/3081.|0|0|1|414|3962|340|176|33|98|13|0|
62b40aa4f321e23ed14052ef441389256fb4ef5e|Wed Apr 25 17:47:04 CEST 2018|Add Annotations to a gwt.xml file.|0|0|0|414|3962|340|176|33|2|6|0|
ce6d93c20e143db79cc6b5c42109ca702e3acd55|Wed Apr 25 21:02:04 CEST 2018|Remove Files.fileTreeTraverser().|0|0|2|414|3960|340|174|31|70|6|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.MoreFiles.directoryTreeTraverser(), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.io.Files.fileTreeTraverser(), newSymbol=]
f56117eeee4e4e1a8bce464f3f6455f8a9a9cab0|Wed Apr 25 21:11:30 CEST 2018|Push back some Guava removal dates to July 2018.|0|0|2|414|3960|340|174|33|72|7|0|
2cac83e70d77f0fa9b2352fe5ac994280fc3b028|Wed Apr 25 23:40:19 CEST 2018|Prepare for release 25.0.|0|0|1|414|3960|340|174|34|67|6|0|
0c0c70d5b95a4d1054c4fd89e40c1aade7282cae|Thu Apr 26 23:12:07 CEST 2018|Use @SafeVarargs annotation for Sets.cartesianProduct().|0|0|1|414|3960|340|174|29|67|15|0|
436d4769bde6cf1928ebef10c8fc8d99b9747c31|Thu May 03 18:29:59 CEST 2018|Fix a few formatting nits|0|0|6|414|3960|340|174|36|100|6|0|
1477e566467de19399cf468062ffb8f893b0a46c|Thu May 03 22:40:13 CEST 2018|Bump jsr305 version.|0|0|0|414|3960|340|174|27|2|6|0|
71b04c4271b9f280a23dd9a20a6f658a57cbc935|Mon May 07 18:19:07 CEST 2018|Replace http://errorprone.info with https://errorprone.info since that site serves from https now|0|0|0|414|3960|340|174|29|2|9|0|
d94eb93fbce557cebb780b8ceff6dbb8806072b7|Mon May 07 20:37:34 CEST 2018|Support type annotations in NullPointerTester|0|0|2|414|3961|340|174|31|52|6|0|
8845872de78d51bafdf76062c3e32a4c7c3291c6|Mon May 07 23:32:54 CEST 2018|Continue type annotation preparations in NullPointerTester|0|0|1|414|3962|340|174|32|55|6|1|BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.reflect.Invokable, newSymbol=com.google.common.reflect.Invokable.getAnnotatedReturnType()]
d9113d51bf9f5537b4121807b2ed9862b80a6ad3|Tue May 08 19:23:12 CEST 2018|Add Token Binding HTTP header names to header libraries.|0|0|1|414|3962|343|174|34|7|7|0|
0a2258e6691a22aa7ff2604871b520d44bbac01f|Tue May 08 19:48:52 CEST 2018|Use the type annotation version of @Nullable in the Java 8 branch|0|0|269|414|3962|343|174|135|549|19|0|
07b4f00bc2cb5fcab1b96df8d186e499703eb50d|Wed May 09 18:50:19 CEST 2018|Fix a documentation error.|0|0|1|414|3962|343|174|82|58|14|0|
4038405e4e0ed27cd5ab0e14f387f7fc14b5b713|Thu May 10 19:39:09 CEST 2018|Update Public Suffix data.|0|0|1|414|3962|343|174|33|42|7|0|
9b4a9dbe4cc44abf5ef8dd915acfffcf00f7c28c|Mon May 14 19:45:40 CEST 2018|Move type annotations immediately before the type they apply to|0|0|90|414|3962|343|174|70|340|13|0|
7fe1702aeacff37ad4a7aca5d82ac9958e46e639|Tue May 15 01:27:18 CEST 2018|Introduce Strings.lenientFormat(), copied from Preconditions.format(). Rewrote documentation but the method body remains unchanged.|0|0|1|414|3963|343|174|56|20|12|0|
b44fc6fdc31c6ae16a0d5f8208c2085894a57eb9|Tue May 15 17:30:04 CEST 2018|Branch eventbus, net, and escape for Java 7|0|0|0|414|3963|343|174|52|3|12|0|
31aac2196e229ffa03ac8663347582e74f6bf900|Tue May 15 19:41:31 CEST 2018|Swap Preconditions and Verify over to Strings.lenientFormat.|0|0|2|414|3963|343|174|35|15|7|0|
79acc6486355638865da909c372591eae0840e28|Tue May 15 22:58:33 CEST 2018|Continue migrating to type annotations for @Nullable|0|0|9|414|3963|343|174|46|157|6|0|
f972c21554d99610ed2560fa915d16d6231dd450|Wed May 16 19:25:05 CEST 2018|Remove usages of CaliperMain from java_benchmarks targets since the deps for java_benchmarks don't need to (and shouldn't) include CaliperMain anymore.|0|0|0|414|3963|343|174|30|2|21|0|
49a1df62b9a8a5e96f4f32a6bad4afd9cd871b56|Thu May 17 01:07:35 CEST 2018|Added @DoNotCall to Futures methods which do not take an executor|0|0|1|414|3963|343|174|34|81|9|0|
53c84f944b3d71ec40299ecffbc6b1ec1df7750f|Fri May 18 19:04:08 CEST 2018|Fix a typo. Change "if the this" to "if this".|0|0|1|414|3963|343|174|35|71|10|0|
aaf89e0093c7422fcbfaa5e4b948634aa6263726|Fri May 18 21:35:50 CEST 2018|Migrate ClassSanityTester to type annotations|0|0|0|414|3963|343|174|41|2|7|0|
821082833783f76a1b384924f904ecfd0281ae63|Fri May 18 23:34:01 CEST 2018|Fixes deadlocks in LocalCache.asMap().compute() if the Function throws|0|0|1|414|3963|343|174|32|94|6|0|
46f4886a7898a29e2156dca8701368a9aa72c11e|Sat May 19 02:12:39 CEST 2018|Migrate from @MonotonicNonNullDecl to @MonotonicNonNull|0|0|44|414|3963|343|174|47|270|12|0|
9876a8897ef89ea1368beaaf32d926dcc5e5efc6|Sat May 19 02:35:52 CEST 2018|Remove now-unused dependency on the Checker Framework compatibility annotations|0|0|0|414|3963|343|174|44|3|7|0|
b3a48123f3d7eb9dd9b08ae7354a925ba2138103|Tue May 22 19:53:18 CEST 2018|Suppress exceptions raised from argument's toString methods during lenient formatting.|0|0|1|414|3963|343|174|30|13|9|0|
11327783b1317d5c73b98c0ee27a7f2b556af9d6|Tue May 22 20:02:33 CEST 2018|Put @NullableDecl last in lists of annotations|0|0|2|414|3963|343|174|33|59|6|0|
69912164fdbaaa8d14befa73451e7d6f4c5bc587|Tue May 22 22:55:51 CEST 2018|Add missing test case for emptiesLast.|0|0|0|414|3963|343|174|39|2|8|0|
57e9707542f5dc59beeee0f21a0f2e718f791c3a|Wed May 23 00:11:30 CEST 2018|Automated g4 rollback of changelist 197588491.|0|0|1|414|3963|343|174|33|12|8|0|
824f80f850edec1be70465ac3e40621a9b67f892|Wed May 23 17:55:30 CEST 2018|Prepare for release 25.1.|0|0|3|414|3963|343|174|33|56|6|0|
0f49eb5dab9479c930cfa9f06970c6c63a6b1849|Thu May 24 22:53:36 CEST 2018|Use api instead of compile for Android|0|0|0|414|3963|343|174|31|2|8|0|
4adedb7fd5293e7825853333a54af9cd0badbdb2|Fri May 25 17:15:27 CEST 2018|Add duration info to checkArugment() call in Suppliers.memoizeWithExpiration()|0|0|1|414|3963|343|174|30|12|6|0|
fffd6a33652bdf7c7b3782feebbf73b1edd75dac|Fri May 25 21:32:08 CEST 2018|Some changes to the Guava README.|0|0|0|414|3963|343|174|30|2|11|0|
e04eb5948b7cdfa401a190bb3fb071a59dfbe5bc|Fri May 25 23:22:57 CEST 2018|Fix https://github.com/google/guava/issues/3156 by implementing a proper CollectSpliterators.flatMapTo{Int,Long,Double}.|0|0|2|414|3963|343|174|31|51|7|0|
c30df914935008e5a6357e99aa368fb982c74039|Sat May 26 00:30:08 CEST 2018|Automated rollback of 9e6e1d02faa4ff07f2c5746a1902ae36cd54335b|0|0|2|414|3963|343|174|29|51|6|0|
73bb080d06c7174d2049831ffb4869e3e0c01f33|Tue May 29 18:08:24 CEST 2018|fix a grammar mistake|0|0|1|414|3963|343|174|34|17|6|0|
8287cdfa317ea97a7a5e8e1a0f5a786ae09d2eac|Tue May 29 22:39:23 CEST 2018|In open-source Guava, completely skip trying to discover pluggable PatternCompiler implementations.|0|0|1|414|3963|343|174|28|12|6|0|
01181d7da17e763ec06a344514ed441caa3f9198|Wed May 30 00:32:50 CEST 2018|Suppress exceptions raised from argument's toString methods during lenient formatting - take 2.|0|0|1|414|3963|343|174|34|12|6|0|
3ac6f729191e4d91f5cf61c806f075211058109c|Wed May 30 15:57:56 CEST 2018|Create an htmlescapers target for people who want to avoid the bulk of i18n identifiers and ICU4J.|0|0|0|414|3963|343|174|33|2|8|0|
15764d7f37160d81c3489c860c868c3e92d6c637|Wed May 30 23:19:31 CEST 2018|Fix b/80241237 to correctly *not* change segment weight, nor report an eviction, when a compute() call does not change the present value.|0|0|1|414|3963|343|174|32|88|6|0|
dd71527fc004c5dc5451a7256097d46ba0abb4f5|Fri Jun 01 18:25:55 CEST 2018|Add a direct dependency from guava-gwt to checker-qual.|0|0|0|414|3963|343|174|30|2|6|0|
c2f8967beb5a6feb9b104739d453dc116982a76a|Fri Jun 01 18:42:56 CEST 2018|Fix mangled Javadocs.|0|0|1|414|3963|343|174|30|12|7|0|
0cd4e9faa1360da4a343f84cb275d6eda0c5e732|Fri Jun 08 21:41:13 CEST 2018|Fix nonpublic identifiers and documentation that use "whitelist" or "blacklist" to use less problematic terms.|0|0|1|414|3963|343|174|35|16|6|0|
438d6d9d34b5005e4d034709531bc08fefdc7ff8|Wed Jun 13 16:17:25 CEST 2018|Test setValue(null) (both success and failure cases).|0|0|0|414|3963|343|174|38|3|9|0|
39fda5d5fd2558b4770cf6c626ab5464515ad31f|Sat Jun 16 21:40:20 CEST 2018|Update Guava to use Truth 0.41.|0|0|0|414|3963|343|174|40|3|12|0|
9466b62f54a359d335a998fd549be4d0a6252197|Mon Jun 18 22:18:31 CEST 2018|Removed special-casing UndeclaredThrowableException in Futures.transform()|0|0|1|414|3963|343|174|36|60|7|0|
7a6a9718a7e321eea44ee6e65091a7f66e352805|Tue Jun 19 03:41:40 CEST 2018|Bump Checker Framework annotations version to 2.5.2.|0|0|0|414|3963|343|174|33|2|6|0|
0530d7aaefebeff5795974bdffa9d7e7371286a2|Tue Jun 19 21:06:29 CEST 2018|Remove GWT emulation of UndeclaredThrowableException.|0|0|0|414|3963|343|174|30|2|11|0|
86eabf1fe6991cf7fbc65980dac59a604303b362|Fri Jun 22 19:21:43 CEST 2018|Omit some unnecessary parens|0|0|9|414|3963|343|174|38|93|7|0|
fea88fe49bb4ff6f83685e2370cdc5901db35946|Mon Jun 25 17:14:16 CEST 2018|Add MediaType for "application/hal+json".|0|0|1|414|3963|344|174|39|65|8|0|
dc53de741f94c3e6a92bc9680c5cdfb49b6c94a8|Tue Jun 26 17:25:20 CEST 2018|Internally, use PatternCompiler from Doubles.tryParse.|0|0|4|414|3963|344|174|32|20|6|0|
625d180373ed2c96e48570526e92e9dcf1f8ce9f|Tue Jun 26 18:21:11 CEST 2018|Partial automated g4 rollback of changelist 202132002.|0|0|1|414|3963|344|174|32|21|12|0|
06aad4c2ba82ebc161a7984bec25f1770b23c42c|Tue Jun 26 20:33:23 CEST 2018|Make Guava tests pass under Java 10.|0|0|0|414|3963|344|174|33|2|5|0|
c0b2828d23e9e83130042d5f12b2d705dc846d67|Tue Jun 26 20:45:22 CEST 2018|add 'oraclejdk10' to Travis build matrix|0|0|0|414|3963|344|174|30|2|9|0|
1b94234578817593da7275fc4afaa88a996355f9|Wed Jun 27 00:12:08 CEST 2018|Implement Lists.cartesianProduct.indexOf efficiently.|0|0|1|414|3963|344|174|30|51|8|0|
fa63efcc6d36955f1385acfa26f35c4914d7b9ac|Wed Jun 27 22:59:17 CEST 2018|Remove incorrect Javadoc in Multimaps.|0|0|1|414|3963|344|174|36|71|6|0|
644e9182d9929ade7252719fb6b685efbbe84acb|Thu Jun 28 19:22:35 CEST 2018|Remove @WeakOuter from ImmutableMultiset.ElementSet. @WeakOuter is useful for inner classes but not for static nested classes.|0|0|1|414|3963|344|174|33|57|12|0|
5af518fc0d123d05e8f377e60cc0c08f36cf90e1|Thu Jun 28 21:10:05 CEST 2018|Avoid using inotify, which is causing problem under JDK10.|0|0|0|414|3963|344|174|32|2|6|0|
c9add81c4a0139747b23e8bf7054abbfb30b72e9|Thu Jun 28 22:41:33 CEST 2018|Change Files.map(File, MapMode) to get the size of the file from the channel just before mapping rather than before opening the file.|0|0|1|414|3963|344|174|31|68|5|1|BC[kind=METHOD_NO_LONGER_THROWS_CHECKED_EXCEPTION, impactedSymbol=com.google.common.io.Files.map(java.io.File,java.nio.channels.FileChannel$MapMode,long), newSymbol=com.google.common.io.Files.map(java.io.File,java.nio.channels.FileChannel$MapMode,long)]
986a3a3ef168dc0edcd135d2a2a8808af248cd7c|Wed Jul 04 14:29:26 CEST 2018|Adds constants for Sec-Metadata header.|0|0|1|414|3963|345|174|35|7|8|0|
f85390d6c89cfc6990763569f0a80ad9c678db76|Fri Jul 06 18:39:08 CEST 2018|Update Public Suffix data.|0|0|1|414|3963|345|174|31|41|8|0|
7975a2f0e678a8e57aacbfd79338b9a5f9481207|Mon Jul 09 18:11:45 CEST 2018|Add @Nullable to AbstractSequentialIterator's computeNext() method return value so that [] doesn't complain|0|0|1|414|3963|345|174|33|58|15|0|
08adcecc14943e90cb5c0fe05748c5ba9fa9e065|Thu Jul 12 17:08:25 CEST 2018|Internally, use PatternCompiler from Doubles.tryParse.|0|0|4|414|3963|345|174|38|27|7|0|
34c1616279efe08089960aafd3df486cf8a04820|Fri Jul 13 21:18:05 CEST 2018|Change HostAndPort equals() and hashCode() to stop depending on whether brackets were included|0|0|1|414|3963|345|174|35|16|6|0|
148688a62d696f9dd0d84205b8df77e5723bb92f|Wed Jul 18 16:42:00 CEST 2018|Fix initialCapacity calculation for a maximum size over Integer.MAX_VALUE.|0|0|1|414|3963|345|174|34|104|7|0|
87d87f5cac5a540d46a6382683722ead7b72d1b3|Fri Jul 20 18:25:33 CEST 2018|Remove Futures methods that implicitly use directExecutor().|0|0|1|414|3956|345|167|37|74|6|7|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.addCallback(com.google.common.util.concurrent.ListenableFuture<V>,com.google.common.util.concurrent.FutureCallback<? super V>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures$FutureCombiner.call(java.util.concurrent.Callable<C>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.catching(com.google.common.util.concurrent.ListenableFuture<? extends V>,java.lang.Class<X>,com.google.common.base.Function<? super X,? extends V>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.catchingAsync(com.google.common.util.concurrent.ListenableFuture<? extends V>,java.lang.Class<X>,com.google.common.util.concurrent.AsyncFunction<? super X,? extends V>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.transformAsync(com.google.common.util.concurrent.ListenableFuture<I>,com.google.common.util.concurrent.AsyncFunction<? super I,? extends O>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.transform(com.google.common.util.concurrent.ListenableFuture<I>,com.google.common.base.Function<? super I,? extends O>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures$FutureCombiner.callAsync(com.google.common.util.concurrent.AsyncCallable<C>), newSymbol=]
591825f50eb7382a85abcc5a69fb77f5f3c843cc|Mon Jul 23 22:06:16 CEST 2018|Reduce ProGuard retained code from usages of Multimaps.synchronizedXYZMultimap.|1|0|2|414|3956|345|167|39|73|10|0|
f1249c4f0449260ff123e8da6b921a37fc058147|Tue Jul 24 21:39:42 CEST 2018|Remove deprecated CharMatcher constants.|0|0|1|414|3956|331|153|35|16|8|14|BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.DIGIT, newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.INVISIBLE, newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.JAVA_DIGIT, newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.ASCII, newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.JAVA_UPPER_CASE, newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.BREAKING_WHITESPACE, newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.NONE, newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.JAVA_ISO_CONTROL, newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.SINGLE_WIDTH, newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.WHITESPACE, newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.JAVA_LETTER_OR_DIGIT, newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.JAVA_LETTER, newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.ANY, newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.base.CharMatcher.JAVA_LOWER_CASE, newSymbol=]
8d1fbc96eaf281d78360c72fa17274c4c2227ebe|Mon Jul 30 19:50:11 CEST 2018|Move ExecutionSequencer into guava as @Beta.|1|0|0|415|3959|331|153|32|63|7|0|
fdc342613ba3f2e94b23e4912671af4744fbf8cc|Mon Jul 30 20:47:51 CEST 2018|Automated rollback of c7aa4671cd70853515171333c823e3cdece92918.|0|1|0|414|3956|331|153|30|4|12|1|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.ExecutionSequencer, newSymbol=]
13e39cd167a49aad525be462e61d9e5f2b1781ec|Tue Jul 31 04:07:24 CEST 2018|Change to some TODOs caused by some internal change.|0|0|3|414|3956|331|153|32|18|10|0|
59d7140f925abaaa54ddec1d004e8b60f3e618cc|Tue Jul 31 21:22:31 CEST 2018|Roll-forward addition of ExecutionSequencer.|1|0|0|415|3959|331|153|34|60|14|0|
de09995c54989834289e37e0949ae0f713154415|Tue Jul 31 22:35:03 CEST 2018|Push back removals again.|0|0|5|415|3959|331|153|32|76|6|0|
a4cb541a19fec23dfdb675cea0cab498d167f548|Wed Aug 01 20:08:01 CEST 2018|Isolate AbstractFuture from dependency on Ascii.|0|0|1|415|3959|331|153|34|61|6|0|
59ca61a255620bf7e5f55f991c74e8b61e99d765|Wed Aug 01 23:17:18 CEST 2018|Prepare for release 26.0.|0|0|3|415|3959|331|153|32|79|10|0|
0c5bb7afe4482cda6ef25fc87e3558897b0caafe|Thu Aug 02 21:37:12 CEST 2018|Add a note about the relative ordering of afterDone and listener execution|0|0|1|415|3959|331|153|32|60|5|0|
129b7f26367c6188c56d69f799cd96787f981866|Thu Aug 02 22:27:15 CEST 2018|Insulate AbstractFuture from Futures.java/MoreExecutors.java dependency|1|0|2|415|3959|331|153|31|66|6|0|
78d793e6de1500f35bdf43cd1031a024071b334b|Fri Aug 03 00:14:11 CEST 2018|Remove reference to Strings.isNullOrEmpty from AbstractFuture.|0|0|1|415|3959|331|153|32|59|5|0|
e4474ffb3c8f3568c4197886da98678714132d2a|Fri Aug 03 17:41:28 CEST 2018|Introduce Trusted interface.|0|0|1|415|3959|331|153|28|56|6|0|
45ca38358cac4368877650e591daf9650f5eaae1|Fri Aug 03 23:41:39 CEST 2018|Automated rollback of 227d67fc6600a6041a3a3881f1e1b6652d3cf75c|0|0|1|415|3959|331|153|30|66|6|0|
bd3a4719b8844b3d17b5314f774c866b18ab27a6|Mon Aug 06 21:29:23 CEST 2018|Automated rollback of 45ca38358cac4368877650e591daf9650f5eaae1|0|0|1|415|3959|331|153|28|57|6|0|
f29f5d3343a4963c6aeeadc1a185b9f308621bb1|Tue Aug 07 02:13:34 CEST 2018|Optimize ImmutableCollection.toArray(T[]) as per https://shipilev.net/blog/2016/arrays-wisdom-ancients/, the key goal being to avoid the necessity of zeroing a newly created array where possible.|0|0|6|415|3959|331|153|34|67|6|0|
0b3eb0f4e727f35b4e959f857d2bde8dcfd8ca40|Tue Aug 07 07:34:31 CEST 2018|Adds WASM as a supported Media type to Google Java utilities. Adds WASM support to the StaticFileAction in devserver (so that it is served with the correct Content Type).|0|0|1|415|3959|332|153|32|64|7|0|
27bfe412b83bc64b7f4c0fa7fa21087c1e3320ad|Tue Aug 07 20:06:26 CEST 2018|Allow Service to transition from STARTING to TERMINATED. Add a new "doCancelStart" method that is called when a service is stopped while still starting. This gives implementations a chance to abort code which may be preventing the service from starting.|0|0|2|415|3960|332|153|34|62|10|0|
bd8019f69d284249d34a894ef9e44e4407f2544a|Wed Aug 08 18:31:31 CEST 2018|Fix javadoc typo in LinkedListMultimap|0|0|1|415|3960|332|153|34|76|11|0|
f7af0da04b1132af12f1734849f79db0fc0a6334|Wed Aug 08 22:25:55 CEST 2018|Add callable's toString to null failure message.|0|0|4|415|3960|332|153|41|72|8|0|
2fc1819f6fe2fb6169fe3f377db93ca4a425053a|Thu Aug 09 02:01:58 CEST 2018|Enhance toString() for futures returned from ExecutionSequencer.|0|0|1|415|3960|332|153|36|58|8|0|
f264e9671e33744b4b7733cf3e4c8eb95be51999|Thu Aug 09 04:44:50 CEST 2018|Make ordering of Primitives#all{Wrapper,Primitive}Types deterministic|0|0|1|415|3960|332|153|33|19|6|0|
a9dd7098f741d652fe2daf8193b831737dc36aa0|Fri Aug 10 22:32:15 CEST 2018|Add a gap method to Range which computes the range that lies between two ranges. This operation is particularly useful as a replacement for Joda Time's Interval.gap when migrating to Java Time which has no Interval class.|0|0|1|415|3961|332|153|34|49|7|0|
4675e306f7ebae38ff9baa835b7c00b38a3d9f9b|Mon Aug 13 18:06:28 CEST 2018|Use gradle formatting|0|0|0|415|3961|332|153|33|2|5|0|
829db489bd07e2d2dfc41bf2781cb7cfb80b517f|Mon Aug 13 20:35:36 CEST 2018|Add missing @since tag.|0|0|1|415|3961|332|153|39|22|6|0|
e662c3db029d6a6f58052b6d88436ecb89cda348|Mon Aug 13 22:58:24 CEST 2018|Add information about thread wakeup or scheduling delays to TimeoutExceptions thrown from guava futures.|0|0|2|415|3961|332|153|35|59|6|0|
1cd76fd2f926a0791f1debd2817ce0d3a9409b45|Tue Aug 14 00:42:40 CEST 2018|Remove unnecessary local.|0|0|1|415|3961|332|153|33|63|14|0|
59f3b8a6e148527b8c9539396c9441e3bc2bd0a2|Tue Aug 14 19:08:05 CEST 2018|Make delayed get() test more resilient to thread scheduling delays.|0|0|0|415|3961|332|153|32|2|7|0|
0f8d3608af401d9090642da2b88f9a8b5999ff1f|Tue Aug 14 19:46:57 CEST 2018|Switch FluentFuture and AbstractFuture in inheritance chain|0|0|8|415|3961|332|153|37|67|9|8|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.FluentFuture.transform(com.google.common.base.Function<? super V,T>,java.util.concurrent.Executor), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractFuture, newSymbol=com.google.common.util.concurrent.AbstractFuture],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.FluentFuture.withTimeout(long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.FluentFuture.transformAsync(com.google.common.util.concurrent.AsyncFunction<? super V,T>,java.util.concurrent.Executor), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.FluentFuture.addCallback(com.google.common.util.concurrent.FutureCallback<? super V>,java.util.concurrent.Executor), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.FluentFuture.catching(java.lang.Class<X>,com.google.common.base.Function<? super X,? extends V>,java.util.concurrent.Executor), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.FluentFuture.from(com.google.common.util.concurrent.ListenableFuture<V>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.FluentFuture.catchingAsync(java.lang.Class<X>,com.google.common.util.concurrent.AsyncFunction<? super X,? extends V>,java.util.concurrent.Executor), newSymbol=]
0bcf0c13bc74b06c0810c2e9eb19bae9c8ea9c00|Thu Aug 16 19:57:14 CEST 2018|Don't allocate a CancellationException if cancellation causes are not enabled.|0|0|1|415|3961|332|153|36|58|7|0|
a922dfe7222b2d5b5f3215be98f91777f0532a60|Fri Aug 17 17:53:49 CEST 2018|Add Javadoc for MediaType.KML+KMZ+MBOX|0|0|1|415|3961|332|153|32|63|9|0|
99ada5a3181f509981f6dd350e72ec8327162810|Mon Aug 20 20:05:42 CEST 2018|[guava concurrent] Inlined getDone() and getUninterruptibly() to break the source dependency from AbstractFuture to other classes in /util/concurrent.|0|0|1|415|3961|332|153|32|65|8|0|
1e072a7922a0b3f7b45b9f53405a233834175177|Wed Aug 22 21:37:12 CEST 2018|Fix parameter name in Javadoc|0|0|1|415|3961|332|153|34|54|10|0|
1b12d0f95a409144e78122ffa57a8bcb8daa4d21|Fri Aug 24 18:37:15 CEST 2018|Add more validation to AbstractFuture when cancellation causes are enabled, so that it matches the behavior when they are disabled.|0|0|1|415|3961|332|153|38|68|8|0|
879482a0df4791ad29e44dbec4e6924edc8383ba|Fri Aug 24 19:19:13 CEST 2018|Suppress warnings on thread suspending test.|0|0|0|415|3961|332|153|35|2|7|0|
40fad58d8489390ec66fa80fe2abfd3934cf2071|Fri Aug 24 21:31:20 CEST 2018|Suppress violation of MissingEqualsCall for EqualsTesterTest, given it quite legitimately fails to call #testEquals.|0|0|0|415|3961|332|153|31|2|8|0|
ec2dedebfa359991cbcc8750dc62003be63ec6d3|Fri Aug 24 22:02:16 CEST 2018|Automated rollback of changelist f380040f0041f94c83d24623c10f32de58d436c4|0|0|1|415|3961|332|153|32|64|7|0|
83ea00f0b4a5a866981f6dbf847b611bb5b7770d|Mon Aug 27 18:23:11 CEST 2018|Update Public Suffix data.|0|0|1|415|3961|332|153|32|39|7|0|
326562f3d22bf0864a1f8264f1720c5a96984243|Fri Aug 31 19:53:15 CEST 2018|Add more validation to AbstractFuture when cancellation causes are enabled, so that it matches the behavior when they are disabled.|0|0|1|415|3961|332|153|33|62|8|0|
a149cd450b1ea347fac0a0beaee4ab1e82c15429|Fri Aug 31 23:17:15 CEST 2018|Bail early without a CancellationException in AbstractTransformFuture.|0|0|1|415|3961|332|153|32|55|8|0|
3e4d052920b6c090aa544affda1533e049871082|Tue Sep 04 22:18:24 CEST 2018|Use TrustedFuture where possible|0|0|1|415|3961|332|153|32|60|11|0|
d3abde3e788c5d52502f716be6871d3e18453e88|Fri Sep 07 20:58:09 CEST 2018|Include original input value and RoundingMode in the failure message for MathPreconditions.checkInRange().|0|0|2|415|3961|332|153|31|19|8|0|
b03e282f246794f3e3cc6dcce6543e449049ce47|Fri Sep 07 21:23:19 CEST 2018|Short circuit in withTimeout if the input future is already done.|0|0|1|415|3961|332|153|32|65|9|0|
b611718c8b4334795dffcc7f043bef49a435506b|Fri Sep 07 23:34:20 CEST 2018|Disambiguate Collection.toArray() call so that the test passes in Java 11 where a new toArray method was added.|0|0|0|415|3961|332|153|33|2|6|0|
eb3a9f447715b05c18179bf6313dfd28851bb56e|Mon Sep 10 18:38:10 CEST 2018|Fix a bug in AbstractFuture.addListener where we failed to follow the contract precisely.|0|0|1|415|3961|332|153|31|59|7|0|
b62d52926b904a8def90fd427acad53d79fa0e9f|Tue Sep 11 23:04:55 CEST 2018|Introduce listenablefuture and failureaccess artifacts, plus InternalFutureFailureAccess.|0|0|2|415|3962|332|153|38|70|8|0|
e2cf262d89c65a701de72df20c38808640e7e86c|Wed Sep 12 20:04:40 CEST 2018|Use newGuard() to make example in Monitor class javadoc more concise.|0|0|1|415|3962|332|153|30|22|9|0|
88e6fb86f5317bdfd2e8a78899334e9f0ba16987|Wed Sep 12 23:13:10 CEST 2018|Remove trustedGetException()|0|0|2|415|3962|332|153|34|75|9|0|
ec9b5d56271cd3ce1bf145fccbea77c8c3b8aa5c|Tue Sep 18 22:26:35 CEST 2018|Make FutureCombiner recommend Futures.getDone().|0|0|1|415|3962|332|153|33|65|9|0|
95521f78d442084e2d9ebd6e2d096a834caccdad|Wed Sep 19 02:44:32 CEST 2018|Update truth, animal sniffer, error prone annotations, and JUnit|0|0|0|415|3962|332|153|33|2|11|0|
0743f9aeb96cccff4b79b2c9935ea1c58e0ccf19|Wed Sep 19 02:50:38 CEST 2018|Remove unnecessary mocking of a data structure.|0|0|0|415|3962|332|153|31|2|7|0|
8dbe749b9e78a0caa4da949048c82dc50eb8da8d|Wed Sep 19 11:47:42 CEST 2018|Properly handle input cancellations in Futures.catching[Async]|0|0|1|415|3962|332|153|32|56|7|0|
0d34c125acd88f9bb36bd334117c1cb01a3a44b9|Mon Sep 24 21:27:53 CEST 2018|Check input collection size in PowerSet before actually copying it's content.|0|0|1|415|3962|332|153|36|69|7|0|
3bab1fbeb2f0bb7705df398cac5254838ce7c825|Tue Sep 25 17:31:46 CEST 2018|Cast null to make sure to select the right Collection.toArray(). In JDK 11 there's a new default method that takes a different parameter.|0|0|0|415|3962|332|153|36|2|7|0|
3912da1f70af002c4a4a0ea738c56212f724cbac|Tue Sep 25 18:26:35 CEST 2018|Add JDK11 to the Travis config.|0|0|0|415|3962|332|153|30|2|13|0|
e074cf1a77bf2657037953834031b0e73b964495|Wed Sep 26 00:09:12 CEST 2018|Add support for Early-Data HTTP header.|0|0|1|415|3962|333|153|31|7|8|0|
581ba1436ebaa54a7f5d0f1db8cc4da0ca72127e|Fri Sep 28 21:17:32 CEST 2018|Clarify a comment in Futures.NonCancellationPropagatingFuture.|0|0|1|415|3962|333|153|44|68|7|0|
94863a0c8957efba6b443c2b316a0d8b46b8790c|Wed Oct 10 21:25:51 CEST 2018|Update Public Suffix data.|0|0|1|415|3962|333|153|34|41|7|0|
f6d4417f0f9271e49eb3db82d0e1d348469f61e8|Mon Oct 15 22:37:03 CEST 2018|Fix ForwardingMapTest in JDK11.|0|0|0|415|3962|333|153|31|2|7|0|
e72e35d0662069b6ce3009904011d0545b3e12f2|Mon Oct 15 23:00:37 CEST 2018|Fix ThrowablesTest for JDK 11.|0|0|0|415|3962|333|153|32|2|10|0|
a5cafa67da64a12444037bd4f4c30c39a0c184aa|Wed Oct 17 20:33:53 CEST 2018|Enable GoodTime API checker for Guava|0|0|13|415|3962|333|153|39|140|9|0|
d6a12e433fbe6baceec4317c92923a3ab866f661|Wed Oct 17 22:47:33 CEST 2018|Push back deprecated API removals again.|0|0|5|415|3962|333|153|51|79|7|0|
9704538cd9aa8e4b783b824773cfc76290f572c2|Wed Oct 17 23:24:51 CEST 2018|Prepare for release 27.0.|0|0|4|415|3962|333|153|37|85|7|0|
968f5c9cb9b8398b9c61def6b3cdc1c39fc92424|Thu Oct 18 17:35:24 CEST 2018|Enable GoodTime API checker for guava-testlib.|0|0|0|415|3962|333|153|32|2|7|0|
74034a9d8b62ee3590d1c153772f8a462b459cd5|Thu Oct 18 21:16:36 CEST 2018|Remove oraclejdk10 from Travis build.|0|0|0|415|3962|333|153|30|2|10|0|
292118d2480374d0e43c4eab366788d69d0311db|Thu Oct 18 22:32:32 CEST 2018|Mention Guava's new dependency in documentation.|0|0|0|415|3962|333|153|30|2|7|0|
473f8d27b3f95b7ddbfc76677992ae6c22ba6836|Thu Oct 18 23:07:52 CEST 2018|Enable goodtime-api for Guava (with some exceptions).|0|0|6|415|3962|333|153|33|76|7|0|
cceb25923a827b293dc848caac4d4887e6c506bf|Mon Oct 22 19:04:06 CEST 2018|*Builder.java: add @param documentation for the node/value/edge types that clarifies their behavior.|0|0|3|415|3962|333|153|34|20|7|0|
64276db0c49df56a609374d4617af88653c24e2b|Mon Oct 22 19:08:04 CEST 2018|Suppress warnings in classes that implement equals() without also implementing hashCode().|0|0|0|415|3962|333|153|33|2|6|0|
af3ee1c5986005e4fdeec6e3430d8d63316bee6b|Thu Oct 25 20:48:10 CEST 2018|common.graph: adding new EndpointPair-accepting overloads.|0|0|19|415|3982|333|153|46|76|10|24|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableValueGraph, newSymbol=com.google.common.graph.MutableValueGraph.removeEdge(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableValueGraph, newSymbol=com.google.common.graph.ValueGraph.edgeValue(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network.edgeConnecting(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=com.google.common.graph.MutableGraph.removeEdge(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph.edgeValue(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.hasEdgeConnecting(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableValueGraph, newSymbol=com.google.common.graph.ValueGraph.incidentEdges(N)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=com.google.common.graph.Graph.incidentEdges(N)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph.hasEdgeConnecting(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network.edgesConnecting(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableValueGraph, newSymbol=com.google.common.graph.MutableValueGraph.putEdgeValue(com.google.common.graph.EndpointPair<N>,V)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network.edgeConnectingOrNull(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.Network.edgeConnecting(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.Network.hasEdgeConnecting(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.Network.edgesConnecting(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.Network.edgeConnectingOrNull(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Network, newSymbol=com.google.common.graph.Network.hasEdgeConnecting(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph.edgeValueOrDefault(com.google.common.graph.EndpointPair<N>,V)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableValueGraph, newSymbol=com.google.common.graph.ValueGraph.edgeValueOrDefault(com.google.common.graph.EndpointPair<N>,V)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=com.google.common.graph.Graph.hasEdgeConnecting(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableValueGraph, newSymbol=com.google.common.graph.ValueGraph.hasEdgeConnecting(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=com.google.common.graph.MutableGraph.putEdge(com.google.common.graph.EndpointPair<N>)],BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.graph.AbstractValueGraph, newSymbol=com.google.common.graph.ValueGraph.edgeValueOrDefault(com.google.common.graph.EndpointPair<N>,V)],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableNetwork, newSymbol=com.google.common.graph.MutableNetwork.addEdge(com.google.common.graph.EndpointPair<N>,E)]
333bf9db1a6ebe6ccebbae5a9e3442492344269f|Fri Oct 26 17:32:15 CEST 2018|Document behavioral caveat on Splitter#withKeyValueSeparator(Splitter): the options in Splitter don't change anything about the behavior of the keyValueSplitter.|0|0|1|415|3982|333|153|37|15|9|0|
addd09ad01d7dbe7d5a72a1c5b949c3e08571910|Fri Oct 26 20:17:47 CEST 2018|Ensure InterruptibleTask.interruptTask works even when Thread.interrupt() throws or takes a long time|0|0|1|415|3982|333|153|33|12|8|0|
a980611b96ea86b67ccb836687a50d2a9cecf98d|Fri Oct 26 20:22:49 CEST 2018|Fix the issue with classes that should only be included in the failureaccess artifact being included in the main Guava jar.|0|0|0|415|3982|333|153|31|2|7|0|
5d3295aea4a7bb305a809bf7d6027cceccd8b123|Mon Oct 29 15:00:32 CET 2018|Document that Chars.lexicographicalOrdering is different than Alphabetical ordering, which is more appropriate for user text.|0|0|1|415|3982|333|153|31|24|9|0|
218bfd46bd4bc63b24af9640fb9e11d75c12b8ab|Tue Oct 30 18:16:34 CET 2018|Change failureaccess packaging to bundle so the OSGi metadata actually gets included.|0|0|0|415|3982|333|153|32|2|10|0|
f3542eee27163c3ea8af032206a719ead9f9d4b6|Fri Nov 02 15:45:44 CET 2018|Add MediaType.MICROSOFT_OUTLOOK and add missing javadocs to a few other MediaTypes.|0|0|1|415|3982|334|153|32|70|11|0|
c367e9456396bfca14de1c6a26a8c39e3f86e722|Fri Nov 02 19:46:03 CET 2018|Use maven-compiler-plugin version 3.8.0.|0|0|0|415|3982|334|153|33|2|11|0|
2d8651410cdd2bd5eb50444d39f2a958b05339ab|Wed Nov 07 18:17:23 CET 2018|Correct documentation for Splitter#withKeyValueSeparator(Splitter)|0|0|1|415|3982|334|153|36|16|8|0|
5f47d39fcf83daad916466f3bd1180150cbbe2d9|Wed Nov 07 18:48:51 CET 2018|Standardise message format for "duplicate key" IllegalArgumentException thrown from ImmutableTable.Builder.build().|0|0|3|415|3982|334|153|34|67|9|0|
0ac4a8b114e731880773b09fbf25dec0ea913ffe|Wed Nov 07 23:26:17 CET 2018|common.graph PackageSanityTests: specify a default object for EndpointPair inputs. This should resolve a few internal flaky test issues|0|0|0|415|3982|334|153|34|2|11|0|
4d5e9445c2edeb89803dc2883df4570116a7979a|Wed Nov 14 21:08:54 CET 2018|Address why users should prefer our immutable collections to things like Collections.emptyList().|0|0|1|415|3982|334|153|30|60|9|0|
b8d5ecd40b9cfbd9cafc08bf50bd2382369812e9|Thu Nov 15 18:45:19 CET 2018|Add the Origin-Trial HTTP response header.|0|0|1|415|3982|335|153|29|6|8|0|
0e596412953f7f9f07070b64b63f0d38bb263bc8|Mon Nov 19 20:50:02 CET 2018|Create a Guava BOM.|0|0|0|415|3982|335|153|33|2|9|0|
280992540d6e5e368a6dc70f04ded228485c9a3c|Tue Nov 20 17:21:53 CET 2018|Update Guava README for 27.0.1.|0|0|0|415|3982|335|153|31|2|9|0|
1a6c66855a0de8f0e8fa6f194a5d5d028cfe20d8|Tue Nov 20 17:46:59 CET 2018|Update failureaccess dep to 1.0.1, which includes OSGi metadata.|0|0|0|415|3982|335|153|28|2|11|0|
9c9c3f39da7bc605707ef0df4c29907e54daf576|Wed Nov 21 16:54:12 CET 2018|Add additional test of existing behavior of Splitter.limit(n)|0|0|0|415|3982|335|153|29|2|9|0|
8aad0dc649aa57d46886913b1f4ea84f56f813be|Wed Nov 21 17:09:19 CET 2018|Improve docs on Splitter.fixedLength() when used in conjunction with Splitter.limit().|0|0|1|415|3982|335|153|33|14|8|0|
c77be7a745fc5e0992126949832c6c25253ad289|Mon Nov 26 18:04:57 CET 2018|Replace usages of Truth's deprecated hasMessage() with hasMessageThat() in Guava tests.|0|0|0|415|3982|335|153|55|2|9|0|
b86fe4fc7ec511d78507c3ba32c789d1f250f827|Mon Nov 26 22:28:24 CET 2018|Update Public Suffix data.|0|0|1|415|3982|335|153|45|42|9|0|
0bd61c21ca140283bc8aa70ccf32fde5ef0230d3|Wed Nov 28 21:30:08 CET 2018|Internal change|0|0|0|415|3982|335|153|32|2|11|0|
e59ea0f78c832dd6a140a8e8e754dee8b08a322a|Thu Nov 29 19:30:39 CET 2018|Add the @Immutable a few more classes. Both annotations enforce at compile-time that the annotated class meets the annotation’s requirements.|0|0|1|415|3982|335|153|32|59|9|0|
2b9566ae47708988cd04d745149aea72bd5cf918|Fri Nov 30 17:48:57 CET 2018|Add missing documentation and @since tags to MediaType entries that were added after its initial relase of 12.0|0|0|1|415|3982|335|153|35|75|9|0|
920e72ffc5ab0e568b1250a6b39e6d4f9573b910|Fri Nov 30 19:50:15 CET 2018|Remove "Media type for" or similar phrasing for visible constants in the MediaType class.|0|0|1|415|3982|335|153|31|65|8|0|
3dfee64294921a4d8ec634961991210f6b188e88|Mon Dec 03 14:53:32 CET 2018|Make example compile (i.e. supply a Path/File) and use depth first instead of breadth first.|0|0|2|415|3982|335|153|32|69|7|0|
e41e8d13f3b1d3101b47df73bb2f582b8cdb51e2|Tue Dec 11 21:09:08 CET 2018|Use the primitive "number" type instead of the object counterpart "Number" to avoid a jscompiler error.|0|0|0|415|3982|335|153|29|2|9|0|
d416e04cf673f7b3a05e54e45ec1c1406e968c9e|Wed Dec 12 17:54:29 CET 2018|Add the application/jose and application/jose+json media types.|0|0|1|415|3982|337|153|29|66|8|0|
a7e1c180907c597b73373d347fbcfe124f1d77b6|Wed Dec 12 18:33:09 CET 2018|Suppress soon to be GoodTime errors ('time' is now considered a keyword).|0|0|2|415|3982|337|153|33|55|8|0|
99698d4229783a93ec68883d9102dabe623cc297|Mon Dec 17 19:18:04 CET 2018|Use maven-javadoc-plugin 3.0.1.|0|0|0|415|3982|337|153|31|2|11|0|
f15fdd10cd1e3e81ad2c31f555dfaaf70a72cf69|Fri Dec 21 16:19:25 CET 2018|Hide Files methods that are @Deprecated internally|0|0|1|415|3982|337|153|33|87|9|0|
3ba6d135439c1fa6ac80cf5ccab118c396dd402c|Wed Jan 02 17:35:03 CET 2019|Specify that Range static factories can throw ClassCastException if the provided endpoints are not mutually comparable.|0|0|1|415|3982|337|153|33|57|8|0|
838560034dfaa1afdf51a126afe6b8b8e6cce3dd|Fri Jan 04 21:51:15 CET 2019|Correct the spelling of the Range class.|0|0|0|415|3982|337|153|33|2|8|0|
d5cd6a6c97055bb5bf3ada0f13cb667b65aa3adc|Fri Jan 11 19:02:20 CET 2019|Enable GoodTime-API for c.g.common.cache|0|0|6|415|3982|337|153|36|104|8|0|
1cc9b8303b38a123853b21e7ac624fd6b0464c53|Tue Jan 15 16:46:57 CET 2019|refactor literal to named constant|0|0|1|415|3982|337|153|37|27|9|0|
673b243766aea6c8c5f8168c966ab7bd882c9621|Thu Jan 17 09:04:09 CET 2019|Adds constants for Sec-Fetch-(DestModeSiteUser) headers.|0|0|1|415|3982|341|153|31|6|11|0|
8b97f783b25b19d66fda216db86689750562f664|Tue Jan 22 17:57:54 CET 2019|Remove @CanIgnoreReturnValue from c.g.c.collect.Ordering.min/max()|0|0|1|415|3982|341|153|32|62|11|0|
dd3c1391646098008046c8f687c471ea53236dad|Tue Jan 22 22:00:24 CET 2019|Swap the parameter order of the Collections.disjoint call in Sets.intersection|0|0|1|415|3982|341|153|36|75|8|0|
a979103380e546a2d3c008d7eed3b334dc5e981f|Wed Jan 23 19:23:09 CET 2019|Remove @CanIgnoreReturnValue from c.g.c.collect.ClassToInstanceMap.getInstance()|0|0|1|415|3982|341|153|35|47|10|0|
02a6f40b4bee23688df14d7fef36b590b7e8e989|Wed Jan 23 19:33:09 CET 2019|Remove @CanIgnoreReturnValue from c.g.c.collect.Iterators.getOnlyElement()|0|0|1|415|3982|341|153|33|58|7|0|
63ceb311d285fb3e87a2dd8882d37ac235ba8b4f|Wed Jan 23 20:22:09 CET 2019|Remove @CanIgnoreReturnValue from c.g.c.base.Ticker|0|0|1|415|3982|341|153|31|9|10|0|
8fd7f60484218df9a208df0edf41bdee22d86900|Thu Jan 24 08:54:47 CET 2019|Removes java/util GWT emul dependency|0|0|0|415|3982|341|153|30|2|8|0|
d9947a2c753238ea1d57131a5e20433dedb5202f|Thu Jan 24 09:30:54 CET 2019|Automated rollback of commit 8fd7f60484218df9a208df0edf41bdee22d86900|0|0|0|415|3982|341|153|31|2|9|0|
7bf778459e3050fcc00c97705c6dceba50983920|Thu Feb 14 16:56:54 CET 2019|Remove @CanIgnoreReturnValue from c.g.c.collect.Lists.newArrayList().|0|0|1|415|3982|341|153|33|64|8|0|
715971c03dcd5ebeb35ffefb3e24269c28db3698|Thu Feb 14 18:16:18 CET 2019|Removes java/util GWT emul dependency|0|0|0|415|3982|341|153|34|2|8|0|
2763649a49907a645b97afd860ca74257368ab45|Thu Feb 14 18:18:11 CET 2019|Remove @CanIgnoreReturnValue from Futures.catchingAsync()|0|0|1|415|3982|341|153|33|65|12|0|
3d873a513aa59996fbaf1ee48d898eda68ce0d3c|Wed Jan 30 16:30:30 CET 2019|Add Report-To header.|0|0|1|415|3982|342|153|33|6|8|0|
735fb5a5c11be21f7f93ae588e21ef521eaa2e83|Wed Jan 30 20:51:19 CET 2019|Remove unused imports and warnings.|0|0|10|415|3982|342|153|59|101|8|0|
3f1facfd4197a00e6a5e05333739e006ff398dcc|Fri Feb 01 02:50:36 CET 2019|Reformat with google-java-format|0|0|34|415|3982|342|153|59|205|9|0|
7452a047726b0f4a3d05f91f6f2f259b72610f76|Fri Feb 01 20:14:51 CET 2019|Add missing @Override annotations|0|0|14|415|3982|342|153|66|147|11|0|
3e7f6fe874f482a87e6aad27f29ad2abbf10d3ea|Fri Feb 01 20:29:10 CET 2019|Document the retention of listeners added to Guava implementations of ListenableFuture.|0|0|1|415|3982|342|153|44|63|7|0|
f09c017033417cc50b047d607f5917fff39ca0dd|Mon Feb 04 20:07:18 CET 2019|Reformat with google-java-format|0|0|0|415|3982|342|153|40|2|8|0|
84fee435a1eb130239a8c0f7972541aff5c438f6|Tue Feb 05 23:21:39 CET 2019|Name the method parameter 'unused' for ImmutableSortedSet.readObject(ObjectInputStream) (so the static analysis doesn't complain)|0|0|1|415|3982|342|153|36|58|7|0|
6242bdd27bfa7a2223548a082c25a8ef97a951db|Wed Feb 06 17:40:26 CET 2019|Remove @Beta from APIs:|0|0|28|415|3982|342|153|43|193|12|0|
f6e4e4e1fded5609a202b65541a08e522a772497|Thu Feb 07 00:15:12 CET 2019|Add some known UTF-8 hash values to Murmur3_32 tests. UTF-8 is more comparable between platforms than relying on Java's internal encoding.|0|0|0|415|3982|342|153|40|2|7|0|
4c7ae6a39378d0d42289968659c3f9bc42465ec2|Thu Feb 07 17:58:48 CET 2019|Remove @CanIgnoreReturnValue from Ordering.sortedCopy() and immutableSortedCopy().|0|0|1|415|3982|342|153|29|54|8|0|
d60ff99a73ad0f2c5d4048a5aee107f30e034bb8|Mon Feb 11 17:05:04 CET 2019|Make a constructor private.|0|0|0|415|3982|342|153|35|2|8|0|
a0f748e78516c8c80c945f6a4c4fae752d11bff5|Mon Feb 11 18:08:12 CET 2019|Delete WellBehavedMap.|0|1|2|415|3982|342|153|32|53|11|0|
07f3d6ca86cac1d27cb2f13e6fe0bb4d0faca7fe|Tue Feb 12 18:14:23 CET 2019|Internal GWT change|0|0|0|415|3982|342|153|38|2|8|0|
5929fcf18f78a8826544f0aa1a4eb2ced704787b|Tue Feb 12 19:10:55 CET 2019|Automated rollback of commit 1d49ade94c3e7d2c056893a630739c8a6b897f66|0|0|0|415|3982|342|153|34|2|6|0|
3ff4d1ae6f47c577cd4070080461290904f308c9|Wed Feb 13 21:53:55 CET 2019|Use J2ObjC's @RetainedWith annotation instead of @Weak on ImmutableMap.keySet to prevent crashes on iOS.|0|0|3|415|3982|342|153|34|65|9|0|
a890c444e55973384d1370b56afe1a02e7db9c3c|Thu Feb 14 17:48:16 CET 2019|Annotate checkNotNull's input and output as @NonNull.|0|0|1|415|3982|342|153|33|15|9|0|
ddb5543dadb0cb14d387772e80a51336eb4b01e9|Fri Feb 15 23:04:31 CET 2019|Document the JDK 9+ alternative to `Maps#immutableEntry`|0|0|1|415|3982|342|153|33|86|13|0|
282bdf81d05835b36ce46c46672211d1f220b0a4|Fri Feb 15 23:22:08 CET 2019|Modernize book reference.|0|0|3|415|3982|342|153|42|74|9|0|
a99c15f4cfcfc6106b99b6ec98e6007d211faff0|Sat Feb 16 04:18:44 CET 2019|Create constants for the SourceMap header|0|0|1|415|3982|343|153|35|8|10|0|
ead2404f33b16b2f87825b80669afb54457a1785|Wed Feb 20 16:48:03 CET 2019|Internal GWT change|0|0|0|415|3982|343|153|39|3|9|0|
f4ed20e9b3eabaacfa165bf532f67c19f22809f9|Fri Feb 22 18:39:55 CET 2019|Use J2ObjC's @RetainedWith annotation instead of @Weak on ImmutableMap.values to prevent crashes on iOS.|0|0|3|415|3982|343|153|36|74|14|0|
ed3ba0728dc18d58e2cb43c6308dc30b31cfc2f5|Fri Feb 22 21:48:58 CET 2019|Fix Javadoc breakage under JDK11 canary.|0|0|0|415|3982|343|153|35|2|8|0|
5f3507252d43c0e9c4e7f16dfddb08c387435eb1|Mon Feb 25 16:17:22 CET 2019|Remove GWT emulations that are no longer needed as of GWT 2.8.2.|0|0|0|415|3982|343|153|32|2|8|0|
5aca883cc649a99d5272abd86cc1598a9ef4f401|Tue Feb 26 17:12:26 CET 2019|Fix a URL.|0|0|0|415|3982|343|153|34|2|5|0|
0fb7d73629819739332f41cb0fd3903a922b8683|Tue Feb 26 22:02:07 CET 2019|Document that the memory increases appear to be necessary for Travis only (and that they do appear to solve the problem there).|0|0|0|415|3982|343|153|30|2|6|0|
dcaf89380dae1d3ecc05907acd32444cfc4e40eb|Thu Feb 28 19:20:13 CET 2019|Update Public Suffix data.|0|0|1|415|3982|343|153|32|44|9|0|
c37130733fd791487a5c01cb0f3e9b2b4786534c|Fri Mar 01 05:17:01 CET 2019|Suppress error for bad implementations of Comparable|0|0|0|415|3982|343|153|33|8|6|0|
daed909a0b4e1e6039441077357793c1a3ea7913|Mon Mar 04 23:45:53 CET 2019|Optimize ImmutableSet's hash flooding detection, using an algorithm which allows more false positives (though we calibrate the constant factors to compensate) but runs O(log n) times faster on average.|0|0|1|415|3982|343|153|32|52|7|0|
dc416181af160fd43d07485fe63c71c43a687c86|Tue Mar 05 01:35:16 CET 2019|Remove misleading javadoc line (we haven't published microbenchmarks in N years).|0|0|1|415|3982|343|153|33|22|7|0|
7d9c1304fc0afceda8695553ada7c930b886e593|Wed Mar 06 18:06:10 CET 2019|Internal GWT change.|0|0|0|415|3982|343|153|35|2|7|0|
2fabbea450b6c33d3feef1cfd3ba1bfb0d9941fb|Thu Mar 07 19:29:49 CET 2019|Add missing @since NEXTs.|0|0|4|415|3982|343|153|33|14|7|0|
8e174e76971449665658a800af6dd350806cc934|Thu Mar 07 20:48:23 CET 2019|Prepare for release 27.1.|0|0|9|415|3982|343|153|35|93|11|0|
74fc49faf283f106302794f7af82c7ab1fcb5412|Thu Mar 07 21:34:24 CET 2019|Use J2ObjC's @RetainedWith annotation instead of @Weak on ImmutableMap.entrySet() to prevent crashes on iOS.|0|0|4|415|3982|343|153|39|83|10|0|
be92294be598b9b6ff0bd1cae3335759dafcb534|Mon Mar 11 17:32:54 CET 2019|Lazily allocate CompactHash backing arrays on first write|0|0|4|415|3982|343|153|42|58|7|0|
23b6bcb04c03993b3d5d25432d30a85591b56c3b|Wed Mar 13 17:00:25 CET 2019|Add (unimplemented) API for GrapbBuilder.immutable() and ImmutableGraph.Builder.|0|0|1|415|3982|343|153|33|57|8|0|
e66bf81da3163a6a8b4e93250c27ac2b5498db5e|Fri Mar 15 05:41:38 CET 2019|Adds constants for prefetch headers.|0|0|1|415|3982|346|153|30|7|11|0|
71b9f37d349f659a9c26a893f6c48b6fddcbac8c|Wed Mar 20 10:19:46 CET 2019|Implement GraphBuilder.immutable().|0|0|2|416|3987|346|153|34|57|6|0|
f9f2807765c3f896c09e633026ef34f907ec7c48|Wed Mar 20 16:37:00 CET 2019|Add FluentFuture.from(FluentFuture) factory method.|0|0|1|416|3988|346|154|33|58|8|0|
8d76ceb557d1fc9551f00dd4713670806c7f4732|Thu Mar 21 20:09:55 CET 2019|Use byte[]/short[]/int[] for hashtable depending on size|0|0|0|416|3988|346|154|35|2|6|0|
35c85d27c510552807b8ec643f897497e893e0e2|Fri Mar 22 16:02:02 CET 2019|Add ValueGraphBuilder.immutable().|0|0|3|417|3993|346|154|35|62|7|0|
eb635997c3cd1f6ce6b809987e50e71f0e1a665c|Fri Mar 22 18:13:01 CET 2019|Remove unnecessary Type parameter|0|0|1|417|3993|346|154|39|20|7|0|
6d7f6556b0db2d177e3aa4cebbfbcfdb4170745f|Tue Mar 26 12:02:01 CET 2019|Add NetworkBuilder.immutable().|0|0|2|418|3998|346|154|30|62|7|0|
c86ee2657ba63f8d0feb4bb2cedf140a1a48cfab|Fri Mar 29 22:34:29 CET 2019|Remove unused configuration of load factor|0|0|4|418|3998|346|154|37|61|7|0|
ff3ce87590c8a18da6931e64c5543bb9ed3f849a|Tue Apr 02 16:37:05 CEST 2019|Fix @param tag as per https://github.com/google/guava/pull/3431#pullrequestreview-221507095|0|0|1|418|3998|346|154|34|53|6|0|
206d7681cea8d19ae958de0c1115bce8689ed795|Wed Apr 03 21:04:33 CEST 2019|Bumped the FPP to prevent OOMs on JDK 11.|0|0|0|418|3998|346|154|33|2|11|0|
32cf2ddd1febac4483c1fba5cb01ca0af61bc0c7|Tue Apr 09 22:51:26 CEST 2019|Add websocket headers to HTTP header listings.|0|0|1|418|3998|351|154|34|9|11|0|
106948459ac6dc6dfc5d3053639b47e0dc4e8745|Wed Apr 10 18:05:39 CEST 2019|Update GraphBuilder documentation with option of building an immutable graph|0|0|1|418|3998|351|154|33|20|7|0|
eacf08dbdc3d67a7c7a103f177a64dae5bb273af|Wed Apr 10 18:16:28 CEST 2019|Simplify graph.PackageSanityTests by applying the new immutable graph builder.|0|0|0|418|3998|351|154|32|2|7|0|
0194a8d1e65a5dbd732fdde7253744887e8e35cf|Wed Apr 10 23:57:15 CEST 2019|Upgrade error_prone|0|0|0|418|3998|351|154|35|2|8|0|
23e4ad3ee650aa2954a7c9c5e60410de9cb342c9|Fri Apr 12 19:45:48 CEST 2019|Remove obsolete parent per https://github.com/sonatype/oss-parents and Fixes https://github.com/google/guava/issues/2756|0|0|0|418|3998|351|154|31|2|7|0|
47b033ff4ee0d2534aa2ca333bcba0dbb3a9e79a|Wed Apr 17 17:33:38 CEST 2019|Override a method instead of special-casing it.|0|0|1|418|3998|351|154|31|17|7|0|
57e4b6d560874946d7142103386f7f17384e1708|Wed Apr 17 21:42:35 CEST 2019|Mitigate https://github.com/google/guava/issues/3223 by guessing that Sets are already deduplicated and making "half and half" expectations about un-duplicated inputs in ImmutableSet creation.|0|0|1|418|3998|351|154|30|55|7|0|
276b8d95854dcdad992efb956b0a8cad01ed5ff0|Fri Apr 19 03:42:08 CEST 2019|Update ValueGraphBuilder documentation with option of building an immutable graph.|0|0|1|418|3998|351|154|33|20|8|0|
d4fe4cd80712f7ba9f5c75c43498756b5df19dad|Fri Apr 19 04:17:53 CEST 2019|Update NetworkBuilder documentation with option of building an immutable graph.|0|0|1|418|3998|351|154|32|18|7|0|
f686c4ec86066c9775bbd9f90aaabb27708e9186|Fri Apr 19 18:24:16 CEST 2019|Enable GoodTime-API|0|0|0|418|3998|351|154|31|2|7|0|
96025849639613e6b0296d8b6cd1382c5f9d7fbf|Fri Apr 19 18:47:11 CEST 2019|Fix misspelled Sec-WebSocket-Version header.|0|0|1|418|3998|351|154|32|7|11|1|BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.net.HttpHeaders.SEC_WEBSOCKET_VERSIONS, newSymbol=]
820b9a057442535a345772eaf5429dd81c5284c7|Mon Apr 22 16:51:42 CEST 2019|Match the casing of the WebSocket HTTP headers to the RFC directly.|0|0|1|418|3998|351|154|30|7|9|0|
1f20155632fbf6fb1eaf026d10b4b9555932e5ac|Mon Apr 22 19:17:32 CEST 2019|Update Public Suffix data.|0|0|1|418|3998|351|154|31|39|7|0|
d254e04f4628686f470a5a8fe5ee9bdbf0e2465c|Mon Apr 22 21:21:15 CEST 2019|Remove outdated references to the "next release of Guava".|0|0|1|418|3998|351|154|30|52|7|0|
cdf7546a5e2e36e87d8d5180546f4e66af63c3f6|Wed Apr 24 02:30:45 CEST 2019|Update to Truth 0.44.|0|0|0|418|3998|351|154|34|2|7|0|
7155d12b70a2406fa84d94d4b8b3bc108e89abfd|Wed Apr 24 21:00:58 CEST 2019|Migrate from isNotSameAs to isNotSameInstanceAs.|0|0|0|418|3998|351|154|31|2|10|0|
c8ec3b8fcf823e5b02b50b58faf292c3053a53bb|Mon Apr 29 23:57:17 CEST 2019|Fixed some links.|0|0|3|418|3998|351|154|34|68|8|0|
14ffeecb1e68e022829fd920b07bcbd0ee35e30c|Tue Apr 30 16:48:36 CEST 2019|Migrate from assertThat(foo).named("foo") to assertWithMessage("foo").that(foo).|0|0|0|418|3998|351|154|42|2|7|0|
c8542f65ca36545089b7a9fa8aebaad8a7da8762|Wed May 01 17:30:59 CEST 2019|Migrate from is(Not)SameAs to is(Not)SameInstanceAs.|0|0|0|418|3998|351|154|52|2|7|0|
4c3859846c23e035095ef915df540d5a4271073f|Wed May 01 18:42:42 CEST 2019|A few more doc tweaks, caught by @jbduncan in f2591b5c2a|0|0|1|418|3998|351|154|41|54|7|0|
3dd22fe75a1dce9dcb169a91e3b617da5bb77587|Thu May 02 14:30:57 CEST 2019|Remove CheckedFuture from Guava.|0|3|2|414|3986|351|147|38|66|7|7|BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.CheckedFuture, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.makeChecked(com.google.common.util.concurrent.ListenableFuture<V>,com.google.common.base.Function<? super java.lang.Exception,X>), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.AbstractCheckedFuture, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.immediateFailedCheckedFuture(X), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.Futures.immediateCheckedFuture(V), newSymbol=],BC[kind=TYPE_REMOVED, impactedSymbol=com.google.common.util.concurrent.ForwardingCheckedFuture, newSymbol=]
9afafaaabb7c19ac21871c0730f1ab1497d7349e|Thu May 02 21:23:49 CEST 2019|Migrate from assertThat(foo).named("foo") to assertWithMessage("foo").that(foo).|0|0|0|414|3986|351|147|34|2|7|0|
dec10414174449323673e1086e3bdbeb70b0d6cc|Mon May 06 18:36:04 CEST 2019|Upgrade maven dependency plugin.|0|0|0|414|3986|351|147|30|2|7|0|
b54bb040884cd54d9b1f62098b8b8f6ca23f1197|Tue May 07 10:30:26 CEST 2019|Add app.link to the Public Suffix List.|0|0|1|414|3986|351|147|32|46|8|0|
8b9d1d31da78ec013e6e811ac7b6d8dad12309b0|Tue May 07 16:38:20 CEST 2019|Add java.util.UUID to ArbitraryInstances|0|0|0|414|3986|351|147|31|2|7|0|
0de37443ce263a3a1b3fc1c12a8e627a54006811|Tue May 07 20:38:48 CEST 2019|Upgrade compiler plugin.|0|0|0|414|3986|351|147|29|2|11|0|
fa6c4bd2d095700b8883ede96da601fce131a728|Tue May 07 22:00:19 CEST 2019|Update versions of some Guava dependencies.|0|0|0|414|3986|351|147|29|2|7|0|
b954fff1e8f4d71f844cc57e281e58672bc8bc75|Wed May 08 19:54:20 CEST 2019|Add FakeTicker.advance(Duration) and setAutoIncrementStep(Duration).|0|0|0|414|3986|351|147|31|2|7|0|
21d06cf1d48175ab5cdf3d88f1776d3cba227b37|Thu May 09 19:40:39 CEST 2019|Add Queues.drain(BlockingQueue, Collection, int, Duration) and drainUninterruptibly(BlockingQueue, Collection, int, Duration).|0|0|1|414|3988|351|147|30|51|6|0|
ac5bdc8506c348d00aa2e1e8010d81a3fc1cf83c|Fri May 10 02:43:26 CEST 2019|Add a new header field "CDN-Loop" to httputils.|0|0|1|414|3988|352|147|31|7|7|0|
d09f0f48a4b805ac23f4180df51e067109f18344|Fri May 10 21:44:57 CEST 2019|Remove app.link from the Public Suffix List.|0|0|1|414|3988|352|147|31|41|11|0|
6cf3e2ec338a1e5ddd9796eaf3c8031d2b637939|Thu May 16 21:35:34 CEST 2019|Add a link back to the goodtime rate bug.|0|0|1|414|3988|352|147|31|23|7|0|
f84c7bdd271dff6b6fe4f1f17b5d2641a5057a73|Thu May 16 22:35:37 CEST 2019|Copy Durations.saturatedToNanos(Duration) to package-private c.g.c.u.c.Internal so it can be used by the concurrent package (and in Guava).|1|0|0|414|3988|352|147|32|14|9|0|
454799cc2697be95695766f1294670cc4784b7dc|Fri May 17 15:24:20 CEST 2019|Tighten the GoodTime suppression locations in RateLimiter.|0|0|1|414|3988|352|147|31|26|7|0|
401afeabb187f0eb68c2a0d8a4c73e917dad377b|Fri May 17 20:11:00 CEST 2019|Add Duration-based overloads to Uninterruptibles.|0|0|1|414|3995|352|147|31|24|9|0|
2d28beb44476a109ba3c73a15f6086c1d3b53f76|Fri May 17 20:14:50 CEST 2019|Always complete TimeoutFuture, even if toString() throws|0|0|1|414|3995|352|147|31|58|10|0|
5dea327a8cbf84518cc787aae597f416f2969964|Fri May 17 20:42:03 CEST 2019|Add Duration-based overloads to MoreExecutors.|0|0|1|414|3998|352|147|35|59|6|0|
6aa29a6a8bf39c33f27eca26d3034bc701efbf10|Fri May 17 23:31:10 CEST 2019|Add Duration-based overloads to FluentFuture.|0|0|1|414|3999|352|147|29|61|9|0|
f463e01913d1d55536d929d0a37a25687876971b|Sat May 18 02:00:29 CEST 2019|Add Duration-based overloads to Futures.|0|0|1|414|4002|352|147|31|64|7|0|
76d74b3c839dee671040e2c9d94a102de71e854c|Sun May 19 18:23:29 CEST 2019|Add Duration-based overloads to AbstractScheduledService.|0|0|1|414|4004|352|147|30|60|8|0|
b574769cd78da2744cb76e98ea7b738baf9a71b3|Sun May 19 18:50:07 CEST 2019|Add Duration-based overloads to Service.|0|0|1|414|4006|352|147|34|55|7|0|
9e808bcba5d9586ac2276d4feac4e586e24d9a98|Sun May 19 19:10:15 CEST 2019|Add Duration-based overloads to ServiceManager.|0|0|1|414|4008|352|147|29|78|7|0|
df25b6fcc8dd859b926fb7ef95f5b1fb34147862|Sun May 19 19:34:00 CEST 2019|Remove CheckedFuture utilities from util.concurrent.Futures.|0|0|1|414|4008|352|147|32|20|7|0|
044571dcee93828abe3017d9e377366cac36d46e|Mon May 20 01:49:12 CEST 2019|Add Duration-based overloads to RateLimiter.|0|0|1|414|4011|352|147|33|21|6|0|
62a888101db1cc34c4bd280abea18964ec0685b1|Mon May 20 16:16:12 CEST 2019|Add Duration-based overload to Monitor.|0|0|1|414|4019|352|147|32|23|12|0|
6216ff20a4bfbd23427463ee3e53b8c2c6bda3e6|Mon May 20 22:17:37 CEST 2019|Define project build source encoding as UTF-8|0|0|0|414|4019|352|147|32|2|7|0|
a0ed6c57bf6f58f2e22229fb2b702b5279e167d1|Tue May 21 00:30:05 CEST 2019|Fix "Apache License, Version 2.0" spelling|0|0|0|414|4019|352|147|30|2|7|0|
1ddcd2738c29bf86e185281e57b4ff010234a45a|Tue May 21 19:28:34 CEST 2019|Fix Streams.zip documentation typo.|0|0|1|414|4019|352|147|31|58|8|0|
36cd5cfc5c727e4408758ef78e5b05a15ca027c9|Thu May 23 00:22:18 CEST 2019|Add MediaType for "application/geo+json".|0|0|1|414|4019|353|147|34|65|6|0|
7fcd08a7d983c62bea8c08c1d492865dc9d26526|Thu May 23 16:56:58 CEST 2019|Upgrade maven-javadoc-plugin to 3.1.0.|0|0|0|414|4019|353|147|31|2|9|0|
e17fd1449595d9040c9c49f9a7ae614abd43ac98|Thu May 23 23:51:40 CEST 2019|Add Cross-Origin-Resource-Policy header name constants.|0|0|1|414|4019|354|147|31|7|7|0|
285fc3f47fc49723b3d34b1e610502820f373967|Fri May 24 22:55:52 CEST 2019|Fix Javadoc links.|0|0|3|414|4019|354|147|32|20|8|0|
1b6e4067d58fae4a9966911a348177671cc99f7c|Sun May 26 04:38:05 CEST 2019|Update documentation to refer correct method name.|0|0|1|414|4019|354|147|33|55|8|0|
d6170e0c921ce17b14b322a9a1a0432b44bdcbc8|Tue May 28 17:46:18 CEST 2019|Fix Apache license name in guava pom|0|0|0|414|4019|354|147|32|2|6|0|
60e108886fcb173ca21f3966965a0b57cf5b5797|Tue May 28 22:07:08 CEST 2019|RFC1123 InternetDomainName Test Cases|0|0|0|414|4019|354|147|31|2|6|0|
0cb756acf8ee44c28bee8b9ea626e2a65cee5880|Wed May 29 11:58:48 CEST 2019|Fix littleEndian/bigEndian checks in HashTestUtils.|0|0|0|414|4019|354|147|29|2|9|0|
0f08fad6b0c7f029bdb8b9a4382ed1c37b9095dd|Wed May 29 19:09:02 CEST 2019|Update Public Suffix data.|0|0|1|414|4019|354|147|30|41|6|0|
5d31f81898ffb6d80b8c013edc3e48503493578b|Wed May 29 20:23:59 CEST 2019|Fix Javadoc.|0|0|1|414|4019|354|147|33|15|7|0|
5eef67d0711e7c164168756587f4cdba5406576d|Wed May 29 23:14:00 CEST 2019|Replace maven prerequisites with the enforcer plugin|0|0|0|414|4019|354|147|35|2|10|0|
62527509110d379f3cb5182b10552bd9aa506f5c|Thu May 30 23:47:19 CEST 2019|Migrate Correspondence subclasses to instead call Correspondence.from.|0|0|0|414|4019|354|147|31|2|10|0|
1ef1d52a53b5eabadc859bbd40b11d8c6fa424dd|Fri May 31 00:55:54 CEST 2019|Add Duration-based default methods to the TimeLimiter interface.|0|0|1|414|4024|354|147|32|17|14|0|
ec0c2a56c37db8d11feae26f2e04541805f3702a|Fri May 31 19:20:55 CEST 2019|Replace google.github.io/dagger with dagger.dev|0|0|3|414|4024|354|147|36|77|8|0|
a772418be2bc254b76c767eb43cb356b9a63d462|Sat Jun 01 16:41:46 CEST 2019|Add Duration-based overloads to MoreExecutors.|0|0|1|414|4025|354|147|33|72|9|0|
7ce8f68757ec01a4add6a01bacf4aba0da3dd591|Mon Jun 03 16:04:43 CEST 2019|MapMakerInternalMap - Remove redundant if statement|0|0|1|414|4025|354|147|34|72|7|0|
b72102d427be43b5c092042c9a9e5d972d55510c|Mon Jun 03 17:13:44 CEST 2019|Document the Java 9 alternatives for Optional APIs.|0|0|1|414|4025|354|147|35|13|6|0|
5ec1360912ce94dabe801b1cf5826bf94947aa4e|Mon Jun 03 17:57:34 CEST 2019|Remove `@Beta` from `setFuture`.|0|0|2|414|4025|354|147|33|29|8|7|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.FluentFuture.transform(com.google.common.base.Function<? super V,T>,java.util.concurrent.Executor), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.FluentFuture.withTimeout(long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.FluentFuture.transformAsync(com.google.common.util.concurrent.AsyncFunction<? super V,T>,java.util.concurrent.Executor), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.FluentFuture.addCallback(com.google.common.util.concurrent.FutureCallback<? super V>,java.util.concurrent.Executor), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.FluentFuture.catching(java.lang.Class<X>,com.google.common.base.Function<? super X,? extends V>,java.util.concurrent.Executor), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.FluentFuture.from(com.google.common.util.concurrent.ListenableFuture<V>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.FluentFuture.catchingAsync(java.lang.Class<X>,com.google.common.util.concurrent.AsyncFunction<? super X,? extends V>,java.util.concurrent.Executor), newSymbol=]
e3090f0dadbfde16fd0960a394f440edaeade4d9|Mon Jun 03 19:50:24 CEST 2019|Upgrade maven-gpg-plugin to 1.6|0|0|0|414|4025|354|147|32|2|7|0|
aaec967fe1aa4546e3340651da56fee73cf64ebc|Mon Jun 03 21:59:33 CEST 2019|Clarify behavior of `ImmutableList#copyOf` for null argument.|0|0|1|414|4025|354|147|30|52|7|0|
2d0020950331ddcab321c89bb98e3c1c4ee32820|Wed Jun 05 11:58:22 CEST 2019|Make the incidentEdges() documentation a little bit more clear.|0|0|4|414|4025|354|147|36|15|8|0|
674148d9d7a99c450fec9751edb9f826bc3f5784|Wed Jun 05 12:03:14 CEST 2019|Simplify implementation of Graphs.reachableNodes()|0|0|1|414|4025|354|147|32|65|7|0|
8ee1c994a71a7ba04a6b6f489f8e8fd738222b70|Wed Jun 05 17:41:34 CEST 2019|Make the adjacentNodes() documentation a little bit more clear.|0|0|4|414|4025|354|147|35|19|7|0|
c723d25fb84eabd971a7e546caa8f8b9dd703fa9|Thu Jun 06 12:25:42 CEST 2019|Delete deprecated callWithTimeout().|0|0|1|414|4025|354|147|33|55|8|0|
6b0f7857a24014c6de0c52b8fa95d41fc17c13c5|Thu Jun 06 17:53:07 CEST 2019|Fix typo for accomodate -> accommodate in LocalCache.|0|0|1|414|4025|354|147|31|94|8|0|
83a79f6f2b3e2a3f4c21f4784de25cc4862f44cd|Mon Jun 10 16:11:36 CEST 2019|Use `Stream.empty()` instead of `Stream.of()` to get empty stream.|0|0|1|414|4025|354|147|31|47|6|0|
633e51a00a1d86250f27165473fe0be486e21745|Mon Jun 10 16:16:13 CEST 2019|Remove `inOrder` assertion for iterable with single element.|0|0|0|414|4025|354|147|44|2|10|0|
58d8f643807b05a68472a8fc030a209c5e386fd7|Mon Jun 10 16:44:16 CEST 2019|Fix typo in testFindClassesToTeset_ignoreUnderscores|0|0|0|414|4025|354|147|34|3|10|0|
554ca092bc57f44c5a69ce44078df5bb0793b232|Tue Jun 11 18:31:32 CEST 2019|Push back removal date for some deprecated APIs.|0|0|2|414|4025|354|147|34|79|9|0|
bf9e8fa954bd76fd6642445fa644c729f91f30f2|Tue Jun 11 20:45:25 CEST 2019|Prepare for release 28.0.|0|0|19|414|4025|354|147|64|140|8|0|
2321cde06d208b1523e54d7ed60718782e9236d2|Wed Jun 12 02:29:33 CEST 2019|Add missing description tags to guava-parent poms.|0|0|0|414|4025|354|147|40|2|7|0|
7e5aedef2916c57194181723154c01ede021f4d4|Wed Jun 12 19:37:13 CEST 2019|Fix typo in 'stoppingCount' variable name|0|0|0|414|4025|354|147|31|2|9|0|
10abdc5092ab80f20d5060b19ed0e084dadbb2ad|Wed Jun 12 22:30:08 CEST 2019|Split catch() blocks so that javac doesn't generate a reference to their common supertype, ReflectiveOperationException.|0|0|2|414|4025|354|147|33|77|7|0|
6d7f6acbbb511dce9f038aaca9ee9b14ab103628|Wed Jun 12 22:48:14 CEST 2019|Upgrade animal sniffer version to 1.18|0|0|0|414|4025|354|147|35|2|8|0|
542631d94c89f1c8193487cc173c1ee0565f52c7|Wed Jun 12 23:05:32 CEST 2019|Document default values of builder setters.|0|0|3|414|4025|354|147|31|19|6|0|
dcf63a6c97dfde2946c201d1595f33469d25c1a4|Sat Jun 15 05:21:04 CEST 2019|Use saturatedToNanos() in CacheBuilder to avoid overflows.|0|0|1|414|4025|354|147|29|66|7|0|
0a68dadd3dc76dd9f643c64ca6e0ccbd956d291f|Mon Jun 17 23:39:31 CEST 2019|Tweaks to the list of Guava features.|0|0|0|414|4025|354|147|31|2|9|0|
41253a22cef1f3708665375eb3a1f09921a8354d|Mon Jun 24 11:32:04 CEST 2019|Add more @Nullables to variadic parameter lists.|0|0|2|414|4025|354|147|31|14|6|0|
9ef8b741ce47b1b5836e4c2d4b4004ee599f5cef|Mon Jun 24 18:13:26 CEST 2019|Halve memory consumption when creating a Bloom filter.|0|0|1|414|4025|354|147|32|26|8|0|
705101e7c738edaf8f781f43294830951513a3d7|Tue Jun 25 06:50:48 CEST 2019|Use LongMath.saturatedAdd/Subtract in CacheStats.|0|0|1|414|4025|354|147|32|54|9|0|
af57f19e99110695d2b1329ae313aa5158580417|Fri Jun 28 16:14:27 CEST 2019|Fix the travis build|0|0|0|414|4025|354|147|32|2|7|0|
2d42b8f6708e8a4a33e133b19e97ae863d7a2b3b|Mon Jul 01 19:38:26 CEST 2019|Fix typo in ImmutableList.java.|0|0|1|414|4025|354|147|31|50|10|0|
2fc0f78e78ca4918c377e6fefe1a4ab2e46aacc5|Mon Jul 01 23:12:31 CEST 2019|Update Fetch Metadata (formerly Sec-Metadata) headers to point to w3c documentation now it's been adopted by WebAppSec.|0|0|1|414|4025|354|147|37|9|8|0|
ab7caa4bff18c31626067ee7437699cdababb6f3|Tue Jul 02 19:37:54 CEST 2019|Add a test for LongAdder overflow behavior.|0|0|0|414|4025|354|147|33|3|7|0|
689a32b6a3736eee85dffc1bf3bee59d7e5b2552|Tue Jul 02 20:13:49 CEST 2019|Fix some rawtypes in com.google.common.cache.|0|0|0|414|4025|354|147|31|2|7|0|
54d89c54150f0f12e18d0e6a6246369b659709cb|Tue Jul 02 23:45:28 CEST 2019|Saturate LongAdder.sum() results to Long.MAX_VALUE during an overflow.|0|0|1|414|4025|354|147|34|62|8|0|
48c42b214820089390c03646f1581dbe56df88a9|Wed Jul 03 02:35:19 CEST 2019|Add RangeMap#merge, analogous to Map#merge.|0|0|3|414|4028|354|148|34|59|9|1|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.RangeMap, newSymbol=com.google.common.collect.RangeMap.merge(com.google.common.collect.Range<K>,V,java.util.function.BiFunction<? super V,? super V,? extends V>)]
8000dc992d0124372972729b20df40a42b27a849|Wed Jul 03 04:59:51 CEST 2019|Automated rollback of 8dc46a72fa5417d02063052f05fd0355703411fc|0|0|3|414|4025|354|147|32|77|11|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.RangeMap.merge(com.google.common.collect.Range<K>,V,java.util.function.BiFunction<? super V,? super V,? extends V>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.ImmutableRangeMap.merge(com.google.common.collect.Range<K>,V,java.util.function.BiFunction<? super V,? super V,? extends V>), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.collect.TreeRangeMap.merge(com.google.common.collect.Range<K>,V,java.util.function.BiFunction<? super V,? super V,? extends V>), newSymbol=]
21cfbea052d2a6e32aa0768087b013c72358bfdb|Thu Jul 11 16:06:40 CEST 2019|Clarify that SortedSetMultimap exposes the values for a key in sorted order but does *not* necessarily expose the keys in sorted order.|0|0|1|414|4025|354|147|34|58|8|0|
44e40a5b14386b1a5abcd5c128c7000c1a686b13|Thu Jul 11 17:46:38 CEST 2019|Remove unneeded @SuppressWarnings from @Benchmark methods.|0|0|0|414|4025|354|147|35|2|6|0|
278fffdfc20385167acf0581abe942a5d6e00d69|Thu Jul 11 17:52:43 CEST 2019|Rename a method to avoid J2ObjC collisions|0|0|1|414|4025|354|147|33|18|7|0|
687252d355dc804d07bd1f3cc6bd6bf6abe08634|Wed Jul 17 23:06:42 CEST 2019|Add RangeMap#merge, analogous to Map#merge.|0|0|3|414|4028|354|148|31|61|6|1|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.collect.RangeMap, newSymbol=com.google.common.collect.RangeMap.merge(com.google.common.collect.Range<K>,V,java.util.function.BiFunction<? super V,? super V,? extends V>)]
82988bb2cafb95fd5dde57720024112c20891ac3|Wed Jul 24 17:17:32 CEST 2019|Link to guava-announce.|0|0|0|414|4028|354|148|32|2|7|0|
3e0d4639fc9f412c1c705f795a0d1886de73f35f|Mon Jul 29 20:21:51 CEST 2019|Remove inaccurate comment.|0|0|1|414|4028|354|148|31|56|7|0|
f1663d4b76f3750950999d066af0a6db2d1df2c3|Tue Jul 30 04:27:50 CEST 2019|Change the Splitter::limit arg to maxItems, for IDE usage.|0|0|1|414|4028|354|148|31|14|8|0|
ff9057f78e5ec3edbcbc21cd78940dd00e2c67a4|Tue Jul 30 22:38:52 CEST 2019|gwt.xml change from internal change.|0|0|0|414|4028|354|148|29|2|7|0|
508696a4c7dd63779bd2bcbabcd4f625eb217e16|Wed Jul 31 20:03:48 CEST 2019|Add MediaType for "image/heif" and "image/jp2"|0|0|1|414|4028|356|148|31|74|8|0|
a3c9f2cbe27886ef052922dba1cceedbf39cec2d|Wed Jul 31 22:25:04 CEST 2019|Change a use of Iterable.forEach, which isn't available under Desugar.|0|0|0|414|4028|356|148|32|2|7|0|
ddd4a49fb760ccccc7903305f68310f4f9a90587|Mon Aug 05 19:21:14 CEST 2019|Fix an issue where the InputStream returned by BaseEncoding.decodingStream(Reader) could fail to throw DecodingException while decoding an invalid string.|0|0|1|414|4028|356|148|33|27|12|0|
ac43113d540647787155996a3e7ca4ebccb9be93|Mon Aug 05 22:25:44 CEST 2019|Add more clarification on what "access" means in expireAfterAccess(). Previous comment doesn't mention "containsKey()"|0|0|1|414|4028|356|148|36|68|6|0|
e2ee9b73506eee7b15cdd9011b82ad88f432c615|Wed Aug 07 17:18:26 CEST 2019|Document that HashBiMap.containsValue() tends to run in faster-than-linear time (overriding the default documentation from AbstractMap.containsValue()).|0|0|1|414|4028|356|148|29|56|11|0|
588ce172f1270a1a5267933fab5486a048e60025|Thu Aug 08 23:58:49 CEST 2019|Add note about {@code ByteSource.wrap}'s use of the given byte array.|0|0|1|414|4028|356|148|33|56|6|0|
5d20c304e39ca8a920bdfc207a29a75dd0eb8867|Tue Aug 13 22:54:28 CEST 2019|Fix https://github.com/google/guava/issues/3156 by implementing a proper `CollectSpliterators.flatMapTo{Int,Long,Double}`.|0|0|2|414|4028|356|148|33|54|11|0|
eec9354dfb7a1eb543f162352dc38f3b2f6af53e|Thu Aug 15 18:22:46 CEST 2019|Temporarily update public_suffix to include web.app|0|0|1|414|4028|356|148|38|44|7|0|
7ab65d08c22fa95adb987d3b3849e5cab60a1c72|Tue Aug 20 23:28:29 CEST 2019|Add toString() to ForwardingFluentFuture, to match ForwardingFuture|0|0|1|414|4028|356|148|31|61|10|0|
0007cb257b593400097f37cf5fa9c8d5fb598c62|Wed Aug 21 20:05:47 CEST 2019|Fix #3570 by resetting expandTableThreshold and maxRunBeforeFallback after resizing the hashTable.|0|0|1|414|4028|356|148|35|61|6|0|
794a10a4495fd7cd554eb0a9e480708d0277aced|Wed Aug 21 20:09:42 CEST 2019|Automated g4 rollback of changelist 263577879.|0|0|1|414|4028|356|148|36|42|6|0|
6a8b716afa575ab97719b1da980f40e9b27ba024|Fri Aug 23 06:44:21 CEST 2019|Adds constant for the Upgrade-Insecure-Requests header.|0|0|1|414|4028|357|148|31|6|5|0|
89138e916d8c1445fafb40adb7c858a9a8e920ab|Sun Aug 25 21:51:27 CEST 2019|Restore Javadoc unintentionally lost in CL 264984423.|0|0|1|414|4028|357|148|29|6|6|0|
93ce68b41636faafb78d391dcf720e06154862da|Mon Aug 26 17:07:15 CEST 2019|Fix "bug" link that was actually a CL.|0|0|1|414|4028|357|148|28|48|7|0|
11a2cf129cdeccf376674b2ee9326cf79bcd8e23|Mon Aug 26 17:43:07 CEST 2019|Simplify while+break into do-while.|0|0|0|414|4028|357|148|32|4|8|0|
494834bd4e245e5598a724bd462a06672f836627|Mon Aug 26 19:42:32 CEST 2019|Release resources of whenAllSucceed/whenAllComplete once input futures are complete.|0|0|2|414|4028|357|148|34|68|7|0|
109421efed0515d0921da5895cd67e8c102bed0e|Mon Aug 26 19:46:00 CEST 2019|Prepare for removing GWT-RPC support for Guava types by adding a system property that disables it.|1|0|2|414|4028|357|148|52|57|8|0|
f21f4f574a0a1eb42e0f86da933b7ec94e663392|Wed Aug 28 17:41:55 CEST 2019|Fix snapshots (and snapshot javadoc/jdiff) to be created again.|0|0|0|414|4028|357|148|30|2|6|0|
52de2ac182c711213580da1a663d371a489dd540|Wed Aug 28 21:06:43 CEST 2019|Add missing @since, setting it straight to 28.1.|0|0|1|414|4028|357|148|29|43|9|0|
b503ce6589fbb892d2affca6cc7ac07776e2fc15|Wed Aug 28 22:19:29 CEST 2019|Prepare for release 28.1.|0|0|2|414|4028|357|148|33|69|6|0|
bbc26e180ba06dc45daa1aa6a3d56fd14594bb0e|Thu Aug 29 15:57:47 CEST 2019|Release the input futures as soon as we submit the combiner task. But really, redo how we release resources in general.|0|0|4|414|4028|357|148|34|65|6|0|
e0bac74571b81756c4acf767e3ad186b7473a4f8|Thu Aug 29 20:26:53 CEST 2019|Let ListenableFuture implement thenable via a default interface method in J2CL|0|0|0|414|4028|357|148|38|2|7|0|
3eaea28caf415ac7b5adc68c029a14511fbd9c56|Thu Aug 29 22:39:19 CEST 2019|Let ListenableFuture implement thenable via a default interface method in J2CL|0|0|0|414|4028|357|148|31|2|5|0|
a7fe1333440cb39f91bce8ee6292528ea6af42b0|Fri Aug 30 01:26:54 CEST 2019|Update Public Suffix data.|0|0|1|414|4028|357|148|29|39|8|0|
551207b426314b599927de21afc6ae51698cbf3b|Fri Aug 30 16:57:12 CEST 2019|Modify comment about safeOctets.length to be consistent with code.|0|0|1|414|4028|357|148|31|16|7|0|
bdaa4683401dbe9c05e16e6cd2b1ba3caba7c961|Thu Sep 05 20:58:00 CEST 2019|Explicitly document that whenAllComplete will swallow failures (in contrast to waiting for all futures to complete and then propagating the first failure).|0|0|1|414|4028|357|148|33|65|6|0|
950026cc80d35705dbc882b9ded7f5ad41f8b15b|Fri Sep 06 21:52:43 CEST 2019|Combine ImmediateSuccessfulFuture into ImmediateFuture.|0|0|2|414|4028|357|148|30|66|6|0|
020f8673502ffbb31ab2f272e2b4ee26eae40093|Sat Sep 07 00:29:01 CEST 2019|Rollback previous commit.|0|0|2|414|4028|357|148|32|66|5|0|
fd9a17fbdbe6d92d15a0bd449a5d0dbd95e2041b|Thu Sep 12 13:48:14 CEST 2019|Roll forward previous rollback, but without making the type final.|0|0|2|414|4028|357|148|31|72|9|0|
aa73da81be1c3dfd41b10ea6318970d279559b1c|Thu Sep 12 13:48:32 CEST 2019|Fix (and in one case, suppress) low-hanging rawtypes warnings.|0|0|5|414|4028|357|148|46|141|10|0|
e3c1457ca7b6274bc525ff6a2160009796fcbe2b|Thu Sep 12 20:17:48 CEST 2019|Increase various tests' timeouts.|0|0|0|414|4028|357|148|51|3|5|0|
732365b9a00ff101db1f3b1e8089cb9796da51ce|Fri Sep 13 21:04:08 CEST 2019|Export new AtomicLongMapBasherTest to open-source repo.|0|0|0|414|4028|357|148|32|2|5|0|
6de11dffff34314624d53f646e62477611834aaf|Fri Sep 13 21:18:33 CEST 2019|Add @LazyInit and @RetainedWith annotations to the lazily calculated "entries" field of ImmutableSetMultimap.|0|0|1|414|4028|357|148|31|63|10|0|
1ade5b2c0b43f70237c3bd5ab734b0cee8ebddb9|Mon Sep 16 14:35:22 CEST 2019|Let ListenableFuture implement thenable via a default interface method in J2CL.|0|0|0|414|4028|357|148|32|2|7|0|
b9aaec3f7531ac6e371355f54ae7ff11d35d5ec6|Mon Sep 16 21:12:31 CEST 2019|Add test for behavior described in #1900|0|0|0|414|4028|357|148|31|2|5|0|
a8870a09f130d2807194e1325b12e393232d9996|Tue Sep 17 19:35:35 CEST 2019|Undo test CL 9a50815df26be7416be0fac489e29feee7a3c220.|0|0|1|414|4028|357|148|30|40|5|0|
4276ecb1e6f53b3c7460d2c599b4bcdab6f493af|Thu Sep 19 00:26:12 CEST 2019|Add Splitter.splitToStream().|0|0|1|414|4029|357|148|31|15|7|0|
2fdb5194fbdf139c93d49c03d41d359cd1693b92|Thu Sep 19 01:23:01 CEST 2019|Add comment explaining TABLE and MULTIPLIER in CharMatcher.Whitespace|0|0|1|414|4029|357|148|32|16|9|0|
36d53edd09f561ec14464a897a03f2b4f26fc0b3|Thu Sep 19 02:42:56 CEST 2019|Rollback of adding Splitter.splitToStream().|0|0|1|414|4028|357|148|30|14|6|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Splitter.splitToStream(java.lang.CharSequence), newSymbol=]
0faa8fd78f575dce2b88f79a71446e016cab6b05|Thu Sep 19 14:20:53 CEST 2019|Rollback of change to let ListenableFuture implement thenable via a default interface method in J2CL.|0|0|0|414|4028|357|148|29|2|5|0|
86b30cb5c6b060fb86d6e96e0ab8df8e6ebd0e6b|Thu Sep 19 14:36:53 CEST 2019|Clean up leftovers from MapMaker.makeComputingMap:|0|0|1|414|4028|357|149|32|38|7|0|
6e9069225a46bb152fb7b3fc20324c1600b397df|Tue Sep 24 17:26:15 CEST 2019|Test iteration over a collection containing null.|0|0|0|414|4028|357|149|33|2|5|0|
473b5b7339473fea887281989f20e6af22c9b07d|Wed Sep 25 20:28:39 CEST 2019|s/a/an/|0|0|1|414|4028|357|149|30|13|8|0|
5a8f19bd3556012ed9e65cd4268a85ddde95733f|Wed Sep 25 20:31:34 CEST 2019|Add Splitter.splitToStream().|0|0|1|414|4029|357|149|33|17|8|0|
c7ef0cc93be9b76a708287345cfdb3963bcf4cca|Sun Sep 29 15:36:30 CEST 2019|Add Futures.submit().|0|0|1|414|4031|357|149|37|71|6|0|
afd127cbc84a70c360c388d192915b8b919e2e42|Mon Sep 30 22:21:04 CEST 2019|Update errorprone to 2.3.3|0|0|0|414|4031|357|149|38|2|6|0|
2278123479357836b9090b0e14bca8222c5b0459|Tue Oct 01 14:55:11 CEST 2019|Fix 2 bugs in MediaType parameter handling:|0|0|1|414|4031|357|149|33|68|5|0|
2220eb21ff7e63c7e6c658bc5b49d953d1860c64|Tue Oct 01 23:05:52 CEST 2019|Add missing @since 20.0.|0|0|1|414|4031|357|149|32|6|8|0|
4ef2111641f149876dbf45bf9c3c221f30639670|Wed Oct 02 14:20:31 CEST 2019|Add constant for the Cross-Origin-Opener-Policy header.|0|0|1|414|4031|358|149|29|6|5|0|
9bd98d1d19e5a5e659d01f9e4aaf7c0b803e79ce|Wed Oct 02 16:44:36 CEST 2019|Check the array indexes in Quantiles.ScaleAndIndexes is non empty.|0|0|1|414|4031|358|149|31|21|6|0|
81b1094ca14fc12afd891fc1203081192e539529|Wed Oct 02 17:15:10 CEST 2019|Simplify some code.|0|0|4|414|4031|358|149|36|109|6|0|
ba7f51ff91b16a3ec42825be83641c47440eb2bc|Wed Oct 02 17:21:08 CEST 2019|Document the JDK 9+ alternative to `Iterators#forEnumeration`|0|0|1|414|4031|358|149|37|60|6|0|
67dd062cb9cf27c366eaf51260c1585aff9027fe|Wed Oct 02 17:38:45 CEST 2019|Add a MIME type MPEG-DASH (mpd files)|0|0|1|414|4031|359|149|33|66|5|0|
e3ee00d6769d219c9646a17114fa00e2955b54aa|Wed Oct 02 17:48:58 CEST 2019|Fix the logic that decides whether to use currentRequestThreadFactory() under App Engine.|0|0|2|414|4031|359|149|31|61|6|0|
188a218963327052c9004a67f483c6e7f7e3aa15|Wed Oct 02 18:33:56 CEST 2019|Add testlib readme.|0|0|0|414|4031|359|149|32|2|7|0|
786c3d84f11482451217a9fd76b886a0d2a8afe3|Wed Oct 02 18:54:53 CEST 2019|Change Quantiles' compute() methods for multiple indexes to return a map with entries in the order in which the indexes were provided in the call to indexes().|0|0|1|414|4031|359|149|30|21|5|0|
e33f7ee731d92a7a0db627cfe49c4d8851fe5d41|Wed Oct 02 20:12:25 CEST 2019|Bump version, which went out of date since the previous CL was created.|0|0|0|414|4031|359|149|30|2|8|0|
433d8dfc824d91e438483ba1191068867ff1d603|Wed Oct 02 22:12:56 CEST 2019|Use if statement instead of for statement for a single item.|0|0|1|414|4031|359|149|32|73|7|0|
b5a3f4b9652763e3f264fae34ba6439051164f3b|Wed Oct 02 22:25:48 CEST 2019|Upgrade maven source plugin from 2.1.2 to 3.1.0|0|0|0|414|4031|359|149|32|2|8|0|
7fdf1a64313fd6335f4ae4160ddad70971124ccd|Wed Oct 02 22:50:53 CEST 2019|Document the JDK 9+ alternative to `MoreObjects#firstNonNull`|0|0|1|414|4031|359|149|31|14|8|0|
5496c37d4d904869297c2ced1f0d20e6f1507eaa|Wed Oct 02 23:33:00 CEST 2019|Change tryParse methods to explicitly document that they throw NPE if the input is null.|0|0|4|414|4031|359|149|38|35|6|0|
491fe70163262b0da469da4fa7856a0aa5b9ce09|Fri Oct 04 18:30:23 CEST 2019|Remove duplicate null check from EnumMultiset.|0|0|1|414|4031|359|149|33|52|9|0|
0e94fb5bb8a6c3a4084854c87335d2e6fa20a97e|Tue Oct 08 21:54:22 CEST 2019|Address TSAN errors:|0|0|4|414|4031|359|149|38|61|6|0|
5f2c9fde7ae7d392ae9ef416b91ec79cd94bd431|Wed Oct 09 18:44:07 CEST 2019|Require tokens to be non-empty.|0|0|1|414|4031|359|149|34|64|7|0|
08bbf53ab0a16a18a80c269227c2621d46790020|Wed Oct 09 22:00:56 CEST 2019|Log warnings for users who send Guava types over GWT-RPC.|0|0|3|414|4031|359|149|33|50|5|0|
742846b94354c5e85558af7eec9a18a69151a2d0|Wed Oct 09 22:15:36 CEST 2019|Steam -> Stream in the names of certain locals in ByteStream.|0|0|1|414|4031|359|149|30|17|5|0|
f79c4fe0a732e86745ad56b4f2435ede2b43b6dd|Wed Oct 09 23:01:43 CEST 2019|[OpenSearch] Add MediaType for "application/opensearchdescription+xml"|0|0|1|414|4031|360|149|29|68|9|0|
368c33722aa18c0c1f49816ce396bc72c9904c2a|Wed Oct 09 23:41:54 CEST 2019|Revert previous CL:|0|0|3|414|4031|360|149|32|48|5|0|
5f37e53fd73540acdc1d69e33ecc8a91827890a7|Thu Oct 10 17:35:01 CEST 2019|switch to an internal annotation for ignoring JRE requirements|1|0|1|414|4031|360|149|31|56|5|0|
7752a0b1983a48ea40258e797815a907db2de782|Thu Oct 10 20:03:42 CEST 2019|Rename package-private Duration APIs:   saturatedToNanos() -> toNanosSaturated()   saturatedToMillis() -> toMillisSaturated()|0|0|12|414|4031|360|149|38|111|6|0|
543a7be6d9b25f128604f5d176414f180d5a7ce7|Thu Oct 10 22:14:09 CEST 2019|Suppress more GoodTime errors.|0|0|2|414|4031|360|149|31|67|11|0|
e1286450777b73bdd81952efcbb830d8851d214f|Fri Oct 11 18:49:03 CEST 2019|Log warnings for users who send Guava types over GWT-RPC.|0|0|3|414|4031|360|149|33|56|6|0|
bf4627d8cd692f600fda6315813edd1318cc60dc|Mon Oct 14 15:56:03 CEST 2019|update failureaccess version to match docs with code|0|0|0|414|4031|360|149|32|2|9|0|
e2f4eba6369abc8f1e5790304d8374807ada8027|Wed Oct 16 12:35:45 CEST 2019|Add Stream support to Stats and StatsAccumulator.|0|0|2|414|4039|360|149|33|27|6|0|
2480f414ae5cf6436523188e51a4def373595a24|Wed Oct 16 23:01:35 CEST 2019|Resolve some rawtypes warnings in Converter|0|0|1|414|4039|360|149|36|60|6|0|
cff0c80bde24971a3478257ab3e74e45554c8d7a|Fri Oct 18 22:08:38 CEST 2019|Fix ByteStreams.skipUpTo to avoid making unnecessary allocations.|0|0|1|414|4039|360|149|29|18|10|0|
7575f5c518478e69c5ff7d458f49fa522442e664|Mon Oct 21 22:48:55 CEST 2019|Fix ImmutableList#of Javadoc|0|0|1|414|4039|360|149|31|50|7|0|
4497e2a620892a0540a7d739519cdf77612539fc|Mon Oct 21 23:34:04 CEST 2019|Attempt to fix inheriting Javadoc from the JDK again.|0|0|0|414|4039|360|149|30|2|7|0|
453e808a97f9eac4b62fe5dd48283b4902f5d218|Tue Oct 22 18:09:42 CEST 2019|Add ElementOrder.stable().|0|0|1|414|4039|361|149|28|62|6|0|
c81c0368048d0d7ae0c34ab307a9fcf0c0e2be47|Tue Oct 22 19:30:49 CEST 2019|Use int[] for entries and byte[]/short[]/int[] for hashtable|1|0|4|414|4039|361|149|39|59|8|0|
dcd373bd033f64c2dbe2dc7253e54f10d8bf2e3e|Tue Oct 22 19:51:07 CEST 2019|Fix Javadoc errors (and sometimes warnings).|0|0|19|414|4039|361|149|45|134|7|0|
79983a915f6c37bda832b37ab6f9e7ac09c57388|Tue Oct 22 21:44:03 CEST 2019|Make inheriting Javadoc from the JDK work under JDK11.|0|0|0|414|4039|361|149|38|2|6|0|
5ff90caf1562f89aaed56252f05b4a5bf8b57197|Wed Oct 23 21:26:01 CEST 2019|Prepare to move gwt-user to test scope after we remove GWT-RPC support.|0|0|0|414|4039|361|149|29|2|7|0|
048103edf106c49524eddaa12116f5a1f53ce39a|Thu Oct 24 21:53:35 CEST 2019|Rollback|0|0|0|414|4039|361|149|29|2|7|0|
3d33cd45f5d15f58b9365b63478f4d1f936f4e85|Fri Oct 25 21:25:57 CEST 2019|Update 'adding Guava to your build using Gradle' snippet|0|0|0|414|4039|361|149|29|2|10|0|
ab5b0fad1e844963259a667b636eb2a832f7ccd1|Fri Oct 25 21:36:53 CEST 2019|Format README.md.|0|0|0|414|4039|361|149|34|3|11|0|
957c37116fb2cc52b2f8b405871b65a84917f2ca|Mon Oct 28 18:10:14 CET 2019|Move the SetFuture check into AbstractFuture.toString() and out of pendingToString(), so that even if the latter is overriden we can include the SetFuture detail.|0|0|3|414|4039|361|149|38|80|11|0|
90989fb8f9e850e812efa79378179849b5945d17|Wed Oct 30 17:53:52 CET 2019|Fix toString exception handling change from 957c37116fb2cc52b2f8b405871b65a84917f2ca.|0|0|1|414|4039|361|149|45|30|7|0|
a2e6acc0098cd09e1f7578a01b25d16ce9413872|Wed Oct 30 21:19:22 CET 2019|Handle StackOverflowError from both pendingToString and appendUserObject.|0|0|1|414|4039|361|149|32|27|8|0|
49f5a6332a63737dff70cf77472f9867bc7ca6eb|Thu Oct 31 16:25:36 CET 2019|Update Documentation|0|0|1|414|4039|361|149|34|19|12|0|
775aec93a86a08898a6942387fe9474ab478a5f7|Tue Nov 05 06:27:12 CET 2019|Add @SuppressWarnings("DoNotMock") to mocked com.google.common types|0|0|0|414|4039|361|149|34|2|7|0|
6f32e84c698168f2351bd53bd046c1a6d01eb987|Tue Nov 05 15:55:07 CET 2019|Add GraphBuilder.incidentEdgeOrder().|0|0|2|414|4039|361|149|32|20|7|0|
706b6be0cfb069dbae17cd113d4d2fcf21327e10|Tue Nov 05 18:03:13 CET 2019|Remove usages of deprecated CharMatcher functions|0|0|2|414|4039|361|149|31|74|7|0|
2fee65ef8b48a354b1cae71ec32d57c8c8b2d695|Tue Nov 05 18:17:40 CET 2019|Have ImmutableGraph.Builder set incidentEdgeOrder to stable().|0|0|2|414|4039|361|149|32|61|7|0|
ff9fb8d30edbba5357615ecebf69120f1de556f7|Wed Nov 06 01:42:14 CET 2019|Migrate org.mockito.Matchers#any* to org.mockito.ArgumentMatchers|0|0|0|414|4039|361|149|30|2|9|0|
f741a536e0eb6dc22d6d3de1f3b94aba40cc3d73|Thu Nov 07 16:02:11 CET 2019|Upgrade maven source plugin from 3.1.0 to 3.2.0 Upgrade maven jar plugin from 3.0.2 to the latest 3.2.0 Maven source and jar plugins both introduced build reproducibility in 3.2.0|0|0|0|414|4039|361|149|32|2|8|0|
85f355e9a93c277a008c87cfe07bab4f363b56cb|Thu Nov 07 17:44:32 CET 2019|Simplify some range constraints.|0|0|3|414|4039|361|149|32|34|8|0|
0fb8666e1a1671ca74c4c033763eda6c7df39b3a|Thu Nov 07 18:38:26 CET 2019|Add javadoc in attempt to help readers differentiate Futures.allAsList() vs Futures.successfulAsList().|0|0|1|414|4039|361|149|33|64|6|0|
ca6d0e72e5cabb493a083321876f0eefc8bee59d|Thu Nov 07 23:02:22 CET 2019|Fix broken links in AtomicDouble.|0|0|1|414|4039|361|149|32|15|8|0|
ad529ca5425cb17bd9e26a7f7fc06e80bef0d692|Mon Nov 11 10:56:02 CET 2019|Roll forward CL 269313299.|0|0|0|414|4039|361|149|32|2|12|0|
12f5d49ab20764d52b0a3f8912896a70b7d1f9ca|Wed Nov 13 15:35:09 CET 2019|Migrate from arrays to ImmutableSets in InetAddressesTest.|0|0|0|414|4039|361|149|31|2|10|0|
cc6cff2df9d66d4d9cd18f378cb75d03f7002852|Wed Nov 13 16:47:18 CET 2019|Clean up some unnecessary initializations.|0|0|0|414|4039|361|149|29|2|8|0|
d7a0b3d367734c07f75bfdfd1f4bb5636d59a088|Wed Nov 13 23:36:23 CET 2019|Move the big integer conversion code into InetAddresses|0|0|1|414|4042|361|149|33|76|9|0|
8a7d36a8e5044096919a3512aa6734c95032f38c|Thu Nov 14 15:59:53 CET 2019|Add support for scope IDs to InetAddresses.isInetAddress().|0|0|1|414|4042|361|149|31|67|6|0|
473706097f35ec1eab6a2bf652716dc7272eee9c|Thu Nov 14 18:07:45 CET 2019|Format with Locale.ROOT.|0|0|1|414|4042|361|149|33|69|6|0|
a0d798a54f99f85819dd75e92a16d74b8f4f1ffe|Thu Nov 14 18:49:57 CET 2019|Use Truth assertions instead of JUnit assertions in InetAddressesTest.|0|0|0|414|4042|361|149|29|2|8|0|
129e3149275613c67a31f4beeb428b316aea802f|Thu Nov 14 19:09:49 CET 2019|Correct documentation of getCoercedIPv4Address.|0|0|1|414|4042|361|149|29|67|8|0|
134ffd3798ebbd6c89e910f698f912c637db0269|Mon Nov 18 13:25:38 CET 2019|checker-qual 2.10.0|0|0|0|414|4042|361|149|31|2|7|0|
5be5fb6b422ea438081901b4990b1bf1a4d7fd5a|Mon Nov 18 18:45:16 CET 2019|Update Public Suffix data.|0|0|1|414|4042|361|149|28|39|8|0|
71de4064ac005e1d283b8a6d4153aab834903720|Tue Nov 19 15:05:34 CET 2019|Update to Truth 1.0|0|0|0|414|4042|361|149|36|2|7|0|
543af39035841f68e004842e4fe34b303b8f6fb5|Tue Nov 19 19:19:01 CET 2019|subject verb agreement|0|0|0|414|4042|361|149|31|2|9|0|
2cc483055a488f25de7caeadd8152f7ffd04ca8d|Wed Nov 27 02:54:23 CET 2019|Use internal fast path for getting failure without allocating a wrapper ExecutionException|0|0|2|414|4042|361|149|30|65|7|0|
c22d8dd6432cde97a2b2c671cf1585443b20c0cd|Wed Nov 27 12:35:38 CET 2019|Support incidentEdgeOrder for directed Graphs|0|0|2|414|4042|361|149|30|57|7|0|
032201fe0c7d974b1c92a3bfa8164fbc70012f2b|Wed Nov 27 15:10:47 CET 2019|Add @JsOptional annotations to the 2nd parameter of the 'then' method, since the second parameter is actually optional. This satisfies JsCompiler type checking.|0|0|0|414|4042|361|149|31|2|9|0|
0b2aacf4fd74b67e919463936209a119b654e3af|Wed Nov 27 17:54:09 CET 2019|Make incidentEdges() return edges in insertion order|1|0|8|414|4042|361|149|35|88|10|0|
2ee7f9da69308c56d5af71267e8b797cedaf31ba|Thu Nov 28 00:46:42 CET 2019|AbstractNetwork: fix bug in AbstractNetwork.hasEdgeConnecting() causing it to throw if either endpoint was not in the graph.|0|0|1|414|4042|361|149|35|64|9|0|
1c757483665f0ba8fed31a2af7e31643a4590256|Fri Nov 29 12:38:18 CET 2019|Refactor AbstractGraphTest to allow for tests with ImmutableGraph.|0|0|0|414|4042|361|149|38|2|9|0|
b03067f2c78b2352cba8f5136c9aa0be667068a5|Fri Nov 29 12:47:52 CET 2019|Merge AbstractXGraphTest and ConfigurableSimpleXGraphTest, thus removing one layer from the AbstractGraphTest tree.|0|0|0|414|4042|361|149|32|2|8|0|
b50d343580e0139429adc61e1af4a92c50ba3927|Fri Nov 29 12:59:21 CET 2019|Make the AbstractGraphTest tree more sane with only leaf nodes non-abstract and merge the tests for with and without self-loops.|0|0|0|414|4042|361|149|32|2|9|0|
ecf0f7cd5eaea9d078bc77d95513e1d88a50172a|Fri Nov 29 13:09:35 CET 2019|Merge StandardMutableDirectedGraphTest and its variant with stable order.|0|0|0|414|4042|361|149|31|2|9|0|
530dd557b569c4fcc31f41b329e07971be647f3a|Fri Nov 29 13:20:00 CET 2019|Add StandardImmutableDirectedGraphTest|0|0|0|414|4042|361|149|33|2|7|0|
f4b3f611c4e49ecaded58dcb49262f55e56a3322|Sun Dec 01 03:06:28 CET 2019|Annotate benign race in AbstractTable so as to avoid TSAN issues.|0|0|1|414|4042|361|149|32|37|6|0|
3cfa33d462f2b90f764966a9bc2e39cf8de16260|Mon Dec 02 20:21:11 CET 2019|Use "IPv4" instead of "Ipv4" for consistency.|0|0|1|414|4042|361|149|31|65|9|2|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.net.InetAddresses.fromIpv6BigInteger(java.math.BigInteger), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.net.InetAddresses.fromIpv4BigInteger(java.math.BigInteger), newSymbol=]
cfcc49e7280fa0c26286fe04aebecf0441875a24|Wed Dec 04 00:35:37 CET 2019|Add @SuppressWarnings("GoodTime") to GWT supersource for LocalCache operating in primitive millis.|0|0|0|414|4042|361|149|36|2|11|0|
6a6e5421760e8ef2461d6d35061c27fa7863100e|Thu Dec 05 17:57:38 CET 2019|The Graph tests now consistently call graphAsMutableGraph.foo() when testing foo(), rather than proxy methods|0|0|0|414|4042|361|149|30|2|8|0|
b54558e0aa90584582ac8862ef24833f39b1ed05|Thu Dec 05 18:16:40 CET 2019|Make equally named putEdge() method adjacent|0|0|0|414|4042|361|149|53|2|6|0|
ac122499bd07ed588e1e37b1040f05bfa8a9c862|Fri Dec 06 05:22:25 CET 2019|Support stable incident edge order for directed Immutable[Value]Graphs.|0|0|3|414|4042|361|149|31|67|9|0|
4eea0f79c27864039a653ec4ca09ef7585e439fc|Fri Dec 06 20:43:57 CET 2019|Add @DoNotMock to several com.google.common types|0|0|29|414|4042|361|149|51|147|12|0|
add430908ec77c1859f84bd753b84a5eca57b327|Sun Dec 08 16:47:19 CET 2019|Add @DoNotMock to ListenableFuture|0|0|2|414|4042|361|149|42|62|11|0|
b4a573fae2a1b4c78652dba3a59da72ff6b80a13|Mon Dec 09 18:18:18 CET 2019|Fix small error with how CaseFormat calculates the StringBuilder size when converting one format to another.|0|0|1|414|4042|361|149|33|16|9|0|
5e8b3cd5d5da6a4779d02ef43af43d37dd4ec07f|Mon Dec 09 22:19:27 CET 2019|Remove @DoNotMock from HashFunction.|0|0|1|414|4042|361|149|33|23|10|0|
44823f8787dc3b14b0b3ef1690a03ae1a00d07c5|Mon Dec 16 17:07:55 CET 2019|Format the Javadoc of ByteStreams.read() with @throw tags.|0|0|1|414|4042|361|149|34|21|7|0|
b224ce81f7c5d4efcf6b1f74ca6cc56cac9aae63|Tue Dec 17 17:57:43 CET 2019|Actually map Thenable helper interface to JS IThenable. The name is different to avoid a clash with elemental2 IThenable.|0|0|0|414|4042|361|149|33|2|8|0|
c15cd8040f5d802b396c39911a11eb2a12c4b3a4|Tue Dec 17 22:17:39 CET 2019|Use Error Prone's @GuardedBy enforcement to make sure that mutable state is appropriately synchronized.|0|0|1|414|4042|361|149|31|11|10|0|
c6d0c3782937ad89f68a85e4b9c0142212c77cbe|Thu Dec 19 22:13:36 CET 2019|Expand Android access to Compact*Hash*|0|0|0|414|4042|361|149|30|2|8|0|
78b54f8250067837828e9b7235d7db6f8d728a24|Fri Dec 20 19:44:57 CET 2019|Make Compact(Linked)HashMap fall back to a java.util.LinkedHashMap if hash flooding is detected, just as the immutable collections do.|0|0|2|414|4042|361|149|33|63|8|0|
ad3551a8f499f43e3b249274347614addbda183b|Mon Dec 23 16:56:51 CET 2019|Fix Maven test failures from CL 286604248: - Make "abstract" class abstract. (And make its constructor package-private while we're at it.) - Add a dummy test method (similar to what FilteredCollectionsTest already has).|0|0|1|414|4042|361|149|32|58|8|0|
8fa9a12cf5c84e338c4019ffd8f44d476f9e90b2|Mon Dec 23 17:00:00 CET 2019|Add @SuppressWarnings for new violations of the GuardedBy checker.|0|0|0|414|4042|361|149|35|2|7|0|
afde11dbcad73c695f237e1f009cb8b9d3298d49|Mon Dec 23 17:10:26 CET 2019|refactor: Lambda can be replaced method reference|0|0|1|414|4042|361|149|31|64|7|0|
32003c2deafd98c272413c0de17c60d01a6672a8|Mon Dec 23 20:58:55 CET 2019|Correct @Nullable and use Ints.constrainToRange()|0|0|2|414|4042|361|149|32|62|8|0|
7adf07df455556d26c75d5b539e4d704535cc794|Mon Dec 23 20:58:55 CET 2019|Fix external GWT breakage from CL 272446666.|0|0|0|414|4042|361|149|34|2|7|0|
d9b73b20964b9d87457c56d1e422a67f45c2c257|Thu Dec 26 19:59:11 CET 2019|Stop classifying AbstractHashFloodingTest as a test to be run directly.|0|0|0|414|4042|361|149|30|2|7|0|
87a383e06a30c89e1e07689c2ea7a005a1379743|Thu Dec 26 21:31:31 CET 2019|documenting IllegalArgumentException for too-large Cartesian Product in Sets.cartesianProduct|0|0|1|414|4042|361|149|30|67|10|0|
fb6ef19602c060f46b7554d538f9f848c827eadd|Thu Dec 26 22:43:43 CET 2019|Prepare for release 28.2.|0|0|7|414|4042|361|149|38|128|9|0|
28b36c80447729d1edeffedd70dc4a7ac91e76ce|Fri Dec 27 11:27:08 CET 2019|Assign the result of contains() and containsAll() to a variable.|0|0|0|414|4042|361|149|38|2|7|0|
c08594fe71101397918901e6587ff54c6e15185a|Mon Dec 30 21:50:47 CET 2019|Fix instances of {#foo} in Javadoc.|0|0|2|414|4042|361|149|36|39|8|0|
7ce4007f6ad555a92bc7813f4f64af720cc53a90|Fri Jan 03 17:26:38 CET 2020|Update to JUnit 4.13|0|0|0|414|4042|361|149|32|3|7|0|
859df70a783f9e554c1f8446d27bc88e038c7860|Fri Jan 03 20:53:46 CET 2020|Note another case in which our implementation of TypeVariable throws UnsupportedOperationException.|0|0|1|414|4042|361|149|30|58|11|0|
8f0c0a205b185f6a8429d7679f61cdfeae9f3d09|Fri Jan 03 21:06:23 CET 2020|Suppress ignored return values from Collection#contains*.|0|0|0|414|4042|361|149|40|2|9|0|
1f5dff3b97101d6ef4f6e03f47e2283eba6325f1|Mon Jan 06 18:26:06 CET 2020|Ensure that we generate a non-empty Javadoc jar for guava-gwt.|0|0|0|414|4042|361|149|36|3|9|0|
845c97429eb25924c2d7f6749b533fa6297aaee1|Tue Jan 07 12:33:32 CET 2020|ValueGraph: Support incidentEdgeOrder=stable|0|0|1|414|4042|361|149|34|21|8|0|
6c3fe557cc2064a0dacc9915c146fd0cf2344a86|Tue Jan 07 12:34:08 CET 2020|ImmutableValueGraph: Support incidentEdgeOrder=stable|0|0|2|414|4042|361|149|37|75|13|0|
a080a6d0821c2604aed6b8f1617483df599c436b|Tue Jan 07 12:34:38 CET 2020|Graph: Support stable incidentEdgeOrder for undirected graphs|0|0|2|414|4042|361|149|36|57|10|0|
c06cffc3f5a5a9b7cfae13c2704ab46466c37e7c|Tue Jan 07 12:35:14 CET 2020|Add StandardImmutableUndirectedGraphTest|0|0|0|414|4042|361|149|33|2|8|0|
34c4578eff6a346e1546ea691b88699e39f4f24d|Tue Jan 07 14:33:11 CET 2020|Suppress GuardedBy violation in LocalCache.|0|0|1|414|4042|361|149|32|93|7|0|
9d669517970a872b56a9311b4ea3d706cd67fa98|Tue Jan 07 17:53:40 CET 2020|Add test case stable incidentEdgeOrder with a self loop to AbstractStandard[Un]directedGraphTest.|0|0|0|414|4042|361|149|34|2|7|0|
e8e8ba8ec171067456bea40692033e278409b652|Tue Jan 07 17:54:10 CET 2020|Add test for stable incidentEdgeOrder support for mutable undirected valuegraphs in ValueGraphTest|0|0|0|414|4042|361|149|32|2|8|0|
682a25ff8761619736b7ef594de596fc6328b226|Tue Jan 07 20:03:58 CET 2020|Fix off-by-one error in AsciiDigits.asciiDigits initialization.|0|0|1|414|4042|361|149|32|24|10|0|
5214a10b1eac7a1f7267ee6ed5cf82c9cd76ad0b|Wed Jan 08 14:20:23 CET 2020|Disable GWT-RPC by default in the open-source release.|0|0|3|414|4042|361|149|33|58|8|0|
cde576ec0005403d0664e25d1df55e3fc0a498b9|Wed Jan 08 18:39:26 CET 2020|Add incidentEdgeOrder() to the [Value]Graph interface|0|0|13|414|4046|361|149|43|82|9|2|BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.ValueGraph, newSymbol=com.google.common.graph.ValueGraph.incidentEdgeOrder()],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.Graph, newSymbol=com.google.common.graph.Graph.incidentEdgeOrder()]
70164025a8cac6ddec8c25c721e2ad427d7d75b7|Wed Jan 08 18:40:13 CET 2020|Make incidentEdgeOrder() public for [Value]Graph|0|0|3|414|4049|361|149|37|66|8|0|
13eaba58986988c11631b3cd7a6d02320425848d|Mon Jan 13 17:45:44 CET 2020|Upgrade checker-qual to v2.11.1.|0|0|0|414|4049|361|149|31|2|10|0|
6d764a41431fac6adb4894dfc78180e6f8065014|Tue Jan 14 18:52:19 CET 2020|Update Public Suffix data.|0|0|1|414|4049|361|149|29|39|7|0|
7a545da7b0c00a7404a1bfb6e9c3219d74acd3bd|Thu Jan 16 02:50:58 CET 2020|Rewrite the Stopwatch docs to explain elapsed vs wall time|0|0|1|414|4049|361|149|32|13|7|0|
d44669df2f1540ae52c278181377f0adea88f8fb|Fri Jan 17 17:47:07 CET 2020|Update Resource.getResource to allow ignoring return value for existence checks.|0|0|1|414|4049|361|149|32|57|7|0|
66c2f795f2cbc90e104dde9d73ceb484b184b34b|Tue Jan 21 17:20:55 CET 2020|Write type annotations on types, not on declarations|0|0|6|414|4049|361|149|35|100|6|0|
d9348500d6e61692dc1ac60e2ea2575c12ec2091|Fri Jan 24 18:12:39 CET 2020|Link directly to guava.dev for Javadoc.|0|0|0|414|4049|361|149|37|2|9|0|
c6f48dced81bc0dbfb8df3cfcc9475d6b9e0f460|Mon Feb 03 21:06:57 CET 2020|Annotate upperCase and lowerCase with @LazyInit.|0|0|1|414|4049|361|149|28|21|7|0|
6e0c5b5d50a3e457ae0d787f7c9be7b48c10120b|Fri Feb 07 00:54:15 CET 2020|Make AbstractFuture compatible with ForkJoinPool by catching exceptions from property retrieval.|0|0|1|414|4049|361|149|30|27|6|0|
c892d5699bc640c78e6b35413c68932dbbcfe327|Tue Feb 11 03:28:17 CET 2020|Add missing @Nullable.|0|0|1|414|4049|361|149|32|45|7|0|
9be29901b40f34ec72cadb0232b9546bd5618043|Wed Feb 12 17:18:00 CET 2020|Apply changes from https://github.com/google/guava/pull/3778 (which edited guava.dev) to README.md.|0|0|0|414|4049|361|149|29|2|6|0|
18cdc775081924cfeec87bfe5ff3547ed81784f6|Thu Feb 13 12:40:08 CET 2020|Rename 'ConfigurableX' to 'StandardX' for [Value]Graph, which better captures what these implementations represent.|3|3|4|414|4049|361|149|33|66|11|0|
4941afc8a87518f500e2e28220cda0dc5a065f24|Tue Feb 18 18:36:30 CET 2020|Make TopKSelector ctor throw IllegalArgumentException when buffer size is too big to be held in memory.|0|0|1|414|4049|361|149|36|50|8|0|
b1c77b7df3b8abfeffbfdedcdd7bf0fe95bbcbd5|Tue Feb 18 20:35:21 CET 2020|Annotate FluentIterable.from(FluentIterable) with @DoNotCall|0|0|1|414|4049|361|149|35|72|8|0|
d40b923176315e4ee449169cb9b7a4a7b989f961|Wed Feb 19 15:54:54 CET 2020|Fixing a typo in some Guava javadocs.|0|0|2|414|4049|361|149|38|60|6|0|
6cfc96410918beb06443e9b1b28e702627e1e2c6|Thu Feb 20 20:24:17 CET 2020|Invalidate delegate iterators during clear() and make FPP tests more strict|0|0|1|414|4049|361|149|32|57|9|0|
0479dcdc4a7a904016727caae0439c240835451e|Fri Feb 21 23:23:39 CET 2020|Simplify redundant `Collection.addAll()` calls.|0|0|0|414|4049|361|149|42|2|6|0|
9d60a8f5941265876f21a0ed7b37b8b224461a82|Tue Feb 25 17:51:07 CET 2020|Refactor AbstractNetworkTest in the same way as AbstractGraphTest was refactored earlier: Allow the graph under test to be immutable.|0|0|0|414|4049|361|149|41|2|7|0|
7f6c9654209df8dfa6377422738dc0ab11394509|Tue Feb 25 23:29:32 CET 2020|Make Compact(Linked)HashSet fall back to a java.util.LinkedHashSet if hash flooding is detected, just as the immutable collections do.|0|0|2|414|4049|361|149|33|51|7|0|
5345f11f280c6ce8ff37065a71acd8cb0a54d660|Wed Feb 26 16:56:51 CET 2020|Make lenientToString easier for nullness-analysis tools to understand.|0|0|1|414|4049|361|149|34|12|7|0|
a204557d8015c6b6caa7afd4f62cedb3b50b39da|Wed Feb 26 17:56:05 CET 2020|Make GWT compilation of tests no longer flaky.|0|0|0|414|4049|361|149|32|2|8|0|
245358b839c4a4e5ac31a4a07799855d56649ded|Wed Feb 26 18:39:35 CET 2020|Update Public Suffix data.|0|0|1|414|4049|361|149|33|40|6|0|
b21d5719e6a0ce6f4e2f71eec09bf55908ede062|Thu Feb 27 17:25:18 CET 2020|Rename 'ConfigurableX' to 'StandardX' for Network, which better captures what these implementations represent.|2|2|5|414|4049|361|149|40|72|6|0|
1e870add58b2132c1f4e86e26a7bcc46210fc57f|Thu Feb 27 18:10:36 CET 2020|Remove remaining documentation references to configurable implementations|0|0|6|414|4049|361|149|34|66|7|0|
a94114b13fc73e1756f310a7f964574834cd4e34|Thu Feb 27 18:48:49 CET 2020|Delete unused method|0|0|0|414|4049|361|149|32|2|7|0|
a8107fae90ddec3a1c6d4dbba80ccf9c8a90c54d|Mon Mar 02 19:38:48 CET 2020|Make nullWriter().append(...) (both overloads) accept a null CharSequence.|0|0|1|414|4049|361|149|32|17|9|0|
766943b4b267717b896f86a1e39d7e18c2289c94|Mon Mar 02 20:15:09 CET 2020|Store each result in a "Present<V>" instance instead of an Optional<V>.|0|0|1|414|4049|361|149|35|70|9|0|
559e1ac1359e8d5dc0941aa72691698185d65407|Mon Mar 02 20:15:23 CET 2020|Migrate from @MonotonicNonNull to @Nullable.|0|0|40|414|4049|361|149|59|257|10|0|
f6c3cd268a1d6815abef9a5f829510ae950423e0|Mon Mar 02 23:42:11 CET 2020|Rollback a8107fae90ddec3a1c6d4dbba80ccf9c8a90c54d pending internal break|0|0|1|414|4049|361|149|53|19|9|0|
064fac35d71231aba35062d1965983ecd36b6873|Tue Mar 03 00:16:54 CET 2020|Roll-forward of a8107fae90ddec3a1c6d4dbba80ccf9c8a90c54d|0|0|1|414|4049|361|149|35|19|6|0|
4aaa57479a9bad7ba12e2d60e031f09f5d7646f2|Fri Mar 06 23:01:17 CET 2020|Document that our racy access is safe.|0|0|1|414|4049|361|149|32|61|6|0|
824322afb283e0e2a42ea37acb5e493393684da3|Tue Mar 10 11:40:08 CET 2020|Simplify AbstractGraphTest by replacing allowsSelfLoops() and incidentEdgeOrder() by graph accessors.|0|0|0|414|4049|361|149|36|2|7|0|
8565a9522f004aafe84826a8769a8b87519c58e7|Tue Mar 10 11:45:11 CET 2020|Simplify the AbstractNetworkTest tree (undirected branch): Delete StandardSimpleUndirectedNetworkTest|0|0|0|414|4049|361|149|34|2|7|0|
12dff868341369bcd19b2fb985569b5862adbe56|Tue Mar 10 11:59:23 CET 2020|Move all tests from StandardMutableUndirectedNetworkTest to AbstractStandardUndirectedNetworkTest|0|0|0|414|4049|361|149|33|2|6|0|
21e95ba07d438cabe32d11fc391a4539d0c9328e|Tue Mar 10 12:26:00 CET 2020|Make StandardMutableUndirectedNetworkTest parameterized so that it tests both with and without self loops.|0|0|0|414|4049|361|149|35|2|6|0|
53b15338d1cb1dcaae413bdd804b43ea6f1745b2|Tue Mar 10 12:38:05 CET 2020|Simplify the AbstractNetworkTest tree (directed branch): Delete StandardSimpleDirectedNetworkTest|0|0|0|414|4049|361|149|31|2|7|0|
f0575b14482e43f91e4c55c5da424e74914173ca|Tue Mar 10 12:47:17 CET 2020|Move all tests from StandardMutableDirectedNetworkTest to AbstractStandardDirectedNetworkTest|0|0|0|414|4049|361|149|33|2|6|0|
d261ceea3997f4711d7a1c212b88ccbbff0374ca|Tue Mar 10 12:57:31 CET 2020|Make StandardMutableDirectedNetworkTest parameterized so that it tests both with and without self loops.|0|0|0|414|4049|361|149|33|2|7|0|
a749ce9257ddab4a11fe49ef38eb4e15d33738a4|Mon Mar 16 16:29:35 CET 2020|Replace Thread.currentThread().interrupted() with Thread.interrupted() or Thread.currentThread().interrupt(), whichever seems appropriate.|0|0|0|414|4049|361|149|29|2|6|0|
bfacdb00ce93fc2f442298dfbbdedbb483011703|Mon Mar 16 17:10:26 CET 2020|Implement some more toString() methods for debugging.|0|0|2|414|4049|361|149|30|63|10|0|
9ee69976b640eb146be2b7910ffaaf7dc201e677|Mon Mar 16 18:00:02 CET 2020|Store `values` in a local first instead of repeatedly reading it from a field.|0|0|1|414|4049|361|149|35|67|7|0|
931e83f969de433f6f0cad9f09eafe0c1d44325e|Tue Mar 17 21:01:14 CET 2020|Add `Duration`-based default methods to `ListeningScheduledExecutorService`|0|0|1|414|4053|361|149|31|62|10|0|
82b3e9806dc3422e51ecb9400d8f50404b083dde|Thu Mar 19 17:12:46 CET 2020|Fixed double slicing ByteSource (#3501).|0|0|1|414|4053|361|149|35|59|6|0|
0deafc440a6aa3cec7bef35b61d0055b4ddf6e00|Fri Mar 20 19:21:04 CET 2020|Add some unit tests for base64Url() in BaseEncoding|0|0|0|414|4053|361|149|31|2|9|0|
6880b6804dc897dd5e7419ab24116b44b6bbee0c|Tue Mar 24 21:41:27 CET 2020|Make sure native.js files are included in the Guava GWT release.|0|0|0|414|4053|361|149|29|2|6|0|
ce37aee980860798636f80ff67e0c00999a47696|Tue Mar 24 22:00:16 CET 2020|Add missing `@since` for 1-arg `ServiceManager.addListener`.|0|0|1|414|4053|361|149|31|84|7|0|
86e36201255c2c123076e2163bdcd654f848989f|Sat Mar 28 14:14:59 CET 2020|Deprecate 1-arg overload of ServiceManager.addListener.|0|0|1|414|4053|361|150|34|83|10|0|
9f3bae585349808c5a6fe6c88db0f573036d553f|Mon Mar 30 18:26:40 CEST 2020|Add immediateVoidFuture() to Futures.java to create an immediately succeeding ListenableFuture<Void>.|0|0|1|414|4054|361|150|36|66|6|0|
7e0fe90ca8d55a55dc035e4103a9e36f301f8f28|Tue Mar 31 07:52:57 CEST 2020|Introducing floor(E) and ceiling(E) method in GWT emulated ImmutableSortedSet package.|0|0|1|414|4054|361|150|36|59|13|0|
5f2fbf27b2f8f7c72adfe6b366c7aaec2e36b81b|Tue Mar 31 16:17:47 CEST 2020|Making headSet(E, boolean), tailSet(E, boolean) public in GWT emulated ImmutableSortedSet.|0|0|1|414|4054|361|150|33|57|7|0|
89450c275c7020414ad88180fc35b1867994299f|Wed Apr 01 16:27:02 CEST 2020|Make `Duration` overloads of `awaitRunning` and `awaitTerminated` `final` in all `Abstract*Service` classes.|0|0|4|414|4062|361|150|33|59|6|4|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.Service.awaitTerminated(java.time.Duration), newSymbol=com.google.common.util.concurrent.AbstractScheduledService.awaitTerminated(java.time.Duration)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.Service.awaitTerminated(java.time.Duration), newSymbol=com.google.common.util.concurrent.AbstractService.awaitTerminated(java.time.Duration)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.Service.awaitRunning(java.time.Duration), newSymbol=com.google.common.util.concurrent.AbstractService.awaitRunning(java.time.Duration)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.util.concurrent.Service.awaitRunning(java.time.Duration), newSymbol=com.google.common.util.concurrent.AbstractScheduledService.awaitRunning(java.time.Duration)]
d86c8508eb5160fae28cee82963b5313c23780b1|Wed Apr 01 17:54:45 CEST 2020|Extend deadline to fix flakiness.|0|0|0|414|4062|361|150|31|2|8|0|
c34f5842044d1564dda8460e7fedaa0e134d881f|Thu Apr 02 21:01:22 CEST 2020|Add j2cl specializers for Doubles.min/max, Floats.min/max, Ints.min/max, and Shorts.min/max.|4|0|4|414|4062|361|150|42|30|10|0|
31999ae6f56e71c341333afde90fcf66c13ce657|Fri Apr 03 16:40:35 CEST 2020|Change return type of ServiceManager.servicesByState() to ImmutableSetMultimap.|1|0|1|414|4062|361|150|37|94|10|1|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.util.concurrent.ServiceManager.servicesByState(), newSymbol=com.google.common.util.concurrent.ServiceManager.servicesByState()]
32d099ab7c38d1c4beb8db6cdf380153b2898616|Wed Apr 08 10:56:36 CEST 2020|Merge StandardSimpleDirectedSortedNetworkTest into StandardMutableDirectedNetworkTest.|0|0|0|414|4062|361|150|33|2|9|0|
170d4e05375d53d3786d0ada8ff5f0d68419ad01|Wed Apr 08 11:05:34 CEST 2020|Move tests from Multinetwork-test classes to base classes in preparation for merging the Multinetwork-classes with the mutable classes.|0|0|0|414|4062|361|150|34|2|8|0|
cccae92edf4eff0e58c287254ded09e27ec60e48|Wed Apr 08 11:21:08 CEST 2020|Merge StandardDirectedMultiNetworkTest into StandardMutableDirectedNetworkTest.|0|0|0|414|4062|361|150|32|2|7|0|
7015107b778be608a16193946e2371a604c36f9a|Wed Apr 08 11:29:37 CEST 2020|Merge StandardUndirectedMultiNetworkTest into StandardMutableUndirectedNetworkTest|0|0|0|414|4062|361|150|30|2|11|0|
ff0271c0ea31db2d5ebce279c183d5dc0ab28c3b|Wed Apr 08 11:36:16 CEST 2020|Add StandardImmutableDirectedNetworkTest.|0|0|0|414|4062|361|150|33|2|7|0|
afe2d9100b7a3285c8a59c5245198e3fa3865644|Wed Apr 08 23:47:57 CEST 2020|Fix unnecessary method access level escalation.|0|0|2|414|4062|361|150|32|23|7|0|
067129401668d9be2d5fe4c3e40b8afef663b52c|Thu Apr 09 19:54:21 CEST 2020|Try yet again to inherit docs from the JDK when building Javadoc for snapshots.|0|0|0|414|4062|361|150|29|2|8|0|
053918ec2b444ce275c1bc380a9c735ddc2b80c4|Thu Apr 09 20:48:12 CEST 2020|Use @code instead of @link to allow imports to be stripped|0|0|3|414|4062|361|150|30|80|7|0|
9537f78cc652a4f5e77f4f418d5bbf4f49674515|Thu Apr 09 21:25:34 CEST 2020|Don't request openjdk-11-source.|0|0|0|414|4062|361|150|33|2|9|0|
dc46627fea51a6c5fc7a0f1506c6e85f75a3a15e|Fri Apr 10 17:16:41 CEST 2020|Remove `@Beta` from `Service` and `ServiceManager`.|0|0|6|414|4062|361|150|33|84|8|0|
ae63c19b38ca815272fb3352dd69f51998c04d72|Mon Apr 13 21:59:40 CEST 2020|Add `@since NEXT` for recently added `graph` APIs.|0|0|6|414|4062|361|150|37|62|8|0|
510021e1ab0fc10d7f31428a022a27fa75ce3fe4|Mon Apr 13 22:44:02 CEST 2020|Prepare for release 29.0.|0|0|9|414|4062|361|150|34|102|8|0|
5cee4f7300da4d7ff87c92663ab105f5e433f0cc|Tue Apr 14 08:40:47 CEST 2020|Fix typo.|0|0|1|414|4062|361|150|34|62|11|0|
1f6bbc13b9644d03b61668e0a88d600013bc68fe|Tue Apr 14 15:41:49 CEST 2020|Remove duplicate assumption.|0|0|0|414|4062|361|150|35|2|8|0|
caa3ce8daea5c30f3d02a30425a27e6600c0b879|Tue Apr 14 17:15:18 CEST 2020|Exclude Vim swap files from the jar we build.|0|0|0|414|4062|361|150|33|3|10|0|
7fcdfa5710d5f3c2f11c8061d4984f862c9c8f5d|Mon Apr 20 18:08:12 CEST 2020|This change suppresses DefaultPackage check for any java class which uses the default java package, in preparation for enabling a compiler error that will prevent new instances of the bug.|0|0|0|414|4062|361|150|32|3|7|0|
7afcafb1b705878d41bc1402c5cadc843c4c6b7f|Tue Apr 21 21:29:15 CEST 2020|Update readme with some grammar corrections.|0|0|0|414|4062|361|150|29|4|8|0|
42013c5effdd392e07e57f267aba448f79df2599|Wed Apr 22 22:32:01 CEST 2020|Hide InternetDomainName.region() from GWT/j2cl.|0|0|1|414|4062|361|150|31|55|10|0|
13d288a4195e9df4bfe151637174413b757becff|Thu Apr 23 14:15:50 CEST 2020|Update Public Suffix data.|0|0|1|414|4062|361|150|33|40|8|0|
bc7248bcb0a987e18cf7a4e7ef92ed458086f4b0|Thu Apr 23 19:19:59 CEST 2020|Fix GitHub #3873 by reimplementing Cartesian{Set,List}.contains.|0|0|2|414|4062|361|150|32|66|7|0|
1f55c42201a61814303c50d001261d938b5f8b10|Tue Apr 28 17:22:09 CEST 2020|Move comment to a more appropriate location|0|0|1|414|4062|361|150|36|58|8|0|
24fe5d982f0c06b7e2b24d0439c392d7ed62896c|Tue Apr 28 22:05:26 CEST 2020|Fixed TreeRangeMap.SubRangeMap.putCoalescing|0|0|1|414|4062|361|150|31|54|8|0|
215b1f0dd715d58d61aa31e3a7a8ca4ac48e218a|Mon May 04 17:10:30 CEST 2020|Fix PowerSet.equals() when comparing to another PowerSet whose items are the same, but in a different iteration order.|0|0|1|414|4062|361|150|38|72|8|0|
c3bf73187a0863c35101069d3cf10963840bda3d|Tue May 05 16:49:57 CEST 2020|Adds constants for `Cross-Origin-Embedder-Policy(-Report-Only)?` headers ([W3](https://wicg.github.io/cross-origin-embedder-policy/#COEP)).|0|0|1|414|4062|363|150|34|6|7|0|
181807f3951db714f0fb77f24c031460612ce916|Tue May 05 22:29:11 CEST 2020|Implement tryLockUninterruptibly|0|0|1|414|4064|363|150|33|25|9|0|
cbe09804a5174f0fda6db8c351678b79764ca547|Tue May 12 04:54:30 CEST 2020|Ensure QueueWorker does not outlive SequentialExecutor on iOS.|0|0|1|414|4064|363|150|35|57|7|0|
d39d2196daab31c9196fb2fe502b5952925a7178|Tue May 12 19:32:21 CEST 2020|In ImmutableIntArray, use Arrays.copyOf when expanding the internal array.|0|0|1|414|4064|363|150|29|52|12|0|
48c7cfd5e38c8492e4356aab5c633254d1ce43be|Tue May 12 22:25:45 CEST 2020|Implemented lastIndexOf in CartesianList|0|0|1|414|4064|363|150|36|51|9|0|
6484ca86c8f4156d48f4b6b8e9ea80243ac54913|Wed May 13 19:13:08 CEST 2020|Suppress IdentityHashMapBoxing check|0|0|0|414|4064|363|150|36|2|9|0|
1926d72dc0b7f97f6a506eacee45a685f72e2323|Thu May 14 00:50:48 CEST 2020|Adding the Sec-CH-UA header. Ignore ClangTidy. It has to do with the constant naming scheme for httputils.h.|0|0|1|414|4064|364|150|35|8|8|0|
45958948bea8f7aaf38c1a3dd200ce0263c0bcfa|Fri May 15 23:24:35 CEST 2020|Adding the rest of the client-hints headers (besides Arch which I don't think we need).|0|0|1|414|4064|369|150|32|7|8|0|
abea45853ffda02029e37b6d5236bc849a9942bd|Sat May 30 01:48:07 CEST 2020|Document that Ranges are immutable.|0|0|1|414|4064|369|150|31|49|10|0|
571cf66bac6840bee7ab9878bb643eb8d758fc90|Mon Jun 01 22:32:30 CEST 2020|Added support for the "font" Top-Level Media Type (https://tools.ietf.org/html/rfc8081)|0|0|1|414|4064|376|150|33|67|8|0|
592202a6223b3c7834e495489e49a8628c50421f|Tue Jun 02 18:38:49 CEST 2020|guava: disavow VisibleForTesting|0|0|1|414|4064|376|150|33|3|7|0|
eee079f2a1074b1295dab075456b49acb86a9818|Wed Jun 03 20:30:38 CEST 2020|Remove @DoNotCall from FluentIterable.from(FluentIterable).|0|0|1|414|4064|376|150|29|65|6|0|
f87596bbba76821bf89205eb751b5455c6000ccb|Thu Jun 04 12:25:14 CEST 2020|Update Public Suffix data.|0|0|1|414|4064|376|150|36|42|8|0|
2b5c096ddf412241c320edccd207d089d5b79b21|Fri Jun 05 02:36:59 CEST 2020|Implement BigIntegerMath.roundToDouble, which rounds to the nearest representable double value.|1|0|1|414|4065|376|150|30|16|10|0|
2d346856c76dc80aac3be2fbe3fe58b99c64f210|Fri Jun 05 19:31:36 CEST 2020|Efficient UnmodifiableMultimap forEach|0|0|1|414|4065|376|150|30|71|7|0|
958186c07127f1cd9bb9ba82da99da75745766df|Tue Jun 09 00:23:01 CEST 2020|Add Comparators.min/max|0|0|1|414|4069|376|150|34|41|8|0|
04997b1cf7b34ed2d93a6070a91d5c393ae7f1a7|Tue Jun 09 01:09:18 CEST 2020|Discourage Ordering.min(E, E) and max(E, E) in favor of Comparators.min(E, E, Comparator) and max(E, E, Comparator).|0|0|1|414|4069|376|150|33|50|8|0|
9ff8d4a40354ee7eb8d3c154f42601cf2b39920c|Tue Jun 09 23:17:41 CEST 2020|Suppress IdentityHashMapBoxing check|0|0|0|414|4069|376|150|34|2|12|0|
a602bbebb3c666683cdc3089cf9edd31a64a7d8d|Wed Jun 10 15:30:51 CEST 2020|Break retain-cycle in Converter.java, when used in J2ObjC target.|0|0|1|414|4069|376|150|36|65|9|0|
89e677367ebf9557c7f018144c49b1b29aa09783|Thu Jun 11 16:34:02 CEST 2020|Cleanup ByteStreamsTest.java to fix a couple of IntelliJ warnings/suggestions.|0|0|0|414|4069|376|150|33|2|11|0|
14dd8fe040f5c1d1326bbc2ef7ed22e786444261|Thu Jun 11 16:56:36 CEST 2020|Inline `ByteStreamsTest#assertEquals(byte[], byte[])`|0|0|0|414|4069|376|150|34|2|10|0|
a1e9a0bd1260a657f7502e5b81d38dfb818cd1d4|Fri Jun 12 23:25:55 CEST 2020|Upgraded ByteStreams#copy(InputStream, OutputStream) to use the faster FileChannel if possible. See also https://medium.com/@xunnan.xu/its-all-about-buffers-zero-copy-mmap-and-java-nio-50f2a1bfc05c for some background.|0|0|1|414|4069|376|150|33|19|8|0|
e839f94fb4eb1240f10763586aa92a7f701caa89|Mon Jun 15 20:37:09 CEST 2020|Revert a1e9a0bd1260a657f7502e5b81d38dfb818cd1d4|0|0|1|414|4069|376|150|30|17|12|0|
e51aba174d2bb04030ff352dd92e23a30f018acc|Tue Jun 16 22:23:36 CEST 2020|Add a Guava wiki entry about finding the min/max for various circumstances.|0|0|1|414|4069|376|150|34|46|8|0|
31ca01fd3d1b2f874f975f4f8415bdb9cb7a4386|Wed Jun 17 01:22:32 CEST 2020|Avoid reentrancy in ExecutionSequencer.|0|0|1|414|4069|376|150|34|55|8|0|
bbf3e1b440f03ec0e810d22b1f1872e199e32c7c|Wed Jun 17 05:05:31 CEST 2020|Revert db53357fea477695deeaa32746660bf86d6d51c1|0|0|1|414|4069|376|150|32|60|8|0|
633abf2c62823421ced4440f0dfe10295d5671e2|Wed Jun 17 22:19:31 CEST 2020|Add LongMath.roundToDouble.|0|0|1|414|4070|376|150|34|23|8|0|
ac0c3424411c0974010d754042d75e9d82665379|Thu Jun 18 00:52:03 CEST 2020|Add a test for the bug introduced by CL 316779471.|0|0|0|414|4070|376|150|31|2|10|0|
6cc0bb9e5b93839526f08e5fa4775fd445d8b771|Fri Jun 19 00:09:11 CEST 2020|Avoid reentrancy in ExecutionSequencer.|0|0|1|414|4070|376|150|32|59|9|0|
0ad38b88bd92319508ebc0b28bab5be1fbf1891f|Tue Jun 23 15:58:15 CEST 2020|Fix memory leak in SingletonImmutableBiMap which would appear in transpiled J2ObjC code.|0|0|1|414|4070|376|150|34|57|8|0|
2814650b55eedd297b89bdd2a769df9fbb565461|Tue Jun 23 19:12:41 CEST 2020|Correct LongMath.roundToDouble for values at and near Long.MAX_VALUE|0|0|1|414|4070|376|150|32|24|9|0|
689d2b3ba38cf49b56b091a2b1687aed58a46f91|Thu Jun 25 19:08:06 CEST 2020|In ImmutableDoubleArray and ImmutableLongArray, use Arrays.copyOf when expanding the internal array.|0|0|3|414|4070|376|150|35|57|11|0|
bee4f3c7ed1c79938a03c6c798a0b5f77b37ace7|Thu Jun 25 22:58:56 CEST 2020|Implement BigDecimalMath.roundToDouble.|1|0|2|415|4071|376|150|35|20|11|0|
e352076da65aa3afb5dc59cfd3c1f41574b5ebeb|Tue Jun 30 16:36:59 CEST 2020|Fix Converter.java by moving @RetainedWith annotation to the correct side of the cycle.|0|0|1|415|4071|376|150|36|65|10|0|
03f43227fea9c02bc7bc0fb374001f37c9d5cb43|Wed Jul 01 20:41:52 CEST 2020|Remove unnecessary comment.|0|0|1|415|4071|376|150|34|24|7|0|
a5ddc61fceb44eb48faecb93c33f4b447cfd0ced|Mon Jul 06 19:22:26 CEST 2020|Hint with the type that `oldFuture` / `newFuture` / `ref`'s `Future` never contains a value.|0|0|1|415|4071|376|150|32|62|8|0|
90c9b9e0a54d952839412f89e0cdc5a96e7e2193|Tue Jul 07 16:50:17 CEST 2020|Fix annotation positions in Guava.|0|0|1|415|4071|376|150|32|51|11|0|
d7a26416109381a6770681bc6c299567615e8341|Wed Jul 08 05:13:38 CEST 2020|Update Public Suffix data.|0|0|1|415|4071|376|150|35|42|8|0|
a47ab01edc470112a24d91f0026b4a369c609989|Fri Jul 10 01:31:39 CEST 2020|Declare static types as Queue instead of Deque.|0|0|1|415|4071|376|150|32|17|8|0|
b5210ca95c4303bd91fdb9cb1d063f5680183f0b|Sat Jul 11 00:32:35 CEST 2020|Speed up Traverser and cut about 30 lines of code.|0|0|1|415|4071|376|150|30|53|9|0|
ea4e95008d7e17e624302e84c61ee5c15d310b73|Sat Jul 11 16:12:39 CEST 2020|Add toString() for SequentialExecutor's worker runnable|0|0|1|415|4071|376|150|33|57|8|0|
32f2d770f7117015385083ec6e755336ddf18f21|Tue Jul 14 01:56:16 CEST 2020|Make breadth-first iterators consume the successor iterators lazily, and refactor to  cut about 150 lines of code.|0|0|1|415|4071|376|150|35|48|8|0|
da93601899485518956c211e81017833071838b9|Wed Jul 15 18:23:16 CEST 2020|Unconditionally call setException for RejectedExecutionException.|0|0|2|415|4071|376|150|36|67|8|0|
6410f18c06074e75effb7823c97df98385f822d0|Thu Jul 16 02:19:40 CEST 2020|Add @DoNotMock to Traverser.|0|0|1|415|4071|376|150|31|49|8|0|
02811634236ccef4b38d319007cffdf96ea5b7c0|Tue Jul 21 20:06:08 CEST 2020|Warn about stack overflows from directExecutor, add more warnings (including on AbstractFuture.set* and cancel), and move warnings to directExecutor itself.|0|0|4|415|4071|376|150|36|78|6|0|
f07b9540dc11c667686cfea24849659decc5a0d8|Wed Jul 22 17:40:53 CEST 2020|Add awaitTerminationUninterruptibly.|0|0|1|415|4074|376|150|32|24|11|0|
3a3ebc99da0722361be913e1bab0b99bd7cf0b88|Thu Jul 23 01:41:57 CEST 2020|Shorten toString for AbstractFuture implementations inside util.concurrent.|0|0|1|415|4074|376|150|38|35|12|0|
0f9977ba3684ed59e319af0e18d4ae22f70839d0|Thu Jul 23 16:07:54 CEST 2020|De-beta toImmutable* methods in GWT variants("emulated") of common.collect.|0|0|0|415|4074|376|150|38|2|9|0|
f5a69c33fcbaa2f570f9fc29a2f4dd4431dae264|Tue Aug 04 07:16:43 CEST 2020|Ensure that the set returned by ImmutableMap<K, V>.keySet() is serializable when K is serializable, and similarly for values().|0|0|6|415|4074|376|150|36|82|10|0|
5e519d91d038636fa5f786908aa856ba5470846d|Wed Aug 05 15:32:49 CEST 2020|Fix memory-leaks in LocalCache on iOS, caused by:|0|0|1|415|4074|376|150|38|88|11|0|
70ed7f8ef3f0e844d2b5e90569016f82bf0a689a|Fri Aug 07 15:00:02 CEST 2020|[Efficiency] Creates a variant of parseHextet and parseOctet that can work on a larger string with start and end indices.|0|0|1|415|4074|376|150|33|72|10|0|
081c486173032e6096c912e3c297c1d74eddcf93|Fri Aug 07 16:34:20 CEST 2020|[Efficiency] Modifies textToNumericFormatV4 to parse the input String in place.|0|0|1|415|4074|376|150|32|67|8|0|
aa18c74a25d31228d65894a28a6c049a743edc51|Mon Aug 10 16:54:06 CEST 2020|Avoid boxing in Doubles.constrainToRange() and Floats.constrainToRange().|0|0|2|415|4074|376|150|35|24|10|0|
b6b4dc49b1ccfc4141181b24a26eadc689b48b43|Tue Aug 11 19:28:45 CEST 2020|Remove `@Beta` from `Multimaps.toMultimap`.|0|0|1|415|4074|376|150|33|77|12|0|
6193884f7bf96b468fb44bf03b904130d2926c2d|Tue Aug 11 22:11:21 CEST 2020|Bring back previously deleted SerializedForms so that old data can still be read.|0|0|3|415|4074|376|150|34|69|11|0|
d8e921fd2df52184708d6eb9516e4869f548d841|Wed Aug 12 19:46:23 CEST 2020|[Efficiency] Modifies testToNumericFormatV6 to parse the input String in place.|0|0|1|415|4074|376|150|35|32|9|0|
23be71af402328c19e00c333e370e31357308b4b|Wed Aug 19 18:23:25 CEST 2020|Switch GWT rules implementation from native to .bzl.|0|0|0|415|4074|376|150|37|2|8|0|
04bfbe284cd386cbd42c1ae1bca50033ce297c69|Thu Aug 20 19:39:53 CEST 2020|Don't directly call ByteBuffer, etc. methods that have covariant returns in Java 9+.|2|0|8|415|4074|376|150|38|39|8|0|
dbc87a93ef4a5f541e35b1b733adb203f43e4328|Fri Aug 21 17:15:52 CEST 2020|Adding SEC-CH-UA-Arch header.|0|0|1|415|4074|377|150|31|6|12|0|
9b972a21f793fcbb1ac2d41d6c6d6c97d54adb25|Fri Aug 21 22:07:51 CEST 2020|Work around an android bug in LockSupport, this time with @CanIgnoreReturnValue|1|0|2|415|4075|377|150|34|75|12|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.concurrent.FutureTask.get(long,java.util.concurrent.TimeUnit), newSymbol=com.google.common.util.concurrent.ListenableFutureTask.get(long,java.util.concurrent.TimeUnit)]
554546c9718a8c0bdae233a4afd5102180ef55ca|Mon Aug 24 22:04:23 CEST 2020|Throw if @Subscribe is applied to a method that takes a primitive parameter.|0|0|2|415|4075|377|150|36|89|9|0|
fec0dbc4634006a6162cfd4d0d09c962073ddf40|Wed Aug 26 19:02:56 CEST 2020|Deprecate Files.createTempDir(), noting that better alternatives exist for Android as well as for users running Java 7 or later.|0|0|1|415|4075|377|151|34|70|8|0|
bafab6242d7fb05560b6d3ebe0f7cfc7f30803f2|Mon Aug 31 03:34:35 CEST 2020|Update Public Suffix data.|0|0|1|415|4075|377|151|30|39|10|0|
7fd0ff50fbaf0221d9483b99db56ad604ef878d1|Fri Sep 04 07:43:20 CEST 2020|Minor whitespace-only change|0|0|0|415|4075|377|151|32|2|9|0|
52e048ed6c7f60505313b5347162dd7f3f38dd80|Wed Sep 09 23:39:19 CEST 2020|Make ClosingFuture available in open-source Guava (@Beta).|1|0|0|438|4124|377|152|33|73|9|0|
7fad458114db33674e5fd563f5688eba24e0612e|Fri Sep 11 17:11:13 CEST 2020|Fix typos and remove unnecessary words.|0|0|1|438|4124|377|152|36|31|9|0|
1bfbca3bcb06c5cbe10a5cb6843d85b09c643e0e|Mon Sep 14 17:46:05 CEST 2020|Bump checker-qual from 2.11.1 to 3.5.0.|0|0|0|438|4124|377|152|33|2|9|0|
6fff2f52b426c048559128ff51026db36ddc136d|Tue Sep 15 17:07:56 CEST 2020|Remove spurious annotation to fix Travis build.|0|0|1|438|4124|377|152|29|69|13|0|
c9570eae6909040347e1be0260bc1e7ff154ef44|Wed Sep 16 12:29:12 CEST 2020|Make EqualsTester test that non-Strings are not equal to their String representation.|0|0|0|438|4124|377|152|34|2|9|0|
f4b88ee66f03e43f89940bbfd9e9df7a4d368036|Wed Sep 16 21:05:31 CEST 2020|Fix AssertionError from Range.gap.|0|0|1|438|4124|377|152|33|51|8|0|
e1ca35a5cc1c3738b3619570517bf7ffc91d1e0b|Wed Sep 16 21:42:37 CEST 2020|Fix random typos in Guava.|0|0|3|438|4124|377|152|38|76|8|0|
1c721cd977eae2d6e414b0c5805d724b67e72335|Thu Sep 17 00:56:53 CEST 2020|Add back web.app to public suffix list|0|0|1|438|4124|377|152|36|39|8|0|
c4d50482135080458858c1cd7d0c34b0a86a857d|Thu Sep 17 15:53:58 CEST 2020|Externally restore @DoNotMock to ClosingFuture.Combiner, and externally add @DoNotMock to ClosingFuture itself.|0|0|1|438|4124|377|152|30|87|9|0|
902f10fb3dab70410da7ba772e36db075c3ef107|Thu Sep 17 19:26:39 CEST 2020|Fix UnsupportedOperationException from TreeRangeSet.subRangeSet(...).add(...).|0|0|1|438|4124|377|152|35|60|9|0|
f7e47955005cd2cc443e1eb878ab3de92af49b83|Thu Sep 17 22:05:17 CEST 2020|Deal with Class#isInstance checks which are guaranteed to be false.|0|0|0|438|4124|377|152|40|3|8|0|
d582751ba2f35c634a5ac1e69037fdb1f39eacdb|Fri Sep 18 16:05:09 CEST 2020|Change `ForwardingMap.remove(Object)` parameter name from `object` to `key` to match `Map.remove(Object key)`.|0|0|1|438|4124|377|152|34|51|8|0|
27307b8a0245baf81ed317c4b67f9a195e446efa|Mon Sep 21 22:55:51 CEST 2020|Add brief test to Range for `[_, X].isConnected([X, _])`;|0|0|0|438|4124|377|152|31|2|12|0|
b2f5f5bd33320628904145c9e52a095ade1c178b|Thu Sep 24 19:46:06 CEST 2020|Internal changes to ClassPath.|0|0|1|438|4124|377|152|35|72|8|0|
62b1fda8bf3c5313568230bb60a7ea5a6eaac679|Fri Sep 25 18:54:59 CEST 2020|Internal changes to ClassPath.|0|0|1|438|4124|377|152|32|69|9|0|
9ae23cd2edc542c0352b9888da5a4d66811cf1a4|Mon Sep 28 17:34:17 CEST 2020|Remove unnecessary parens|0|0|1|438|4124|377|152|34|24|11|0|
44b6fcf294b6ad1b22618e24146a8f2f2b267770|Mon Sep 28 20:07:26 CEST 2020|Also print Android test failures.|0|0|0|438|4124|377|152|32|2|9|0|
7f164ef7e2cc536754ecdd6a26ddc3dabaa398ec|Mon Sep 28 21:44:14 CEST 2020|Fix ClassPathTest on Android JDK 11.|0|0|1|438|4124|377|152|32|70|9|0|
0cb89dd110ce88770207889901e95ea2ac896932|Wed Sep 30 16:57:26 CEST 2020|Fully remove GWT-RPC support externally.|0|0|0|438|4124|377|152|36|2|8|0|
52882ad975d2a55bb624143f02387515b3b01f46|Thu Oct 01 12:13:33 CEST 2020|Mark BigDecimalMathTest as fully @GwtIncompatible.|0|0|0|438|4124|377|152|29|2|8|0|
56ce4a9bf3de022fb5749783b1d496a81b53c760|Thu Oct 01 19:14:44 CEST 2020|Begin tweaking Guava sources to satisfy Copybara.|0|0|5|438|4124|377|152|36|81|9|0|
0404b2009aa179ad45ed32eb2af84701467b59e5|Fri Oct 02 18:11:58 CEST 2020|Remove GWT tests from open source.|0|0|0|438|4124|377|152|47|2|12|0|
40ed93d8a68ad4c163fb67b32cc521783c390ef5|Fri Oct 02 18:49:39 CEST 2020|Tweak TODOs.|0|0|2|438|4124|377|152|32|83|11|0|
e8a8330bbf6805007038f9e407560f96e7fd3d69|Fri Oct 02 19:06:18 CEST 2020|Remove a couple GwtSerializationDependencies classes from open-source Guava after all.|0|0|0|438|4124|377|152|30|3|11|0|
392f6bf278d6baa907f3d737bb5a216f94ff0794|Tue Oct 06 17:31:05 CEST 2020|Move gwt-user dep to test scope.|0|0|0|438|4124|377|152|32|2|6|0|
fb363f1882cf24b47b6cf091f50893fa4ae7b320|Wed Oct 07 17:07:20 CEST 2020|Run all zero of our GWT tests during presubmit/CI.|0|0|0|438|4124|377|152|31|2|7|0|
ed4bb2b5d3f797785e68a0eec42c0ea6184d50de|Wed Oct 07 17:38:02 CEST 2020|Check the generated PublicSuffixPatterns.java into Piper.|0|0|1|438|4124|377|152|31|44|12|0|
90f01b880f0b691ba51bb119ec98bc67f2eb50bf|Thu Oct 08 15:40:00 CEST 2020|Omit TestModuleEntryPoint from open-source repo.|0|0|0|438|4124|377|152|31|2|9|0|
62ea9014fcd19711dd235a3036650518f91fe017|Thu Oct 08 22:56:29 CEST 2020|Clarify `HashMultimap` docs about concurrency.|0|0|1|438|4124|377|152|26|54|9|0|
be1c0d8a4fd00e6c5cc362cc0021db5e9e3d4fef|Thu Oct 08 23:07:33 CEST 2020|Removed all references to now useless workaround|0|0|6|438|4124|377|152|35|97|9|0|
9f03c474d92e724d2193ab64b5cfbd2b232a715e|Mon Oct 12 21:18:07 CEST 2020|Clarify how to use `IteratorTester`|0|0|0|438|4124|377|152|32|2|8|0|
1b20a37cf8fdf8f7622c4a50a4c59e072c375452|Tue Oct 13 03:34:56 CEST 2020|Add a bunch of warnings to ExecutionSequencer.|0|0|1|438|4124|377|152|31|59|12|0|
2ebf27fd45685e7f89bb4aae11e1709d49863717|Tue Oct 13 19:54:32 CEST 2020|Don't call toString() on the results of successful futures.|0|0|1|438|4124|377|152|32|27|8|0|
e3dc2a7a0f3d89b595f6bb3b944bbe996e3824fe|Tue Oct 13 19:55:23 CEST 2020|Fix example in documentation for `IteratorTester`|0|0|0|438|4124|377|152|32|2|9|0|
c3bd4e652ed6879c2dfe58aead623930ca21e4a8|Tue Oct 13 22:13:47 CEST 2020|Clarify that Interner should be preferred instead of String.intern(); the existing language implies it's intended _only_ for other types.|0|0|1|438|4124|377|152|29|44|9|0|
7affc4e29a6dff7bfb5207ebb2f979b849c5dfdd|Wed Oct 14 00:05:02 CEST 2020|Document what happens when FutureCallback throws exception.|0|0|1|438|4124|377|152|33|64|11|0|
bc67a44a1676211b2c6859adbc021c3640e66990|Wed Oct 14 17:58:00 CEST 2020|Add tests which validate the run order of listeners on futures when the output is cancelled to test the behavior added in cl/161148771|0|0|0|438|4124|377|152|32|3|10|0|
19ec35927679a16efe5fe6381d0c18da1bdbc5a5|Thu Oct 15 21:20:58 CEST 2020|Encode all primes less-than 66 into a bitmask|0|0|1|438|4124|377|152|32|28|11|0|
ef5fdf7d0bb7bccc42554c03d555ace89b5d915f|Fri Oct 16 01:05:06 CEST 2020|Added `@CanIgnoreReturnValue` to `cancel`.|0|0|1|438|4124|377|152|31|79|10|0|
661384d0fa41aa4e00aeca720bdf2ca3be52769e|Fri Oct 16 17:50:06 CEST 2020|Remove deprecated method Files.fileTreeTraverser() that isn't being used anymore.|0|0|1|438|4124|377|152|34|69|9|0|
cf9bab3f1ba1e30e26c005a1f867630e8cb525fb|Fri Oct 16 19:57:54 CEST 2020|Prepare for release 30.0.|0|0|8|438|4124|377|152|37|118|9|0|
dfb00017144bf48c408bc4cfcebadc0a0498dc73|Fri Oct 16 20:00:16 CEST 2020|Remove deprecated 1-arg ServiceManager.addListener.|0|0|1|438|4123|377|151|38|76|9|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.util.concurrent.ServiceManager.addListener(com.google.common.util.concurrent.ServiceManager$Listener), newSymbol=]
33f2b153a14e981e9bb1bc3dbc916c66dac00837|Fri Oct 16 20:13:03 CEST 2020|Update IteratorTester example with a greater "steps" value|0|0|0|438|4123|377|151|31|2|9|0|
410627262beccfab185209f0d2e7126177dba7c8|Fri Oct 23 22:47:24 CEST 2020|Add ClassInfo.isTopLevel().|0|0|1|438|4124|377|151|29|68|8|0|
7ef9f97cad23efee4cc18c63b5f3c90ca320f131|Mon Oct 26 16:44:10 CET 2020|Fix minor documentation typos, thanks to @Stephan202 and @jbduncan|0|0|1|438|4124|377|151|27|65|12|0|
013381b7a8a101ad1bb03e01a70bae35eecf161b|Wed Oct 28 18:03:20 CET 2020|Refactor ClassPath: replace Scanner with Location class.|0|0|1|438|4124|377|151|31|65|9|0|
007047bc8f9319feaed95a7d9993404a17e6ba09|Wed Oct 28 19:13:19 CET 2020|Fix documentation for HashCode.toString() that incorrectly claimed it returned in big-endian order.|0|0|1|438|4124|377|151|29|25|9|0|
b4de08caca4f766c1fc5dba1d493ec30700d7609|Fri Oct 30 01:31:47 CET 2020|Optimize Hashing.crc32c() by eliminating two xors for every byte of input.|0|0|1|438|4124|377|151|30|10|9|0|
a48fb4f72490f99a5f62586b2d7468661dca35d1|Tue Nov 03 19:32:15 CET 2020|Add constant for Origin Isolation header|0|0|1|438|4124|378|151|31|7|9|0|
1c4bffa7f5e47fd447fec7740b1fc67f75eca5df|Tue Nov 03 20:57:47 CET 2020|Remove outdated reference in docs|0|0|1|438|4124|378|151|28|62|9|0|
6672ceee4f77b4218ff514b2dff11e40da83789b|Tue Nov 03 21:37:37 CET 2020|Add additional test for `Crc32cHashFunction`.|0|0|0|438|4124|378|151|32|3|11|0|
11517d65524c3ad24f36a45a6162ca16097dcf38|Tue Nov 03 22:03:29 CET 2020|Verify maximumWeight before setting|0|0|1|438|4124|378|151|32|78|8|0|
5c28b153325cd7a32b03354f1f8ee8d0faa8c2d3|Thu Nov 05 22:30:48 CET 2020|Do 16-byte strides in CRC32C in c.g.c.hash, resulting in roughly a 3.3x speedup to 1.5 GB/s.|0|0|1|438|4124|378|151|30|11|9|0|
56bc81287d8fb4036d0364a055d8a11f8ca19a2c|Fri Nov 06 03:47:09 CET 2020|Rollback|0|0|1|438|4124|378|151|31|9|12|0|
d30212b68b8b6c15cabb2432578a29f293813599|Mon Nov 09 19:00:13 CET 2020|Backport `combine` to java7 for `ImmutableList` & `ImmutableSet`.|0|0|0|438|4124|378|151|31|2|9|0|
34552640758d48a1b00e764745ab18a410099ae6|Mon Nov 09 19:36:48 CET 2020|Fix `LoadingCache` minor documentation typo.|0|0|1|438|4124|378|151|30|57|9|0|
c5e2d8d5cb30b1cd73fa0e86af161e140d772e03|Mon Nov 09 22:34:00 CET 2020|Added submitAsync to ClosingFuture.|0|0|1|439|4126|378|151|31|73|8|0|
8319d201cd4db01220fc4733a37b5e1ee6f608e1|Mon Nov 09 22:58:44 CET 2020|Add `X-Request-ID` to `HttpHeaders`.|0|0|1|439|4126|379|151|27|7|8|0|
93582811a2596b33e24294ab0869ddaafdf66b74|Tue Nov 10 01:30:58 CET 2020|Fix Android test failure in ClassPathTest.|0|0|0|439|4126|379|151|28|2|12|0|
16c5bbcb031fd31de838aca5ac4a61d9915ef8c8|Tue Nov 10 16:22:02 CET 2020|Backport `combine` to java7 for `ImmutableMap`.|0|0|0|439|4126|379|151|30|2|9|0|
ef0261f95bd3aa33551b9a817cd5db9ccca01501|Tue Nov 10 16:25:50 CET 2020|Backport combine to java7 for `ImmutableRangeSet`/`ImmutableRangeSet`.|0|0|0|439|4126|379|151|33|2|9|0|
d739485905a0b82795f1662cf4e8b884cbad3567|Tue Nov 10 21:15:13 CET 2020|Backport `combine` to java7 for Sorted collections & (Immutable)BiMap.|0|0|0|439|4126|379|151|32|2|9|0|
67517b5a5b7627eee39a47917197998b9f974751|Wed Nov 11 10:04:21 CET 2020|Fix memory leaks and potential crashes in HashBiMap, which occur in transpiled ObjC code.|0|0|1|439|4126|379|151|30|56|10|0|
a6752d73acba20295ecdcddd959dac904dbfa4d3|Wed Nov 11 18:35:26 CET 2020|Tidy up description since this shows up in search results, Maven Central, and many other places around the web.|0|0|0|439|4126|379|151|32|2|11|0|
1e2977182836b04eb5306f542892a0856ba606e1|Thu Nov 12 17:15:36 CET 2020|Replaces cycle_finder references to "--whitelist" with "--suppress-list", and "--blacklist" with "--restrict-to".|0|0|0|439|4126|379|151|29|2|9|0|
c28a0f62c26fc5dc456d6036e145ef0aa7f38d1d|Thu Nov 12 18:07:50 CET 2020|Add AndroidAccessToCollectors.|0|0|2|439|4126|379|151|30|84|11|0|
597b86c45e53c60b20ddba85c0f8c5fc8e278d19|Thu Nov 12 21:43:17 CET 2020|Backport ImmutableTable.combine|0|0|1|439|4126|379|151|34|61|9|0|
fe6b3381e1446d6ba0a79bb334e224451b6d2e23|Fri Nov 13 17:02:23 CET 2020|Add to[Immutable]Multiset to AndroidAccessToCollectors|0|0|3|439|4126|379|151|35|75|9|0|
70dfcd22a60cd2f3cf7975fc5d99ae15ea060b5b|Fri Nov 13 17:05:22 CET 2020|Backport combine to Immutable[ListSet]Multimap|0|0|0|439|4126|379|151|32|2|11|0|
50cabc448caedd6c395420b7c5e37a8e16ac1152|Fri Nov 13 17:31:29 CET 2020|Add Multimap collectors to AndroidAccessToCollectors|0|0|4|439|4126|379|151|32|87|8|0|
8cddfe92af159a5cad1dcd96ddaf816e9e186365|Fri Nov 13 22:35:05 CET 2020|Add TableCollectors to AndroidAccessToCollectors|1|0|2|439|4126|379|151|29|59|8|0|
a6ea0890d23b361d47ab1b5a4126fd1b6566d4ab|Sat Nov 14 16:25:32 CET 2020|Fix open source “No tests found in com.google.common.collect.TableCollectorsTest”|0|0|0|439|4126|379|151|32|2|9|0|
c8eb42172046e53264dd4a31ab9a245d2ecf5369|Sun Nov 15 00:58:54 CET 2020|Update Public Suffix data.|0|0|1|439|4126|379|151|30|41|11|0|
751d7c0d5f1fe3cbc067987e7d185763affa9ec7|Tue Nov 17 15:51:38 CET 2020|Make toImmutableEnum[SetMap] to AndroidAccessToCollectors|0|0|3|439|4126|379|151|31|103|10|0|
f3a194a87eadfb6ac6c44f67e9d875259760f7c7|Tue Nov 24 15:13:08 CET 2020|Make toImmutableSortedMap levarage collect collectors|0|0|1|439|4126|379|151|33|62|9|0|
4709fe4d50cf5249b9e5e40fb8917c610831c317|Tue Nov 24 17:39:39 CET 2020|Internal change.|0|0|16|439|4126|379|151|32|144|12|0|
1a020b7e447bddc48b677d702611f58f7c9033cc|Thu Nov 26 12:30:52 CET 2020|PUBLIC: Add missing Override annotations.|0|0|1|439|4126|379|151|33|51|13|0|
461b7bb6ebb24c94a6b8ecdf593c8573c38e1a05|Tue Dec 01 17:14:37 CET 2020|Suppress TSAN errors for benign races.|0|0|2|439|4126|379|151|35|84|11|0|
38abf0777224de8fd0ac98b1488bef4195141d12|Wed Dec 02 18:45:21 CET 2020|Explain when StandardSystemProperty.value() can return a null value, and deprecate JAVA_EXT_DIRS.|0|0|1|439|4126|379|152|33|12|10|0|
b8f4b8d43da3529026bc385632b7528f6aac03f0|Thu Dec 03 16:25:04 CET 2020|Automated rollback of 67517b5a5b7627eee39a47917197998b9f974751.|0|0|1|439|4126|379|152|29|61|9|0|
d3b27b84245b3a1f81b15f186a9223831254d4cb|Thu Dec 03 17:53:51 CET 2020|System.getProperties().getProperty => System.getProperty.|0|0|0|439|4126|379|152|33|2|11|0|
c86fa8f205ddfdefd17ff2fd4806d1bdffde8ad7|Fri Dec 04 11:38:07 CET 2020|Fix a bug in HashBiMap which was causing crashes in Sheets on iOS.|0|0|1|439|4126|379|152|27|51|7|0|
7e01b017e1dff7c0005748d7139c8d96a5d69206|Fri Dec 04 20:13:20 CET 2020|First step in cleaning up PSL handling. Next stage will be to change the template to store the trie string as a separate static constant, so that I can write a unit test that verifies that.|0|0|1|439|4126|379|152|28|7|7|0|
fbbec2bf00619d88b83e4a5a3fd007765c08a172|Mon Dec 07 17:19:39 CET 2020|Fix `relativePath` warning for guava-bom.|0|0|0|439|4126|379|152|29|2|8|0|
ca3cc12cd07cc4519f92dae12ac8d47b54d919d9|Thu Dec 10 16:37:48 CET 2020|Correct a typo and some odd phrasing in the first paragraph of the javadoc for SmoothRateLimiter.|0|0|1|439|4126|379|152|29|18|9|0|
dc52e6e385fc9f0571dbd046d8ce5bf1a1c1f5cd|Thu Dec 10 18:03:28 CET 2020|Log a warning if running under a Java 7 VM.|1|0|1|439|4126|379|152|32|13|11|0|
ef0ce9216a991ea40774ef82f4fd3ea255c48597|Mon Dec 14 16:36:53 CET 2020|Prepare for release 30.1.|0|0|3|439|4126|379|152|31|99|8|0|
4ce1869ed7f29f51ae509425bce01e5d54a25a0e|Mon Dec 14 22:29:10 CET 2020|Internal changes.|0|0|0|439|4126|379|152|30|2|8|0|
2b55799273247661132f999d66943c6adb6ccc35|Wed Dec 16 00:56:08 CET 2020|Internal change|0|0|37|439|4126|379|152|104|208|15|0|
c8d05367c2862ac74781a62061b4fd55e98ffda9|Thu Dec 17 02:31:18 CET 2020|Internal change|0|0|1|439|4126|379|152|73|80|9|0|
f0b4777787a7fa50dfcede7797fb34098217f87a|Thu Dec 17 20:44:05 CET 2020|Set @Target on @IgnoreJRERequirement.|0|0|1|439|4126|379|152|35|14|11|0|
99a4d3afe044f7bd55f2394ee61756bd6c0adc13|Thu Dec 17 23:05:10 CET 2020|Bump deps.|0|0|0|439|4126|379|152|33|3|11|0|
98b785aada30c1eec8149b10019a67778b4a77b5|Mon Dec 21 22:54:16 CET 2020|Cache only .m2/repository, not all of .m2.|0|0|0|439|4126|379|152|30|4|9|0|
0a2e767e5e2557ffe5989aa46255c2a167496727|Wed Dec 23 19:25:33 CET 2020|Optimize CRC32C.|0|0|1|439|4126|379|152|31|11|8|0|
a576512a9ff70106af8f3d1bc7b9a0f98d2e0097|Mon Dec 28 21:43:54 CET 2020|Internal change.|0|0|0|439|4126|379|152|31|2|10|0|
580937cdde0b7bc2d9836ae80ec09fda519f2d77|Wed Dec 30 20:01:45 CET 2020|Internal change|0|0|1|439|4126|379|152|29|51|7|0|
40c590b5407fbfd8beff15e1f617ff93b8672574|Wed Dec 30 21:52:21 CET 2020|Update Public Suffix data.|0|0|1|439|4126|379|152|30|40|8|0|
b27cf09c1cdb17158654c33720cd43b5a02837be|Tue Jan 05 16:35:26 CET 2021|Fix a comment to reflect that the ImmutableSortedMap copyOf method uses the natural ordering of the keys, rather than a provided comparator.|0|0|1|439|4126|379|152|31|69|8|0|
2c9f161e10ed4f4568c67cbeb47f3f1f4b3d9c08|Tue Jan 19 01:15:31 CET 2021|Remove `@Beta` from `HashCode`.|0|0|1|439|4126|379|152|60|34|19|0|
d3c306e9e4220d80f111348a92f5cb56d8ad965c|Tue Jan 19 19:05:19 CET 2021|Fix assertion for `FilesTest.testCopyIdenticalFiles()`.|0|0|0|439|4126|379|152|44|4|14|0|
d394bac847467039530f514f880ecca27263d0ff|Thu Jan 28 19:00:58 CET 2021|Remove `@Beta` from `CountingOutputStream`.|0|0|1|439|4126|379|152|36|20|13|0|
c9f4b9fcb4ae756af0be113a6c307f6702cde404|Sat Jan 30 04:18:25 CET 2021|Add a link to `ImmutableSortedMultiset` to `collect/package-info.java`.|0|0|0|439|4126|379|152|32|3|10|0|
a5ef129ffc4e4d5a19f38660058ae79f42627136|Sat Feb 06 16:35:48 CET 2021|Add `@CheckReturnValue` to some `com.google.common.cache` APIs.|0|0|3|439|4126|379|152|52|91|10|0|
7c566b5f6d4f5eb5f780152e80ba69e0ea4f9036|Wed Feb 10 19:05:13 CET 2021|Assign or use the result of a primitive wrapper method invocation (it will soon be an ERROR to ignore it).|0|0|0|439|4126|379|152|33|2|18|0|
42bf4f4eb7d299d635838296e322ec7e1e77a440|Fri Feb 12 17:07:15 CET 2021|Fix compatibility between the cache compute methods and a load.|0|0|1|439|4126|379|152|54|105|9|0|
2dda3f3c92b3affb4479516ba3f5f73ebc300c9c|Tue Feb 16 04:22:43 CET 2021|Migrate off deprecated Class#newInstance().|0|0|0|439|4126|379|152|36|2|7|0|
6592f0c8f1d4bca06a868d66b42959e74b54c09d|Fri Feb 19 22:09:05 CET 2021|This is causing upper bounds errors in google-http-java-client|0|0|0|439|4126|379|152|32|2|6|0|
3fbc6f2db3a2673b95e69115cb41c4ad9bb7fe83|Tue Feb 23 18:28:10 CET 2021|Delete hardcoded test .gwt.xml files.|0|0|0|439|4126|379|152|31|2|8|0|
906cf06bd315a5578dd20487b6e0843099b2673e|Wed Feb 24 18:13:07 CET 2021|Remove redundant `else` blocks.|0|0|3|439|4126|379|152|32|80|7|0|
6ae9532d11b871ea9d8edd691cf7f64f35add6f0|Wed Feb 24 21:47:03 CET 2021|Add `@DoNotCall` to the mutator methods on immutable types|0|0|16|439|4126|379|152|43|105|10|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ImmutableSortedMap$Builder.orderEntriesByValue(java.util.Comparator<? super V>), newSymbol=com.google.common.collect.ImmutableSortedMap$Builder.orderEntriesByValue(java.util.Comparator<? super V>)]
eec5e6d762357ec10f08af0d8aa12622081255fd|Thu Feb 25 15:22:55 CET 2021|Update Public Suffix data.|0|0|1|439|4126|379|152|39|43|8|0|
9ece55c0b7bd9388aa6cd93573a9ae9e69865634|Fri Feb 26 20:27:54 CET 2021|Internal change.|0|0|1|439|4126|379|152|32|69|8|0|
3b8928f4f88ffec7f09756c2dc45f65fe990c50b|Fri Feb 26 22:33:33 CET 2021|Internal change.|0|0|1|439|4126|379|152|34|76|10|0|
095a0dbfcc5986c0ffcfe045255e1ef653439204|Mon Mar 01 16:02:38 CET 2021|update enforcer-rule|0|0|0|439|4126|379|152|30|2|6|0|
e5b5bc42c8c5dfe7c77a64726bf0df07c6fc40c3|Mon Mar 01 16:28:48 CET 2021|update JUnit|0|0|0|439|4126|379|152|29|4|7|0|
b109664a951db15eddc6951ad1f412b78c1b7d55|Tue Mar 02 01:05:47 CET 2021|Add `@DoNotCall` to a few more Guava APIs that are guaranteed to always throw `UnsupportedOperationException`.|0|0|5|439|4126|379|152|35|91|9|0|
7f30024044a97a7b98e7faca9a07a382ca62121a|Wed Mar 03 23:40:56 CET 2021|ToStringHelper: omitEmptyValues() - Benchmark updates|0|0|0|439|4126|379|152|30|2|9|0|
00c25e9b1194e1792da848852d214639d9de59b7|Tue Mar 09 02:58:45 CET 2021|Move Java-7-VM warning from `MoreObjects` to `Preconditions`.|0|0|2|439|4126|379|152|31|18|7|0|
b2abf3da853b76efbcd7502c51b1525ffab078fc|Thu Mar 11 22:28:49 CET 2021|Replace LinkedList with ArrayDeque.|0|0|2|439|4126|379|152|32|55|6|0|
fe3fda0ca54076a2268d060725e9a6e26f867a5e|Fri Mar 12 01:48:26 CET 2021|Internal change.|0|0|1|439|4126|379|152|29|64|8|0|
2cc42ec016d947a6722e09cea49d2092c2ce4f58|Tue Mar 16 17:43:15 CET 2021|Switch from Travis CI to GitHub Actions.|0|0|0|439|4126|379|152|34|2|7|0|
8ff79e15ef51039d02b936156c0a1eba2a2ede73|Wed Mar 17 17:33:37 CET 2021|Add documentation to a couple of `Platform` methods.|0|0|1|439|4126|379|152|30|13|9|0|
d384731af5b41b9e9d8526f70950f2bfd1efb24a|Fri Mar 19 17:13:03 CET 2021|Prepare for release 30.1.1.|0|0|0|439|4126|379|152|28|2|7|0|
d7f214d7a25b671175c70d900b2fe137ae51f6a1|Fri Mar 19 17:36:35 CET 2021|Document that we test under both JDK8 and JDK11 (and that we do that for the Android flavor, too).|0|0|0|439|4126|379|152|27|2|6|0|
362d5465a127e23b5b7c179356e019bfee2eefdd|Mon Mar 22 17:30:07 CET 2021|Internal change|0|0|0|439|4126|379|152|29|2|7|0|
d1c3865260b84c52d48ed97bcd0a8c8d59085436|Tue Mar 23 16:52:17 CET 2021|Allow usages of java.util.Objects.requireNonNull in the backport.|0|0|0|439|4126|379|152|29|2|7|0|
91cce52173b844e13bf2c88f15f3a789b23d071a|Tue Mar 23 17:11:44 CET 2021|Internal change.|0|0|0|439|4126|379|152|31|2|10|0|
9dfb111c251350fb326ed540609163bf1a0bbd88|Tue Mar 23 17:20:07 CET 2021|Clarify docs about annotation-only dependencies.|0|0|0|439|4126|379|152|30|3|7|0|
9cffbe5017dd5d3f82bf81a06c0df5b00e2f6635|Tue Mar 23 20:11:50 CET 2021|Set `-source 8 -target 8` in the open-source build, and remove Java8Usage.|0|1|1|439|4126|379|152|31|17|10|0|
a645ccb05da25c8cdcc26cf9af8c29cd42edd408|Wed Mar 24 02:16:12 CET 2021|Create Dependabot config, only for GitHub Actions for now.|0|0|0|439|4126|379|152|32|3|9|0|
0ff2f78959537882728047a0c26f79101bd44149|Thu Mar 25 00:20:54 CET 2021|Belatedly remove the GWT-only overloads of `Futures.catching` and `catchingAsync` that let callers omit the `Executor`.|0|0|0|439|4126|379|152|29|2|6|0|
6d80f83821b841e94a592a80cb303ca4a2dfee11|Thu Mar 25 00:41:03 CET 2021|Add `@Nullable` to the bound of `Supplier`.|0|0|1|439|4126|379|152|30|11|10|0|
018796b79b314b5b7790c9320c1a7c89140af76d|Thu Mar 25 02:14:48 CET 2021|Update Public Suffix data.|0|0|1|439|4126|379|152|32|42|7|0|
98d35bc16ff8efd5404d8f8b493ba4bca0f59b63|Mon Mar 29 19:31:51 CEST 2021|Mark `Abstract*.delegate` methods in `graph` as package-private.|0|0|6|439|4125|379|152|34|66|6|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.ImmutableGraph.delegate(), newSymbol=]
a2cefbbdd5658e2bdbd3c85a80c8149f3b533e0a|Mon Mar 29 19:57:31 CEST 2021|Move dependabot.yml out of workflows.|0|0|0|439|4125|379|152|28|2|7|0|
26cef449be327744c2f9652d9099e3b57d6b07f8|Mon Mar 29 20:10:16 CEST 2021|Remove `protected` from some more members in `graph`.|0|0|10|439|4125|379|152|36|72|7|0|
40faa2cb6a7e4aa9535b1a2a21265d533aca3eae|Tue Mar 30 16:48:19 CEST 2021|Introduce transitional package-private nullness annotations, and apply them to `Supplier`.|2|0|1|439|4125|379|152|31|11|7|0|
0d9470c009e7ae3a8f4de8582de832dc8dffb4a4|Fri Apr 02 17:27:00 CEST 2021|In...|0|0|1|439|4125|379|152|31|67|6|0|
77351571c97870a3f4caadb9ee689724b46e4c91|Mon Apr 05 22:30:49 CEST 2021|Use `@ParametricNullness` in the mainline just as CL 365809233 did in the backport.|0|0|1|439|4125|379|152|30|10|6|0|
a6489b698173d00ce4d3106642705e2c460eb00a|Mon Apr 05 22:52:13 CEST 2021|Recognize `@ParametricNullness` in `NullPointerTester`.|0|0|0|439|4125|379|152|29|2|6|0|
e85672246f8a2d31bbace30ea11ec27c98c90bdb|Tue Apr 06 20:47:34 CEST 2021|Recognize that `<T extends @Nullable Object>` implies nullability.|0|0|0|439|4125|379|152|28|2|7|0|
ff696deb11d83a59e1befd4a146b96b5e8b8fd3d|Tue Apr 06 22:13:42 CEST 2021|Update CI to cancel previous runs and to use v2 of setup-java.|0|0|0|439|4125|379|152|30|2|9|0|
38379f11caa7cb0dea66e78608d1a356b92748e9|Thu Apr 08 12:43:16 CEST 2021|Internal change.|0|0|0|439|4125|379|152|32|2|6|0|
8a85a41693051ffa1a5ccda102168999f47c027a|Thu Apr 08 12:55:01 CEST 2021|Annotate Predicate for nullness.|0|0|1|439|4125|379|152|30|11|6|0|
ed50449f4ff752d4bc1afa23d01f80c80bd4b378|Thu Apr 08 21:32:41 CEST 2021|Annotate Objects for nullness.|0|0|1|439|4125|379|152|28|10|6|0|
4732a867e2a986f09b28acee924ab74d92bd6ae7|Thu Apr 08 21:51:12 CEST 2021|Annotate Optional for nullness.|0|0|1|439|4125|379|152|30|13|6|0|
6a9250ca0ed514cc7cbc9733c67e62ee7f6a809c|Fri Apr 09 02:47:28 CEST 2021|Annotate some more fairly boring classes for nullness.|0|0|5|439|4125|379|152|34|21|9|0|
6afdeaec43e6d72f1265141e4fd0f15c1dfe2f0a|Fri Apr 09 02:49:40 CEST 2021|Annotate various boring classes for nullness.|0|0|13|439|4125|379|152|38|27|9|0|
d1bc44e3b3994129f14695b6140cbda83e671d62|Fri Apr 09 16:46:19 CEST 2021|Add a suppression where we are missing a nullness annotation, and add some explicit null checks for cases in which our nullness checker can't prove that the value is non-null.|0|0|2|439|4125|379|152|34|20|10|0|
d62f77b786579150003d0e786a3c6ba41afe4155|Fri Apr 09 20:51:03 CEST 2021|Annotate Equivalence for nullness.|0|0|1|439|4125|379|152|31|53|6|0|
c04838ba321271440dca07e39bb1a13a416993f5|Fri Apr 09 21:55:55 CEST 2021|Generalize the signature for Equivalance.onResultOf.|0|0|2|439|4125|379|152|31|52|10|1|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.base.Equivalence.onResultOf(com.google.common.base.Function<F,? extends T>), newSymbol=com.google.common.base.Equivalence.onResultOf(com.google.common.base.Function<? super F,? extends T>)]
5d33d73616857ce9b59e26ff76682ee74337c30c|Sat Apr 10 00:19:40 CEST 2021|deprecate `ImmutableList.asList()`|0|0|1|439|4125|379|153|31|50|9|0|
b1be42f79a602c7a5801d86918848f710401b5bc|Mon Apr 12 19:06:11 CEST 2021|Use Truth in some `ServiceManagerTest` tests.|0|0|0|439|4125|379|153|30|2|6|0|
93aa569d3014b16848303c41fe555fd982fccb52|Mon Apr 12 22:56:20 CEST 2021|Annotate Converter for nullness.|1|0|1|439|4125|379|153|31|62|6|0|
40ea41481d06ecd29aa448f3741404b3f3d17756|Tue Apr 13 00:10:42 CEST 2021|Bump styfle/cancel-workflow-action from 0.8.0 to 0.9.0|0|0|0|439|4125|379|153|29|2|6|0|
1054847679c75c0688369ec93c9d845affa7a762|Tue Apr 13 17:31:55 CEST 2021|Fix comment in Converter.|0|0|1|439|4125|379|153|29|63|10|0|
e61cf2e8d76eb4f7b6bb457cb0e964667de773a7|Wed Apr 14 02:50:16 CEST 2021|Fix a rounding bug in `UnsignedLong.doubleValue()` and `.floatValue()`.|0|0|1|439|4125|379|153|32|17|5|0|
c95ba5a2986c0aeaef9d25e6989affac71732d97|Wed Apr 14 15:56:19 CEST 2021|Add `ServiceManager.startupDurations()`.|0|0|1|439|4126|379|153|32|80|7|0|
6fd01479272268c34364a9f3dc2e3427d9533e98|Wed Apr 14 18:28:34 CEST 2021|Mark `ServiceManager.startupDurations()` as `@J2ObjCIncompatible`.|0|0|1|439|4126|379|153|31|83|6|0|
6854bafae2825a65bfd4683b5fe1eba91a954643|Wed Apr 14 20:43:16 CEST 2021|Annotate `escape` for nullness.|2|0|9|439|4126|379|153|35|21|8|0|
2eee304995ac013cc91d75c53b99dee8bd6c3d4d|Wed Apr 14 23:07:49 CEST 2021|Sort and uniquify .gwt.xml <inherits> lines.|0|0|0|439|4126|379|153|34|3|18|0|
768977ea0c949aae2b70f7a904fb35ddd7f9ae59|Thu Apr 15 00:00:08 CEST 2021|Annotate XmlEscapers for nullness.|2|0|1|439|4126|379|153|34|10|10|0|
0de7000ff521d14a1387196753118eedb3465d2d|Thu Apr 15 00:06:44 CEST 2021|Annotate HTML escapers for nullness.|2|0|1|439|4126|379|153|33|7|9|0|
9c5cd0e4ea1e6131d9e45614715b74bea510af23|Fri Apr 16 00:01:53 CEST 2021|Bump actions/cache from v2.1.4 to v2.1.5|0|0|0|439|4126|379|153|31|2|9|0|
63fa529629936116a1a83545abbe8ed4651eea30|Fri Apr 16 18:36:28 CEST 2021|Use AbstractOwnableSynchronizer as a blocker when parking until interrupt is delivered.|0|0|1|439|4126|379|153|72|17|10|0|
83dc7cd41f70acffcfa27ccdad79b3dd41823005|Fri Apr 16 21:20:52 CEST 2021|Suppress or fix all compiler warnings in util/concurrent|0|0|14|439|4126|379|153|41|109|9|0|
8149922bb0da0296e819b0c1508a455335e2876e|Fri Apr 16 23:07:37 CEST 2021|Annotate most of `reflect` for nullness.|2|0|12|439|4126|379|153|42|95|7|0|
37ca3e3a2dd7c8e7b9094bf1be1d4e79c67517ce|Mon Apr 19 17:35:42 CEST 2021|Presize list builder for inCompletionOrder|0|0|1|439|4126|379|153|32|83|7|0|
f141c8ef3b25717fa46153a2e43f59a2229e8d96|Mon Apr 19 18:15:24 CEST 2021|Recommend Caffeine over common.cache.|0|0|1|439|4126|379|153|33|75|12|0|
418224db8c41535be446dfaa15d9d46a122f3f2f|Mon Apr 19 18:20:48 CEST 2021|Link to the immutable collectors from the utility classes.|0|0|3|439|4126|379|153|32|92|8|0|
0ea7cedcc36489e285a3b39dc82b60dfe83a968b|Mon Apr 19 18:50:07 CEST 2021|Document issues with `ClassPath`, and recommend ClassGraph.|0|0|1|439|4126|379|153|32|71|7|0|
3480d8fd7cc3d8653da211ce973abede629d8f31|Mon Apr 19 19:19:51 CEST 2021|clarify `AtomicDoubleArray.set()` javadocs.|0|0|1|439|4126|379|153|30|20|7|0|
fb5e365bc100d21b22ed93b49a8dea4589d85f29|Mon Apr 19 19:26:11 CEST 2021|Add some documentation to `ByteSource` and `CharSource` about the general expectations for source behavior and what the behavior might be if those expectations aren't met.|0|0|2|439|4126|379|153|32|69|9|0|
8a71f2bb66fa64b9d2e1f776d559fd6c74007b6d|Mon Apr 19 19:56:50 CEST 2021|fix `CacheBuilder` javadoc error.|0|0|1|439|4126|379|153|32|79|9|0|
5883279c9cf59bfe8f6cf2485b8a5e4c00a86fee|Mon Apr 19 20:03:43 CEST 2021|Document that `ImmutableType.of()` returns a singleton instance.|0|0|15|439|4126|379|153|42|118|14|0|
f7ca4a966d5979f4b49b30a7d860b24556f0de8f|Mon Apr 19 21:15:12 CEST 2021|Bump deps.|0|0|0|439|4126|379|153|36|3|7|0|
82a3ecf42cf63f2ea4db5c605d80c4478d8877ae|Mon Apr 19 21:42:38 CEST 2021|Discourage usage of EventBus.|0|0|1|439|4126|379|153|29|65|9|0|
fe203043d4b099eafeeca044077f03523e57bab3|Mon Apr 19 22:05:47 CEST 2021|fix javadoc typos|0|0|8|439|4126|379|153|39|128|9|0|
c27d91cdcdd6381d72e76648384edbc5f5a04c9e|Mon Apr 19 22:20:51 CEST 2021|Clarify LRU behavior of `CacheBuilder`.|0|0|1|439|4126|379|153|38|73|7|0|
48b72fca2af117c3282e185407e2484f75aba2b2|Mon Apr 19 22:25:40 CEST 2021|Fix exception message in `CacheBuilderSpec`.|0|0|1|439|4126|379|153|32|95|6|0|
781ac8a447256fe0185ffdecd0fc993bbf84889f|Mon Apr 19 22:42:28 CEST 2021|Remove `@Beta` from `EventBus` and related classes.|0|0|5|439|4126|379|153|30|58|11|0|
4885fca89c8a071e78b392effd00f5f44e2573f5|Mon Apr 19 22:48:12 CEST 2021|Replace old-style loops with enhanced for loops|0|0|2|439|4126|379|153|31|91|7|0|
6f764671680d56b264dee6ab32e18420b6465398|Mon Apr 19 23:24:57 CEST 2021|Fix typo.|0|0|1|439|4126|379|153|29|70|6|0|
12a3d4fd4a36f02daad88e057f7b153a3c083982|Mon Apr 19 23:31:40 CEST 2021|Clarify what "different equivalence relations" means.|0|0|1|439|4126|379|153|31|71|9|0|
9acb9a0e3cfdd3f0a09a0c53d3e5afb5100cf34d|Mon Apr 19 23:38:20 CEST 2021|Discourage use of `ArrayTable`.|0|0|1|439|4126|379|153|34|62|10|0|
6e054cea7bc54dc0bea90a9fc27a21224cfcdee1|Tue Apr 20 16:13:33 CEST 2021|Delete the `FileBackedOutputStream` temp file if writing to it fails.|0|0|1|439|4126|379|153|35|13|8|0|
769e1e9c5ea1c6bddf14cec66b71d6824a8d28a6|Tue Apr 20 20:42:14 CEST 2021|Annotate `hash` for nullness.|2|0|32|439|4126|379|153|50|61|9|0|
b1a86797e10d18a59ad2a6a3fb20900d2ebb96fd|Tue Apr 20 22:18:00 CEST 2021|Make `MoreFiles.deleteRecursively()` throw `NoSuchFileException` when the `path` argument itself doesn't exist.|0|0|1|439|4126|379|153|38|71|6|0|
e92de2dd248e93884153850134da44ce7e1035b7|Thu Apr 22 15:03:17 CEST 2021|Annotate `eventbus` for nullness.|2|0|10|439|4126|379|153|36|96|9|0|
ecbbcc5fc97eeb7384c18b4a2666e7b531e38304|Thu Apr 22 15:04:51 CEST 2021|Annotate `primitives` for nullness.|2|0|24|439|4126|379|153|47|83|7|0|
19c08f9a3e7ffd96749e897fdaa456d0400ffa33|Thu Apr 22 20:10:47 CEST 2021|Use ConcurrentHashMap.newKeySet() in Sets.newConcurrentHashSet()|0|0|2|439|4126|379|153|34|72|8|0|
080664723dce7914be21b2330f6d11e879aebea4|Mon Apr 26 18:20:52 CEST 2021|Make `MapIteratorCache` and `MapRetrievalCache` mostly hostile to nulls.|0|0|2|439|4126|379|153|33|51|7|0|
4e5be74979e00ff26696cd87f3abf8d6dab87167|Mon Apr 26 19:26:07 CEST 2021|Add warnings to documentation of some multimaps and `Multiset` that modifying a value with respect to `equals()` is dangerous.|0|0|6|439|4126|379|153|37|89|11|0|
38112ebb8cb5ef8331584402b6ba6a16a070cb67|Mon Apr 26 19:41:41 CEST 2021|Annotate `graph` for nullness.|2|0|49|439|4126|379|153|64|106|8|14|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.StandardNetwork.containsNode(N), newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.graph.StandardNetwork.nodeConnections, newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.graph.StandardNetwork.edgeToReferenceNode, newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.graph.StandardValueGraph.edgeCount, newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.StandardNetwork.checkedConnections(N), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableGraph, newSymbol=com.google.common.graph.Graph.incidentEdgeOrder()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.StandardValueGraph.edgeValueOrDefault_internal(N,N,V), newSymbol=],BC[kind=METHOD_ADDED_TO_INTERFACE, impactedSymbol=com.google.common.graph.MutableValueGraph, newSymbol=com.google.common.graph.ValueGraph.incidentEdgeOrder()],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.StandardValueGraph.checkedConnections(N), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.StandardNetwork.containsEdge(E), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.StandardValueGraph.hasEdgeConnecting_internal(N,N), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.StandardNetwork.checkedReferenceNode(E), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.StandardValueGraph.containsNode(N), newSymbol=],BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.graph.StandardValueGraph.nodeConnections, newSymbol=]
50e7dddf5c96aa2e4a88044cf65f2c04344abe12|Mon Apr 26 21:32:03 CEST 2021|Reject `null` in `CharStreams.asWriter(appendable).write(string[, ...])`.|0|0|1|439|4126|379|153|36|14|7|0|
db6580e80e49b673b790164c08a5fc64380fc4e5|Mon Apr 26 22:02:44 CEST 2021|Avoid unlikely NullPointerException in deleteDirectoryContents and deleteRecursively.|0|0|1|439|4126|379|153|28|67|8|0|
50dffd938460cab09290b72657a03d79c3666602|Tue Apr 27 17:23:33 CEST 2021|Deflake `HashingTest`.|0|0|0|439|4126|379|153|32|2|13|0|
5137f9983a0f2dee131b5e090228aedd2b7ace44|Tue Apr 27 18:37:40 CEST 2021|Annotate `io` for nullness.|2|0|34|439|4126|379|153|53|117|9|0|
2972a10fa28ff47554bd5cdc531511272862cd44|Wed Apr 28 17:02:02 CEST 2021|Annotate `net` for nullness.|2|0|8|439|4126|379|153|46|99|10|0|
19336153d516449b5e9c0539a3967196104a74d3|Wed Apr 28 17:35:38 CEST 2021|Annotate `math` for nullness.|2|0|14|439|4126|379|153|43|42|9|0|
4cacc0e97fce8bae83983584371450641836983f|Wed Apr 28 19:58:04 CEST 2021|Comment out @ElementTypesAreNonnullByDefault in classes that are missing `@CheckReturnValue` for at least one location.|0|0|5|439|4126|379|153|37|28|12|0|
b0be21d46c1312bce1947ad6b6db33ab386dbeaf|Fri Apr 30 21:16:14 CEST 2021|EndpointPair.java: s/adjacentNode(Object Node)/adjacentNode(N node)/|0|0|1|439|4126|379|153|32|51|9|0|
1cf7a5610569669fea5a6d5c2471322b8f944ae1|Fri Apr 30 21:29:07 CEST 2021|Split afterRanInterruptibly into afterRanInterruptiblySuccess and afterRanInterruptiblyFailure.|0|0|3|439|4126|379|153|33|68|8|0|
8c003adc0109482f1e5c7583790a37fd6d5a0192|Mon May 03 19:16:07 CEST 2021|Minor tweaks to CacheBuilder docs.|0|0|1|439|4126|379|153|32|70|8|0|
571bd573ef8c308d63819c8d1bb30b07c2bf0ec8|Wed May 05 02:55:10 CEST 2021|Instead of partially implementing `Future`, fully implement a custom `Cancellable` interface, and ensure that `cancel` and `isCancelled` always work.|0|0|1|439|4126|379|153|31|64|12|0|
1799bc3e48db5ea61ba66191096727d17d1e811c|Wed May 05 18:58:50 CEST 2021|Add explicit null checks.|0|0|1|439|4126|379|153|28|67|7|0|
5fec0fff378689878abd91cf3e68b54927bed637|Wed May 05 21:53:16 CEST 2021|Document when `EndpointPair.adjacentNode` changed signature.|0|0|1|439|4126|379|153|30|49|8|0|
4b02d3cd8006ad0231f3bf02bc4efa6f0b313bb9|Thu May 06 00:25:30 CEST 2021|Annotate much of `util.concurrent` for nullness.|3|0|69|439|4126|379|153|69|156|7|0|
f7fd83f38aee4fb4fa2b21cdd8d6be8144df9713|Thu May 06 22:23:30 CEST 2021|Update Public Suffix data.|0|0|1|439|4126|379|153|40|44|14|0|
1e2c8066b68e23d50c8f5643a9db9c2a9c7905e3|Tue May 11 16:47:48 CEST 2021|Fix (or suppress) soon to be compile errors where the result of a method invocation for certain `Collection`, `Iterable`, and `Iterator` APIs _must_ be either used or assigned to a variable.|0|0|0|439|4126|379|153|35|3|7|0|
ec52d8d9d13f784a0ef36c4f36ecef9ecc690c5a|Wed May 12 18:20:55 CEST 2021|Bump actions/checkout from 2 to 2.3.4.|0|0|0|439|4126|379|153|35|2|9|0|
9ccb9378f0c880fdc43a2a4754565b1f4883caa3|Thu May 13 23:09:58 CEST 2021|Make generator methods visible within the package.|0|0|0|439|4126|379|153|30|2|7|0|
75110e936dcc50a75df10ffab260d30a073bf00e|Fri May 14 12:46:11 CEST 2021|Generalize `Function` and `Predicate` factories to let callers specify the desired input type.|0|0|2|439|4126|379|153|32|69|8|3|BC[kind=METHOD_FORMAL_TYPE_PARAMETERS_ADDED, impactedSymbol=com.google.common.base.Functions.forSupplier(com.google.common.base.Supplier<T>), newSymbol=com.google.common.base.Functions.forSupplier(com.google.common.base.Supplier<T>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.base.Functions.forSupplier(com.google.common.base.Supplier<T>), newSymbol=com.google.common.base.Functions.forSupplier(com.google.common.base.Supplier<T>)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.base.Predicates.instanceOf(java.lang.Class<? extends java.lang.Object>), newSymbol=com.google.common.base.Predicates.instanceOf(java.lang.Class<? extends java.lang.Object>)]
a2d7222e2f562978b558638427f474b1325d2099|Sat May 15 00:03:15 CEST 2021|Internal change.|0|0|1|439|4126|379|153|32|13|9|0|
33b41820bfb38228877fb42f3e613a9199b7341f|Mon May 17 15:58:11 CEST 2021|Fix (or suppress) soon to be compile errors where the result of a method invocation for certain `Map` APIs _must_ be either used or assigned to a variable.|0|0|0|439|4126|379|153|32|2|7|0|
a4baad35928a2f28cc7e78e16f85ad755670ff76|Mon May 17 16:05:56 CEST 2021|Nearly finish annotating `base` for nullness.|0|0|19|439|4126|379|153|44|66|7|0|
f9e4c4de87c4a2fc120b45046a0783cd068a9a09|Mon May 17 17:03:13 CEST 2021|add `@InlineMe` to deprecated, inlineable APIs in Guava.|0|0|3|439|4126|379|153|37|77|11|0|
6db09f96f8d91fc32be3f88e545403e7f353364b|Mon May 17 19:00:15 CEST 2021|Document the safe cycle in AbstractScheduledService.|0|0|1|439|4126|379|153|53|61|11|0|
5e6e04184a66c4ece7a0384544a103e372899b03|Tue May 18 19:23:36 CEST 2021|Update pom.xml CI info.|0|0|0|439|4126|379|153|31|2|7|0|
10f1853c58b8cd4fc34938888b78817591120372|Fri May 21 17:42:55 CEST 2021|Use `Class.isPrimitive()` to avoid doing any work in `Defaults` for reference types.|0|0|1|439|4126|379|153|31|12|8|0|
12af215974de4b1db65e226270f7bd82be58d3ac|Tue May 25 00:05:28 CEST 2021|`Invokable` no longer inherits from `java.lang.reflect.AccessibleObject`.|0|1|1|439|4149|379|153|31|50|8|4|BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.reflect.AccessibleObject.canAccess(java.lang.Object), newSymbol=],BC[kind=SUPERTYPE_REMOVED, impactedSymbol=com.google.common.reflect.Invokable, newSymbol=com.google.common.reflect.Invokable],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.lang.reflect.GenericDeclaration.getTypeParameters(), newSymbol=com.google.common.reflect.Invokable.getTypeParameters()],BC[kind=METHOD_REMOVED, impactedSymbol=java.lang.reflect.AccessibleObject.setAccessible(java.lang.reflect.AccessibleObject[],boolean), newSymbol=]
ce4bad32a3f15ffb21cc2a13e6db4ad03f915033|Tue May 25 16:43:50 CEST 2021|Expand docs about Caffeine.|0|0|1|439|4149|379|153|29|71|12|0|
ab3090d9cd47d509943f9c8fdf760207f22f732e|Tue May 25 18:07:19 CEST 2021|Clarify comments discussed in https://github.com/google/guava/pull/5546#discussion_r626856415.|0|0|2|439|4149|379|153|33|69|9|0|
e1cc195cfb7ad4a3f24aaee6b8b63e441594a9b3|Tue May 25 20:20:16 CEST 2021|Remove @Beta from HashFunction. https://github.com/google/guava/issues/3284|0|0|1|439|4149|379|153|34|26|9|0|
357db07e9303148d67aedc679babba6dde5ba220|Wed May 26 19:56:30 CEST 2021|Remove suppressions for `ShouldNotSubclass`.|0|0|12|439|4149|379|153|40|100|8|0|
281edd4b6ef7be42950373c27aadbe603837484c|Wed May 26 23:02:21 CEST 2021|Add Sec-CH-UA-Bitness to `HttpHeaders`.|0|0|1|439|4149|380|153|30|8|6|0|
aaeeac7b8e0504cb02a8b4336ad0a8969d986158|Thu May 27 13:02:55 CEST 2021|Annotate `ImmutableCollection`, `ImmutableList`, `ImmutableSet`, and supporting classes for nullness.|3|0|14|439|4149|380|153|39|88|8|0|
bac4f85bfd92d30a8c65de09e6d1c06191f33747|Tue Jun 01 17:53:32 CEST 2021|Bump actions/cache from 2.1.5 to 2.1.6. Closes #5579.|0|0|0|439|4149|380|153|35|2|8|0|
0cd9aaf449c27af887e555c2f79e68e12b5db2a4|Tue Jun 01 21:15:22 CEST 2021|Split `java.time` tests out of `StopwatchTest`.|0|0|0|439|4149|380|153|30|2|9|0|
574710c0daf1c70a3b192c49d520cd0502b53378|Tue Jun 01 21:28:16 CEST 2021|Remove `Service.State.isTerminal()`.|0|0|2|439|4149|380|153|29|60|9|0|
ea0e0d6580f29db1c55c728c81ae1294bb86d3f6|Wed Jun 02 00:05:06 CEST 2021|Annotate `Multiset` classes for nullness.|0|0|26|439|4149|380|153|48|111|12|0|
37a7c77daae1f58bd31c262243ad3d2bb478a2f4|Wed Jun 02 01:39:05 CEST 2021|Include toString() of delegate executor with listening decorator|0|0|1|439|4149|380|153|35|65|7|0|
42c84db2d8f68cce24f02d9d630027dc1c205a14|Wed Jun 02 18:58:35 CEST 2021|Use `<? extends @Nullable Object>` instead of `<?>`.|0|0|1|439|4149|380|153|31|12|6|0|
e89afccafc27a067b12930dadfc0cd04387eed92|Wed Jun 02 22:54:15 CEST 2021|Fix typo noted by @ben-manes in https://github.com/google/guava/commit/ce4bad32a3f15ffb21cc2a13e6db4ad03f915033#r51511526.|0|0|1|439|4149|380|153|30|70|7|0|
820aeef2b08c115493f90ce1ed2c0f4e85fed368|Thu Jun 03 22:11:10 CEST 2021|Optimize ImmutableSet hash flooding detection.|0|0|1|439|4149|380|153|32|61|10|0|
132f2066930f0c97ea7686945d73a5796d52a31e|Mon Jun 07 17:59:41 CEST 2021|Finish annotating `AbstractInvocationHandler`.|0|0|1|439|4149|380|153|31|10|7|0|
a2e84d76227d49695ad2065910ab9e5d05078e40|Mon Jun 07 20:41:49 CEST 2021|Update Public Suffix data.|0|0|1|439|4149|380|153|30|48|9|0|
a95717c696a6d9eec2b7bfc4e57cc1d1ebc23662|Thu Jun 10 16:28:46 CEST 2021|Widen acceptable exception type for code path that currently throws IllegalCharsetException|0|0|0|439|4149|380|153|33|3|8|0|
9c88f9ad6d3c5b9f06d0d13a7676d453c08342b5|Fri Jun 11 00:02:22 CEST 2021|Add Keep-Alive to `HttpHeaders`.|0|0|1|439|4149|381|153|34|9|8|0|
750510722fee51e0d7a524fd7d73cbef88b8a592|Mon Jun 14 18:32:23 CEST 2021|Internal change.|0|0|1|439|4149|381|153|34|90|10|0|
cf31f3a31dc979c68bdc109ad81e59645ef41f48|Tue Jun 15 00:37:59 CEST 2021|Remove `@Beta` from `Interner` and `Interners`.|0|0|2|439|4149|381|153|33|52|8|0|
572d39f54decac480619d2df930ecaba5892b489|Tue Jun 15 02:39:43 CEST 2021|Annotate Function for nullness.|0|0|1|439|4149|381|153|32|10|6|0|
b1350a6a99b9164a6cdc15f177cbda50fa1baf3d|Tue Jun 15 19:41:38 CEST 2021|Annotate `ImmutableMap.get`, `Table.get`, and similar methods as potentially returning `null`.|0|0|7|439|4149|381|153|36|79|10|0|
a663a2a77e3d390e61a16dfa5831fa738f79ad0d|Tue Jun 15 19:45:41 CEST 2021|Finish annotating `SortedMultiset` for nullness.|0|0|1|439|4149|381|153|35|40|7|0|
16c4412383e3092fe285ec7962276f1c0da62a6e|Tue Jun 15 19:49:32 CEST 2021|Annotate a few more classes in `base`.|0|0|3|439|4149|381|153|33|62|5|0|
8802d35c10cb0cf37d8240f9bbea7a344dc5c9f9|Tue Jun 15 19:49:53 CEST 2021|Finish annotating `io` for nullness.|0|0|3|439|4149|381|153|30|20|7|0|
a902c9e225e0c022c4fecd6cbd735926cc6643bf|Tue Jun 15 19:52:05 CEST 2021|Annotate most of `cache` for nullness.|2|0|21|439|4149|381|153|44|120|17|0|
fbf7b9635a8fb2affebfe8de033e593fe9595b89|Tue Jun 15 20:15:55 CEST 2021|Add CheckForNull to Throwables.getCauseAs.|0|0|1|439|4149|381|153|34|14|8|0|
bd26a8c8139d4e65f38dfd3a2ab9753e3e3e35ba|Tue Jun 15 23:05:29 CEST 2021|Annotate `Multimap` classes for nullness.|0|0|35|439|4149|381|153|53|111|8|0|
be9a8140aa835703f3866d082ee50d6b897423c4|Sun Jun 20 12:42:20 CEST 2021|Annotate the rest of `util.concurrent` for nullness.|0|0|8|439|4149|381|153|46|91|8|0|
f9447bccba6aa6d13bfda8811155d2a36aae94a7|Sun Jun 20 16:19:54 CEST 2021|Annotate `Ordering` classes for nullness.|0|0|13|439|4149|381|153|45|73|22|0|
be95256020f4f2d047a3a38d9165c28d5e41d5f6|Mon Jun 21 00:36:12 CEST 2021|Annotate `RangeSet` classes for nullness.|0|0|4|439|4149|381|153|37|81|11|0|
ac4c56b550b183abded6af8e0c1a21892e268e61|Mon Jun 21 17:30:09 CEST 2021|Add an explicit project URL to Guava's main `pom.xml`.|0|0|0|439|4149|381|153|35|3|12|0|
b23b277422b3d1e768db73a265ac0f5c9b75c95d|Wed Jun 23 23:19:24 CEST 2021|Add `HttpHeaders` constant for `Sec-CH-Prefers-Color-Scheme`.|0|0|1|439|4149|382|153|32|8|8|0|
ac7b30cdaac3ed31ef6b54a2654491ae85477f96|Fri Jun 25 19:36:02 CEST 2021|Fix an incorrect javadoc tag. Thanks to @1993heqiang for the bug report.|0|0|1|439|4149|382|153|32|44|8|0|
6ad72dd8e97688745267edfa7d0da7a432f57170|Sat Jun 26 22:06:37 CEST 2021|Fix BloomFilter tutorial URL.|0|0|1|439|4149|382|153|30|33|7|0|
904d567679509526bbc4461c8412ac99db51b248|Tue Jun 29 04:10:37 CEST 2021|Annotate some "sorted" types for nullness.|0|0|8|439|4149|382|153|36|89|9|0|
6c23d7a636c9fc403053c4660dff55ed567b5740|Tue Jun 29 21:39:27 CEST 2021|Annotate some forwarding classes for nullness.|0|0|23|439|4150|382|153|48|105|18|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.collect.ForwardingCollection.toArray(), newSymbol=com.google.common.collect.EvictingQueue.toArray()]
a75d0f091b546beef1df8c1a025297872e39b424|Wed Jun 30 12:30:10 CEST 2021|Annotate `collect` static utilities for nullness.|0|0|20|439|4150|382|153|48|185|10|0|
dbeebef12bf31ca9e4cca62fdffaaf96500b857d|Wed Jun 30 20:58:06 CEST 2021|Annotate bimaps for nullness.|0|0|10|439|4150|382|153|46|82|9|0|
888789e87d5442f97049a4061129827595855d84|Mon Jul 05 22:15:45 CEST 2021|Fix Javadoc links in c.g.common.|0|0|0|439|4150|382|153|34|2|8|0|
c1cc9df1f19c46cdd9383b7885117501a5161b7b|Wed Jul 07 20:22:05 CEST 2021|Fix javadoc lint|0|0|0|439|4150|382|153|32|2|8|0|
0c40611d201488ee016fd132c90a636323f9f42c|Wed Jul 07 20:35:31 CEST 2021|Annotate remaining immutable map classes for nullness, updating callers as needed.|0|0|14|439|4150|382|153|41|92|17|0|
689ea62eb1864e8801594c0748793f4497964710|Fri Jul 09 19:26:04 CEST 2021|- Annotate some `Iterator` classes for nullness.|0|0|21|439|4150|382|153|48|135|13|0|
ac034f68649a3751bb0fefbadb2811b295911f05|Wed Jul 14 21:05:32 CEST 2021|Annotate the core `Range` classes for nullness.|0|0|4|439|4150|382|153|40|67|9|0|
ddc7ef00581978f987f7c7b44c1c319f915bbb38|Thu Jul 15 17:36:07 CEST 2021|Annotate `Table` classes for nullness.|0|0|14|439|4143|382|153|44|94|13|1|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.ArrayTable.create(com.google.common.collect.Table<R,C,V>), newSymbol=com.google.common.collect.ArrayTable.create(com.google.common.collect.Table<R,C,? extends V>)]
38ec4ece5fb45dee5ead0b36a23459499aaa2f91|Fri Jul 16 21:23:17 CEST 2021|Suppress nullness warnings in `LocalCache` so that we can include it in the list of files that we pass to the nullness checker.|0|0|1|439|4143|382|153|34|101|6|0|
a491b1a631dd18392f978c406c3a0b0e87ded786|Mon Jul 19 17:40:59 CEST 2021|Internal change.|0|0|1|439|4143|382|153|30|13|9|0|
2263236e623ae73bcfeac433fa129a2ce73572cf|Mon Jul 19 17:59:16 CEST 2021|Annotate most remaining static utility APIs for nullness.|0|0|1|439|4143|382|153|30|65|9|0|
9851ee47f9e1248ab347c60cd5dbbe47bd43e82f|Sat Jul 24 21:10:47 CEST 2021|Annotate the compact collections for nullness.|0|0|7|439|4143|382|153|36|65|9|0|
24bda4dd717e7428925f69da51578c98f36bc55f|Thu Jul 29 20:18:09 CEST 2021|Remove redundant bit masking.|0|0|1|439|4143|382|153|34|28|8|0|
a35a8e0c1d91fe16ab2320a5286a9a233da1e037|Fri Jul 30 04:45:59 CEST 2021|Suppress errorprone warnings for unit tests|0|0|0|439|4143|382|153|32|2|7|0|
203a315c36a08ce2e6311d7fdc4813c819ae0038|Mon Aug 02 19:47:00 CEST 2021|Bump styfle/cancel-workflow-action from 0.9.0 to 0.9.1|0|0|0|439|4143|382|153|28|2|7|0|
e1ec6968a7d584281f56a38674d6722bea83811c|Mon Aug 02 23:35:32 CEST 2021|Add text to `CompactHashMap` to explain its internal workings in more detail.|0|0|3|439|4143|382|153|28|67|7|0|
3a86a13223b899b848a7f95556601d49d2faf426|Wed Aug 04 15:25:52 CEST 2021|Annotate the remaining public classes under `collect` for nullness.|0|0|14|439|4143|382|153|41|127|9|0|
d32a049827c0dd588b51c7bbb98d54eb7384a602|Wed Aug 04 16:10:41 CEST 2021|Stop rejecting nulls in `EvictingQueue.contains` and `remove`.|0|0|1|439|4143|382|153|38|50|11|0|
1d615ea9853a293abfac770e31db6955c483ea92|Wed Aug 04 20:50:30 CEST 2021|Remove newly redundant overrides from `EvictingQueue`.|0|0|1|439|4141|382|153|28|54|10|0|
52f6c94955d269d860f5f416ab783814823052e9|Thu Aug 05 02:37:46 CEST 2021|Annotate most remaining classes in `collect` for nullness.|0|0|13|439|4141|382|153|40|103|9|0|
3381ffa023b1937fceb20977aef68aaf5ce84b21|Thu Aug 05 04:30:29 CEST 2021|Qualify `Entry` as `Map.Entry` or `Multiset.Entry` throughout `Synchronized`.|0|0|1|439|4141|382|153|38|57|6|0|
88b1bdcb613de9f985cf3f873b7eec0a2e13741b|Thu Aug 05 20:59:26 CEST 2021|Annotate remaining `Range`-related classes for nullness.|0|0|4|439|4141|382|153|36|66|7|0|
0ef72c45bb87cc8b8f8630cfef20360ed5fab86a|Mon Aug 09 17:33:53 CEST 2021|Fix a typo in `TypeResolver`.|0|0|1|439|4141|382|153|32|62|7|0|
2b6b844683e6ff63fc8ba676692cf636f74504fd|Tue Aug 10 02:17:36 CEST 2021|Update Public Suffix data.|0|0|1|439|4141|382|153|31|44|10|0|
05c504adf76a2c5dff493d812ceec51073e95bfb|Tue Aug 10 15:40:39 CEST 2021|Temporarily add a nullness suppression, which we'll remove after annotating `ClassToInstanceMap` in an upcoming CL.|0|0|1|439|4141|382|153|31|64|8|0|
646727ba2ff294683c3b88481e6ceda7c92754ce|Tue Aug 10 18:51:22 CEST 2021|Modified description of `MoreCollectors.toOptional` for increased readability.|0|0|1|439|4141|382|153|33|44|6|0|
53fd1d7612a96053e6e0b68dac86531b0d697497|Thu Aug 12 18:58:01 CEST 2021|Reject non-ASCII digits in `HostAndPort` port numbers.|0|0|2|439|4141|382|153|31|37|7|0|
34306d9390f535ab33f997945e81eeb6ab0adc65|Tue Aug 17 17:40:27 CEST 2021|Don't set the executable bit on backport files.|0|0|0|439|4141|382|153|37|2|6|0|
0caa47998e249281b8852a2bcde9498ecb8b15be|Wed Aug 18 21:22:54 CEST 2021|Add `@SuppressWarnings("nullness")` for classes that we haven't enabled continuous nullness checking for.|0|0|3|439|4141|382|153|36|72|8|0|
ebc0b102cd253d05e9e36be97577c69839c29bab|Wed Aug 18 21:24:37 CEST 2021|Add a few nullness annotations that I'd deferred for later.|0|0|1|439|4141|382|153|36|62|7|0|
c7d9fef73b9314581bf4acd0d97b12178935eb11|Thu Aug 19 00:46:54 CEST 2021|Copy the `setUp` and `tearDown` from the parent builder to derived test suites.|0|0|0|439|4141|382|153|35|2|8|0|
fb109b051c9ec48d5e77bf73b33a228ab5d57462|Thu Aug 19 18:41:17 CEST 2021|Remove `ClassValue` implementation of `Futures.getChecked` from the Android flavor.|0|1|1|439|4141|382|153|39|70|9|0|
d2c202add26837e05a931bb281a65e9ea1f29f56|Wed Aug 25 18:29:57 CEST 2021|Mention the dangers of minimization/optimization for EventBus users.|0|0|1|439|4141|382|153|32|60|10|0|
f79d923a38734bb584707ed77a98fb6d84d2aa28|Thu Aug 26 19:11:10 CEST 2021|Fix bug in `TopKSelector` call to `Arrays.sort`.|0|0|1|439|4141|382|153|30|53|8|0|
54c174a974ae66645401c956a3291b38c3ad6c96|Wed Sep 01 18:40:44 CEST 2021|Warn that [`elapsedRealtimeNanos` requires API Level 17](https://developer.android.com/reference/android/os/SystemClock#elapsedRealtimeNanos()).|0|0|1|439|4141|382|153|34|11|5|0|
f28b8db9492c34ce3cc1d065cb4ea294a05acb90|Fri Sep 03 02:36:03 CEST 2021|Simplify TopKSelectorTest.testExceedMaxIteration()|0|0|0|439|4141|382|153|28|2|6|0|
a176cd60f1809f302be6973961c0802f99692c98|Tue Sep 07 17:02:38 CEST 2021|Add `@InlineMe` to `Streams.stream(Optional)` and friends.|0|0|1|439|4141|382|153|29|54|10|0|
a36f08fe312ec16ad86b9206290929f0686d3b02|Wed Sep 08 15:54:29 CEST 2021|Deprecate buggy `murmur3_32` and introduce `murmur3_32_fixed`.|0|0|2|439|4143|382|155|33|29|7|0|
d5c30e3f190f2c391559a2e37fbc8f407cdb5785|Wed Sep 08 19:46:27 CEST 2021|Add overloads of `ImmutableMap.of`, `ImmutableBiMap.of`, and `ImmutableSortedMap.of` for up to 10 entries|0|0|4|439|4158|382|155|35|82|10|30|BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableSortedMapFauxverideShim.of(K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableSortedMapFauxverideShim.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableSortedMapFauxverideShim.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableBiMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableBiMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableBiMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableBiMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableBiMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableMap.of(K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableBiMap.of(K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableSortedMapFauxverideShim.of(K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableSortedMapFauxverideShim.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableSortedMapFauxverideShim.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableBiMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableSortedMapFauxverideShim.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableBiMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableSortedMapFauxverideShim.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableBiMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableSortedMapFauxverideShim.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableBiMap.of(K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableMap.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableSortedMapFauxverideShim.of(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.of(K,V,K,V,K,V,K,V,K,V,K,V), newSymbol=com.google.common.collect.ImmutableMap.of(K,V,K,V,K,V,K,V,K,V,K,V)]
f08dfc2a144fde71551fe028537459547c9eb746|Wed Sep 08 22:03:43 CEST 2021|Warn that `directExecutor` lets exceptions propagate without invoking an `UncaughtExceptionHandler`.|0|0|1|439|4158|382|155|38|65|7|0|
daad0b3fba2bdc317900966a2752bf7d906001f4|Thu Sep 09 19:54:18 CEST 2021|Avoid calling methods whose return type changed in Java 9 -- even from tests.|1|0|1|439|4158|382|155|31|14|11|0|
c351aa45d26d873dfb2ab26a075572f7c02197b0|Fri Sep 10 18:17:12 CEST 2021|Document that a bug in `getAnnotatedBounds()` on an `AnnotatedTypeVariable` affects `NullPointerTester`.|0|0|0|439|4158|382|155|31|3|9|0|
cd3b4197fb523bf26f9122492915006ad306b3f3|Fri Sep 10 22:06:06 CEST 2021|Add `ImmutableMap.ofEntries`.|0|0|4|439|4160|382|155|35|87|10|6|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.ofEntries(java.util.Map$Entry<? extends K,? extends V>[]), newSymbol=com.google.common.collect.ImmutableSortedMapFauxverideShim.ofEntries(java.util.Map$Entry<? extends K,? extends V>[])],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.ofEntries(java.util.Map$Entry<? extends K,? extends V>[]), newSymbol=com.google.common.collect.ImmutableMap.ofEntries(java.util.Map$Entry<? extends K,? extends V>[])],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.Map.ofEntries(java.util.Map$Entry<? extends K,? extends V>[]), newSymbol=com.google.common.collect.ImmutableBiMap.ofEntries(java.util.Map$Entry<? extends K,? extends V>[])],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.ofEntries(java.util.Map$Entry<? extends K,? extends V>[]), newSymbol=com.google.common.collect.ImmutableMap.ofEntries(java.util.Map$Entry<? extends K,? extends V>[])],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.ofEntries(java.util.Map$Entry<? extends K,? extends V>[]), newSymbol=com.google.common.collect.ImmutableSortedMapFauxverideShim.ofEntries(java.util.Map$Entry<? extends K,? extends V>[])],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.Map.ofEntries(java.util.Map$Entry<? extends K,? extends V>[]), newSymbol=com.google.common.collect.ImmutableBiMap.ofEntries(java.util.Map$Entry<? extends K,? extends V>[])]
4bbe12c4e031b6c18074f933e444fa20a371d633|Wed Sep 15 19:23:29 CEST 2021|Introduce `ImmutableMap.Builder.buildOrThrow()`.|0|0|4|439|4164|382|155|42|88|9|0|
c937dd7bad321dae1b838f5156611d2b8c954a30|Fri Sep 17 22:21:27 CEST 2021|update `StringsRepeatBenchmark`|0|0|0|439|4164|382|155|33|2|9|0|
daa2d52bf1c0d867faee911da424696c01b217a0|Fri Sep 17 22:44:52 CEST 2021|Add `@InlineMe` to `Strings.repeat(String, int)`.|0|0|1|439|4164|382|155|28|12|6|0|
6e56a085e40afded8e10120e2f945a7ca5de1b7b|Fri Sep 17 22:50:55 CEST 2021|Optimize ImmutableSet.Builder for empty sets.|0|0|1|439|4164|382|155|30|61|9|0|
3dfd7076eba8540c3e2659289b310bbb050408b6|Mon Sep 20 17:55:12 CEST 2021|Fix typo, and remove unused method.|0|0|3|439|4164|382|155|31|74|7|0|
15c930912a78ff96d92ba49bd763286dbb956d59|Tue Sep 21 20:09:57 CEST 2021|Migrate off deprecated mockito APIs|0|0|0|439|4164|382|155|33|2|9|0|
da375be86a70a7d0871ca60c88473e5d718c5dc3|Tue Sep 21 20:32:16 CEST 2021|Add `HttpHeaders` constants for `X-Device-IP`, `X-Device-Referer`, `X-Device-Accept-Language`, and `X-Device-Requested-With`.|0|0|1|439|4164|386|155|30|7|11|0|
f2bb158a6e73c6d1eef743a43cf506c7642bf17a|Tue Sep 21 23:47:55 CEST 2021|Reduce SingletonImmutableSet memory consumption.|0|0|6|439|4163|386|155|30|63|7|0|
e5fd97037980c62de79505e074ab193f18b74b48|Wed Sep 22 00:08:42 CEST 2021|Optimize ImmutableSet.Builder for singleton elements|0|0|1|439|4163|386|155|32|61|7|0|
920416b3ed43bc360dd446ea58158048c0b5d80e|Wed Sep 22 02:11:29 CEST 2021|Replace usage of `murmur3_32()` with `murmur3_32_fixed()`.|0|0|1|439|4163|386|155|29|32|7|0|
4beff962f36846fbfc8ff1de89f0a63716ad45d2|Wed Sep 22 21:40:59 CEST 2021|Add `HttpHeaders` constants for Accept-CH, Client-CH, Sec-CH-UA-Reduced, Device-Memory, Downlink, ECT, RTT, Save-Data, Viewport-Width, Width, and Permissions-Policy.|0|0|1|439|4163|396|155|31|7|14|0|
f9b25b423ac6c7201d77387efe079ff540954de2|Thu Sep 23 17:58:22 CEST 2021|Chuck a few more `@DoNotCall`s around Guava|0|0|2|439|4163|396|155|33|96|12|0|
fe3b76240b05c5421e7fe84862705db582f51f55|Fri Sep 24 17:19:21 CEST 2021|Annotate `ClassToInstanceMap` and `MutableClassToInstanceMap` for nullness.|0|0|3|439|4163|396|155|34|78|10|0|
7396bab41807702f2ce94517d0f58b8e52f603f8|Fri Sep 24 21:48:23 CEST 2021|Prepare for release 31.0.|0|0|7|439|4163|396|155|35|121|11|0|
0ad6d6d9e1a2eab6f05c7609868db494b5e3d212|Mon Sep 27 17:02:09 CEST 2021|Strip `@Nullable` annotations from GWT sources.|0|0|0|439|4163|396|155|36|2|8|0|
fd945baef06dbbd81d9aecb209e53d080454629e|Mon Sep 27 20:43:17 CEST 2021|Prepare for release 31.0.1.|0|0|0|439|4163|396|155|27|2|6|0|
5d57f753a1dae3b359cde9d3f804f4f2036d1ebe|Tue Sep 28 02:42:50 CEST 2021|Convert `Finalizer` nullness annotations to checker-qual and jsr305.|0|0|1|439|4163|396|155|29|5|8|0|
7a603a9d891b9068874ba9aeb6df6b8e54b1a485|Tue Sep 28 02:43:54 CEST 2021|Annotate `TypeToInstanceMap` classes for nullness.|0|0|3|439|4163|396|155|30|63|9|0|
a1d285f3c14c1c96181240ae3da5a60fbfb6bbee|Tue Sep 28 03:25:33 CEST 2021|Add @ElementTypesAreNonnullByDefault to ListenableFuture.|0|0|1|439|4163|396|155|28|59|10|0|
17e403c8d674cb750a81294a867af7b3cc424b11|Tue Sep 28 03:33:56 CEST 2021|Remove claims that guava-android works under Java 7.|0|0|0|439|4163|396|155|30|2|7|0|
422c9dd6e0a47c1380e6d2cd79d8ba2b94d8f159|Tue Sep 28 19:25:58 CEST 2021|Migrate from `@NullableDecl` to `@CheckForNull` in the backport.|0|0|0|439|4163|396|155|45|2|7|0|
f176735b4295a615774170e51d3a84049138faf6|Tue Sep 28 19:58:21 CEST 2021|Remove unused checker-compat-qual annotation.|0|0|0|439|4163|396|155|42|2|7|0|
64261b3826ea88e0f008efeed5441bce14642a72|Thu Sep 30 02:15:34 CEST 2021|Simplify some test method code.|0|0|0|439|4163|396|155|30|2|10|0|
46093e2517b4f49c019ecff6dbe90cc22e8003b5|Fri Oct 01 17:58:49 CEST 2021|Use lambdas sometimes.|0|0|25|439|4163|396|155|48|198|11|0|
8075df7ffd63b4b96cd0bdfdc2dde71d08f672c9|Fri Oct 01 19:14:26 CEST 2021|Use some diamond operators.|0|0|51|439|4163|396|155|86|221|10|0|
560a57f15a66879f24107ffa51a94f4f4fef5c3a|Wed Oct 06 02:42:34 CEST 2021|Remove some unnecessary `final` keywords.|0|0|50|439|4163|396|155|90|218|13|0|
0004ab7eb29786cc4131b255476e88b33f6c7ed2|Wed Oct 06 20:57:37 CEST 2021|Optimize ImmutableMap.Builder construction pathway|0|0|1|439|4163|396|155|52|69|12|0|
3b3687c8a417288798b31e8464c3a5c8bbc96077|Thu Oct 07 18:50:15 CEST 2021|Suppress new findings for DoNotCall.|0|0|0|439|4163|396|155|35|2|6|0|
a43836125964e2be3119dced82b8bab466f278d1|Fri Oct 08 20:57:38 CEST 2021|Update Public Suffix data.|0|0|1|439|4163|396|155|35|45|9|0|
ba690ba164412b27dbded0904bd297adf727f8ab|Thu Oct 14 17:59:31 CEST 2021|Document the danger of passing an enormous size to `partition`.|0|0|2|439|4163|396|155|31|84|10|0|
49fb399cbb85892a38272bd62f191984edafd803|Mon Oct 18 20:04:08 CEST 2021|Bump actions/checkout from 2.3.4 to 2.3.5.|0|0|0|439|4163|396|155|32|2|6|0|
354d78c6331cce5faae68275f81638f1894e0da8|Mon Oct 18 21:00:33 CEST 2021|Range.intersect() with a disconnected range deserves a less confusing exception message|0|0|1|439|4163|396|155|30|54|9|0|
cf09c7606829b9f7956ab27ae0cf7c849ffa6f4e|Wed Oct 27 20:27:20 CEST 2021|internal change|0|0|0|439|4163|396|155|32|2|6|0|
9830997ec9676dcf794369da9b8b20b8162caa60|Wed Nov 03 14:00:21 CET 2021|Document `@ParametricNullness` better.|0|0|15|439|4163|396|155|40|95|12|0|
de5d81dcba4088436e8f2044de8ee0b12634f28e|Thu Nov 04 22:25:37 CET 2021|Improve tests.|0|0|0|439|4163|396|155|47|3|8|0|
5e2bbfa9bd4b9cc8d6d23783af2e5f533b007665|Sat Nov 06 01:12:46 CET 2021|Bump actions/checkout from 2.3.5 to 2.4.0.|0|0|0|439|4163|396|155|43|2|10|0|
6e5e1a47b0f0187c8d865de6443ea06c7f8a6dfa|Tue Nov 09 20:50:48 CET 2021|Documented that ExecutionSequencer tasks execute in happens-before order, matching the description used in newSequentialExecutor()'s Javadoc. Updated the description to more completely specify what that order is.|0|0|2|439|4163|396|155|29|78|8|0|
922cde05ff9f2749822385a403b0277fbea96650|Thu Nov 11 20:03:29 CET 2021|Remove docs that say that parameters are non-null by default.|0|0|2|439|4163|396|155|33|67|11|0|
a2bbcc3bc2b4f94666d99a98a31445b8fbd1e152|Fri Nov 12 22:05:06 CET 2021|Update deprecated `CharMatcher.invisible()` to match ICU 70/Unicode 14.|0|0|1|439|4163|396|155|30|16|8|0|
01890d99fcc9b2a6a2190c25e6bc38482cd3fde2|Wed Nov 17 17:30:25 CET 2021|Elaborate on comment in AggregateFuture.addInitialException.|0|0|1|439|4163|396|155|30|71|10|0|
123c9a771342dde5c908d65c69033403a6514f04|Mon Nov 22 21:28:45 CET 2021|Use Truth for better failure messages in map assertions.|0|0|0|439|4163|396|155|31|2|9|0|
943b7066942e0609212d2987eb957e6f14f3237a|Tue Nov 23 01:34:55 CET 2021|Use the new `buildOrThrow()` instead of `build()` in `ImmutableMapTest`.|0|0|0|439|4163|396|155|28|2|8|0|
5adafee2797e102c53ae1982e1a3130e9d773bf7|Wed Nov 24 17:07:56 CET 2021|Use Truth for better failure messages in map assertions (again).|0|0|0|439|4163|396|155|30|2|12|0|
bdb43e625ac0d6078a67e7d11b8b12ccfd0e85ac|Wed Nov 24 20:40:39 CET 2021|Use getAndSet from Unsafe and ARFU when tombstoning listeners and waiters fields|0|0|1|439|4163|396|155|33|32|10|0|
2d875d327ad74cbde5a6f18fbf85724bfbb5c47a|Wed Nov 24 21:09:10 CET 2021|Implemented the following methods for `AtomicDouble` and `AtomicDoubleArray`:|0|0|2|439|4171|396|155|30|27|9|0|
e64ad2634216a3bb8e2beeb26d673f72d24e293a|Tue Nov 30 15:10:41 CET 2021|Attempt `casValue` CAS in a loop.|0|0|1|439|4171|396|155|29|32|11|0|
9635e5d949a3c9ccc26610b72e0860e082b59eab|Wed Dec 01 20:00:23 CET 2021|Fix small style issues.|0|0|0|439|4171|396|155|33|2|12|0|
a197d99b96d69ea75a2c4a15ecd8a730dd3270d6|Wed Dec 01 20:10:36 CET 2021|Update Public Suffix data.|0|0|1|439|4171|396|155|31|49|12|0|
3072f4fe6dd57678886ba800efc9da4667abc366|Fri Dec 03 16:50:09 CET 2021|Fix Javadoc search on JDK 11:|0|0|0|439|4171|396|155|32|2|9|0|
fb306ecff6efbfbe3e0e4ea1ea1d30aad4b0a44e|Sun Dec 05 03:16:31 CET 2021|Include all services in ServiceManager.startAsync exception message|0|0|1|439|4171|396|155|31|95|8|0|
9d690928acb69b6158bde3371c66445c861f5b7c|Mon Dec 06 18:31:24 CET 2021|Fix -Wbitwise-instead-of-logical warnings.|0|0|4|439|4171|396|155|34|88|9|0|
8652b459f15d2b0a0514158644aec3366e57011f|Mon Dec 06 23:52:07 CET 2021|Bump actions/cache from 2.1.6 to 2.1.7|0|0|0|439|4171|396|155|31|2|8|0|
c98868c646ff767848feb77e3bd5d62d938bdace|Wed Dec 08 23:55:51 CET 2021|Refine examples for mapWithIndex.|0|0|1|439|4171|396|155|27|54|10|0|
68500b2c09fa6985eab2e41577e2992685b57f2b|Mon Dec 13 16:16:36 CET 2021|Introduce `ImmutableMap.Builder.buildKeepingLast`.|0|0|6|439|4174|396|157|38|83|9|0|
9c7e13b5d4446fd5d0deba9b4b8c21e6d745c11b|Mon Dec 13 22:36:32 CET 2021|Remove `@Beta` from the `FluentFuture` type, its factory methods, and `addCallback`.|0|0|1|439|4174|396|157|37|66|11|0|
e0151728478c16e3fe295a368ba74c2195a10e85|Mon Dec 13 23:49:24 CET 2021|Remove `@Beta` from uncontroversial `Futures` methods:|0|0|1|439|4174|396|157|31|71|8|0|
8b4ad17dcf17aa488b46070fa7aa7fabb8e65ad6|Tue Dec 14 16:50:27 CET 2021|Remove `@Beta` from `AsyncCallable`, `ListenableScheduledFuture`, and `ClosingFuture`.|0|0|3|439|4174|396|157|30|76|8|0|
261ac7afbf04dce2bd7e20a2085338e1f9a857d8|Tue Dec 14 17:37:44 CET 2021|De-beta APIs in com.google.common.net|0|0|7|439|4174|396|157|34|97|9|0|
93a8f02f5601178273d0e38be418540f066bd405|Tue Dec 14 18:15:51 CET 2021|Remove `@Beta` from a number of `com.google.common.testing` classes.|0|0|0|439|4174|396|157|34|2|12|0|
825de9a2d00de439eea29112e92b98333d81d670|Tue Dec 14 18:31:33 CET 2021|Remove `@Beta` from `Uninterruptibles.awaitTerminationUninterruptibly` and from the `Duration` overloads in the class.|0|0|1|439|4174|396|157|33|34|10|0|
87d550f3fe7dc22540b1b6dba21179a1b2b92658|Wed Dec 15 19:07:26 CET 2021|Fix a bug in `ImmutableMap.Builder.buildKeepingLast()`.|0|0|1|439|4174|396|157|32|72|8|0|
75f13f7bcf051229e05f23220c0033da49ef3cd6|Wed Dec 15 21:59:59 CET 2021|Improve variable name and explanatory comments.|0|0|1|439|4174|396|157|33|75|7|0|
8eff3ed0720643e4fec186d2ad40914acf4e8d5d|Thu Dec 16 00:49:06 CET 2021|Start with a smaller but faster growing buffer when reading to a byte array|0|0|1|439|4174|396|157|28|21|12|0|
189d668a95803f3121218a63a823f3390bca1489|Thu Dec 16 18:51:29 CET 2021|Remove `@Beta` from `ExecutionSequencer`, `MoreExecutors.newSequentialExecutor`, and `Monitor`.|0|0|3|439|4174|396|157|32|82|9|0|
b8fd0e6250e55eb57c96172ec2a5bd94430ab50a|Thu Dec 16 19:49:24 CET 2021|Use `ImmutableMap.Builder.buildKeepingLast()` where possible.|0|0|2|439|4174|396|157|32|131|12|0|
eb0b0332b9c41c4e8c9b174efa1cec78a6206668|Thu Dec 16 22:06:49 CET 2021|Internal change.|0|0|1|439|4174|396|157|36|51|9|0|
a3e411c3a4fa064843071fd70add42a802f9f362|Mon Dec 20 16:11:08 CET 2021|Remove `@Beta` from the remaining methods in `Comparators`: `min`, `max`, `lexicographical`, `emptiesFirst`, `emptiesLast`, `isInOrder`, `isInStrictOrder`.|0|0|1|439|4174|396|157|28|47|13|0|
448e326ee1ea0b45b81945b57af93198620ada53|Tue Dec 21 19:51:03 CET 2021|Add `AbstractScheduledService.Schedule(Duration)`.|0|0|1|439|4174|396|157|31|65|8|0|
89a2e994c84800a37f4db48628fae7ec7fa77bc5|Thu Dec 23 20:36:22 CET 2021|Update javadoc of `ImmutableMap.Builder` to reflect `buildKeepingLast()` changes.|0|0|1|439|4174|396|157|27|66|8|0|
5d6bbc521753f2faf551a6109e2319d0b0e068c5|Thu Dec 23 21:44:26 CET 2021|Fix small javadoc problem.|0|0|1|439|4174|396|157|29|68|8|0|
f6c0d8dcdca543b8817ad0b16f1156fd47240c66|Thu Dec 23 22:02:02 CET 2021|Minor cleanups to `AbstractScheduledServiceTest`.|0|0|0|439|4174|396|157|29|2|11|0|
474bfb7240f525d6a49698c19ff2af27f2006387|Thu Dec 23 22:51:25 CET 2021|Use some static imports.|0|0|3|439|4174|396|157|33|95|8|0|
13f703c25f43bda8935b28e7b481de48d6b9bc1b|Tue Dec 28 18:42:24 CET 2021|Open source `Hashing.fingerprint2011()`.|1|0|1|439|4175|396|157|33|30|7|0|
c85a4cbff0aeb150e9755c408703c5c7464f5f57|Wed Dec 29 15:50:17 CET 2021|Release some fingerprint2011 tests.|0|0|0|439|4175|396|157|32|2|9|0|
3a5ef5002d3427080f82fd13a121c9a0f94869d2|Tue Jan 04 18:23:58 CET 2022|Fix a soon to be compile error, where a newly constructed instance is discarded without being used.|0|0|2|439|4175|396|157|34|21|12|0|
8079a29463906c3ffac781532be96cbf28b745c6|Wed Jan 05 17:06:00 CET 2022|Remove `@Beta` from `Streams` methods `mapWithIndex` and `findLast`.|0|0|1|439|4175|396|157|30|51|6|0|
9f6a38402076fc0a85a48627c16312c50887435a|Wed Jan 05 18:41:31 CET 2022|Remove `@Beta` from most classes in `com.google.common.reflect`.|0|0|10|439|4175|396|157|37|95|8|0|
abbab8e20f220e745b059f22e25ec60895643b79|Wed Jan 05 23:12:24 CET 2022|Do not allow `CacheLoader.loadAll` to modify the given set of keys.|0|0|1|439|4175|396|157|27|101|9|0|
3092c2d17f467e549053b30f8095334e71ee1f90|Thu Jan 06 16:28:03 CET 2022|Internal change.|0|0|0|439|4175|396|157|36|2|11|0|
2331170e5b52b0db1d6aa73a5e7f66b8466b695a|Thu Jan 06 16:40:41 CET 2022|Update docs that refer to the diamond operator to reflect that it's no longer new.|0|0|3|439|4175|396|157|32|109|10|0|
828d9ee74e8aef4f192bd0c6079db20c28780cb1|Thu Jan 06 16:59:31 CET 2022|Remove `@Beta` from APIs in `Files`. Add `@InlineMe` where we can.|0|0|2|439|4175|396|157|36|76|7|0|
156694066b5198740a820c6eef723fb86c054343|Thu Jan 06 17:00:22 CET 2022|Remove `@Beta` from `Hashing` (plus some other minor cleanups).|0|0|1|439|4175|396|157|28|25|11|0|
5970382c9af8d8e3c35f4667ba0f917337cfe3b8|Tue Jan 11 20:31:49 CET 2022|Init `LockFreeBitArray` with length to reduce memory when deserializing `BloomFilter`.|0|0|1|439|4175|396|157|31|30|15|0|
2545a3209fb7977bbccd1a9113d9ca7997ef5981|Wed Jan 12 17:16:26 CET 2022|*** Reason for rollback ***|0|0|1|439|4175|396|157|31|29|11|0|
c5b022718ff4577273bcc0f7fefdb36fe0660ce3|Wed Jan 12 19:32:35 CET 2022|Update Public Suffix data.|0|0|1|439|4175|396|157|31|51|13|0|
a4fabc013e476854d5ea70aab139d79b4fd98215|Thu Jan 13 18:09:28 CET 2022|Init `LockFreeBitArray` with length to reduce memory when deserializing `BloomFilter`.|0|0|2|439|4175|396|157|35|35|10|0|
c6dba9b862b43fe2f73726f11015f67d5ebf7b58|Tue Jan 18 18:21:11 CET 2022|Add fixes in prep for enabling `CheckReturnValue` on constructors.|0|0|0|439|4175|396|157|31|2|13|0|
468c68a6ac0340459c867648b4c1c8b9c65239c3|Tue Jan 18 21:52:46 CET 2022|Remove `@Beta` from various Escapers and Escaper accessories.|0|0|8|439|4175|396|157|36|22|10|0|
dd462afa6b871397ca9f4ca3927cc7946fc343a0|Tue Jan 18 23:45:36 CET 2022|Remove `@Beta` from two methods in `Throwables`.|0|0|1|439|4175|396|157|31|41|16|0|
fefa769d334e831bbea9340b97aab800dca0d31c|Wed Jan 19 18:39:58 CET 2022|Add "Sec-CH-UA-Full-Version-List" header.|0|0|1|439|4175|397|158|28|8|7|0|
f02feaff11850858a6d7dde000e6da0db5c30140|Wed Jan 19 20:09:56 CET 2022|Merge java docs for Futures.successfulAsList.|0|0|1|439|4175|397|158|31|73|8|0|
59b26ca105d9ddce3160c420eb51ca22f597431b|Thu Jan 20 16:50:38 CET 2022|Omit com.azul.tooling.in classes from generated Javadoc.|0|0|0|439|4175|397|158|33|2|7|0|
66433011733d8dafda8d6812c07e8356cc86c9f3|Thu Jan 20 17:13:21 CET 2022|Note that Caffeine does sometimes behave differently then Guava's cache.|0|0|1|439|4175|397|158|30|72|8|0|
ddc708ad23ae23012bff83f441069cd85077e1cf|Thu Jan 20 19:32:13 CET 2022|Automated g4 rollback of changelist 413130485.|0|0|1|439|4175|397|158|31|30|7|0|
6bbf880d40c484398340fc76e538b8de93fef74e|Thu Jan 20 21:52:26 CET 2022|Link to a Guava-Caffeine comparison with much more information.|0|0|1|439|4175|397|158|31|74|6|0|
7031494cbb29f3443a85303bdf14389ae6a5b58e|Fri Jan 21 21:03:40 CET 2022|Import PR https://github.com/google/guava/pull/5877: Unify unmodifiable map behavior|0|0|1|439|4175|397|158|32|101|10|0|
6ebd7d864830dbf615a767702bf5b0261f1a9722|Mon Jan 24 17:29:38 CET 2022|Deprecate `Throwables.lazyStackTrace`.|0|0|1|439|4175|397|160|33|15|9|0|
753b0dfcbfbc1270ed9f4c90e93d649104f2eae2|Mon Jan 24 17:30:50 CET 2022|Write a novel about the nullness of the `V` types in `getOrDefault`.|0|0|1|439|4175|397|160|33|78|8|0|
593b5963269abc2b32ee7f4d0bbc96d1539a7afa|Mon Jan 24 18:44:53 CET 2022|Remove harmless but ugly spaces between link open tag and content.|0|0|44|439|4175|397|160|86|240|19|0|
89ad267a131caff1be90ad144633c4d05693ed5a|Tue Jan 25 21:29:54 CET 2022|Add `@Keep` annotations|0|0|0|439|4175|397|160|48|2|8|0|
9066755eb342cdbd98ea1aa189bbee39fa2ef492|Wed Jan 26 16:59:46 CET 2022|Minor clarifications after CL 423822183.|0|0|1|439|4175|397|160|29|69|8|0|
9a13e8664f308ca7a93041781d6d7680fb1b59a5|Thu Jan 27 17:41:47 CET 2022|Suppress AlwaysThrows in Guava tests.|0|0|0|439|4175|397|160|34|2|7|0|
1daedb51f14851f178999d3b83d1e15950165a09|Thu Jan 27 23:20:16 CET 2022|Assign the constructed instance to an unused variable.|0|0|0|439|4175|397|160|33|2|11|0|
4b9c269f5cba1431101ffde0290a871769120316|Tue Feb 01 17:02:47 CET 2022|Use `ImmutableMap.Builder.buildOrThrow()` instead of deprecated `build()`.|0|0|6|439|4175|397|160|33|116|12|0|
247d4eff0b98c43c6593605b590a8d6f4464ba59|Tue Feb 01 17:27:24 CET 2022|Use `ImmutableMap.Builder.buildOrThrow()` instead of deprecated `build()`.|0|0|4|439|4175|397|160|48|67|7|0|
8c71e0a259702874f6ed3febadbf4c549507b500|Tue Feb 01 21:43:59 CET 2022|Use `ImmutableMap.Builder.buildOrThrow()` instead of `.build()`.|0|0|5|439|4175|397|160|32|112|7|0|
bd932e561c6f6b6589ad849081683dd3e8c5d5d5|Fri Feb 04 00:20:09 CET 2022|Warn that `directExecutor` listeners may be run by any thread that cancels the `Future`.|0|0|1|439|4175|397|160|32|110|11|0|
6dabbdf9c9154a0c4cda276779ca7c9a14cfa720|Fri Feb 04 17:14:05 CET 2022|Add Access-Control-Allow-Private-Network header to common library. https://developer.chrome.com/blog/private-network-access-update|0|0|1|439|4175|398|160|34|9|8|0|
1df898a681347c3f1356ad0c8d70860ac4a6c9a4|Mon Feb 07 16:13:40 CET 2022|Fix some warnings in the AtomicLongMapBasherTest.java|0|0|0|439|4175|398|160|32|2|7|0|
bb209490cd2eeced82b4c435083588af04448b95|Tue Feb 08 03:28:21 CET 2022|Move test methods from nested classes to the top-level class.|0|0|0|439|4175|398|160|32|2|7|0|
a5eb7fd6fbc3e5fdebe65f90dc6c41729f17b7b0|Tue Feb 08 22:32:30 CET 2022|Convert nested test classes to top-level classes.|0|0|0|439|4175|398|160|35|2|12|0|
8c908a3c8b4363a58edb69cf029d761bdaec0abc|Wed Feb 09 21:36:18 CET 2022|Convert nested test classes into top-level classes.|0|0|0|439|4175|398|160|34|2|7|0|
11a48cafdcf365f78caedd08d6c3fd541904a1a7|Wed Feb 09 22:05:40 CET 2022|Move `Compact*Hash*` nested `FloodingTest` classes to top-level.|0|0|0|439|4175|398|160|34|2|8|0|
f5264779dbb891d195931a6d3879e5541596e2b7|Wed Feb 09 23:55:02 CET 2022|Internal change.|0|0|0|439|4175|398|160|59|2|9|0|
f881fab53f764db184ae47b91ec06dfd24331ce8|Thu Feb 10 21:34:41 CET 2022|Assorted improvements to nullness annotations.|0|0|13|439|4175|398|160|53|194|23|0|
09960ffb041560438f22342d1b21a43ceac5364d|Sat Feb 12 00:48:00 CET 2022|Add `@InlineMe` to `Converter.apply(A)`.|0|0|1|439|4175|398|160|43|66|9|0|
1cd85d01c96ae433e2f3d8ca77f304f6170c34b4|Mon Feb 14 17:09:50 CET 2022|Enforce bounds checking in the null output stream.|0|0|1|439|4175|398|160|31|25|12|0|
565589953a4f4d25701aa04510e33be22146fef6|Tue Feb 15 23:25:13 CET 2022|Suppress ignored return values off Object in Guava/Truth.|0|0|2|439|4175|398|160|39|23|12|0|
6652237230814c7901d35b6c74bd13edb5f68db5|Thu Feb 17 17:22:28 CET 2022|Add another ReturnValueIgnored suppression.|0|0|0|439|4175|398|160|32|2|12|0|
a0e2577de61a0d7e8a3dd075be66a31c93ea0446|Fri Feb 18 16:28:38 CET 2022|Add `@CheckReturnValue` to `com.google.common.net` (with a few exceptions).|0|0|5|439|4175|398|160|38|109|11|0|
ab6b2fd5468e386bd78dd59dd9f007d3efc70e83|Thu Feb 24 19:26:03 CET 2022|Update Public Suffix data.|0|0|1|439|4175|398|160|33|51|10|0|
a580ed07844fedb34ec48260a663262c2d00e87f|Sat Feb 26 20:04:15 CET 2022|Apply @CheckReturnValue to com.google.common.base.Converter#reverse(), suppressing all callers currently using it.|0|0|1|439|4175|398|160|34|66|9|0|
c1a450d511821d26d8fa0c044f073e890bc25c05|Sat Feb 26 21:20:16 CET 2022|Apply @CheckReturnValue to com.google.common.base.Converter#reverse(), suppressing all callers currently using it.|0|0|1|439|4175|398|160|27|63|13|0|
b854f7117e981bde7ecb86f902d1d1df754ae80e|Mon Feb 28 02:47:26 CET 2022|Apply @CheckReturnValue to com.google.common.base.Converter#reverse().|0|0|1|439|4175|398|160|29|66|9|0|
7256a1d9b2113b942070cf1e16a7dbff0c341680|Mon Feb 28 20:49:22 CET 2022|Don't allocate multiple ImmediateCancelledFuture instances if cancellation causes are not enabled|0|0|3|439|4175|398|160|32|80|11|0|
1962106f6f6d1b86bcb23200ba5e80b65e04ae8f|Mon Feb 28 21:55:16 CET 2022|Prepare for release 31.1.|0|0|8|439|4175|398|160|44|134|8|0|
ac11adc359943ff2ae897ec4093c67b990ded3a6|Tue Mar 01 00:37:27 CET 2022|Don't allocate multiple ImmediateCancelledFuture instances if cancellation causes are not enabled|0|0|3|439|4175|398|160|39|87|11|0|
44df85a82900867ce4785b0ffced8db20c7e1968|Tue Mar 01 17:43:05 CET 2022|Add `HttpHeaders` constants for `Sec-CH-Viewport-Width` and `Sec-CH-Viewport-Height`.|0|0|1|439|4175|400|160|35|8|11|0|
fa7be172245b05edcd3b3ef3a2b7db2659ecea9e|Tue Mar 01 19:59:11 CET 2022|Don't allocate multiple ImmediateCancelledFuture instances if cancellation causes are not enabled|0|0|3|439|4175|400|160|32|83|8|0|
aedb0efb151c0c27a2d4f88a91018e25d589039d|Wed Mar 02 17:25:36 CET 2022|Apply `@CheckReturnValue` to `Uninterruptibles#awaitUninterruptibly(CountDownLatch, Duration)`.|0|0|1|439|4175|400|160|33|27|9|0|
0ef6688750d6432e42830dbe5b522cf8c8182790|Wed Mar 02 21:35:15 CET 2022|Apply `@CheckReturnValue` to `Uninterruptibles#awaitUninterruptibly(CountDownLatch, long, TimeUnit)`.|0|0|1|439|4175|400|160|29|34|9|0|
0333746706e3a3e01635626a807b0efbfbce31db|Thu Mar 03 18:35:03 CET 2022|Remove `@CanIgnoreReturnValue` from `Ordering.compare`.|0|0|1|439|4175|400|160|34|61|10|0|
b0673d8c7d3c14c3623b9c6fbcc5ee00010230f3|Fri Mar 04 05:04:32 CET 2022|Remove `@CanIgnoreReturnValue` from `Interner.intern`.|0|0|1|439|4175|400|160|35|55|9|0|
4ddae0d488bc9e20d5f8295c269bcd4545337f58|Fri Mar 04 13:21:09 CET 2022|Remove `@CanIgnoreReturnValue` from `ForwardingListenableFuture`.|0|0|1|439|4175|400|160|34|56|7|0|
24c1b8567069887373846fe8a4c218614b71cfc1|Fri Mar 04 13:22:20 CET 2022|Remove `@CanIgnoreReturnValue` from most of `ForwardingFuture`.|0|0|1|439|4175|400|160|31|60|6|0|
a7f6b089d71b853728e0885334f6dafd2e51be25|Sat Mar 05 14:55:39 CET 2022|Remove `@CanIgnoreReturnValue` from `Futures.combine` and from all `FutureCombiner` methods.|0|0|1|439|4175|400|160|29|68|5|0|
a9c3d3ac68223c83a98022eb88bbcf0f14a66863|Wed Mar 09 02:39:03 CET 2022|Move test methods from nested classes to the top-level class.|0|0|0|439|4175|400|160|32|2|7|0|
ceee251339806a7c06274708c93ae15cd2c2f05c|Wed Mar 09 03:15:53 CET 2022|Convert nested test classes to top-level classes.|0|0|0|439|4175|400|160|35|2|7|0|
5f781850803106eda0d2ef062765409eeeee7753|Wed Mar 09 17:14:01 CET 2022|Convert nested test classes to top-level classes. (Or, sometimes, just move their methods into the top-level class.)|0|0|0|439|4175|400|160|32|2|9|0|
ad32f6f6ff26d1750645ccc22be569ed2f92a39d|Wed Mar 09 23:24:22 CET 2022|Convert nested test classes to top-level classes.|0|0|0|439|4175|400|160|30|2|6|0|
5784b7fb8ab90a50005b1f4475963a80bb1ef543|Thu Mar 10 16:51:43 CET 2022|Apply `@CheckReturnValue` to `CacheStats.plus`.|0|0|1|439|4175|400|160|32|59|6|0|
bbe7ad5d438c13b324110393b53edacbd0655c22|Mon Mar 14 14:43:31 CET 2022|Fix (or suppress) use of reference equality on boxed primitive types.|0|0|0|439|4175|400|160|28|2|6|0|
a183b59ace3dc778db40c763666c0aaf61c81f77|Wed Mar 16 15:54:53 CET 2022|Apply `@CheckReturnValue` to `ForwardingExecutorService.awaitTermination`.|0|0|1|439|4175|400|160|28|49|12|0|
aa4523514135bd75cd389566ffc0b691dd7a0d0f|Wed Mar 16 22:52:01 CET 2022|Convert nested test classes to top-level classes.|0|0|0|439|4175|400|160|39|3|10|0|
75a3d4dd360112c762200e7807b519853e0ee0b0|Wed Mar 16 23:15:04 CET 2022|Add HttpHeaders constants for Sec-CH-DPR.|0|0|1|439|4175|401|160|34|9|7|0|
a0dba15e5e700e12f474cd5fad12f728c8d1107f|Thu Mar 17 02:32:44 CET 2022|Convert nested test classes to top-level classes, and un-nest other test methods.|0|0|0|439|4175|401|160|36|2|8|0|
e3fc49e53990e63a3dbc37d84a2821e23a23b2fd|Thu Mar 17 15:35:49 CET 2022|Apply `@CheckReturnValue` to most of `WrappingExecutorService` and `WrappingScheduledExecutorService`.|0|0|2|439|4175|401|160|38|63|9|0|
edfcb30297f6b89d3af0be0afb98b394137ec950|Thu Mar 17 15:52:36 CET 2022|Remove `@CanIgnoreReturnValue` from most of `ForwardingExecutorService`.|0|0|1|439|4175|401|160|31|47|9|0|
7b37db9a62ff489a6b3a683f1888fb2fa0fcba06|Fri Mar 18 02:56:54 CET 2022|Remove `@CanIgnoreReturnValue` from `AbstractIterator.hasNext`.|0|0|1|439|4175|401|160|29|48|7|0|
ce42394bbddc8c65395cfa7ff7a199a5bcd4ee0e|Fri Mar 18 02:57:04 CET 2022|Remove `@CanIgnoreReturnValue` from `ForwardingListeningExecutorService`.|0|0|1|439|4175|401|160|32|49|5|0|
6c8a2e1658c86e0aed72b0f618814d25aec2d836|Fri Mar 18 02:57:59 CET 2022|Remove `@CanIgnoreReturnValue` from `CycleDetectingLockFactory`.|0|0|1|439|4175|401|160|29|73|8|0|
1bc1bd24dfe5dc1bd4ea246934c6eb8a8e3e577a|Fri Mar 18 19:02:07 CET 2022|Convert nested test classes to top-level classes.|0|0|0|439|4175|401|160|33|2|8|0|
5708344667f932e4acf70864ca85dfd32a71b05a|Fri Mar 18 19:39:53 CET 2022|Bump actions/checkout from 2.4.0 to 3.|0|0|0|439|4175|401|160|28|2|7|0|
91d09d9282bab509f9510d50a22708c99600f872|Sat Mar 19 01:55:02 CET 2022|Allow `UnsafeByteArray` on aarch64 too, but not on Android.|0|0|1|439|4175|401|160|27|20|6|0|
4cbc6f10822fd44225ab042473cd3a08ea46b6ce|Sun Mar 20 19:27:07 CET 2022|Remove `@CanIgnoreReturnValue` from `Function.apply`.|0|0|1|439|4175|401|160|28|11|7|0|
df55981b5d5cc46e67fcb19d13847b424632405f|Mon Mar 21 20:17:17 CET 2022|Bump actions/cache from 2.1.7 to 3.|0|0|0|439|4175|401|160|31|2|10|0|
7e04a00131a3a88888752e3548f3c5140b996c85|Tue Mar 22 03:59:04 CET 2022|Small fixes to progress towards building Guava on JDK 17.|0|0|0|439|4175|401|160|33|3|8|0|
6ad621e76d6dec9f00804c53cbeaa3c9c5854d59|Tue Mar 22 15:11:21 CET 2022|Adjust the capacity computation in `Maps.newHashMapWithExpectedSize`.|0|0|1|439|4175|401|160|35|107|12|0|
53fa691f6dda9619b5d4e02b19f2f9b9f2903803|Tue Mar 22 19:43:07 CET 2022|Convert nested test classes to top-level classes.|0|0|0|439|4175|401|160|38|2|8|0|
efcba8a60aec69fbc2fe9d1427d80cf9aab4bd0d|Tue Mar 22 20:44:01 CET 2022|Use `--add-opens` to allow tests to pass on recent JDKs.|0|0|0|439|4175|401|160|33|2|7|0|
0d4eb3bc01252001344d3578007e823210b36243|Wed Mar 23 14:56:00 CET 2022|Temporary rollback of https://github.com/google/guava/commit/6ad621e76d6dec9f00804c53cbeaa3c9c5854d59 while we investigate a mystery test failure.|0|0|1|439|4175|401|160|30|100|11|0|
fd8f5615ab66fd7adb1b882d6ab4ade708e4c5be|Wed Mar 23 18:19:04 CET 2022|Internal change.|0|0|0|439|4175|401|160|39|2|6|0|
4d323b2b117a5906ab16074c8c88b4ff162b1b82|Thu Mar 24 17:46:38 CET 2022|Roll forward of https://github.com/google/guava/commit/6ad621e76d6dec9f00804c53cbeaa3c9c5854d59 - test was fixed|0|0|1|439|4175|401|160|31|89|9|0|
2a268346329c3ce17ad1269c5c0206ddd2747a17|Tue Mar 29 17:08:45 CEST 2022|Convert nested test class to top-level class.|0|0|0|439|4175|401|160|38|3|7|0|
6ec853ce614e1184876be90d195e1180ca3ab6c8|Thu Mar 31 22:45:39 CEST 2022|Copy some tests from the mainline to the backport.|0|0|0|439|4175|401|160|32|2|11|0|
b30a7120f901b4a367b8a9839a8b8ba62457fbdf|Sat Apr 02 00:11:55 CEST 2022|Minor simplifications to `LittleEndianByteArray`.|0|0|1|439|4175|401|160|31|21|6|0|
f5157203468fa652d0b113c1d11d1d0f055319b4|Sat Apr 02 00:37:53 CEST 2022|Use `long` multiplication `FarmHashFingerprint64`.|0|0|1|439|4175|401|160|28|17|7|0|
8689448f815fb62125dba21d80615c60aa96e111|Sat Apr 02 00:47:04 CEST 2022|Convert nested test class to top-level class, and un-nest other test methods.|0|0|0|439|4175|401|160|32|2|9|0|
48b02ce53ca35b0db1e3def8f00d257cd4adf68c|Sat Apr 02 00:48:58 CEST 2022|Convert nested test classes to top-level classes.|0|0|0|439|4175|401|160|45|2|7|0|
ba44e3996d619f506f53f4c26309abe16f688cc2|Mon Apr 11 21:50:10 CEST 2022|Various simplifications to code and comments.|0|0|4|439|4175|401|160|38|125|9|0|
da1aa6184f15a070e327cccb0172f7567448bfa1|Mon Apr 11 23:21:57 CEST 2022|Various simplifications to code and comments.|0|0|4|439|4175|401|160|39|121|10|0|
30a8aed9b9e263dd23cf546befed9552779c9cbc|Wed Apr 13 20:09:04 CEST 2022|Update Public Suffix data.|0|0|1|439|4175|401|160|35|45|10|0|
fcca066e6d1ea878d1d5703524a67c3cdeb1d586|Fri Apr 15 01:19:49 CEST 2022|Various simplifications to code and comments.|0|0|4|439|4175|401|160|32|113|8|0|
ca12b7dee09ae83755104aaf36dc449c998b942e|Mon Apr 18 20:36:38 CEST 2022|Bump actions/setup-java from 2 to 3.1.1|0|0|0|439|4175|401|160|34|2|10|0|
0ca124d8a9a463e7aceb84bbc4e727644a5fda3e|Mon Apr 18 21:52:39 CEST 2022|Migrate the `primitives` tests to Truth.|0|0|0|439|4175|401|160|38|2|9|0|
e7b86f4767ad1cfa58c5bcad1f7ca9358d52ee45|Tue Apr 19 17:14:25 CEST 2022|Further Truthy fixes.|0|0|0|439|4175|401|160|33|2|9|0|
ac878a5180eaf952d4d5c3ae0cc15d64d4edca29|Thu Apr 21 17:09:42 CEST 2022|Remove @GwtIncompatible from LongMath.checkedAdd|0|0|1|439|4175|401|160|32|25|12|0|
cd338fa2bc69c88b50bfa6ab0eff3ac26e769ec9|Fri Apr 22 19:50:00 CEST 2022|Adds rotate() for arrays of ints.|0|0|1|439|4177|401|160|34|25|9|0|
c355ce77bfe19a292c59e3d04a9cf0041c6e859e|Fri Apr 22 20:46:06 CEST 2022|Add `@since NEXT` for `Ints.rotate`.|0|0|1|439|4177|401|160|29|28|10|0|
acb004c10193c1c476a9a9ba8683eeff910e4a82|Mon Apr 25 19:51:18 CEST 2022|Internal changes|0|0|3|439|4177|401|160|33|78|9|0|
69332c6da014c30713aca369921d9c484efc589b|Wed Apr 27 16:33:58 CEST 2022|Make testSupplierThreadSafe private.|0|0|0|439|4177|401|160|31|2|11|0|
a24a8949264dce674d70d97b75696230437b3e21|Wed Apr 27 17:38:58 CEST 2022|Internal change.|0|0|0|439|4177|401|160|38|3|9|0|
0292b730b86129aa69cb165a4a5f349fa2936edb|Wed Apr 27 20:54:01 CEST 2022|Internal change.|0|0|0|439|4177|401|160|43|3|10|0|
a5660b462ceed47283d058ac546bd0d4649ee9fb|Wed Apr 27 21:04:14 CEST 2022|Mark some tests that don't pass under Android as `@AndroidIncompatible`.|0|0|0|439|4177|401|160|38|2|10|0|
6d986d1100d2031d2407e434b2a775a848173445|Fri Apr 29 21:18:51 CEST 2022|Annotate a safe racy initialization with `@LazyInit`.|0|0|0|439|4177|401|160|36|2|9|0|
f2bb1718f800a2486527b0bf5d83218945d3d9f1|Sat Apr 30 02:09:33 CEST 2022|Be clearer about what types we're catching.|0|0|12|439|4177|401|160|41|106|9|0|
6e9057d0f28799b7483d96097fc7ea2247ebf8d5|Wed May 04 14:16:21 CEST 2022|Add `rotate()` methods for other primitive array types, except `boolean`.|0|0|8|439|4191|401|160|45|40|7|0|
7526b1f9bc1744729aa269064d20aa7cedc2ace9|Thu May 05 15:53:24 CEST 2022|`collect`: Marked `Range` as `@Immutable`|0|0|1|439|4191|401|160|37|55|10|0|
412a42043c7104d3e2c5b08a70e68faf947af626|Mon May 09 16:16:38 CEST 2022|Use built-in cache in actions/setup-java.|0|0|0|439|4191|401|160|30|2|7|0|
cd5cf321c37107a5e262211ea4299f0c001ee872|Mon May 09 17:14:14 CEST 2022|[PATCH] Bump actions/setup-java from 3.1.1 to 3.3.0|0|0|0|439|4191|401|160|27|2|12|0|
8f0350a21a713e2367cbcb526aa7bc5bf381fcb9|Tue May 10 14:23:19 CEST 2022|When we catch `InterruptedException`, take care to restore the interrupt bit.|0|0|11|439|4191|401|160|37|88|9|0|
05df05d1c0e119faebde028a3ea56d6caed91f16|Mon May 16 19:15:25 CEST 2022|Remove workaround for old GWT bug.|0|0|0|439|4191|401|160|32|2|6|0|
9303eb2115f3be584c1efba78b39055f098be0f8|Tue May 17 11:31:49 CEST 2022|Updating common.graph {Network,Graph,ValueGraph}Builder documentation|0|0|3|439|4191|401|160|32|22|9|0|
7581939985e53d0048d3a93cd7ca4652a99e8b08|Tue May 17 19:38:06 CEST 2022|Improve the performance of Hashing's toString computation.|0|0|1|439|4191|401|160|32|25|8|0|
7731825df8008c3fa65096d2681952eddd3b0c2d|Thu May 19 18:08:40 CEST 2022|Change `RangeMap.putAll()` to take `RangeMap<K, ? extends V>` so that, for example, you could put a `RangeMap<Instant, String>` into a `RangeMap<Instant, CharSequence>` just as you could put each entry using `put(Range<Instant>, CharSequence)`.|0|0|3|439|4191|401|160|33|76|8|3|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.ImmutableRangeMap.putAll(com.google.common.collect.RangeMap<K,V>), newSymbol=com.google.common.collect.ImmutableRangeMap.putAll(com.google.common.collect.RangeMap<K,? extends V>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.RangeMap.putAll(com.google.common.collect.RangeMap<K,V>), newSymbol=com.google.common.collect.RangeMap.putAll(com.google.common.collect.RangeMap<K,? extends V>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.TreeRangeMap.putAll(com.google.common.collect.RangeMap<K,V>), newSymbol=com.google.common.collect.TreeRangeMap.putAll(com.google.common.collect.RangeMap<K,? extends V>)]
76260d9b3c6acbabf9a8ddae11d4fff3985b6272|Wed May 25 04:58:48 CEST 2022|Fix issue #5843|0|0|3|439|4191|401|160|40|81|8|0|
e62d6a0456420d295089a9c319b7593a3eae4a83|Wed May 25 22:30:30 CEST 2022|Add exception-throwing `readObject` to classes using the serial-proxy pattern.|0|0|24|439|4191|401|160|47|185|9|0|
2386c63c36db6f4eb84f2b8ac8973f50522ff8dc|Fri May 27 17:09:41 CEST 2022|Upgrade maven-gpg-plugin to 3.0.1.|0|0|0|439|4191|401|160|41|3|9|0|
d0fc167507031149c4bbcbd4e08d4ca89d727783|Fri Jun 03 03:19:19 CEST 2022|Add `@CanIgnoreReturnValue` to some `com.google.common.graph` builders.|0|0|3|439|4191|401|160|31|21|6|0|
78b41ebe5c327e26709cb61a737cb4236cfe7cb3|Fri Jun 03 19:08:27 CEST 2022|Add a warning to `ThreadFactoryBuilder.setPriority(int)`.|0|0|1|439|4191|401|160|31|59|5|0|
cc893a98ca1673d492b2206e991a2399d9f3a7cd|Mon Jun 06 18:13:21 CEST 2022|Remove `@CanIgnoreReturnValue` from `ThreadFactoryBuilder`.|0|0|1|439|4191|401|160|29|64|7|0|
78d67c94dbe95b918c839b3a0b50d44508c2838b|Mon Jun 06 23:34:19 CEST 2022|Update Public Suffix data.|0|0|1|439|4191|401|160|33|41|10|0|
78e518b79012a3522d8d1f1c06ac327545ae54bf|Wed Jun 15 22:55:49 CEST 2022|Tidy up Guava's `@CheckReturnValue` / `@CanIgnoreReturnValue` annotations (including pushing `@CIRV` annotations down from the class-level to method-level).|0|0|13|439|4191|401|160|39|92|6|0|
d8633ac8539dae52c8361f79c7a0dbd9ad6dd2c4|Thu Jun 16 10:53:01 CEST 2022|Fix typos in MoreExecutors javadoc|0|0|1|439|4191|401|160|34|64|7|0|
4df79d565eef5e523c04bb6865d93f62c52e98d1|Mon Jun 20 03:10:41 CEST 2022|Remove incorrect `@CanIgnoreReturnValue`s on `MonitorBasedPriorityBlockingQueue`.|0|0|0|439|4191|401|160|31|2|7|0|
4d733da8b2af9b1b340afd360c084ad938745b4a|Thu Jun 23 16:01:14 CEST 2022|Bump actions/setup-java from 3.3.0 to 3.4.0|0|0|0|439|4191|401|160|32|2|9|0|
91b10f0754fb64f976fcc790c772cfbf51d14c1d|Wed Jun 29 17:47:02 CEST 2022|Fix erroneous -0 literals in tests|0|0|0|439|4191|401|160|31|3|8|0|
1db31fea45a5dba96b406f270089b56f4e1e6522|Thu Jun 30 22:15:45 CEST 2022|Annotate GWT emul `AbstractFuture` with `@CanIgnoreReturnValue`.|0|0|0|439|4191|401|160|33|2|10|0|
6da6def85e3ae7b1a851ca1a5de756b3eb2ca313|Thu Jun 30 23:23:40 CEST 2022|Annotate some GWT emulation code with `@CanIgnoreReturnValue`.|0|0|0|439|4191|401|160|32|3|10|0|
f71fa1507c35470a43a8f5319a513eacf5a5ed28|Wed Jul 06 17:07:30 CEST 2022|Add more missing `@CanIgnoreReturnValue` annotations to GWT emulations.|0|0|0|439|4191|401|160|33|3|8|0|
ee0a3b0c1022040d165cb3231b852a73174dfc20|Thu Jul 07 15:46:30 CEST 2022|Add missing `@CanIgnoreReturnValue` annotation to `ImmutableCollection.Builder.add()`.|0|0|0|439|4191|401|160|33|5|7|0|
e9ff35e61201922c96d8b6505db1ba4688c31f0a|Thu Jul 07 16:31:30 CEST 2022|Add `@CanIgnoreReturnValue` to `Uninterruptibles.getUninterruptibly()` under GWT.|0|0|0|439|4191|401|160|30|2|6|0|
4cf437c75062d98fcb1172dc3b0a3d309650aa37|Fri Jul 08 16:28:08 CEST 2022|Remove mod.uk from changes file for Public Suffix List.|0|0|1|439|4191|401|160|31|46|7|0|
bb374970373ccf0f526f20e227f009e94656ca44|Wed Jul 13 18:23:51 CEST 2022|ci: add GitHub token permissions for workflow|0|0|0|439|4191|401|160|30|2|7|0|
2cb2cc6ac791bfe12d2b856c70d1cd9a7685c75b|Wed Jul 13 19:05:20 CEST 2022|Bump actions/setup-java from 3.4.0 to 3.4.1|0|0|0|439|4191|401|160|27|2|9|0|
a98c363d44d76ee4db77df803fead71e0b57e7cf|Wed Jul 13 21:18:18 CEST 2022|Bump styfle/cancel-workflow-action from 0.9.1 to 0.10.0|0|0|0|439|4191|401|160|28|2|6|0|
4fff0006bb26f254d36b3b0109b99238e216c718|Mon Jul 18 21:12:00 CEST 2022|Internal change.|0|0|1|439|4191|401|160|31|53|8|0|
f5b5c2065a7c23ddf83ed9e4ee087ba504d8be3e|Tue Jul 19 06:27:30 CEST 2022|Remove GWT elemental2 dependency.|0|0|0|439|4191|401|160|29|2|7|0|
0bacca267f48f383438cdae16c04f13383309b9f|Tue Jul 19 20:13:21 CEST 2022|Copy more `@CanIgnoreReturnValue` annotations to GWT emulations.|0|0|0|439|4191|401|160|28|2|6|0|
0d5c16fc6b9eed1d3016dfceaf94d370fae27043|Fri Jul 22 19:57:37 CEST 2022|Add a SUPPORTS_LOADING_MODE response header.|0|0|1|439|4191|402|160|31|8|9|0|
b037a558e88c7587dd77276182a4156c490a2144|Mon Jul 25 16:20:39 CEST 2022|Internal change.|0|0|1|439|4191|402|160|32|52|6|0|
4a37c76050216dc44a37b682f260506f556b296e|Wed Jul 27 21:34:34 CEST 2022|Mark a field as `final`.|0|0|1|439|4191|402|160|29|68|9|0|
dd26f10a2141d0ba5c79a6a4889e9b22e5b6af2d|Thu Jul 28 00:12:33 CEST 2022|Mark a field as `final`.|0|0|1|439|4191|402|160|30|67|7|0|
3396208df88e0348285ed7b692d32218431e41a2|Fri Jul 29 18:29:07 CEST 2022|Mark a field as `final`.|0|0|1|439|4191|402|160|27|70|9|0|
38040508a3783e482dd28372c79c504ae45b6b75|Wed Aug 03 23:55:01 CEST 2022|Remove `@CanIgnoreReturnValue` from `Converter.convert()`, effectively making it `@CheckReturnValue`.|0|0|1|439|4191|402|160|35|69|7|0|
e06a8cec65815599e510d7f9c1ea9d2a8eaa438a|Thu Aug 04 03:36:27 CEST 2022|Enable Error Prone for Maven builds.|0|0|0|439|4191|402|160|35|2|8|0|
8f462ad09baf382920e82504d4ba720289615bdd|Thu Aug 04 18:56:42 CEST 2022|Remove `@CanIgnoreReturnValue` from `converter.convertAll(Iterable)` and `converter.apply(A)`.|0|0|1|439|4191|402|160|37|69|8|0|
4e929d089b84d4a6c80809e1ff4e5033eb2a14ab|Fri Aug 05 06:57:15 CEST 2022|Add `@CheckReturnValue` to `CacheBuilder`.|0|0|2|439|4191|402|160|33|105|7|0|
dc90ff245eaf94854d62a8c784f7797bee306e19|Fri Aug 05 19:18:40 CEST 2022|Add `@CanIgnoreReturnValue` annotations and suppressions (as appropriate) to `com.google.common.cache`.|0|0|2|439|4191|402|160|33|97|6|0|
11f526d9eaed561cfb5712268a5fad04f3138874|Fri Aug 05 20:51:47 CEST 2022|Add `@CanIgnoreReturnValue` annotations and suppressions (as appropriate) to `com.google.common.cache`.|0|0|2|439|4191|402|160|33|69|8|0|
67350a341c5cfd5e9bebf86ba87687ab7ef602b2|Sat Aug 06 19:10:24 CEST 2022|Add `@CheckReturnValue` to `com.google.common.cache.package-info.java`, add `@CanIgnoreReturnValue` (as necessary), and trim `com.google.common.cache` entries from the cirv exclusion list.|0|0|6|439|4191|402|160|33|96|11|0|
bd5a777790e15226f9756701080da9168144206c|Sun Aug 07 04:35:31 CEST 2022|Remove `@CheckReturnValue` from individual methods now that the entire package is annotated.|0|0|4|439|4191|402|160|32|83|10|0|
3b1ab72a093b1aa06125e0ffca900f2e289cba58|Mon Aug 08 04:45:22 CEST 2022|Remove `@CanIgnoreReturnValue` from `CacheBuilderSpec.parse()` and fix up callers.|0|0|1|439|4191|402|160|31|91|7|0|
0136f801410bac6d1b96653c2ca9734dccb2bb39|Mon Aug 08 15:58:47 CEST 2022|Update Public Suffix data.|0|0|1|439|4191|402|160|29|44|10|0|
2c72146b7876ea490331591871f457d6e5c5544d|Mon Aug 08 18:02:32 CEST 2022|Add a couple missing `@CIRV` annotations.|0|0|2|439|4191|402|160|32|80|10|0|
f942fd2c0e6cdf424a6a1d041c7213e663457fd6|Tue Aug 09 22:48:19 CEST 2022|Add application/jwt MediaType|0|0|1|439|4191|403|160|33|78|10|0|
5c8719e28880a0f942272bdd57d9a194a2d6226c|Wed Aug 10 23:26:08 CEST 2022|Attempt to improve documentation of `@ParametricNullness`.|0|0|15|439|4191|403|160|44|94|9|0|
c111c0150225739b3f5914d1739cd22fb692bce7|Thu Aug 18 01:06:12 CEST 2022|Tweak the mainline and backport to produce identical `.class` files.|0|0|2|439|4191|403|160|35|69|12|0|
e9755b4f20de9ffe8c50a93f7c8c70a70bf28e5e|Thu Aug 18 18:44:32 CEST 2022|Fix comment from cl/468316113.|0|0|2|439|4191|403|160|30|62|10|0|
4312d949967f3fb245636f66437a00dd8c346d38|Mon Aug 22 16:25:08 CEST 2022|Fix lenient format strings in common.|0|0|2|439|4191|403|160|35|101|9|0|
101dc3ea704d58a4ee172e40a73f40e5fb3cabe8|Tue Aug 23 12:57:49 CEST 2022|`collect`: Presize the `ImmutableMap` builder when `uniqueIndex` is run on a `Collection`|0|0|1|439|4191|403|160|32|91|12|0|
c9c543ec82405d003ebf818e45a6a4e04f88acc9|Tue Aug 23 20:45:02 CEST 2022|Avoid reflection on `java.util.concurrent` internals during tests.|0|0|1|439|4191|403|160|36|15|12|0|
0f1d9352e88ead08d4d2c984d480c3cc210a1a0b|Wed Aug 24 18:04:26 CEST 2022|Modernize `BaseEncodingTest` somewhat.|0|0|0|439|4191|403|160|31|2|8|0|
9c1e5dea4b980202ba003b90fcb64183d42031b3|Wed Aug 24 22:40:56 CEST 2022|Add `BaseEncoding.ignoreCase()`.|0|0|1|439|4192|403|160|28|25|9|1|BC[kind=METHOD_ABSTRACT_ADDED_TO_CLASS, impactedSymbol=com.google.common.io.BaseEncoding, newSymbol=com.google.common.io.BaseEncoding.ignoreCase()]
b9c4a779ebb4a4c12cf80b348934e0b40eb53397|Thu Aug 25 18:30:49 CEST 2022|In `BaseEncoding`, ensure that `.lowerCase().ignoreCase()` is the same as `.ignoreCase().lowerCase()`.|0|0|1|439|4192|403|160|31|25|10|0|
010ed2696a0e59660e2247079468f8cf5fbd1c86|Thu Aug 25 22:19:57 CEST 2022|Fix typos|0|0|3|439|4192|403|160|35|84|15|0|
43b5235ea828f0bdbe214459b877b1cb51d4a761|Fri Aug 26 00:30:08 CEST 2022|Minor improvements to `BaseEncoding`.|0|0|1|439|4192|403|160|36|28|15|0|
f1c700c3526034c2b1c304a0467c5d412392bbde|Fri Aug 26 18:23:47 CEST 2022|Fix typos|0|0|1|439|4192|403|160|33|18|15|0|
807a5938700ba4041bf8fa4d1a1ebbc040b04906|Tue Aug 30 22:23:10 CEST 2022|Remove J2ObjCIncompatible from Stopwatch.elapsed|0|0|1|439|4192|403|160|34|13|17|0|
32f7a37c3dc87ef2056b04bdd9ac0e41fcedce10|Wed Aug 31 01:43:25 CEST 2022|Remove J2ObjCIncompatible from Stopwatch.elapsed|0|0|1|439|4192|403|160|32|15|14|0|
49e6b9c4a1f551d30b18483800f02de68d7ca062|Wed Aug 31 19:40:59 CEST 2022|Add Sec-CH-UA-Wow64 to `HttpHeaders`. Spec: https://wicg.github.io/ua-client-hints/#sec-ch-ua-wow64|0|0|1|439|4192|404|160|31|11|10|0|
1dd255155fae1385ca0497e5147e0fbdcf1a8dd4|Fri Sep 09 23:35:22 CEST 2022|Bumps [actions/setup-java](https://github.com/actions/setup-java) from 3.4.1 to 3.5.0.|0|0|0|439|4192|404|160|29|2|10|0|
241b222097bb490e125b7c527ea4d64fbc908c8e|Wed Sep 14 16:58:49 CEST 2022|Change constructor of `ForwardingMap` to `protected`.|0|0|1|439|4192|404|160|31|58|14|1|BC[kind=CONSTRUCTOR_NOW_PROTECTED, impactedSymbol=com.google.common.collect.ForwardingMap$StandardEntrySet.<init>(), newSymbol=com.google.common.collect.ForwardingMap$StandardEntrySet.<init>()]
94786f7c419041068ad48f04fe3d9fa4a266b6dd|Fri Sep 16 00:18:54 CEST 2022|Rewrite `ComparisonChainTest` to use Truth.|0|0|0|439|4192|404|160|30|2|7|0|
f248c092260a0ccdcb937b5806251480104c5df5|Tue Sep 20 04:47:16 CEST 2022|Add `@CheckReturnValue` to `com.google.common.testing`.|0|0|0|439|4192|404|160|38|2|12|0|
2e0f7984bdb90cd07282f503e6736df895f98e24|Wed Sep 21 17:06:01 CEST 2022|Add `package-info.java` (with `@CheckReturnValue`) to `com.google.common.collect.testing.*` packages, and add `@CanIgnoreReturnValue` as appropriate.|0|0|0|439|4192|404|160|45|2|9|0|
e4522099b392197a7d2870af634b74fc07d780e7|Wed Sep 21 19:25:01 CEST 2022|Document that `ComparisonChain` is mostly obsolete.|0|0|1|439|4192|404|160|35|51|9|0|
b880ac749efa023b52a17422e0d29eba3dbfa1ae|Mon Oct 03 17:55:24 CEST 2022|Bump actions/setup-java from 3.5.0 to 3.5.1|0|0|0|439|4192|404|160|29|2|10|0|
e7d6821c9edef8182f7af85416af259bcf5c1947|Mon Oct 03 18:27:05 CEST 2022|Bump styfle/cancel-workflow-action from 0.10.0 to 0.10.1|0|0|0|439|4192|404|160|29|2|8|0|
5ed6e43686dec95cb47e444d4cae77060dcc4dc0|Wed Oct 05 21:01:12 CEST 2022|Make `Primitives` available to GWT/j2cl.|0|0|1|439|4192|404|160|32|22|11|0|
a2e8f3c7ce47c9f8904e6afe39cf4aa8ac340c46|Thu Oct 06 00:24:02 CEST 2022|Optimize the memory footprint of `MapMakerInternalMap` entries by special-casing linked entries.|0|0|1|439|4192|404|160|33|82|12|0|
51456ae0b7dd4251429a927e9f633de46e2c20ec|Thu Oct 06 23:12:18 CEST 2022|Avoid creating an entry whose key is `null` at construction time.|0|0|1|439|4192|404|160|37|108|10|0|
fde1b8451d8d84c2842cbb75dd66a3d0b58a4274|Sat Oct 08 03:21:19 CEST 2022|Automatically add `@CheckForNull` annotations with https://github.com/google/error-prone/blob/master/core/src/main/java/com/google/errorprone/bugpatterns/nullness/ReturnMissingNullable.java|0|0|2|439|4192|404|160|32|115|12|0|
70d571b10a95e1579a473dfefa981ab5fcb6fcc3|Mon Oct 10 21:36:22 CEST 2022|Fix typos in Javadocs, comments and code.|0|0|48|439|4192|404|160|107|322|14|0|
3fc91d6d94d56d3dd0410c75765e176b6a98866f|Thu Oct 13 04:22:03 CEST 2022|Internal change.|0|0|2|439|4192|404|160|86|58|14|0|
370da321a4902039f9bae2f66826b8be100d465a|Thu Oct 13 07:58:27 CEST 2022|Internal change.|0|0|2|439|4192|404|160|42|55|9|0|
989e3b261eb3c67b42c97f612b5d726f03e1e300|Thu Oct 13 21:17:57 CEST 2022|Internal change.|0|0|2|439|4192|404|160|32|52|8|0|
c27795809ea8d77d24f1de5907f2bc97c8404062|Fri Oct 14 19:40:11 CEST 2022|Discuss the (negligible to most users) overhead of using `Stopwatch` relative to `System.nanoTime`.|0|0|1|439|4192|404|160|30|15|10|0|
6d92fc532c556f55bada2d8903b9fc6bb0857273|Fri Oct 14 21:59:21 CEST 2022|Use `@NonNull` to avoid having to suppress a nullness error inside our implementation.|0|0|1|439|4192|404|160|30|47|9|0|
805fbfd8a0cff726b0cec880fe70b5ccbba57e34|Sat Oct 15 00:39:21 CEST 2022|Update Public Suffix data.|0|0|1|439|4192|404|160|31|45|14|0|
d48418e4528ad0323e51e34d4e1044cc03c77c98|Tue Oct 18 01:53:15 CEST 2022|Bump styfle/cancel-workflow-action from 0.10.1 to 0.11.0.|0|0|0|439|4192|404|160|35|3|10|0|
f9d336f6cd867250daf411fce3aa5d63e533ea19|Thu Oct 20 16:11:14 CEST 2022|Remove `@CanIgnoreReturnValue` from a few functional interfaces.|0|0|2|439|4192|404|160|32|14|10|0|
b337be608971b02a51f1a31a50a49c4755c6fd75|Fri Oct 21 19:58:31 CEST 2022|Move `interruptTask()` call to immediately before `afterDone()` call.|0|0|1|439|4192|404|160|34|36|11|0|
822125f9ee7a71c830f1383e9e5a8663414d8f48|Thu Oct 27 19:30:40 CEST 2022|Bump deps.|0|0|0|439|4192|404|160|36|2|13|0|
ed6817bdaa881846cdc8c7e313c0d07bceb108cb|Tue Nov 01 14:58:14 CET 2022|Suppress various Error Prone warnings/suggestions (sometimes by making no-op changes to silence them, rather than using `@SuppressWarnings`).|0|0|1|439|4192|404|160|31|26|9|0|
595af4f4c54e411a03a723bb95a68b652a886d11|Wed Nov 02 18:36:10 CET 2022|Bump actions/setup-java from 3.5.1 to 3.6.0|0|0|0|439|4192|404|160|29|2|8|0|
6d7e326b2cbfba5f19fc67859c0b3d4c45fab63f|Thu Nov 03 05:18:08 CET 2022|Update Error Prone.|0|0|0|439|4192|404|160|29|2|10|0|
dafaa3e435421fffc7a2a2fab9c700affb07c5e4|Tue Nov 15 17:16:32 CET 2022|Making sameThreadScheduledExecutor's return type ListeningScheduledExecutorService, to avoid leaking a package-private class through a public method.|0|0|0|439|4192|404|160|30|2|9|0|
166d8c0d8733d40914fb24f368cb587a92bddfe0|Tue Nov 15 17:30:35 CET 2022|Write our own `FutureCallback` implementation instead of using a mock.|0|0|0|439|4192|404|160|29|2|11|0|
d06cbb6d7cde56d4afc64e463f12e6821df8c513|Tue Nov 15 22:35:30 CET 2022|Fix Javadoc warnings.|0|0|6|439|4192|404|160|35|120|7|0|
c5d7b86c19e75438d93effc176470e3a25494a08|Tue Nov 15 23:33:14 CET 2022|Suppress some `CheckReturnValue` errors.|0|0|0|439|4192|404|160|39|2|8|0|
8a676ade617c6be992165cd0658779a14acef2f2|Wed Nov 16 13:33:55 CET 2022|Make the build work under more JDK versions.|0|0|0|439|4192|404|160|32|2|10|0|
7e87414e58caf0937fd8196e1db104e5b38b1a26|Wed Nov 16 18:38:28 CET 2022|Roll back `CheckReturnValue` suppressions.|0|0|0|439|4192|404|160|32|2|13|0|
688b9c2cfae305f38c601efd4a7a9e9549db9b1f|Wed Nov 16 19:25:53 CET 2022|Add HttpHeaders constants for No-Vary-Search.|0|0|1|439|4192|405|160|33|7|9|0|
942ec29b9d99a9ba43c2929755d696c7cacab664|Tue Nov 22 21:25:18 CET 2022|Rip out internal fields `maxSegmentSize` and `CLEANUP_EXECUTOR_DELAY_SECS`.|0|0|1|439|4192|405|160|30|73|7|0|
38ce3d05d0daf37ee2f8caf4c57443403701c8cc|Mon Nov 28 20:46:56 CET 2022|Suppress callsites where the return value of `Comparator.compare` is unused.|0|0|3|439|4192|405|160|41|74|6|0|
ee06b4037c1463370275df77e443a18f8f0631b0|Tue Nov 29 17:13:21 CET 2022|`NullsFirstOrdering`/`NullsLastOrdering`: generics pedantry|0|0|2|439|4192|405|160|33|50|13|0|
315a45e193ba95e89b41bfc4755b05c52ff93fc9|Fri Dec 02 17:30:49 CET 2022|Bump actions/setup-java from 3.6.0 to 3.7.0|0|0|0|439|4192|405|160|35|3|12|0|
e7cffefb3a21e3ae000c7dafe750ca88acdb8bfa|Mon Dec 05 11:26:45 CET 2022|Implement a more efficient version of Supplier.memoize|0|0|1|439|4192|405|160|32|15|11|0|
f4c02a1f30d3f86879ef892736da4031362a1895|Mon Dec 05 15:20:27 CET 2022|Fix a typo in `TypeToken` javadoc. Thanks to @Marcono1234 for the fix!|0|0|1|439|4192|405|160|32|88|11|0|
0b179dcba3f7258dda42c60380328a28dda06075|Mon Dec 05 20:12:41 CET 2022|Roll back setup-java update.|0|0|0|439|4192|405|160|33|2|15|0|
ea49a6be9e3c9bce629248d26fb7f071e2dfe8c1|Mon Dec 05 21:17:19 CET 2022|Under JDK20+, skip test that uses `Thread.suspend`.|0|0|0|439|4192|405|160|28|2|9|0|
a135f94870c4f0700b40d16ecad887c8c7ba72a1|Thu Dec 08 20:18:25 CET 2022|Strip `@Nullable` annotations from manually written GWT/j2cl supersources externally, as we already do when passing "normal" sources to GWT/j2cl.|0|0|0|439|4192|405|160|30|2|10|0|
732ba2aefe7083aa2a026d922a46a42f8de5163c|Thu Dec 08 21:27:23 CET 2022|Improve nullability annotations for J2cl overlays in the concurrent package -- make them consistent with the underlying classes.|0|0|0|439|4192|405|160|30|2|10|0|
049867c5ee9570a9988a8b06d7fa2643da70336c|Tue Dec 13 03:04:34 CET 2022|More reliably use transitional `@CheckForNull` and `@ParametricNullness` annotations.|0|0|12|439|4192|405|160|39|169|15|0|
58ae8dea1ed1695616fb79c2c619dcb252184433|Tue Dec 13 12:16:16 CET 2022|Suppress a likely false positive in our nullness checker.|0|0|2|439|4192|405|160|40|48|8|0|
1742de51a7b6f56087d5579de1171f0f27d6091d|Fri Dec 16 01:21:13 CET 2022|Update Public Suffix data.|0|0|1|439|4192|405|160|31|43|9|0|
0cdddd9c990a2cc43b12504808ed1237cbc0ba22|Fri Dec 16 22:44:59 CET 2022|Bump actions/setup-java from 3.6.0 to 3.9.0|0|0|0|439|4192|405|160|32|3|10|0|
25ebb6447803ef07906ed4d5432c0cce27b0ff2d|Sat Dec 17 16:03:01 CET 2022|Simplify and tighten an assertion in the specification of `Booleans.asList`.|0|0|1|439|4192|405|160|32|18|9|0|
13fe7068ce9073cc05056842cb26dfb91149d787|Mon Dec 19 21:17:24 CET 2022|Explicitly specify that some returned values are serializable.|0|0|18|439|4192|405|160|44|133|9|0|
6bf3c772512610223242a71f92f181e80e0b4243|Tue Dec 20 00:21:01 CET 2022|Use `@link` instead of `@linkplain` when referring to method names.|0|0|1|439|4192|405|160|37|68|9|0|
59d174cfbe87493cdc33a3746ee914e0073ce1a1|Thu Dec 22 19:57:10 CET 2022|Include information about method parameters in class file.|0|0|0|439|4192|405|160|29|2|10|0|
e945869708ecd32a2af13383ba3ad42eb89b9251|Thu Dec 22 20:35:51 CET 2022|More reliably use transitional `@CheckForNull` annotations.|0|0|2|439|4192|405|160|31|73|13|0|
ac5b2c310273964fcdfebfe3affaa6933718250c|Thu Dec 29 00:14:39 CET 2022|Add `@CanIgnoreReturnValue` to methods that always `return this`; this allows callers to ignore the return value of the method.|0|0|1|439|4192|405|160|35|16|12|0|
dd4a93a203223327c5d8efe9028b0a9d292bceab|Thu Dec 29 18:42:33 CET 2022|Use `Arrays.copyOf` on all platforms.|0|0|1|439|4192|405|160|34|46|13|0|
6091e0c72afc2c78774e4dc26b88976668305b42|Wed Jan 04 16:46:13 CET 2023|Fix a way of creating mutable `ImmutableSet` instances.|0|0|1|439|4192|405|160|34|77|11|0|
906b36230b1a6a5c17a9013bdf4aa5e7b4151b66|Thu Jan 05 20:33:54 CET 2023|Remove testing dependency on EasyMock.|0|0|0|439|4192|405|160|36|2|14|0|
b2b479632f4f6b659db4fa07baeb6be7e1c9d32c|Thu Jan 05 22:26:42 CET 2023|Remove EasyMock dependency.|0|0|0|439|4192|405|160|32|2|7|0|
553037486901cc60820ab7dcb38a25b6f34eba43|Thu Jan 05 22:58:02 CET 2023|Stop comparing the performance of `common.cache` to that of `ConcurrentHashMap`.|0|0|1|439|4192|405|160|31|71|10|0|
3b68684692103dd1574b05d3345471ed6401bb9e|Tue Jan 17 18:35:17 CET 2023|Internal change.|0|0|0|439|4192|405|160|31|2|10|0|
18a696ad8948d966b5b0d0302551c39a49a8f543|Wed Jan 18 16:16:48 CET 2023|Document ForwardingExecutorService behavior for default methods.|0|0|2|439|4192|405|160|31|49|13|0|
b719b098fc5c7bf867f31c9a6b8cb0d2b162e0bd|Thu Jan 19 21:43:21 CET 2023|Add a note to `Maps.uniqueIndex` about how to do the same thing using Streams.|0|0|1|439|4192|405|160|30|98|13|0|
c34a1cf3dbc7baaf2b5820316adae67f3794c65b|Thu Jan 19 22:26:38 CET 2023|Fix a few warnings, mostly in docs.|0|0|2|439|4192|405|160|34|93|13|0|
4f52c257001713eb53b004b9019f78ae24aac6cf|Fri Jan 20 20:51:24 CET 2023|Add discouraging text to the Wiki for `EventBus` so that it matches the Javadoc.|0|0|1|439|4192|405|160|35|61|10|0|
e57caa05124219b885b651ba40db3bc649202ec2|Fri Jan 20 22:04:46 CET 2023|Bump deps.|0|0|0|439|4192|405|160|28|2|14|0|
b4a6ddadd8b7106eef949621770152221d689bbc|Sat Jan 21 15:45:18 CET 2023|Update doc for ConsumingQueueIterator and access modifier for ConsumingQueueIterator.computeNext.|0|0|1|439|4192|405|160|31|54|12|0|
ef779cb2fe5306de1aad25e6c2bf69d82cfa711f|Mon Jan 23 21:04:36 CET 2023|Document that Iterables.consumingIterable is not thread-safe.|0|0|2|439|4192|405|160|35|91|11|0|
76cd7fa14a567bc74e4a98052de55f4486a8c933|Thu Jan 26 22:36:50 CET 2023|fix minor case of a bad default|0|0|1|439|4192|405|160|36|57|10|0|
c4a1d9020aac962493eb181448ef748217fd5900|Mon Jan 30 23:20:42 CET 2023|Fix typo in errorprone.info URL|0|0|1|439|4192|405|160|30|3|12|0|
1b602d2ffcf8f2c27e731d8a42091e6e43b81acf|Fri Feb 03 09:23:47 CET 2023|Add another test|0|0|0|439|4192|405|160|28|2|10|0|
a9a2e9593c520faa1c2edb79c1f5b0f83094d8ea|Thu Feb 09 23:27:55 CET 2023|Configures Maven to create bit-by-bit reproducible artifacts.|0|0|0|439|4192|405|160|31|2|9|0|
36f7898c3bcd232f44fbef0538f24a6b8403d023|Tue Feb 14 00:00:48 CET 2023|Newer versions of maven-install-plugin (such as 3.1.0, the default under Maven 3.9.0) [error out if no jar exists](https://groups.google.com/g/guava-discuss/c/e5UVvuM9CP8/m/aHLJQkp6AQAJ).|0|0|0|439|4192|405|160|31|2|11|0|
ae97cce255a24e82db9a5acfc07e3ec787e1c9c3|Fri Feb 17 23:26:58 CET 2023|Google internal build changes|1|0|0|440|4192|405|160|30|3|10|0|
7ea7fd4f4da102e7252be92cbabeaa96057dd328|Tue Feb 21 22:55:07 CET 2023|Add a note to `Hashing.goodFastHash` about memory usage.|0|0|1|440|4192|405|160|32|27|10|0|
cee0457b8c0d46f67c2e29a28cf9baa09c329426|Tue Feb 21 23:30:02 CET 2023|Replace `com.google.gwt` with `org.gwtproject`, which [it's moved to](https://repo1.maven.org/maven2/com/google/gwt/gwt-dev/2.10.0/gwt-dev-2.10.0.pom):|0|0|0|440|4192|405|160|31|2|8|0|
241d5e40ce91b979c24647bf26f340f1e56ccba9|Wed Feb 22 19:56:37 CET 2023|Rename COPYING to LICENSE|0|0|0|440|4192|405|160|29|2|10|0|
e49c24354954d1bc3e4b9f7ad5b37ef089a31819|Thu Feb 23 16:07:06 CET 2023|Google internal build changes|0|0|21|440|4192|405|160|38|92|11|0|
32bcf6c19b1d6e97eedf633a8e8cc3ea42316864|Thu Feb 23 18:21:34 CET 2023|Bump actions/setup-java from 3.9.0 to 3.10.0.|0|0|0|440|4192|405|160|33|2|11|0|
dc56d52406406b596bd3662a0de4ef9f1bd3189a|Thu Feb 23 19:42:59 CET 2023|Google internal build changes|0|0|14|440|4192|405|160|40|50|11|0|
6405852bbf453b14d097b8ec3bcae494334b357d|Thu Feb 23 19:54:25 CET 2023|Enable [Java8ApiChecker](https://errorprone.info/bugpattern/Java8ApiChecker) for Maven builds.|0|0|0|440|4192|405|160|38|3|11|0|
51dd7fa79599e5ecb7a2be70e6fe848c9ca8d86c|Sun Feb 26 18:34:48 CET 2023|Internal change|0|0|1|440|4192|405|160|32|70|8|0|
b716aa166b5e57028a6364af7a71fc0eeb8b316c|Mon Feb 27 15:20:43 CET 2023|Declare that `Converter.apply` accepts `A` and returns `B`, as its `Function<A, B>` supertype indicates.|0|0|1|440|4192|405|160|33|64|8|0|
26f1bbae3b2c402db81f9bc4b5e7bede52b870d7|Tue Feb 28 20:02:48 CET 2023|Google internal build changes|0|0|1|440|4192|405|160|30|61|6|0|
c06a6341da03b59dc8a6e97c0b8ccaae7d8b284e|Tue Feb 28 21:09:05 CET 2023|Internal build change|0|0|34|440|4192|405|160|50|106|7|0|
44b0882d6c205a396de092f7ce950758d58eaddc|Fri Mar 03 23:02:12 CET 2023|Internal change|0|0|1|440|4192|405|160|34|15|10|0|
7a4396f3721d4b93f9230051cc4cedfb45f40b4a|Mon Mar 06 17:04:10 CET 2023|Mark Java serialization code `@J2ktIncompatible` in common.collect|0|0|45|440|4192|405|160|65|207|11|0|
579465f565aaaae10aaeb6b4052b6984e2400535|Sat Mar 11 03:10:07 CET 2023|Update Public Suffix data.|0|0|1|440|4192|405|160|46|45|8|0|
5669b0c425f2b6a9d8c499b849cfd7ae7869f8c9|Mon Mar 13 15:28:13 CET 2023|More `@J2ktIncompatible` changes for collections|0|0|21|440|4192|405|160|45|170|22|0|
8506c5312bc78552c21612a614aeeb11c3d24f8b|Wed Mar 15 02:01:12 CET 2023|Internal change|0|0|0|440|4192|405|160|40|3|12|0|
6ab30067225eb1dd64e14aebdd0aec7f72739483|Fri Mar 24 16:41:53 CET 2023|Avoid using raw types/wildcards when a type parameter is self-bounding (in English: when it is `Enum`).|0|0|3|440|4192|405|160|32|87|9|0|
4670beea5c84802d6d90440d1724a8cd6a9fe287|Mon Mar 27 18:00:18 CEST 2023|Use definitely non-nullable types in `common.base`/`common.collect`|0|0|8|440|4192|405|160|44|121|11|0|
da675b7f0f49b8dd5b264661a8d037d5471aa5d4|Mon Mar 27 19:41:30 CEST 2023|Set up OSSF Scorecards.|0|0|0|440|4192|405|160|38|3|10|0|
05162c089e9c32779d0597c3556846fe5da97a51|Mon Mar 27 23:02:31 CEST 2023|[Pin](https://github.com/ossf/scorecard/blob/main/docs/checks.md#pinned-dependencies) (and sometimes update) GitHub actions versions.|0|0|0|440|4192|405|160|30|2|6|0|
dfdd67ad9438d2ad34452e086e9056afb7eab5f0|Tue Mar 28 14:17:25 CEST 2023|More `@J2ktIncompatible` annotations for serialization code.|0|0|5|440|4192|405|160|33|98|9|0|
bf4afa617b1cc00a11dd1aa93188a5ac06cc33e0|Tue Mar 28 19:54:55 CEST 2023|Update actions to latest versions, as reported by Dependabot.|0|0|0|440|4192|405|160|35|3|6|0|
ab72eafff2c47ef02d9c1e13092b27880ed3c181|Tue Mar 28 20:31:58 CEST 2023|Add some explicit type parameters in `com.google.collect`|0|0|10|440|4192|405|160|35|105|10|0|
e0772c060372028b93e3b17280b44401f7962859|Thu Mar 30 15:12:41 CEST 2023|Final 🤞 set of `@J2ktIncompatible` for cgc.collect|0|0|3|440|4192|405|160|37|87|6|0|
3eec2a5894dbba5ef9e731dbbab9b64d1da7d6f9|Thu Mar 30 15:36:01 CEST 2023|Generics tweaks for J2KT (no API changes)|0|0|2|440|4192|405|160|36|72|6|0|
746b16da9e8e86f5626bb2578b8064e230a8a881|Thu Mar 30 16:51:23 CEST 2023|Add nullness suppression to non-null fields with complicated initialization|0|0|3|440|4192|405|160|34|68|12|0|
e2ef6cf975cddc2c4d02dd592f40dd7d5d45ca91|Thu Mar 30 17:53:16 CEST 2023|Don’t remove `@Nullable` from `toArray()` return type in overrides for J2KT.|0|0|6|440|4192|405|160|41|133|12|0|
28ee96ff30059708233344186d91d9b7763eb553|Thu Mar 30 18:18:56 CEST 2023|Nullness tweaks for array component types|0|0|4|440|4192|405|160|41|90|8|0|
27c54b01e9ea567ab6fc35d111c459a6676eaa09|Fri Mar 31 23:04:37 CEST 2023|Bump ossf/scorecard-action from 2.1.2 to 2.1.3|0|0|0|440|4192|405|160|30|2|9|0|
4280533eec9681031176f38abe41b77ebd4976e1|Tue Apr 04 11:40:53 CEST 2023|Internal Build Change|0|0|49|440|4192|405|160|57|161|7|0|
33d9ff7ec0d868736d4248e4ff3531f5473bddac|Wed Apr 05 11:15:50 CEST 2023|Internal build change|0|0|2|440|4192|405|160|41|37|8|0|
b30e73cfa81ad15c1023c17cfd083255a3df0105|Thu Apr 06 04:04:08 CEST 2023|Make the guava-android copy of `NullPointerTester` read type-use annotations when they're available.|1|0|2|440|4192|405|160|37|56|7|0|
8f4d1542d907c552ce420bc9e95b6c2112df4e9b|Thu Apr 06 14:53:19 CEST 2023|Use type-use `@Nullable` instead of declaration `@CheckForNull` in test sources.|0|0|0|440|4192|405|160|43|3|10|0|
6b9ffc0cbfc06151a3cce2aa0ffd4a131a3b34c8|Thu Apr 06 21:11:08 CEST 2023|Remove one bad `@Nullable` annotation from a GWT emulation.|0|0|0|440|4192|405|160|39|2|7|0|
4d2b6ffb312a4ebf8aa377982fc98a7ece0bc3fd|Thu Apr 06 21:16:39 CEST 2023|Bump github/codeql-action from 2.2.9 to 2.2.10|0|0|0|440|4192|405|160|31|2|7|0|
ae1465a0db94c5d8af8b8fb3d9a975bf381e08de|Fri Apr 07 19:20:36 CEST 2023|Bump github/codeql-action from 2.2.10 to 2.2.11|0|0|0|440|4192|405|160|27|2|6|0|
10504f27b84977e85dacb97bff3c0502dd5b9c5b|Fri Apr 07 23:24:44 CEST 2023|Add OpenSSF Best Practices badge.|0|0|0|440|4192|405|160|28|2|9|0|
211907cb8bbc3d115423d6f08236370791c23a53|Mon Apr 10 16:09:29 CEST 2023|Remove `@Beta` from `Utf8`.|0|0|1|440|4192|405|160|33|14|7|0|
df0081f28f1e90c5405da3206291c34e1111fb97|Mon Apr 10 18:57:40 CEST 2023|Remove `@Beta` from `Multimaps.asMap(...)`.|0|0|1|440|4192|405|160|33|83|7|0|
b3d48564c69bd8d2d7a66261094780891da39a22|Mon Apr 10 19:04:41 CEST 2023|Remove `@Beta` from `Longs.tryParse(...)` (and friends).|0|0|4|440|4192|405|160|37|42|8|0|
61be35ce497856c27b608295ce36929161275116|Mon Apr 10 19:07:30 CEST 2023|Remove `@Beta` from `ImmutableFoo.Builder.builderWithExpectedSize(...)`, `orderEntriesByValue(...)`, and `Entry`-related APIs.|0|0|4|440|4192|405|160|36|88|14|0|
48979309a541ef391f0e3f6c819a632b282fff0f|Mon Apr 10 20:02:49 CEST 2023|Remove `@Beta` from `ByteStreams`.|0|0|1|440|4192|405|160|35|23|6|0|
fe12c81e79fc793b6956a47fe797a375b5591523|Mon Apr 10 20:43:35 CEST 2023|Remove `@Beta` from `RangeMap`, `RangeSet`, and friends.|0|0|6|440|4192|405|160|33|78|6|0|
73b2f7bee02e69f95c1eab6c450a5e64a4f84497|Mon Apr 10 22:48:21 CEST 2023|Remove `@Beta` from `FluentIterable` APIs.|0|0|1|440|4192|405|160|34|72|6|0|
ba8ad69d031978fd6862623dae451133b04b6973|Mon Apr 10 22:52:31 CEST 2023|Remove `@Beta` from `Striped`.|0|0|1|440|4192|405|160|31|72|7|0|
a195f7d60444e3bf2e64c543a1900096ede2dfe1|Mon Apr 10 22:55:22 CEST 2023|Remove `@Beta` from `Invokable` and some methods in `TypeToken`.|0|0|2|440|4192|405|160|33|74|6|0|
ee57f461bef01511c1059edbb12f91fdfcd32b81|Mon Apr 10 23:26:40 CEST 2023|Add `@Beta` back to the new `Invokable.getAnnotatedReturnType` method of guava-android.|0|0|0|440|4192|405|160|29|2|8|0|
b240e8ce14779629c9c098f2aed5bc7228b34d42|Tue Apr 11 19:19:22 CEST 2023|Remove `@Beta` from `UnsignedLongs`.|0|0|1|440|4192|405|160|29|20|7|0|
aadc99df745ce8e5209ac23298c00f848e825c27|Tue Apr 11 20:21:17 CEST 2023|Mention future-converter from `JdkFutureAdapters`.|0|0|1|440|4192|405|160|31|71|8|0|
15a0c9fd57b1f912bbaa95d748c01b156b45c651|Tue Apr 11 21:00:49 CEST 2023|Remove `@Beta` from `Futures`.|0|0|1|440|4192|405|160|33|81|8|0|
b9a2d585036cea823900940e34ab8f8836eb1e19|Tue Apr 11 21:03:24 CEST 2023|Remove `@Beta` from `FluentFuture`.|0|0|1|440|4192|405|160|34|67|7|0|
486b2f40bbf5069858e2b629a4b9fc0336a4fc54|Wed Apr 12 20:33:16 CEST 2023|Bump actions/checkout from 3.5.0 to 3.5.1|0|0|0|440|4192|405|160|31|2|10|0|
45934729cfedc50c775e3edd68f34ec0b979cc5b|Thu Apr 13 19:27:33 CEST 2023|Bump github/codeql-action from 2.2.11 to 2.2.12|0|0|0|440|4192|405|160|29|2|6|0|
7a56cefdd14a3454c7b481d45182105612600f99|Fri Apr 14 17:38:52 CEST 2023|Call the next version "32.0.0" instead of "32.0."|0|0|2|440|4192|405|160|30|55|7|0|
b2d2c3bad4c1b07754af9b92ab486fe61947fee2|Mon Apr 17 13:04:56 CEST 2023|Use Truth in `CycleDetectingLockFactoryTest`.|0|0|0|440|4192|405|160|29|2|6|0|
585d659b7b7f863ab0ee2bcf06037b8bc2f1b768|Mon Apr 17 13:16:32 CEST 2023|Apply `ParameterMissingNullable` suggestions.|0|0|0|440|4192|405|160|44|2|7|0|
742492a4bd1720a9356cda252c9f94ef893a72e6|Mon Apr 17 14:38:56 CEST 2023|Don't use "`return null`" for code that is unreachable, for code that should fail the test if it is reached, or for producing "don't care" values where it's not appropriate.|0|0|0|440|4192|405|160|50|2|11|0|
a0a77f482aa55187e601a87daf08e411a8102f48|Mon Apr 17 15:57:12 CEST 2023|Refactor - Make Anonymous inner classes lambda|0|0|14|440|4192|405|160|46|176|8|0|
194c6f09fab44d6720ed8cfb8cfb3235447eae08|Mon Apr 17 16:46:28 CEST 2023|Apply `VoidMissingNullable` suggestions.|0|0|0|440|4192|405|160|45|2|7|0|
481aedb1ca1d835d82e357c92aa7537a65d7a1bb|Mon Apr 17 17:17:06 CEST 2023|Apply conservative `FieldMissingNullable` suggestions.|0|0|0|440|4192|405|160|45|2|11|0|
362c1932d95980387f9692a0f3cc57700671a8f2|Mon Apr 17 17:45:46 CEST 2023|Apply `EqualsMissingNullable` suggestions.|0|0|0|440|4192|405|160|62|3|10|0|
378386b876697c48a919f633cb8b0383bb47c795|Mon Apr 17 18:00:13 CEST 2023|Bump actions/checkout from 3.5.1 to 3.5.2|0|0|0|440|4192|405|160|44|2|8|0|
3f039fc6ad1edc4ac4a8284b8159310d0844542f|Mon Apr 17 18:11:29 CEST 2023|Manually annotate some more type arguments as `@Nullable`.|0|0|0|440|4192|405|160|32|3|10|0|
cc924424c157ed99cd0ac66c9597f59e32eff13b|Mon Apr 17 20:37:28 CEST 2023|Disable `NullPointerTester` when `com.google.common` is being tested under Android VMs.|0|0|0|440|4192|405|160|38|2|8|0|
8f0fda7c55cbcd83086fca7d234fc4e83cab8e17|Mon Apr 17 21:05:59 CEST 2023|Use type-use `@Nullable` instead of declaration `@CheckForNull` in the remaining guava-android sources (mostly testing utilities).|0|0|1|440|4192|405|160|33|107|6|0|
ec857b17953b2f33dd9c4a93a78c716021ef8d1b|Mon Apr 17 22:13:51 CEST 2023|Manually annotate some type arguments as `@Nullable`.|0|0|0|440|4192|405|160|38|2|7|0|
823a9eab18b22d5e95b5431e043ebb67b5442978|Tue Apr 18 11:02:19 CEST 2023|Manually annotate yet more type arguments as `@Nullable`.|0|0|0|440|4192|405|160|35|2|7|0|
9e21d609f25b60dfbc9da7c3de0281c6c766eab8|Wed Apr 19 21:15:14 CEST 2023|Don't use "`return null`" for code that should fail the test if it is reached, round 2.|0|0|0|440|4192|405|160|30|2|6|0|
ffc288ae5afaf052c45fad7368a75af0c8eaccba|Wed Apr 19 21:18:22 CEST 2023|Apply `ReturnMissingNullable` suggestions.|0|0|0|440|4192|405|160|46|2|12|0|
8f8082e96b12202dcef32cc2b7c4c91e6ba1b72b|Thu Apr 20 13:16:47 CEST 2023|Add some automatically suggested nullness annotations.|0|0|0|440|4192|405|160|51|2|7|0|
58eaef7affbbb1418bfab0975bf62551b83478ad|Fri Apr 21 10:55:17 CEST 2023|Use lambdas, and add one nullness annotation.|0|0|0|440|4192|405|160|34|2|7|0|
edabd32d7260a55a10f18233e29c5f9294c079c5|Fri Apr 21 22:15:22 CEST 2023|Include various filesystem-related tests when we test under an Android emulator.|0|0|0|440|4192|405|160|32|2|8|0|
2b98d3c1e96b750dc997c29f283084aeb72fb3cf|Sat Apr 22 03:12:48 CEST 2023|Reannotate `ClassToInstanceMap` and `TypeToInstanceMap` to use `Class<@NonNull ...>`.|0|0|5|440|4192|405|160|35|75|12|0|
54cc1fdd02e81cbca4ddfa94a76fc91a641dbc21|Mon Apr 24 16:05:30 CEST 2023|Fix open-source GWT build after cl/526184065.|0|0|0|440|4192|405|160|33|3|8|0|
0978658114ab5a0e0010f7738bd48281cd6b30ca|Mon Apr 24 17:33:14 CEST 2023|Bump and simplify a dep and a plugin.|0|0|0|440|4192|405|160|30|2|7|0|
6ef944c2958b95ba0e356b4a7781ddb330e8de09|Mon Apr 24 18:15:57 CEST 2023|Standardize parameter names in `Preconditions`.|0|0|1|440|4192|405|160|31|18|9|0|
a568b283781a5b8afd7f09a66b0b4f6b439931ad|Mon Apr 24 22:48:41 CEST 2023|Update Public Suffix data.|0|0|1|440|4192|405|160|34|49|9|0|
f9e5c5d82a09a9d2c49a4e6c09aa08df04f0c217|Tue Apr 25 13:54:49 CEST 2023|Add @NullMarked to the testing package, except for some @GwtIncompatible classes with non-obvious adjustment requirements.|0|0|0|440|4192|405|160|46|2|7|0|
364aed58e083e305f3f9ffc5bcacf9536f2472ab|Tue Apr 25 19:00:41 CEST 2023|Split the tests for `Files.createTempDir` into a separate file.|0|0|0|440|4192|405|160|30|2|8|0|
1b9849143b4a5e555ff40663340aaf656390a430|Tue Apr 25 20:04:30 CEST 2023|Bump github/codeql-action from 2.2.12 to 2.3.0|0|0|4|440|4192|405|160|40|93|8|0|
d4bd0c5ffa913104283e61aeb2c41bac641af042|Wed Apr 26 22:03:56 CEST 2023|Internal build change|0|0|4|440|4192|405|160|43|97|10|0|
df09bab89c2547604f73e3c9ea2f0fe7af64faae|Sat Apr 29 02:46:26 CEST 2023|Bump github/codeql-action from 2.3.0 to 2.3.2|0|0|0|440|4192|405|160|38|2|7|0|
3b2ad2ea25bdeeca4e0a41d9c3a0db889d57f2a2|Mon May 01 19:17:10 CEST 2023|Internal change|0|0|1|440|4192|405|160|28|25|8|0|
b0cc461da5d4ffbe078ed627e5f93942090ea5ca|Mon May 01 21:45:12 CEST 2023|Remove `@Beta` from `com.google.common.base` APIs.|0|0|5|440|4192|405|160|34|59|7|0|
4fccd1829277fd04fa47e7ed5e04c980418da85a|Thu May 04 11:38:47 CEST 2023|Internal build change|0|0|0|440|4192|405|160|41|2|7|0|
624c17fc201d441c1d8ac6b7382e2939c99b67ac|Thu May 04 17:45:34 CEST 2023|Split the Android-incompatible tests for `FileBackedOutputStream` into a separate file.|0|0|0|440|4192|405|160|36|2|7|0|
5341ee10b4c0468bd28ba9a942be36f9a19bbd2c|Thu May 04 23:36:30 CEST 2023|Internal change.|0|0|0|440|4192|405|160|32|2|7|0|
7d9fac21026ad2ba2606ad9b798de497d67c5f75|Fri May 05 20:33:04 CEST 2023|Bump github/codeql-action from 2.3.2 to 2.3.3|0|0|0|440|4192|405|160|31|2|6|0|
b0d85c3cd6a12bb7038ddbaa100c34146dca6dbc|Mon May 08 19:30:54 CEST 2023|Stop recognizing `@ParametricNullness` annotations in `NullPointerTester`.|0|0|0|440|4192|405|160|29|2|7|0|
7d41e19636a1c0e6fbf9275ef1f76f471ab71189|Mon May 08 20:34:22 CEST 2023|Include `LICENSE` in the generated jar under `META-INF`.|0|0|0|440|4192|405|160|30|2|10|0|
aeba1e1b2d7f34bc972c74c9eccb1b2826e88514|Tue May 09 02:26:34 CEST 2023|Publish Proguard configs as part of Guava.|0|0|0|440|4192|405|160|34|3|9|0|
d6fdda3dcb04033ce246f27b988d68dbedf71d09|Wed May 10 17:57:29 CEST 2023|Internal build change|0|0|2|440|4192|405|160|36|27|8|0|
667a9d4d4d441e11c409261d80ec84064b30b256|Wed May 10 18:50:45 CEST 2023|Add "Sec-CH-UA-Form-Factor" header.|0|0|1|440|4192|406|160|36|9|10|0|
cba0b0aa551be07650cdbc5d627bcf4f896611af|Wed May 10 23:53:45 CEST 2023|Fix/suppress a few nullness mismatches.|0|0|4|440|4192|406|160|38|96|10|0|
9760dbcd4c2809ed12ad66ab5b36705654337f4e|Fri May 12 17:24:39 CEST 2023|Remove `@Beta` from `Forwarding[Foo]` APIs.|0|0|9|440|4192|406|160|37|68|21|0|
e5e0f660cc27b3473d67dded84418dee1c883fdf|Fri May 12 17:30:05 CEST 2023|Remove `@Beta` from various `Multimap`-related APIs.|0|0|4|440|4192|406|160|35|82|10|0|
ab4302aa53617801c43ddf0ba879fdd3cc5dca02|Fri May 12 18:24:17 CEST 2023|Remove `@Beta` from various `primitive`-related APIs.|0|0|9|440|4192|406|160|36|48|12|0|
fcec25f45ede9cd6c6f66cd066f8fa86a37b8b7e|Fri May 12 18:31:09 CEST 2023|Remove `@Beta` from various `primitive` collection APIs.|0|0|3|440|4192|406|160|35|64|8|0|
912815e4e205d17a72975aad08e2f032f9af3796|Fri May 12 19:00:01 CEST 2023|Remove `@Beta` from various `math`-related APIs.|0|0|9|440|4192|406|160|36|39|9|0|
98820c77f9b025e472a11264f777430d5d163c19|Fri May 12 19:50:20 CEST 2023|Remove `@Beta` from various `collect` APIs.|0|0|18|440|4192|406|160|47|174|11|0|
74ad9b8a1f4e576708a62aa837babce3e6ce835a|Fri May 12 20:10:57 CEST 2023|Remove `@Beta` from various `concurrent` testing APIs.|0|0|0|440|4192|406|160|44|2|13|0|
bbaf76a1996e7faa3e0d53e56bb382524f13759e|Fri May 12 20:29:15 CEST 2023|Remove `@Beta` from various `concurrent` APIs.|0|0|12|440|4192|406|160|39|113|15|0|
3da34f983be8adfb2df893f6d3cd8faf95e2b3cb|Fri May 12 21:05:36 CEST 2023|Add some nullness annotations to `MapMakerInternalMap`.|0|0|1|440|4192|406|160|34|79|9|0|
b331769af3f2e00c5046ed0fe79c5ec22e3fd0bf|Fri May 12 21:19:32 CEST 2023|Remove `@Beta` from various `testing` APIs.|0|0|0|440|4192|406|160|42|2|12|0|
4aaebca4e1f05891ec8e5ff0183cdde9894815f3|Fri May 12 22:53:21 CEST 2023|Annotate `firstNonNull` as permitting nullable values for its second parameter.|0|0|1|440|4192|406|160|33|15|13|0|
9f476d8ad2483b3fb7e102f70c3fdfb11ab4be72|Tue May 16 18:15:41 CEST 2023|Split comparator into it's own class.|0|0|0|440|4192|406|160|32|2|9|0|
b561eb14c253ccb05b0789a23e7ea3a54413bc91|Tue May 16 23:49:15 CEST 2023|Remove `@Beta` from `Parameter` (except `getAnnotatedType()`).|0|0|1|440|4192|406|160|30|52|10|0|
a3571b408f05950cf6988c7d4da59467e5f09e18|Wed May 17 03:40:20 CEST 2023|Remove `@Beta` from various `MoreExecutors` APIs.|0|0|1|440|4192|406|160|32|68|11|0|
a5892560de926b0ab01ba2614f5002ff547a32a2|Wed May 17 16:32:30 CEST 2023|Remove `@Beta` from various `io` APIs.|0|0|18|440|4192|406|160|39|102|10|0|
b4828647b1757c5b5bb1499489e2c30609ea221b|Wed May 17 22:08:30 CEST 2023|Remove a stale `@Beta` annotation from the GWT copy of `SortedMultiset`.|0|0|0|440|4192|406|160|34|2|11|0|
3a8d7e4539bc6f23ee7a01202ddc6808be932149|Wed May 17 22:32:22 CEST 2023|Add unit test for untested CharMatcher.retainFrom() method.|0|0|0|440|4192|406|160|29|2|11|0|
56dc928a2558d50d426ce500307abcaa4a557d8c|Sat May 20 00:20:39 CEST 2023|Mark `Files.createTempDir` and `FileBackedOutputStream` as `@J2ObjCIncompatible`.|0|0|2|440|4192|406|160|29|74|10|0|
852a7d3fe962f63f44b77e2a010b54e12dbd3696|Mon May 22 21:19:37 CEST 2023|Under j2cl, make `Maps.immutableEnumMap` and `toImmutableEnumMap` work. Previously, they were present but failed at runtime.|0|0|2|440|4192|406|160|35|110|16|0|
b62c88e630862937a3e2c8f4a759f3767db8685e|Mon May 22 22:24:45 CEST 2023|Under j2cl, make `CollectorTester` work. Previously, it was present but failed at runtime.|0|0|0|440|4192|406|160|37|3|13|0|
7b6dd3e8467866edc87bc7e3ad38f4c0d60c99f3|Tue May 23 13:50:08 CEST 2023|Add "Sec-Browsing-Topics" header. Add "Observe-Browsing-Topics" header.|0|0|1|440|4192|408|160|34|10|12|0|
7c473d86d3a37bde42c886a1a90abeeb3b4ceb74|Tue May 23 17:31:04 CEST 2023|Fix javadoc formatting for ImmutableList.copyOf(Collection).|0|0|1|440|4192|408|160|35|57|13|0|
9407ed6dc2ba10df6a0c3874369345d1aef5cd52|Wed May 24 01:21:23 CEST 2023|Stop super-sourcing System.nanoTime usages as the API was available since 2021.|0|0|3|440|4192|408|160|36|18|8|0|
feb83a1c8fd2e7670b244d5afd23cba5aca43284|Thu May 25 22:18:00 CEST 2023|Restrict permissions when creating temporary files and directories, or fail if that's not possible.|2|0|2|440|4192|408|160|36|70|9|0|
c3a155dc85101257ce4120b38bdab7224255c285|Fri May 26 13:54:15 CEST 2023|Remove `Enums` from `guava-gwt` at compile time.|0|0|1|440|4192|408|160|35|14|11|0|
09db2c29aeb04c3aa1ba8913271ab8cf048a7330|Fri May 26 14:18:06 CEST 2023|Remove `Sets.complementOf` from `guava-gwt`.|0|0|1|440|4192|408|160|33|76|12|0|
3de12be516dded509c45f4d774f86648cf463dd4|Fri May 26 23:12:41 CEST 2023|Under J2CL+GWT, remove `keyType()` and `valueType()` from the `Enum*BiMap` classes.|0|0|3|440|4192|408|160|31|61|10|0|
23ff91848fbe77a15e6786cb03974c52bd9118b8|Fri May 26 23:13:22 CEST 2023|Under J2CL, make `EnumMultiset` work. Previously, it was present but failed at runtime.|0|0|0|440|4192|408|160|37|2|8|0|
d5c4fd9ae1aa1d84b7a95cacf5e69ff394611477|Sat May 27 00:01:31 CEST 2023|Prepare for release 32.0.0.|0|0|12|440|4192|408|160|38|107|8|0|
b047302adebfcc6dc0cf71e3541d0e7f813e2ef6|Tue May 30 22:10:01 CEST 2023|Update links for the rename of the reference-checker repo.|0|0|3|440|4192|408|160|38|64|12|0|
3dfe3633eb84ec96ac88c764862b0f8d0c3546fc|Wed May 31 19:22:22 CEST 2023|Warn that `Files.createTempDir` and `FileBackedOutputStream` don't work under Windows anymore (if ever they did).|0|0|3|440|4192|408|160|32|74|11|0|
f04dbda13fabef21362a9c13388c08e77566b75d|Thu Jun 01 01:14:11 CEST 2023|Bump github/codeql-action from 2.3.3 to 2.3.5|0|0|0|440|4192|408|160|33|2|11|0|
1c4e2533c6bfb9782c8065c04d5a684b40f1bc86|Thu Jun 01 04:33:00 CEST 2023|Update Public Suffix data.|0|0|1|440|4192|408|160|29|42|11|0|
b6193d114033af87cdf264078538bbac5acf67dc|Thu Jun 01 11:29:43 CEST 2023|Internal build change|0|0|0|440|4192|408|160|44|2|17|0|
5c2359087acc36c86ed42f1875ce69b7be231868|Thu Jun 01 19:45:05 CEST 2023|Improve signatures of methods for converting iterables to arrays.|0|0|3|440|4192|408|160|42|97|10|0|
e7714b0b8b3d2a949ce056d4ab021b92f71a956f|Fri Jun 02 14:42:24 CEST 2023|Add `Duration`-based default methods to `ListeningExecutorService`|0|0|1|440|4195|408|160|35|71|10|0|
c03136c430644d5493de9aca520c0ccf5f694c76|Fri Jun 02 20:53:52 CEST 2023|Bump github/codeql-action from 2.3.5 to 2.3.6|0|0|0|440|4195|408|160|32|2|7|0|
6135e9d8fb9f01afc42ecc196d9ce390c8034a23|Tue Jun 06 17:20:34 CEST 2023|Internal build setup change|0|0|0|440|4195|408|160|36|2|9|0|
e82e2a2c07c68108f318958ee0355cc835c97743|Tue Jun 06 19:29:29 CEST 2023|Internal change.|0|0|0|440|4195|408|160|36|2|6|0|
9916d82c67414b6a01d15a0fc914f75dc7edaebb|Wed Jun 07 21:23:43 CEST 2023|Fix j2kt stream package nullability Fix sort() parameter nullability|0|0|2|440|4195|408|160|34|64|6|0|
d7c43ab48066db6d4b8eb7a299c475a6c6c3aca7|Thu Jun 08 21:40:23 CEST 2023|Run CI under Windows, suppressing existing failures.|0|0|0|440|4195|408|160|34|2|7|0|
5a4a0a7d10b6ced2f4c112dcb22338436492eab3|Thu Jun 08 23:16:17 CEST 2023|Fix `Files.createTempDir` and `FileBackedOutputStream` under Windows.|0|0|1|440|4195|408|160|35|56|11|0|
59fe6674075e4ff08fa51caa8873237392292ef5|Thu Jun 08 23:44:23 CEST 2023|Remove Windows warnings now that `Files.createTempDir` and `FileBackedOutputStream` work under Windows again.|0|0|2|440|4195|408|160|34|71|6|0|
501a01631f742bbcb73cf46ae409abf567903944|Mon Jun 12 17:52:08 CEST 2023|Use `Class<@NonNull T>` in one more class, `ObjectArrays`.|0|0|1|440|4195|408|160|32|49|8|0|
65c7f10ff05d072ccbf3e6201d89b988d4f5cfe1|Tue Jun 13 18:16:19 CEST 2023|Use Java's hardware-accelerated CRC32C implementation where available.|1|0|1|440|4195|408|160|35|26|8|0|
03e2792d44321781cadc00435f02163a1691b297|Thu Jun 15 17:41:02 CEST 2023|Update `package-info` for `common.base`.|0|0|0|440|4195|408|160|32|2|13|0|
4b6460f8fd94bf5b70e9ecd0673c7a576bb7d305|Thu Jun 15 20:08:49 CEST 2023|Add explicit type arguments necessary for J2KT in common/collect.|0|0|3|440|4195|408|160|37|87|19|0|
68dfdba219f804052df78b68327368480d09cc36|Thu Jun 15 21:02:57 CEST 2023|Post-pare for release 32.0.1.|0|0|0|440|4195|408|160|31|2|10|0|
6717a082c7108321da42f20a0562f6abe70fbf19|Thu Jun 15 21:45:24 CEST 2023|Test that we don't add new methods or supertypes to `ListenableFuture`.|0|0|0|440|4195|408|160|33|2|8|0|
efede00606cbc022bf57a6e73c27ed9e67bc8172|Thu Jun 15 23:39:13 CEST 2023|Avoid fully qualifying types from the same package, and use `https`.|0|0|0|440|4195|408|160|54|3|17|0|
b88a7745c3fe63a9c1303ac6efd836a55622a4cd|Sat Jun 17 16:36:53 CEST 2023|Begin updating `package-info` for `collect` and also docs of some its individual types.|0|0|6|440|4195|408|160|42|101|10|0|
4354c12b3f7934845e81cc92660535081e5586a0|Tue Jun 20 18:00:46 CEST 2023|Bump github/codeql-action from 2.3.6 to 2.20.0|0|0|0|440|4195|408|160|35|2|9|0|
36e7fcf99b1bc36e91f2aa3c6073a3940f17d1c1|Tue Jun 20 18:19:54 CEST 2023|Stop skipping certain `AbstractFutureTest` tests under Windows.|0|0|0|440|4195|408|160|31|2|8|0|
a667c3877281e422d663886aeb0abd6cfcf29378|Wed Jun 21 17:03:13 CEST 2023|Partial rollback of cl/441881361 to fix https://github.com/google/guava/issues/6565|0|0|1|440|4195|408|160|32|78|8|0|
b2054e1858b88e9ee29123d7b9577cd095a5898d|Wed Jun 21 19:39:52 CEST 2023|Bump actions/checkout from 3.5.2 to 3.5.3|0|0|0|440|4195|408|160|33|2|9|0|
3286f01cfc29f867c6ed4c0eca6b21a2b4a183f4|Wed Jun 21 21:02:10 CEST 2023|Stop skipping tests that look for line breaks under Windows.|0|0|0|440|4195|408|160|31|2|8|0|
896541465f1cc99352e8fbfbba4d4617f19183d8|Wed Jun 21 22:58:50 CEST 2023|Improve efficiency of bulk removals in transformed lists.|0|0|1|440|4195|408|160|31|71|7|0|
87867c4799601e37e95506efed6f605fbc9e75c0|Thu Jun 22 00:20:53 CEST 2023|Bump github/codeql-action from 2.20.0 to 2.20.1|0|0|0|440|4195|408|160|34|2|12|0|
bf792538a7a31fe757861ec6e09bd3ddf8c8191e|Thu Jun 22 19:55:59 CEST 2023|Skip some tests under Windows that _sometimes_ fail there.|0|0|0|440|4195|408|160|30|2|7|0|
de627039879dc38c18c3a76d3f0245f685a6a078|Fri Jun 23 18:57:53 CEST 2023|Delay initializing the `CacheBuilder` logger until it is needed.|0|0|1|440|4195|408|160|28|70|7|0|
466ad3cca4a572451a8296776602a55e5e3c3906|Fri Jun 23 21:54:55 CEST 2023|Edits to the first line of `package-info` files, as seen in https://guava.dev/api.|0|0|0|440|4195|408|160|37|2|8|0|
01dcc2e6104e9bd0392cb19029edf2c581425b67|Mon Jun 26 16:48:39 CEST 2023|describe alternative for unmodifiable/synchronizedNavigableSetNavigableSet for java8 users|0|0|1|440|4195|408|160|36|75|13|0|
8720b6bbc20a36ffdc6c6ce397f1308bd7b630d6|Mon Jun 26 17:52:50 CEST 2023|Changed `Longs.concat()` to throw `IllegalArgumentException` if the input arrays contain too many elements.|0|0|1|440|4195|408|160|38|34|8|0|
c9efc479950e40be4a11daa707dcf9258745cc2e|Mon Jun 26 18:39:54 CEST 2023|Describe alternative for `ByteStreams#copy`.|0|0|1|440|4195|408|160|35|25|8|0|
2c983f937e4854c363b67610b38963c147e9e20a|Mon Jun 26 18:40:29 CEST 2023|Add some classes to `package-info` for `base` and `collect`.|0|0|0|440|4195|408|160|32|2|9|0|
39c45d2c9cd7f2e7bf55310110396a0f9293be4b|Mon Jun 26 19:00:21 CEST 2023|Prepare to make `ImmutableTable.toImmutableTable` available in `guava-android` (but don't do so yet).|1|0|0|440|4195|408|160|37|43|13|0|
e42d4e863b751d3e664c5d11577e9f8c26bdde5f|Mon Jun 26 19:56:11 CEST 2023|Remove obsolete GWT-RPC logging code.|0|1|2|440|4195|408|160|37|47|7|0|
757be9253601926940e8f58df1d1e48e6d7575e7|Mon Jun 26 20:15:09 CEST 2023|Added `testPut_nullValueSupported`.|0|0|0|440|4195|408|160|32|2|7|0|
fbf2b59de0e1ffa2d546f44c37e6b88f9635890f|Mon Jun 26 20:20:22 CEST 2023|Remove the list of `Forwarding*` classes from `package-info`.|0|0|0|440|4195|408|160|32|2|7|0|
39f179c57cec921d5be7a83b3e76c9956ed9b812|Mon Jun 26 22:31:13 CEST 2023|Prepare for release 32.1.0.|0|0|1|440|4195|408|160|33|61|9|0|
80c8d9ce4a8ba63f9704113399a001e456e83e73|Mon Jun 26 22:53:31 CEST 2023|Further rework `package-info` for `common.collect`:|0|0|0|440|4195|408|160|29|2|7|0|
1df87a86cb7f327e5d80e478f7bcda1061c2e861|Mon Jun 26 22:53:57 CEST 2023|Improve racy single-check init code:|0|0|20|440|4195|408|160|50|214|11|0|
641d9e682be2468dc2afa74ded4af0ae7455f8d0|Mon Jun 26 23:11:54 CEST 2023|Add some classes to `package-info` for `primitives` and `util.concurrent`.|0|0|1|440|4195|408|160|47|61|12|0|
f9a29d73b1c501e7fac40560376e10f619882326|Tue Jun 27 16:18:42 CEST 2023|Merge nested `try`-`catch` blocks.|0|0|1|440|4195|408|160|33|61|7|0|
c5255f16a593a3815ead7b5b1ebaddb73eb0d800|Tue Jun 27 21:35:51 CEST 2023|Discourage `Function.identity()`.|0|0|1|440|4195|408|160|30|54|8|0|
ce78fc67cb8b72621e2d1154e8b8b343be97abd0|Wed Jun 28 20:13:25 CEST 2023|Publish Gradle Module Metadata with Variants.|0|0|0|440|4195|408|160|37|2|9|0|
1dc5f8c4a814c766ef5124c4cf20939c9c59ee4c|Thu Jun 29 18:49:54 CEST 2023|Name the "standard-jvm" variants in Gradle Metadata "jre."|0|0|0|440|4195|408|160|34|2|12|0|
f2f4f864d720ad03a045c9b918fe06cb11a65832|Thu Jun 29 20:13:32 CEST 2023|Suppress an `unusable-by-js` warning.|0|0|0|440|4195|408|160|31|3|9|0|
3576cd44637cdb6f3a1846e7c91afe359bb1b6eb|Fri Jun 30 16:49:12 CEST 2023|Delete the old release script, and update our internal release script to update the Gradle Metadata.|0|0|0|440|4195|408|160|30|3|11|0|
18fee9a3c4a7e33393a4d332cf7e76828e15aecb|Fri Jun 30 22:31:30 CEST 2023|Modify our internal release script to run Gradle integration tests during Guava releases.|0|0|0|440|4195|408|160|31|3|10|0|
31c478f79b3ed832a1adecaaa870710fcde6e99e|Wed Jul 05 22:31:24 CEST 2023|Restrict permissions given to Gradle-wrapper validation.|0|0|0|440|4195|408|160|32|2|11|0|
b41968f5f2346f9c4abd75712bb14c041ed4c0e7|Wed Jul 05 22:33:33 CEST 2023|Under J2CL, expose {ImmutableList,ImmutableSet}.{of,copyOf} for JavaScript usage.|0|0|0|440|4195|408|160|34|2|11|0|
d6f1ecee5929e932afb6014fd6e5ccf7e11a3c33|Wed Jul 05 22:41:21 CEST 2023|Post-pare for release 32.1.1.|0|0|0|440|4195|408|160|31|2|10|0|
a0fa17a3622c03b38ef2656a9d9d4dc8f25fee74|Wed Jul 05 23:01:49 CEST 2023|Pin dependencies used by Gradle-wrapper validation.|0|0|0|440|4195|408|160|31|2|7|0|
2a82a512942437150e29b7beac955e285559d89a|Wed Jul 05 23:23:19 CEST 2023|Don't mention `common.cache` in our short description of Guava.|0|0|0|440|4195|408|160|30|2|9|0|
fa695a12ad865ab466dd61d0910dc989a2c3f22b|Thu Jul 06 18:26:57 CEST 2023|Further tweaks to `package-info` for `collect`:|0|0|0|440|4195|408|160|28|2|11|0|
74859ebe9b2ea79d32b1f3da04dbc494a51f9432|Fri Jul 07 16:11:04 CEST 2023|Roll back J2KT `Map.merge` nullness annotations to the more flexible (if possibly less convenient) original version, updating Guava.|0|0|4|440|4195|408|160|32|152|8|0|
20deb05aa5235a96e16385604c99a5f8316eca4e|Fri Jul 07 17:38:10 CEST 2023|Update docs for `@AndroidIncompatible`.|0|0|0|440|4195|408|160|32|2|8|0|
3e3d90bf7b3be2c0d7d610bbf2c8e947dfdb16a3|Fri Jul 07 18:48:09 CEST 2023|Update tests for newer version of Android.|0|0|0|440|4195|408|160|31|2|7|0|
cd0069a68423e5f196a65c35e0765c5195f8e809|Mon Jul 10 19:03:51 CEST 2023|Make changes from cl/546032548 in the mainline, too.|0|0|0|440|4195|408|160|32|2|10|0|
30d17058d93e17b46c7bb6cf6ef843c91b39fb1d|Thu Jul 13 18:47:49 CEST 2023|Update Public Suffix data.|0|0|1|440|4195|408|160|32|45|9|0|
934446b8cb77cb52c5ddcb8959fd619f4505b785|Sat Jul 15 01:52:11 CEST 2023|Update mainline `ImmutableSortedSet.construct` docs to contain the same warning as the backport.|0|0|1|440|4195|408|160|34|67|8|0|
a9c2970e1cdff1e71a27a75866b083f3ae60d6f2|Sat Jul 15 03:07:14 CEST 2023|Add an overview to our generated Javadoc.|0|0|1|440|4195|408|160|31|65|10|0|
7645ffc6611eb24563268e1732eb936e274b936b|Mon Jul 17 17:59:18 CEST 2023|Fix timestamp and comments.|0|0|1|440|4195|408|160|32|71|7|0|
9c3790f091dec76f62fe701a6568982c84c0ac70|Tue Jul 18 00:52:52 CEST 2023|Internal change|0|0|0|440|4195|408|160|36|3|10|0|
551f92130cc0442870569b89820e0b432a8ff8f7|Tue Jul 18 19:58:27 CEST 2023|Internal change|0|0|0|440|4195|408|160|32|3|10|0|
ec9b13bd1e885fcf7d565946e772189822cc7a69|Mon Jul 24 19:05:52 CEST 2023|Bump github/codeql-action from 2.20.1 to 2.21.0|0|0|0|440|4195|408|160|34|3|11|0|
d76efa22b330a78285fcc4b4266fe94a52f91bda|Mon Jul 24 19:06:08 CEST 2023|Bump gradle/wrapper-validation-action from 1.0.6 to 1.1.0|0|0|0|440|4195|408|160|30|2|13|0|
f91b9b377d3bc9159d3b767bb88bfb9274c8879d|Mon Jul 24 19:19:16 CEST 2023|Bump actions/setup-java from 3.11.0 to 3.12.0|0|0|0|440|4195|408|160|31|2|8|0|
75cdb3ff11aec73efd5da5555e0ae60634d9b8ec|Mon Jul 24 19:43:26 CEST 2023|Bump ossf/scorecard-action from 2.1.3 to 2.2.0|0|0|0|440|4195|408|160|30|2|11|0|
230b0cdc69b03d5588cb72a38a10f51f64e2e223|Tue Jul 25 15:49:12 CEST 2023|Fix Google-internal `common.collect` tests under an Android emulator.|0|0|1|440|4195|408|160|33|55|9|0|
3a1d18fbefa10218988a0fbbb6e1fada012397bf|Tue Jul 25 16:13:10 CEST 2023|Eliminate unnecessary string splitting inside of InternetDomainName#findSuffixOfType.|0|0|1|440|4195|408|160|33|52|11|0|
eaa62eb09548a6f1b7a757e21d8852724b631cab|Thu Jul 27 21:45:28 CEST 2023|Lazily initialize PSL-based information in InternetDomainName.|0|0|1|440|4195|408|160|30|53|9|0|
347ef4ec219fed3b2801c094d800af1dd5be1a76|Fri Jul 28 00:02:47 CEST 2023|Read value of PSL-based suffix caches into a local variable before processing them.|0|0|1|440|4195|408|160|28|50|6|0|
9ed0fa65ab0ecdf2f10d506e7dffeb3595953777|Mon Jul 31 14:07:56 CEST 2023|Under Gradle, return to having `guava` automatically pull in the empty `listenablefuture-9999....jar` instead of making Gradle report a conflict that users need to [resolve](https://github.com/google/guava/releases/tag/v32.1.0#user-content-overlap).|0|0|0|440|4195|408|160|31|2|7|0|
71a16d5a7496857a1faf51f9b4098d1f26fe6cd6|Mon Jul 31 20:52:58 CEST 2023|Declare versions of test-only dependencies inline instead of in our parent pom.|0|0|0|440|4195|408|160|33|2|12|0|
36942e30fae35ff9cfca73b68bb3312b188bf01e|Mon Jul 31 22:35:21 CEST 2023|Prepare for release 32.1.2.|0|0|0|440|4195|408|160|30|2|8|0|
110c207a4f898fd0b3c202b53798ca11d9e9e1fd|Wed Aug 02 19:02:51 CEST 2023|Internal change.|0|0|0|440|4195|408|160|28|2|6|0|
c6d35cf1a5617e96f41da0056dd2bc04f76ad0e5|Wed Aug 02 21:02:13 CEST 2023|Put the versions of dependencies directly in Gradle Metadata.|0|0|0|440|4195|408|160|32|3|7|0|
2786f83291c9d481750c874316f3588e9e3537ff|Mon Aug 07 18:15:17 CEST 2023|Change `MediaType.parse` to allow and skip over linear whitespace on either side of the `=` separator in a parameter (`attribute=value`) as well as on either side of the `/` between the type and subtype (because nothing in the specification suggests that it be treated differently than the `;` or the `=`).|0|0|1|440|4195|408|160|33|70|9|0|
068e94d5dc81b6c4eac9941c474295294324a520|Mon Aug 07 20:59:54 CEST 2023|Automatically bump deps, and manually bump `error_prone_core`.|0|0|0|440|4195|408|160|32|3|14|0|
5eb287027c027efc796594398cc1151351cca404|Thu Aug 10 22:05:12 CEST 2023|Prepare for nullness annotations on `AtomicReferenceFieldUpdater`.|0|0|1|440|4195|408|160|35|77|10|0|
41203f03e9b7ddfd776f88660cc467e59bbb180b|Mon Aug 14 23:52:41 CEST 2023|Bump github/codeql-action from 2.21.0 to 2.21.4|0|0|0|440|4195|408|160|35|3|9|0|
daacb1ed9fc5f066e82884c74a33bd664dcc303f|Tue Aug 22 22:51:43 CEST 2023|Fix typo: Post->Port|0|0|1|440|4195|408|160|36|21|11|0|
2d53d3f2b0d387ebb68eed5fd700e5cb8ab71cff|Wed Aug 23 14:10:30 CEST 2023|Update code for forthcoming nullness annotations for JDK classes.|0|0|2|440|4195|408|160|36|74|8|0|
bddecdf33970da5eedb42724f1adf8c524c220f5|Wed Aug 23 14:51:33 CEST 2023|Avoid parameter reassignment, and clarify that `cleanUp` can process multiple references.|0|0|1|440|4195|408|160|32|5|8|0|
bf874f178c3fd4682f36162170a0c41fd30efbd4|Wed Aug 23 20:24:00 CEST 2023|Attempt to fix an [error](https://github.com/google/guava/actions/runs/5788896196/job/15689397851) in deploying snapshots:|0|0|0|440|4195|408|160|31|2|7|0|
f39084a064fe77ab6f0fe61131428ca5cd06a465|Thu Aug 24 03:37:22 CEST 2023|Update code for forthcoming nullness annotations for JDK classes.|0|0|13|440|4195|408|160|40|194|13|0|
ac7b64c06bd082c3c7c265164ce24a08a6bfcfbd|Thu Aug 24 15:56:02 CEST 2023|Remove unused `logger` (left over from cl/543484764). Fixes https://github.com/google/guava/issues/6684|0|0|1|440|4195|408|160|41|40|5|0|
ef604d1e8aa550cc9f0b6b55bdf3542127763dfa|Thu Aug 24 19:44:17 CEST 2023|Bump actions/checkout from 3.5.3 to 3.6.0|0|0|0|440|4195|408|160|29|2|9|0|
1e8feeae8efb51ddfb769e0ca17a379db5c092d4|Thu Aug 24 20:55:43 CEST 2023|Update Public Suffix data.|0|0|1|440|4195|408|160|31|46|6|0|
3da6a2c4e200c08c4466a20e981ec4b340f5461f|Mon Aug 28 18:03:51 CEST 2023|Add test for `Ordering.explicit(1,2,3).max(Arrays.asList(0))`|0|0|0|440|4195|408|160|32|2|9|0|
f491b8922f9dc8003ffdf0cbde110b76bcec4b6e|Tue Aug 29 18:54:35 CEST 2023|Bump github/codeql-action from 2.21.4 to 2.21.5|0|0|0|440|4195|408|160|35|3|7|0|
99cb213c96c0b172b0342d08b85ba3a259f4c5d1|Tue Sep 05 16:19:08 CEST 2023|Fix typo: Serial number 3 -> 4|0|0|0|440|4195|408|160|31|3|10|0|
d4633f8485f22b3444db7166b08e8404649e2309|Tue Sep 05 17:04:26 CEST 2023|Bump actions/checkout from 3.6.0 to 4.0.0|0|0|0|440|4195|408|160|32|3|10|0|
59cfb2267aa0d8538b00874328943082186857d0|Wed Sep 06 15:44:30 CEST 2023|Make `Futures.getChecked` prefer constructors with a `Throwable` parameter.|0|0|2|440|4195|408|160|33|90|14|0|
2aaab3429f33abc35dedfcc468107bb2867c85f2|Wed Sep 06 18:33:51 CEST 2023|Address https://errorprone.info/bugpattern/MissingFail violations.|0|0|0|440|4195|408|160|37|2|7|0|
3dc3312423209098720e638ac3cb6884fbe77b75|Wed Sep 06 19:02:04 CEST 2023|Use `assertThrows` almost wherever we can.|0|0|0|440|4195|408|160|100|2|6|0|
bf14c4ff1fcc91d1350403f9afa466526f8e407e|Wed Sep 06 20:27:21 CEST 2023|Address an Error Prone warning about catching `AssertionError`.|0|0|0|440|4195|408|160|66|2|8|0|
0c250f469f7634816729ec8c294a0c456825a7f1|Thu Sep 07 18:17:31 CEST 2023|Bump actions/upload-artifact from 3.1.2 to 3.1.3|0|0|0|440|4195|408|160|31|2|6|0|
7d6d372f2428e2f8d07ee3162d10e81859e0c83c|Fri Sep 08 20:24:29 CEST 2023|Internal change|0|0|1|440|4195|408|160|29|15|9|0|
a770aea84306386f4daad53fa1820c713be85cc6|Mon Sep 11 20:13:51 CEST 2023|Do only one thing inside the `try` of a `try`-`fail`-`catch`.|0|0|0|440|4195|408|160|31|2|7|0|
61dbccfda3f75872ba426ab9953d85bd76fa35a6|Tue Sep 12 18:48:20 CEST 2023|Make `UnmodifiableMultiset.removeIf(Predicate)` unsupported|0|0|1|440|4195|408|160|32|72|6|0|
fed9a4d319ce0f747e7f1a94d437285b004f7b19|Thu Sep 14 18:06:27 CEST 2023|Fix a typo from cl/522214387.|0|0|0|440|4195|408|160|34|2|7|0|
416a995564c62e2897cb92c1b3f0cb84bb65f92b|Tue Sep 19 18:03:41 CEST 2023|Bump github/codeql-action from 2.21.5 to 2.21.8|0|0|0|440|4195|408|160|29|2|9|0|
6bc777e5ef183065e3667e5dc45113629cdf4a78|Wed Sep 20 18:34:08 CEST 2023|Bump actions/setup-java from 3.12.0 to 3.13.0|0|0|0|440|4195|408|160|29|2|7|0|
4478b7f5ee8fbc63a3071b058abc876d2d192e85|Thu Sep 21 20:18:11 CEST 2023|Chain exceptions when closing `Stream.concat(...)`.|0|0|1|440|4195|408|160|30|54|7|0|
7bd86a32f00ffbc22aea6bd20e85b905c82c5772|Mon Sep 25 17:08:13 CEST 2023|Remove suggestions to throw a plain `RuntimeException`, and discourage the remaining `propagateIfPossible` overloads, too.|0|0|1|440|4195|408|160|31|13|6|0|
5a0af313bb89e72419aec20aa232e73d95356cb3|Mon Sep 25 18:53:52 CEST 2023|Bump actions/checkout from 4.0.0 to 4.1.0|0|0|0|440|4195|408|160|33|2|10|0|
b582866f8fa2e333ed40c0f480aa0d0cb9cfb6be|Wed Sep 27 19:21:07 CEST 2023|Bump github/codeql-action from 2.21.8 to 2.21.9|0|0|0|440|4195|408|160|33|3|9|0|
130709cda9a2c4f9e6aa0801bf11760104ddb94a|Fri Sep 29 23:32:19 CEST 2023|Prepare code for more JDK nullness annotations.|0|0|1|440|4195|408|160|33|19|7|0|
54e9276b6a93ab52c1e87fc8ae96be4e1c0ef33d|Mon Oct 02 19:18:23 CEST 2023|Skip a couple `ServiceManager` tests when running Java 8 on Windows.|0|0|0|440|4195|408|160|33|3|8|0|
ec0ca1bfcbbc913b40f17af8c8754ae10d387d53|Tue Oct 03 20:21:03 CEST 2023|Prepare some `common.collect` tests and testlib classes to build under J2CL.|0|0|0|440|4195|408|160|36|3|9|0|
49633aa27faf3b916656f53614189fafdab14f23|Tue Oct 03 20:51:27 CEST 2023|Bump styfle/cancel-workflow-action from 0.11.0 to 0.12.0|0|0|0|440|4195|408|160|40|3|11|0|
348af42f11d7c042d7c5582696454d5cff9cf72c|Tue Oct 03 22:08:08 CEST 2023|Use `assertThrows` in a few more places.|0|0|0|440|4195|408|160|35|2|7|0|
6a8ca4f2e5fca02e5d1dddc37745e8c5d9b3b792|Tue Oct 03 22:59:38 CEST 2023|Annotate hash-flooding tests as `@GwtIncompatible`.|0|0|0|440|4195|408|160|38|2|7|0|
155c4543d14f1595805b3ad594c96471cecc3a99|Tue Oct 03 23:36:51 CEST 2023|Make `FilteredMapTest` and `MapsTest` stop pulling double duty as a test and as test infrastructure.|0|0|0|440|4195|408|160|34|2|7|0|
01440c179510495a86c3bc755b621b00065fd11b|Tue Oct 03 23:47:19 CEST 2023|Give `ContiguousSetTest` its own `DiscreteDomain` implementation instead of pulling one from `RangeTest`.|0|0|0|440|4195|408|160|37|2|9|0|
b567b26e2bd6ea679b8cf69711cc8a41ecf219c4|Wed Oct 04 00:27:36 CEST 2023|Split `Base` and `Derived` out of `SetsTest` so that `MapsTest` can depend on them without depending on `SetsTest`.|0|0|0|440|4195|408|160|34|2|7|0|
7fa0d826ed66e14314606b3a55554537708100f4|Wed Oct 04 17:29:29 CEST 2023|Hard-code a number of iterations for GWT/J2CL tests instead of having a different number for GWT prod mode and dev mode.|0|0|0|440|4195|408|160|32|2|6|0|
463253c2269df12a15f7d5f1e41c2011339831d4|Wed Oct 04 23:34:01 CEST 2023|Make `MapsTransformValuesTest` stop pulling double duty as a test and as test infrastructure.|0|0|0|440|4195|408|160|29|2|6|0|
67a0b3a3e57a02e85bc7d23e0c36eec5dbabed6d|Thu Oct 05 20:18:34 CEST 2023|Update Public Suffix data.|0|0|1|440|4195|408|160|34|47|6|0|
fad1fa333a0aa5ffaacb67f216339a4bc8ecbfd1|Fri Oct 06 19:00:29 CEST 2023|Add `@GwtIncompatible` to `ConverterTest` methods that fail J2CL compilation.|0|0|0|440|4195|408|160|31|2|7|0|
f87f68cd3e032a082a7702f3143862a9b27422fe|Fri Oct 06 19:09:07 CEST 2023|Fix `Files.createTempDir` and `FileBackedOutputStream` under Windows _services_ (at least under JDK 9+), a rare use case.|0|0|1|440|4195|408|160|32|57|6|0|
950799691c4efdbf9f1b6d6c384b613c22beef65|Fri Oct 06 20:30:41 CEST 2023|fix behavior of Graph/ValueGraph views for a node when that node is removed from the graph|0|0|1|440|4195|408|160|34|55|7|0|
a78bea41aedba50469641968ee3d98b24836e491|Fri Oct 06 21:02:55 CEST 2023|Prepare for release 32.1.3.|0|0|0|440|4195|408|160|30|2|7|0|
0a30cc3551bfcfc44c08e7358226d53e215519f7|Mon Oct 09 18:24:58 CEST 2023|roll back fix of behavior of Graph/ValueGraph views for a node when that node is removed from the graph (breaking internal tests)|0|0|1|440|4195|408|160|32|23|9|0|
5116b41032e08c483645562bfc17084f0b5a3386|Mon Oct 09 18:47:10 CEST 2023|Bump ossf/scorecard-action from 2.2.0 to 2.3.0|0|0|0|440|4195|408|160|35|3|8|0|
d3164553605614e1ef17750d7f58bc3fc3ce6d45|Mon Oct 09 19:44:07 CEST 2023|Bump github/codeql-action from 2.21.9 to 2.22.1|0|0|0|440|4195|408|160|31|3|8|0|
27b442887b76aef94dafc91edcaf156ad9ad8617|Tue Oct 10 10:37:41 CEST 2023|Add `@GwtIncompatible` to a bunch of tests that had neither that nor `@GwtCompatible`.|0|0|0|440|4195|408|160|33|3|8|0|
db3017fd252e7484cd710653277fcc6b090c2d59|Tue Oct 10 21:05:16 CEST 2023|Fix double-source-jar error during releases:|0|0|0|440|4195|408|160|32|3|11|0|
ca01197df672a6ca9c14824144f4688b354b04f9|Wed Oct 11 03:45:52 CEST 2023|Inline `*FauxverideShim` classes into their subclasses.|0|4|4|440|4232|408|197|38|101|9|0|
e38ed2673c7a74defd0495f66b00ef49726bd54e|Wed Oct 11 03:49:59 CEST 2023|Avoid exposing some types outside the scope in which those types are visible.|0|0|8|440|4232|408|197|39|105|6|0|
6736cad8d092650d881ef0bada406ba843549ef1|Wed Oct 11 18:11:53 CEST 2023|Simplify our `maven-javadoc-plugin` configuration, and move both it and `maven-source-plugin` to the default phase (which is `package`).|0|0|0|440|4232|408|197|36|2|6|0|
b3a1252e2f268c968169d8e8cec2eadda1875989|Wed Oct 11 18:21:50 CEST 2023|Clarify documentation of transform methods in `ClosingFuture`.|0|0|1|440|4232|408|197|31|80|8|0|
b4812fdb52f5d0841dab24e60c21ee2f11c53a56|Thu Oct 12 18:03:12 CEST 2023|Bump github/codeql-action from 2.22.1 to 2.22.2|0|0|0|440|4232|408|197|33|2|7|0|
d65edb47c72df4a567c34b8dc9a4cc77eebe0992|Fri Oct 13 16:09:13 CEST 2023|Avoid exposing some types outside the scope in which those types are visible.|0|0|10|440|4232|408|197|37|122|7|0|
cc3ed448fd8371524a56db1f686843845225db24|Fri Oct 13 18:26:34 CEST 2023|Bump github/codeql-action from 2.22.2 to 2.22.3|0|0|0|440|4232|408|197|37|2|11|0|
e0292369fe4be9c51b12a68724302f38f03c0a5b|Mon Oct 16 16:12:33 CEST 2023|Work around Javadoc and JDiff bugs caused by the existence of two `copyOf(E[])` declared in the same class.|0|0|2|440|4232|408|197|30|66|10|0|
5550ffc0e04fe8a3e8f128f692d37397232dae2b|Mon Oct 16 22:45:14 CEST 2023|Begin using Maven Wrapper.|0|0|0|440|4232|408|197|36|2|8|0|
280b5d2f606b5f37304d728311cf492d45f95843|Mon Oct 16 23:26:09 CEST 2023|Give `failureaccess` an `Automatic-Module-Name`, and bump its version to 1.0.2 to prepare for a release (which we'll then need to update Guava to use).|0|0|0|440|4232|408|197|32|2|8|0|
76b3b3f16dd95766f4fae27caa61699465cffc78|Tue Oct 17 04:21:55 CEST 2023|Copy `sonatype-oss-release` configuration from Guava to `failureaccess`.|0|0|0|440|4232|408|197|28|2|8|0|
46be346721fcdc1a805850799ee549fcd173cf99|Tue Oct 17 18:52:48 CEST 2023|Add `.mvn/wrapper/maven-wrapper.jar` to `.gitignore`.|0|0|0|440|4232|408|197|28|2|12|0|
bd766f04788d89f3c3b48a5e81c1c2ba0bd35f2b|Tue Oct 17 20:08:58 CEST 2023|Bump `failureaccess` dep to 1.0.2.|0|0|0|440|4232|408|197|35|3|13|0|
24b086da446d8f8010ee8e46c585f4e617049c16|Tue Oct 17 20:08:59 CEST 2023|Make `equals` work when comparing a `cartesianProduct` against another `Set`.|0|0|1|440|4232|408|197|35|82|10|0|
d5871331d661abbc02d442e0ca6ace28cddc1535|Wed Oct 18 18:40:58 CEST 2023|Update javadocs for `ImmutableList.subList()`.|0|0|1|440|4232|408|197|44|59|8|0|
57266cbd3766bca6a2e00cadae6df647a335fb4c|Thu Oct 19 00:49:20 CEST 2023|Bump actions/checkout from 4.1.0 to 4.1.1|0|0|0|440|4232|408|197|35|2|10|0|
9c6b9d956e86856ee5284c65a294971fc0cd1fd0|Sat Oct 21 03:45:53 CEST 2023|ensure that Graph/ValueGraph views for a node report empty when that node is removed from the graph|0|0|1|440|4232|408|197|30|59|9|0|
945ce37fd615ae976f4aefc40df8d2f4b67acf5e|Sat Oct 21 16:04:03 CEST 2023|Add [`SequencedCollection`](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/SequencedCollection.html) methods to `ImmutableSortedSet`.|0|0|1|440|4239|408|201|34|63|6|8|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=java.util.NavigableSet.reversed(), newSymbol=com.google.common.collect.ImmutableSortedSet.reversed()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.NavigableSet.removeLast(), newSymbol=com.google.common.collect.ImmutableSortedSet.removeLast()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.SortedSet.addLast(E), newSymbol=com.google.common.collect.ImmutableSortedSet.addLast(E)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.NavigableSet.removeFirst(), newSymbol=com.google.common.collect.ImmutableSortedSet.removeFirst()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.SortedSet.addFirst(E), newSymbol=com.google.common.collect.ImmutableSortedSet.addFirst(E)],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.NavigableSet.reversed(), newSymbol=com.google.common.collect.ImmutableSortedSet.reversed()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.SortedSet.getLast(), newSymbol=com.google.common.collect.ImmutableSortedSet.getLast()],BC[kind=METHOD_NOW_FINAL, impactedSymbol=java.util.SortedSet.getFirst(), newSymbol=com.google.common.collect.ImmutableSortedSet.getFirst()]
b49353abca20517e449b0a00f66bb5455608290a|Mon Oct 23 20:28:37 CEST 2023|Bump github/codeql-action from 2.22.3 to 2.22.4|0|0|0|440|4239|408|201|32|2|10|0|
1cb82033ac8ff44c040bac10d6dd12df5677269f|Tue Oct 24 19:36:19 CEST 2023|Bump ossf/scorecard-action from 2.3.0 to 2.3.1|0|0|0|440|4239|408|201|30|2|11|0|
adde55ee1f9bc7fb053183b5465f413547c198fe|Tue Oct 24 20:24:34 CEST 2023|Mark @JsOptional parameters as @Nullable。|0|0|0|440|4239|408|201|30|2|8|0|
050f89f39f3a0e3276cd5696a82e0bb050915b52|Wed Oct 25 22:33:47 CEST 2023|Prepare to make `ImmutableSet.toImmutableSet` available in guava-android (but don't do so yet).|0|0|4|440|4239|408|201|36|90|9|0|
e8f523e65e0298fdf4ccdabe6df5feeeda55ebeb|Thu Oct 26 02:47:11 CEST 2023|Make the J2CL version of Doubles/Floats/Ints/ShortsMethodsForWeb types public.|0|0|0|440|4239|408|201|41|2|7|0|
a1d0ad84d52ff60e7fa3670decbde9d1ab09d183|Thu Oct 26 16:14:47 CEST 2023|Add Maven wrapper distribution checksum|0|0|0|440|4239|408|201|29|2|9|0|
1723ddfb8757049129028dfc673806bf546b1ea1|Thu Oct 26 17:47:00 CEST 2023|Prepare to make `ImmutableList.toImmutableList` available in guava-android (but don't do so yet).|0|0|1|440|4239|408|201|31|59|8|0|
3695c546a72dc4907614bd053b20e8002b2f41e7|Fri Oct 27 17:52:28 CEST 2023|Prepare to make `ImmutableMap.toImmutableMap` available in guava-android (but don't do so yet).|0|0|1|440|4239|408|201|37|75|11|0|
ccec5c37b89c38186ed6c3fb24ae51820d821b0d|Fri Oct 27 21:51:13 CEST 2023|Add some issue and PR templates for Guava.|0|0|0|440|4239|408|201|38|2|8|0|
ade79ed534e3cb01a3f76c7d50e687f41701a72c|Fri Oct 27 23:19:17 CEST 2023|Add "Sec-Ad-Auction-Fetch" header. Add "Ad-Auction-Signals" header.|0|0|1|440|4239|410|201|35|10|10|0|
9e3a9fb26d843fce9493d211462882ccb87ebc52|Sat Oct 28 18:52:46 CEST 2023|Bump github/codeql-action from 2.22.4 to 2.22.5|0|0|0|440|4239|410|201|30|2|7|0|
c61f415b50d6a1be67521a62a98c6007d2c4b221|Mon Oct 30 21:29:34 CET 2023|Remove bogus nullness annotations from cl/575459262.|0|0|1|440|4239|410|201|29|61|7|0|
7aa5b21bd388809cd628edf8d1d4c429d000c494|Tue Oct 31 16:59:39 CET 2023|Prepare to make `ImmutableMultimap` collectors available in guava-android (but don't do so yet).|0|0|1|440|4239|410|201|40|67|6|0|
609f02920e51d7413dbf5f8b6ee104cc301b53f8|Tue Oct 31 20:04:55 CET 2023|Upgrade to use Gradle 8.4|0|0|0|440|4239|410|201|41|4|6|0|
9b8035d654cd4e36e79e1b8329f4457e0f3087f8|Tue Oct 31 20:08:54 CET 2023|Document why `EqualsTester.addEqualityGroup` has a `@Nullable` parameter.|0|0|0|440|4239|410|201|30|2|8|0|
d9d60f821069a9b11c96830d221c33ada5d38fd5|Sat Nov 04 15:13:51 CET 2023|Continuing preparing to make immutable-collection `Collector` APIs available in guava-android (but don't do so yet).|0|0|2|440|4239|410|201|53|60|6|0|
b4433e022f5866e68458b8eabd821b43150785a4|Mon Nov 06 19:29:19 CET 2023|Link to some discussion of the Android flavor.|0|0|0|440|4239|410|201|35|2|9|0|
122873d2ae4ed50a4b8542948abdef68812615f3|Wed Nov 08 23:33:46 CET 2023|Document and test how `ImmutableMap.toImmutableMap` behaves when the `mergeFunction` returns `null`.|0|0|1|440|4239|410|201|30|73|12|0|
b81cf39e1dc6403df892e89981b65aac50db7045|Wed Nov 08 23:53:16 CET 2023|Remove stray `public` keyword.|0|0|1|440|4239|410|201|32|78|14|0|
15fca2940d56da5abced46c25d5e23e9d17d1b4f|Thu Nov 09 20:22:09 CET 2023|Provide default instances of `MutableNetwork`.|0|0|0|440|4239|410|201|37|3|13|0|
ed21dbb15ae0350fa9097b2959a71501a90d2dbe|Thu Nov 09 23:47:39 CET 2023|Prepare to expose (all?) remaining collectors as part of `guava-android`.|0|0|1|440|4239|410|201|42|30|11|0|
464bedf09bcfa18d8954b7572e784ebe2e99ee83|Tue Nov 14 00:15:24 CET 2023|Withdraw `SequencedCollection` overrides from the public copy of `ImmutableSortedSet`.|0|0|1|440|4232|410|197|45|65|11|1|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.collect.ImmutableSortedSet.reversed(), newSymbol=java.util.NavigableSet.reversed()]
7feac90308802fae357658b76a4b4be0d5581687|Tue Nov 14 17:39:18 CET 2023|Bump github/codeql-action from 2.22.5 to 2.22.6|0|0|0|440|4232|410|197|33|2|9|0|
045cd8428fe34ad2e340407de9167dc9adf1801f|Thu Nov 16 16:09:11 CET 2023|Make our Android builds work with an Android bootclasspath.|0|0|2|440|4232|410|197|31|54|11|0|
2982e9de13ec3722ac9144492e4cda75ed677bcc|Thu Nov 16 17:32:27 CET 2023|Bump github/codeql-action from 2.22.6 to 2.22.7|0|0|0|440|4232|410|197|32|3|9|0|
fe5011811dbf4cb4030ac316761c406d65472eee|Fri Nov 17 17:01:45 CET 2023|Update Public Suffix data.|0|0|1|440|4232|410|197|32|41|8|0|
4f12c5891a7adedbaa1d99fc9f77d8cc4e9da206|Fri Nov 17 19:44:50 CET 2023|Update http:// links to https:// if available.|0|0|0|440|4232|410|197|30|2|7|0|
67e0984187b300c69cf0711dcdd4379c53d8fb3d|Tue Nov 21 18:37:33 CET 2023|Check compatibility against the Android SDK (including [always-desugared APIs](https://github.com/open-toast/gummy-bears#android) but still not opt-in library desugaring) instead of the JDK.|0|0|0|440|4232|410|197|32|2|10|0|
3856cacfa59fdd2fe2bf47c787e7407e6e81479b|Tue Nov 21 22:33:03 CET 2023|Defer logger construction in AbstractFuture.|0|0|1|440|4232|410|197|32|32|8|0|
e5cc39c9e0bcca1347a937cb090321fb96de0e5c|Tue Nov 21 22:41:09 CET 2023|Work around or suppress forthcoming nullness errors.|0|0|5|440|4232|410|197|33|103|10|0|
e6f062cf1ba73fa8cf61c74f6269a4a96a12ebbe|Fri Nov 24 16:27:07 CET 2023|Bump github/codeql-action from 2.22.7 to 2.22.8|0|0|0|440|4232|410|197|35|2|8|0|
c4477c0a0e3c22a78c7757739b6a9cdd63a00500|Mon Nov 27 20:24:46 CET 2023|Reenable some tests externally.|0|0|0|440|4232|410|197|29|2|7|0|
5b851dbb6745f836a2ce5857fc1550a29c88f96c|Tue Nov 28 00:41:23 CET 2023|Correct Javadoc for CacheBuilder.weigher.|0|0|1|440|4232|410|197|31|72|9|0|
b252447ec28e076362358782d390cb0b7871a5ab|Thu Nov 30 22:08:47 CET 2023|Bump actions/setup-java from 3.13.0 to 4.0.0|0|0|0|440|4232|410|197|37|3|10|0|
f4c1264c9f8ee1e72af39c4fa3776b86b8519ed1|Thu Nov 30 22:51:24 CET 2023|Declare "redundant" overrides of all our package-private `writeReplace` methods.|0|0|42|440|4232|410|197|54|179|12|0|
c294c23760464b87ec193fc9b995e06f3d5e907f|Mon Dec 04 15:43:28 CET 2023|Make various classes catch `Exception` instead of `RuntimeException` even when only `RuntimeException` is theoretically possible.|0|0|9|440|4232|410|197|51|99|7|0|
8bdd307934b5e8147238b79f016ac040b102bd59|Tue Dec 05 22:21:42 CET 2023|Internal change.|0|0|1|440|4232|410|197|39|11|10|0|
d5108721bf4b848b6473178e195d655d8801228f|Thu Dec 07 02:35:58 CET 2023|Make the J2CL version of `ExtraObjectsMethodsForWeb` public.|0|0|0|440|4232|410|197|29|2|6|0|
1512730820a99e329a475b7143b7295775ef26ba|Thu Dec 07 15:57:27 CET 2023|Make `LocalCache` not use `synchronized` to detect recursive loads.|0|0|1|440|4232|410|197|30|102|7|0|
64a84357b29cfb8569dcf7a658a12b5bc2360678|Thu Dec 07 17:15:22 CET 2023|Bump github/codeql-action from 2.22.8 to 2.22.9|0|0|0|440|4232|410|197|36|2|5|0|
73dbf7ef26db8db2593056339be38bd00daf9584|Fri Dec 08 19:56:32 CET 2023|Include our `Collector` APIs as package-private in our open-source Android codebase.|0|0|0|440|4232|410|197|35|2|9|0|
5b8681e458534848221547d1158cbe5d63b3e7a4|Mon Dec 11 17:24:28 CET 2023|Automatically bump deps, and manually bump `error_prone_core`.|0|0|0|440|4232|410|197|29|2|6|0|
314953c1d82ec7b8acc9506af8a45ea7d2994033|Mon Dec 11 17:53:20 CET 2023|Remove unused logger from the backport copy of `Platform`.|0|0|0|440|4232|410|197|29|2|5|0|
b2baf48809bac380c23fb585635f917a594ec748|Mon Dec 11 23:24:03 CET 2023|Make the backport's `ClosingFuture` catch any `Exception`, even though only some kinds are theoretically possible.|0|0|1|440|4232|410|197|31|78|6|0|
356604177aeb881656cb0de597ff929940225692|Wed Dec 13 17:30:41 CET 2023|Bump github/codeql-action from 2.22.9 to 3.22.11|0|0|0|440|4232|410|197|31|2|8|0|
4fe1df56bd74e9eec8847bdb15c5be51f528e8c8|Wed Dec 13 20:40:36 CET 2023|Defer logger construction, which can be expensive under Android.|1|0|13|440|4232|410|197|39|138|9|0|
5141cb11c4e2194669f89536f7828ec253b92863|Thu Dec 14 19:48:05 CET 2023|Remove static singleton field from base classes and ensure singletons follow the same pattern.|0|0|0|440|4232|410|197|38|2|10|0|
fdd6eade9b31e0255754ea57351ed6db7daf3176|Thu Dec 14 21:07:45 CET 2023|Micro-optimize the memory usage of `singletonIterator`.|0|0|1|440|4232|410|197|34|70|9|0|
747924eca675b79c3047d204814a4bc91e58fe70|Thu Dec 14 21:32:25 CET 2023|Make more classes catch `Exception` instead of `RuntimeException` even when only `RuntimeException` is theoretically possible.|0|0|13|440|4232|410|197|40|124|9|0|
b90e3be7a5e5d1963c05d99540db21925221697b|Fri Dec 15 20:28:46 CET 2023|Make our nullness checking work with an Android bootclasspath.|0|0|5|440|4232|410|197|42|96|7|0|
0d6dc0058df4c6d6da95fb0c7868df187f27e5dc|Fri Dec 15 21:15:49 CET 2023|Simplify and micro-optimize `Iterators.forArray`.|0|0|2|440|4232|410|197|36|67|9|0|
47899721f799499f094627db70ddf2259122f0da|Fri Dec 15 22:07:32 CET 2023|Reduce `ImmutableSetMultimap.Builder` memory usage by using `CompactHashSet`.|0|0|1|440|4232|410|197|34|39|11|0|
d812e15c120fea9c7cf9cd33be21c9cd0e424f81|Sat Dec 16 02:52:09 CET 2023|change behavior of views returned by graph accessor methods that take a graph element as input: they now throw IllegalStateException when that element is removed from the graph|1|0|9|440|4235|410|197|40|83|6|0|
dd5f97bf678b13564ffa1b4a45e00284fb24f178|Mon Dec 18 03:59:15 CET 2023|Remove dead code.|0|0|1|440|4235|410|197|32|52|8|0|
9b5387b3bac665b96998b08d1f14a90a4376aee1|Mon Dec 18 16:08:17 CET 2023|change behavior of views retu...|0|1|9|440|4232|410|197|39|79|10|3|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractNetwork.nodePairInvalidatableSet(java.util.Set<T>,N,N), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractNetwork.nodeInvalidatableSet(java.util.Set<T>,N), newSymbol=],BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.graph.AbstractNetwork.edgeInvalidatableSet(java.util.Set<T>,E), newSymbol=]
0243fa6fcbd34b9ac0ef8d31a48489da9ba36165|Mon Dec 18 17:39:31 CET 2023|Bump actions/upload-artifact from 3.1.3 to 4.0.0|0|0|0|440|4232|410|197|36|3|9|0|
d258d3ed3336934354f340518065b04528fb1f2b|Mon Dec 18 19:12:48 CET 2023|Prepare for release 33.0.0.|0|0|1|440|4232|410|197|33|10|10|0|
5c4f5b205a3965b02626d0445f05accfa95e1b07|Tue Dec 19 04:33:04 CET 2023|Make a few small optimizations to JRE `ImmutableSet` construction for this "new" world in which we never reuse the array passed to `construct`.|0|0|1|440|4232|410|197|36|65|10|0|
5eda11b981d4baaefcc57688c745b5e347a2eb03|Tue Dec 19 13:22:44 CET 2023|fix a typo in a class name.|0|0|1|440|4232|410|197|36|23|11|0|
c7dcd6e712c2c4a68d01b0d27238df0bc71f2b8c|Tue Dec 19 22:27:49 CET 2023|Add a missing nullness annotation.|0|0|1|440|4232|410|197|33|60|7|0|
9a32e48c55e1e5304507c88344ea22d7e5ed839a|Wed Dec 20 19:03:07 CET 2023|Bump Truth to 1.2.0.|0|0|0|440|4232|410|197|31|2|7|0|
25ff2376be7662f973c321a63537ca09169bce88|Tue Dec 26 16:56:48 CET 2023|Bump github/codeql-action from 3.22.11 to 3.22.12|0|0|0|440|4232|410|197|30|2|7|0|
2d30e0d6d1776792713d0dde44226e60a81cf2ac|Thu Dec 28 16:02:03 CET 2023|Update Public Suffix data.|0|0|1|440|4232|410|197|31|46|7|0|
8a8efc75e20b2df9421e301ef9f0f2ed9e14c992|Fri Dec 29 03:24:08 CET 2023|Use fake filesystems to make Guava tests work better [under Windows](https://github.com/google/guava/issues/2130) and Android, and prepare jimfs for some preliminary Android testing.|0|0|0|440|4232|410|197|32|2|7|0|
f347fb7a2ddd975e7ab94e0f3f71ab3f0d21f580|Tue Jan 02 17:40:13 CET 2024|Document that we now run our Android tests under KitKat.|0|0|0|440|4232|410|197|29|2|8|0|
1de7270043e71ff155005cd1354ab07fe8726cc0|Wed Jan 03 14:19:36 CET 2024|Fix some typos in comments|0|0|1|440|4232|410|197|32|14|7|0|
757a5d5f87010facdb9e597989656daf2c8fce46|Mon Jan 08 20:16:04 CET 2024|Bump github/codeql-action from 3.22.12 to 3.23.0|0|0|0|440|4232|410|197|31|2|6|0|
ca0ad2ab28cd6cd0974bf2df30ee495dfefb94bf|Mon Jan 08 21:30:20 CET 2024|Bump copyright year.|0|0|0|440|4232|410|197|29|2|10|0|
76e46ec35bbc220ba56d1e9a0abd853a7df51ece|Wed Jan 10 18:57:02 CET 2024|Add `Duration` overload for `Suppliers.memoizeWithExpiration`.|2|0|1|440|4233|410|197|30|15|8|0|
4eaa5a5c186416eed9a1fea44315c109265c353e|Wed Jan 10 20:07:37 CET 2024|Roll back `Suppliers` change.|0|2|1|440|4232|410|197|33|14|6|1|BC[kind=METHOD_REMOVED, impactedSymbol=com.google.common.base.Suppliers.memoizeWithExpiration(com.google.common.base.Supplier<T>,java.time.Duration), newSymbol=]
2fe7b166dff488b5dd52e8614ed639e09b47d96f|Wed Jan 10 21:04:18 CET 2024|Internal change.|0|0|1|440|4232|410|197|33|50|7|0|
cabc1833ed4ebba03904663ae77af0c1b3dbc2d7|Thu Jan 11 15:26:14 CET 2024|Roll forward `Suppliers` change.|2|0|1|440|4233|410|197|31|15|10|0|
eccc0f6e9dfb567374303ba2bf8189dcc3ac286e|Thu Jan 11 18:38:43 CET 2024|Prepare for forthcoming `@Nullable` annotations on `Optional.orElseGet`.|0|0|1|440|4233|410|197|36|62|8|0|
0824e6e2e8396f016e9a99fc6cc472687749f9b0|Fri Jan 12 17:43:20 CET 2024|Remove `final` so that J2KT can generate overrides in subclasses.|0|0|1|440|4233|410|197|33|54|10|0|
823412c0934f71c770aaf17e301ec9338e408b14|Mon Jan 15 12:44:45 CET 2024|Add a missing nullability annotation for the j2kt super source. Also remove an unused method.|0|0|0|440|4233|410|197|36|3|7|0|
bc85d072757c2c050075115818a0940ffcb9974e|Tue Jan 16 15:07:46 CET 2024|Bump actions/upload-artifact from 4.0.0 to 4.1.0|0|0|0|440|4233|410|197|30|2|10|0|
a5200a397bbb3a5ba18bf8242d925c3e0f950f90|Tue Jan 16 19:18:37 CET 2024|Remove obsolete TODO comments|0|0|0|440|4233|410|197|31|2|6|0|
8481d3329cbbfb07d1094b8c09e810d4a88b892c|Wed Jan 17 19:56:36 CET 2024|Document the JDK 9+ alternative to `ByteStreams#toByteArray`|0|0|1|440|4233|410|197|30|24|8|0|
c537e5aadc48619432d53841ec884f5c5e9d0c19|Thu Jan 18 17:09:53 CET 2024|Bump github/codeql-action from 3.23.0 to 3.23.1|0|0|0|440|4233|410|197|32|2|7|0|
6be1208afff8dbd66bf44a448e8062c7b074f31c|Thu Jan 18 19:09:52 CET 2024|Remove stale suppressions.|0|0|0|440|4233|410|197|31|2|6|0|
9541c7662e497cb65254a9c023a5a28b1f31d51f|Fri Jan 19 19:23:54 CET 2024|Bump actions/upload-artifact from 4.1.0 to 4.2.0|0|0|0|440|4233|410|197|29|2|8|0|
8dc5e98e31eb5c8d2cd010eb383a10caf38d6658|Sun Jan 21 18:06:34 CET 2024|Internal Change.|0|0|0|440|4233|410|197|29|2|6|0|
52654b7c9a12a187b35039a5015e26c0aa724725|Mon Jan 22 11:59:18 CET 2024|Relax tests slightly to allow kotlin native behaviour that seems to be still conforming with the spec.|0|0|0|440|4233|410|197|33|3|7|0|
8dca77634125cbaf53365000d1c9f7fb32f6dcea|Mon Jan 22 18:26:55 CET 2024|change behavior of views returned by graph accessor methods that take a graph element as input: they now throw IllegalStateException when that element is removed from the graph|1|0|9|440|4236|410|197|41|82|7|0|
36980a944c593696aed126d7ebf6e374d0872ce0|Mon Jan 22 20:35:42 CET 2024|Add a missing nullability annotation for the j2kt super source. Also renames folders to follow convention.|0|0|0|440|4236|410|197|33|2|10|0|
813797368c5d27388143c6d1ee9fdc97366bf84c|Mon Jan 22 23:16:18 CET 2024|Bump a few deps.|0|0|0|440|4236|410|197|33|2|8|0|
4f394e66d0e5a1a3b9bbeaf8fdb2b8100ddada10|Tue Jan 23 19:40:55 CET 2024|Nullmark J2CL super-source'd classes of Guava collection.|0|0|0|440|4236|410|197|43|3|9|0|
fccfe96854ca59b74fb3cd13a2db9cff005510ed|Wed Jan 24 17:00:49 CET 2024|Make J2CL super-source'd classes pass nullness checking.|0|0|0|440|4236|410|197|34|2|7|0|
518fd1d4f3aa79cd495a099f009eba4824acacd5|Wed Jan 24 17:20:02 CET 2024|Bump actions/upload-artifact from 4.2.0 to 4.3.0|0|0|0|440|4236|410|197|33|2|14|0|
35feec94233edab8f07505780949ff8b8c53779b|Fri Jan 26 17:48:04 CET 2024|Bump styfle/cancel-workflow-action from 0.12.0 to 0.12.1|0|0|0|440|4236|410|197|34|4|11|0|
9aa7ee69405507289a2a619563e15605f553803b|Fri Jan 26 17:56:37 CET 2024|Bump github/codeql-action from 3.23.1 to 3.23.2|0|0|0|440|4236|410|197|32|3|9|0|
e5d98af4cbf23c807efaa4a4e45ada0363891bd2|Mon Jan 29 23:54:10 CET 2024|Internal change.|0|0|0|440|4236|410|197|32|3|8|0|
da9bc28e5d188a18f1996617a64c56d2e7de6e10|Tue Jan 30 01:09:35 CET 2024|Add a tiny bit more `@SafeVarargs`.|0|0|3|440|4236|410|197|33|104|8|0|
a9d243cef98f29bbc342c423d9b91b5ce678871e|Wed Jan 31 18:56:34 CET 2024|Automated Code Change|0|0|0|440|4236|410|197|40|2|7|0|
d3232b71ce5eee2fb861a7f75bcebe1290afafdc|Thu Feb 01 22:43:05 CET 2024|Move tsan suppressions to annotations|0|0|9|440|4236|410|197|36|85|8|0|
ee17e1f12f54668e842d4c5136185b8ccd8aef69|Fri Feb 02 16:49:07 CET 2024|Bump gradle/wrapper-validation-action from 1.1.0 to 2.0.0|0|0|0|440|4236|410|197|33|2|8|0|
7e0e6edb1a372fd5051420a4a63df9ca6e5a582d|Fri Feb 02 20:10:57 CET 2024|Bump Truth to 1.4.0.|0|0|0|440|4236|410|197|30|2|7|0|
6e2d0d8296f43c68657ecb09d366d358c939700c|Sat Feb 03 01:09:18 CET 2024|Add an overload of `spliterator()` to the Android flavor of one of our classes.|0|0|0|440|4236|410|197|31|2|9|0|
cc1b9d2be0f6c162f2c85f47eb899dff189adb71|Mon Feb 05 17:28:21 CET 2024|Bump github/codeql-action from 3.23.2 to 3.24.0|0|0|0|440|4236|410|197|33|2|8|0|
3688a537d57c369cfd079f08d6b38391e3ade7d0|Mon Feb 05 21:44:33 CET 2024|Improve performance of InternetDomainName::ancestor.|0|0|1|440|4236|410|197|31|51|6|0|
750ba3eb45c4667e8dde0d66b6441c12209dece5|Mon Feb 05 22:34:48 CET 2024|Suppress bogus nullness errors until we're able to fix our checker.|0|0|7|440|4236|410|197|35|116|14|0|
f346bbb6a704bc365be576146c040abc296d15da|Tue Feb 06 15:37:26 CET 2024|Expose `FakeTicker` `Duration` methods to Android users.|0|0|0|440|4236|410|197|39|2|7|0|
06ba460973e5316a6f35edeaa25042a3eb9e19ab|Tue Feb 06 17:08:00 CET 2024|Remove `@J2ktIncompatible` from passing `primitives` tests|0|0|0|440|4236|410|197|38|3|7|0|
f12f918d22288f2f50b8e753560dbee3fb32c052|Tue Feb 06 18:43:23 CET 2024|Bump actions/upload-artifact from 4.3.0 to 4.3.1|0|0|0|440|4236|410|197|35|2|7|0|
1bd273ff689ee8d92232bbd61c665df1a6a2f3e4|Tue Feb 06 19:31:55 CET 2024|Migrate usages of `Truth8.assertThat` to equivalent usages of `Truth.assertThat`.|0|0|0|440|4236|410|197|32|2|7|0|
7f4bbf75d6f9ea641dc34ec230f3a65b72be93e6|Wed Feb 07 18:47:59 CET 2024|Enable additional `com.google.common.math` tests on J2kt|0|0|5|440|4236|410|197|35|29|9|0|
476faf9e2cf5dbc77b462b0c11a658c41d617f00|Wed Feb 07 19:04:10 CET 2024|Bump gradle/wrapper-validation-action from 2.0.0 to 2.0.1|0|0|0|440|4236|410|197|36|3|9|0|
0e1aebf73ec48848b17b402a22f33f55756073e8|Wed Feb 07 21:47:29 CET 2024|Roll back [the change that made `LocalCache` avoid `synchronized`](https://github.com/google/guava/commit/1512730820a99e329a475b7143b7295775ef26ba).|0|0|1|440|4236|410|197|35|111|10|0|
0a1bd172477d75d747f9a7083049c20d017208b0|Wed Feb 07 23:59:58 CET 2024|Enable j2kt tests for escapers; no "actual" code changes.|0|0|0|440|4236|410|197|37|3|8|0|
f5ee972110434f732899661ffdf4e8f3229da455|Thu Feb 08 00:40:50 CET 2024|Fix typo in Splitter.limit Javadoc.|0|0|1|440|4236|410|197|34|18|12|0|
5c950ae13a03c8029a1f2cf34704c56d67f4ef76|Thu Feb 08 15:24:30 CET 2024|Mark `Sets.complementOf` `@J2ktIncompatible`|0|0|1|440|4236|410|197|33|73|8|0|
86c1c517387c786a311df288ad091d83f3dfce80|Thu Feb 08 17:44:12 CET 2024|Bump gradle/wrapper-validation-action from 2.0.1 to 2.1.0|0|0|0|440|4236|410|197|34|2|8|0|
4ef54a7a79244e2b2d616bf09143d3eed8fc952a|Thu Feb 08 18:27:51 CET 2024|Add some missing nullness annotations on `handleInvocation` overrides.|0|0|0|440|4236|410|197|34|2|9|0|
fc6bfb51ecc46c9fcfb7779fdd2e3dec5bc22e9d|Thu Feb 08 19:50:40 CET 2024|Update Public Suffix data.|0|0|1|440|4236|410|197|31|42|9|0|
5ddc67be6bac41585e19a9b2f0f225547bf9d6e3|Fri Feb 09 16:33:34 CET 2024|Remove two more obsolete `@J2ktIncompatible` from `primitives` tests|0|0|0|440|4236|410|197|32|2|8|0|
4937bf8203d0659d75a216523b4fa63b40819903|Fri Feb 09 16:47:15 CET 2024|Enable more `com.google.common.base` unit tests for J2kt native|0|0|8|440|4236|410|197|47|66|7|0|
345cd115ac59a47f463c1acad1693ba8b107ce88|Mon Feb 12 19:48:48 CET 2024|Bump gradle/wrapper-validation-action from 2.1.0 to 2.1.1|0|0|0|440|4236|410|197|37|3|6|0|
afb35a5d1be4a9718376098ef991496d5548dc4d|Mon Feb 12 22:48:46 CET 2024|Optimize checksum-based hash functions on non-array ByteBuffers by at least an order of magnitude, at least for Java 9+.|0|0|1|440|4236|410|197|32|18|10|0|
98c8b997acd9d083c2c759ba5f5c9febb12f2b90|Tue Feb 13 15:25:06 CET 2024|Enable c/g/c/u/concurrent tests for j2kt-native|0|0|0|440|4236|410|197|38|2|7|0|
0bf03c49077717d481932a535d375cfc5d96297c|Tue Feb 13 17:20:56 CET 2024|Bump github/codeql-action from 3.24.0 to 3.24.1|0|0|0|440|4236|410|197|35|2|7|0|
4caddb98ea6cb6229ff1f28220ed6d16d5916bf9|Tue Feb 13 22:38:49 CET 2024|Roll back CRC32c optimization while we address a versioning problem with a prebuilt build tool.|0|0|1|440|4236|410|197|30|17|7|0|
17c032873dc85a6edf614011d5c39586cc2f9961|Wed Feb 14 16:42:49 CET 2024|Internal change.|0|0|1|440|4236|410|197|32|14|11|0|
09e655f6c13bbd6644592552084597d6bce124f1|Wed Feb 14 20:28:42 CET 2024|Change the return types of `transitiveClosure()` and `reachableNodes()` to `Immutable*` types.|1|0|1|440|4236|410|197|34|76|8|2|BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graphs.reachableNodes(com.google.common.graph.Graph<N>,N), newSymbol=com.google.common.graph.Graphs.reachableNodes(com.google.common.graph.Graph<N>,N)],BC[kind=METHOD_RETURN_TYPE_CHANGED, impactedSymbol=com.google.common.graph.Graphs.transitiveClosure(com.google.common.graph.Graph<N>), newSymbol=com.google.common.graph.Graphs.transitiveClosure(com.google.common.graph.Graph<N>)]
1bb5464a72836b58e22a7bf74c89be53cb776d60|Thu Feb 15 17:07:01 CET 2024|Standardize on `Java N+` in documentation.|0|0|32|440|4236|410|197|57|240|11|0|
ff9477ac6f3eb1dbe37f382c174573100e04e38a|Thu Feb 15 20:47:51 CET 2024|Bump github/codeql-action from 3.24.1 to 3.24.3|0|0|0|440|4236|410|197|47|3|10|0|
f50be65252991729045be33c7f18962443896398|Mon Feb 19 16:18:49 CET 2024|Add `@Nullable` to `CollectSpliterators#flatMap(toPrimitive)` function parameter’s return type|0|0|1|440|4236|410|197|29|49|8|0|
54e1c757276af154ec4fba461d5eaf43f7ecc2bf|Mon Feb 19 16:19:34 CET 2024|Remove `@J2ktIncompatible` from `Maps#immutableEnumMap`|0|0|1|440|4236|410|197|34|95|9|0|
301d6e3220cc395871d312286f86c33858e41a87|Mon Feb 19 16:53:54 CET 2024|IteratorsTest: Replace `Integer` varargs with `int` varargs|0|0|0|440|4236|410|197|31|2|9|0|
ecdd5c4037aef27c40dd54e5cbffa6c535b25d18|Mon Feb 19 20:03:59 CET 2024|Remove `@Nullable` from `AbstractImmutableSetTest#copyOf(E[])`|0|0|0|440|4236|410|197|34|2|11|0|
fd1e344e3853b25c322b65dc629eebe86b6e1460|Mon Feb 19 20:14:01 CET 2024|Add `@J2ktIncompatible` to many `@GwtIncompatible` tests|0|0|0|440|4236|410|197|63|2|7|0|
5fb34c0744bcb0933879f44f38d6dd387eb93bcb|Mon Feb 19 21:32:03 CET 2024|Add `@NullMarked` to collection tests|0|0|0|440|4236|410|197|111|2|6|0|
59c063bef6d3e2f346314f9722159113b68f9d20|Tue Feb 20 17:04:33 CET 2024|Address a couple Error Prone warnings.|0|0|0|440|4236|410|197|49|2|7|0|
1d96bb9aeec1ef21c947f607c7aafdcc5a58d608|Tue Feb 20 17:57:46 CET 2024|Remove unnecessary suppressions.|0|0|6|440|4236|410|197|77|122|12|0|
dd582b3a255f7fc4f6b65e84e67450b7c778ded6|Tue Feb 20 18:00:12 CET 2024|Bump Truth to 1.4.1.|0|0|0|440|4236|410|197|64|3|9|0|
9700e787b234cb1f8a9e49eff67712331fa7d53c|Tue Feb 20 22:51:43 CET 2024|Fix testing-j2objc when built with no-wrapper-methods|0|0|0|440|4236|410|197|32|2|9|0|
c200ab0e99c965588c889f0a512058f5144b165f|Wed Feb 21 11:13:32 CET 2024|Add some `@Nullable`s to collection tests (prep for running on J2KT)|0|0|0|440|4236|410|197|53|3|8|0|
4148c5bc8de12a392287c4d0ce08ee53e9832176|Wed Feb 21 17:18:11 CET 2024|Remove `@J2ktIncompatible` from `toImmutableEnumMap`|0|0|2|440|4236|410|197|50|104|12|0|
2da8a3b68dab01e6d26d4a232c12c7325b0a9a63|Wed Feb 21 17:45:47 CET 2024|Make `com.google.common.collect.testing` compile with J2kt|0|0|0|440|4236|410|197|87|2|7|0|
603a844152a768a358d7ccd103d5dfcfba820d14|Wed Feb 21 18:54:03 CET 2024|Disable tests on J2KT that fail due to a bug with missing RandomAccess|0|0|0|440|4236|410|197|45|2|7|0|
7ff64578013c46ed9d97068d5f0db0489848ada6|Wed Feb 21 19:29:17 CET 2024|Automated Code Change|0|0|0|440|4236|410|197|38|2|7|0|
d16216e9a5f25a9394aa464f2717186830e354b3|Thu Feb 22 17:50:42 CET 2024|Bump github/codeql-action from 3.24.3 to 3.24.4|0|0|0|440|4236|410|197|33|2|9|0|
7fa9f1e543a42f7a580a3aefadf011fd81cf169a|Thu Feb 22 18:12:45 CET 2024|Fix, suppress, and/or localize suppressions for `unchecked` and `rawtypes` warnings in tests (other than `collect`).|0|0|0|440|4236|410|197|37|3|7|0|
e5b68f120f455a3853ca6bad6ce9f4e3e0231897|Thu Feb 22 18:37:51 CET 2024|Fix, suppress, and/or localize suppressions for `unchecked` and `rawtypes` warnings in non-`collect`, non-`gwt`, non-test code.|0|0|12|440|4236|410|197|51|155|8|0|
12020e2dc29ae84106e3b2ad8db270f0a1bf2e7a|Thu Feb 22 21:06:59 CET 2024|Fix, suppress, and/or localize suppressions for `unchecked` and `rawtypes` warnings in `collect` tests.|0|0|0|440|4236|410|197|57|3|10|0|
7e06618325825f14f8383c6a4dd938105eb6b99c|Thu Feb 22 22:17:14 CET 2024|Fix, suppress, and/or localize suppressions for `unchecked` and `rawtypes` warnings in `collect`.|0|0|45|440|4236|410|197|67|246|14|0|
186f982cb2104de37ead32971ba717f9730157f5|Thu Feb 22 22:19:37 CET 2024|Remove the copy of `ToStringHelper`'s tests from `MoreObjectsTest`.|0|0|0|440|4236|410|197|53|3|9|0|
37ce42927192b4fbd7b1d0cf946485f88fa25130|Thu Feb 22 22:59:16 CET 2024|Roll forward ChecksumHashFunction optimization.|0|0|1|440|4236|410|197|33|21|7|0|
b4cc971bc8832382ba8accb911c7e57abb021fc7|Mon Feb 26 17:25:58 CET 2024|Add `@J2ktIncompatible` to collection tests of `@J2ktIncompatible` features|0|0|0|440|4236|410|197|38|2|10|0|
d5cef8fdcd7574557321ad5c77c4c9fc7ac0bf78|Mon Feb 26 17:52:15 CET 2024|`testPoorlyBehavedTransform`: tweak it for Java/Kotlin exception difference|0|0|0|440|4236|410|197|38|2|7|0|
fc21ea79c24ae37b977671c425972bf090d7738c|Mon Feb 26 18:16:53 CET 2024|`AbstractSequentialIteratorTest`: work around a J2KT generics issue|0|0|0|440|4236|410|197|36|2|7|0|
418402455d91b68e51381475aaf8f3022cbdd322|Mon Feb 26 20:44:01 CET 2024|Fix, suppress, and/or localize suppressions for `unchecked` and `rawtypes` warnings in `collect.testing`.|0|0|0|440|4236|410|197|57|2|7|0|
be01f1ab0c1bbcc96df5e1a16265c3ea2a761fff|Tue Feb 27 10:23:28 CET 2024|Collection tests: workaround rawtypes when translating to Kotlin|0|0|0|440|4236|410|197|37|2|10|0|
58e30d60ac49d5726031da338bf2e13afd553798|Tue Feb 27 14:24:38 CET 2024|Disable collection tests for J2KT broken due to Java emulation issues|0|0|0|440|4236|410|197|37|2|6|0|
25fef6f2ec43b2ff34b1cc1ac499b8d040557cc1|Tue Feb 27 20:16:08 CET 2024|Fix, suppress, and/or localize suppressions for `unchecked` and `rawtypes` warnings under `gwt`.|0|0|0|440|4236|410|197|37|2|8|0|
91d2a3408dcea8a4560346efa9613d009af9cdf8|Tue Feb 27 20:16:14 CET 2024|Bump github/codeql-action from 3.24.4 to 3.24.5|0|0|0|440|4236|410|197|32|2|6|0|
0ea03dae3b57cfd4a5f0123715954a25f2d21114|Tue Feb 27 20:22:08 CET 2024|OrderingTest: nullness type-bound fix|0|0|0|440|4236|410|197|29|2|6|0|
526682c20e36827cea3730a0009fd18725568c2e|Tue Feb 27 20:57:58 CET 2024|Workaround https://github.com/google/guava/issues/6824 for J2KT test|0|0|0|440|4236|410|197|31|2|10|0|
aedd3812291e626f10da16d32a211f1505f6a1fe|Wed Feb 28 16:19:00 CET 2024|IterablesTest: use `Iterable<@Nullable String>` where necessary|0|0|0|440|4236|410|197|34|3|9|0|
515601dba0dc51c176158190a939fa68b15f3a94|Wed Feb 28 17:02:59 CET 2024|Avoid test methods with type parameters|0|0|0|440|4236|410|197|37|2|8|0|
3789a5645c2d3de4baef9a01e726066da36676d0|Wed Feb 28 17:31:59 CET 2024|Miscellaneous test cleanups noticed during cl/610731287 and cl/611055831.|0|0|0|440|4236|410|197|37|3|7|0|
fe62266a3cf232f2b1d98f7ca8c7e553f2809c05|Wed Feb 28 19:02:36 CET 2024|Bump actions/setup-java from 4.0.0 to 4.1.0|0|0|0|440|4236|410|197|36|3|14|0|
f231543e36b7fbf006a80c137740157158e8f27d|Thu Feb 29 15:06:29 CET 2024|Improve nullness of types in some APIs related to `Map` merging, and fix `Collectors.toMap` null-handling.|0|0|2|440|4236|410|197|35|109|9|0|
7b8ff404458e1173ef7938aaaea3bd16ac5a00f5|Thu Feb 29 16:40:44 CET 2024|Enable a few more Guava Primitives tests for J2KT|0|0|2|440|4236|410|197|35|25|8|0|
e6ef6675984093a4566d62376de109fd8d29b379|Thu Feb 29 17:14:58 CET 2024|Bump github/codeql-action from 3.24.5 to 3.24.6|0|0|0|440|4236|410|197|34|2|7|0|
174d4cd1c9fab685b55d9d4360aa5649d7cd0d12|Thu Feb 29 17:46:06 CET 2024|Added isEmpty() override for sequential Lists.transform() implementation.|0|0|1|440|4236|410|197|32|71|10|0|
a6a34dc42627f2dc5b8937f428322739b74ce8f3|Thu Feb 29 23:24:11 CET 2024|Bump Truth to 1.4.2.|0|0|0|440|4236|410|197|37|2|7|0|
71aa784c6c1a1cababc6c464b248ee3459f54126|Mon Mar 04 16:38:41 CET 2024|The boxed primitive constructors are no longer scheduled for removal.|0|0|0|440|4236|410|197|31|2|8|0|
5c8fd7bd06a5ebd66f32b8a8142f9cca2aa68e98|Mon Mar 04 16:39:47 CET 2024|Add more “trivial” `@Nullable` to collection tests|0|0|0|440|4236|410|197|33|2|7|0|
61766305f8e75dc8ebc665f025f1bbe7d3081d48|Mon Mar 04 17:03:16 CET 2024|MapsTest tweak to avoid J2KT `<? extends Object>` bug|0|0|0|440|4236|410|197|34|2|11|0|
032e2f92a3807cd8a2a1a7ab772f11e096c320b5|Mon Mar 04 17:26:44 CET 2024|Workaround bad J2KT/Kotlin smartcast interaction|0|0|0|440|4236|410|197|36|2|7|0|
b775e685131023d1dbafd98f10b8ff299a6fe22a|Mon Mar 04 17:51:17 CET 2024|Table tests: add type parameter to express whether table can contain null|0|0|0|440|4236|410|197|39|2|6|0|
14eef4bb930b5084c19034ebbb07128e7b210371|Mon Mar 04 18:48:02 CET 2024|`ObjectArraysTest` J2KT fixes|0|0|0|440|4236|410|197|33|2|7|0|
c7d03fd3f8d46fb849e748253c0ffaedc70db23a|Mon Mar 04 20:26:41 CET 2024|Add missing `@Nullable`s to MultimapsTest|0|0|0|440|4236|410|197|32|2|6|0|
43abfe4e6ffb7ac03cc7774eac379bee5a0a70b1|Mon Mar 04 21:14:00 CET 2024|Disable a `LongMath` test that is slow on J2KT|0|0|0|440|4236|410|197|37|3|9|0|
5f7750959a391e78ae17165921933b78a3a815d5|Mon Mar 04 23:42:09 CET 2024|Declare the `V` parameter of `toTable` as non-nullable.|0|0|2|440|4236|410|197|34|68|8|0|
4f7989d63639a4c680dad6f165c3648c850bed22|Tue Mar 05 14:13:11 CET 2024|Enable manual j2kt tests for com.google.common.net|0|0|0|440|4236|410|197|35|3|9|0|
c96c7d42bf109657892646e9ca89f7751981b4e0|Tue Mar 05 17:00:11 CET 2024|Make null-unsafety explicit in `TableCollectorsTest#testToTableNullValues`|0|0|0|440|4236|410|197|36|3|9|0|
aa1df9f08b7377cb94ec3ad8566bd8edf4409e99|Wed Mar 06 16:09:59 CET 2024|Migrate from soon-to-be-deprecated `propagateIfPossible` to equivalent `throwIfInstanceOf` and `throwIfUnchecked` calls.|0|0|1|440|4236|410|197|34|20|10|0|
cf86414a87e6e0d008f9438619e97eeefd22a32f|Wed Mar 06 16:35:58 CET 2024|Deprecate the remaining two `propagateIfPossible` overloads.|0|0|1|440|4236|410|199|32|13|6|0|
b90ce5bde751e20ca24574aad7dd22646269ab07|Wed Mar 06 17:28:32 CET 2024|Add action version comments in GitHub workflow files|0|0|0|440|4236|410|199|32|2|7|0|
1bb3c4386bd5cc7a3cf4a6aa817aaeb2a179622d|Thu Mar 07 18:45:21 CET 2024|Deprecate the constructors of our `ExecutionException`-like classes that don't accept a cause.|0|0|2|440|4236|410|199|31|15|7|0|
0b1c477311b2c7a0a89f5e0ac785084e3ab15d34|Thu Mar 07 19:29:52 CET 2024|Collection tests: Add explicit type parameters for J2KT and enable J2KT tests|0|0|0|440|4236|410|199|45|2|9|0|
52a62b289303511df78b5d6eed0e4f42118c2289|Sat Mar 09 01:18:25 CET 2024|Avoid calling `checkNotNull` on nullable values except during actual precondition checks.|0|0|2|440|4236|410|199|41|70|6|0|
8b9387e6c77e36a61f12087bfc1e9240732b341d|Sun Mar 10 00:32:40 CET 2024|Bump `j2objc-annotations` to 3.0.0.|0|0|0|440|4236|410|199|35|2|6|0|
d70366d645e07867305f052831c6745aa32b5db0|Mon Mar 11 17:34:39 CET 2024|Stop setting up and trying to inherit Javadoc from the JDK.|0|0|0|440|4236|410|199|30|2|6|0|
d48c6dfbb8cc9b8360ef5c14a5f4d00b802f14ee|Mon Mar 11 21:34:49 CET 2024|Update to Error Prone 2.26.0|0|0|0|440|4236|410|199|30|2|10|0|
3dc9e73d622b5eed0ff37d556f46b6f45b8e810e|Tue Mar 12 16:07:45 CET 2024|Add `@since` tags and other Javadoc for `AbstractNetwork` methods from cl/591404913.|0|0|1|440|4236|410|199|32|68|7|0|
f9850325b6be808770fe75da5611a3fab083caf0|Tue Mar 12 17:20:46 CET 2024|Bump actions/checkout from 4.1.1 to 4.1.2|0|0|0|440|4236|410|199|30|2|7|0|
c6e91c498ced26631029d1bdfdb9154d4a217368|Tue Mar 12 20:42:33 CET 2024|Update to Error Prone annotations 2.26.1|0|0|0|440|4236|410|199|30|2|7|0|
f2b8c4f47f253bb83c7959ffd2b7346e473c2788|Tue Mar 12 21:23:28 CET 2024|Make build and tests work with Java 21, and enable CI for them.|0|0|0|440|4236|410|199|32|2|10|0|
fe28211b200092ee68a08a3fcb1229d165b2663a|Wed Mar 13 17:45:55 CET 2024|Bump actions/setup-java from 4.1.0 to 4.2.0|0|0|0|440|4236|410|199|32|3|7|0|
cc2e372c5f7b958a6c9efa49fdf4069283bed0ff|Wed Mar 13 19:14:04 CET 2024|Prepare for release 33.1.0.|0|0|3|440|4236|410|199|32|86|8|0|
b6d8d91b9f32753c19e67bab0b48855e2b6528ae|Wed Mar 13 21:52:03 CET 2024|Go back to using Java 11 to generate snapshot Javadoc.|0|0|0|440|4236|410|199|34|3|8|0|
a6bff7ac1545180e6fcd3d0d4b5ddc25e09fe8b1|Thu Mar 14 14:40:46 CET 2024|Bump github/codeql-action from 3.24.6 to 3.24.7|0|0|0|440|4236|410|199|30|2|10|0|
ad249c3f65ad46fceec813c01654fd6c15f5de2c|Thu Mar 14 16:45:42 CET 2024|Remove unused `DecodingException(Throwable)` constructor|0|0|1|440|4236|410|199|32|25|6|0|
fcc46da8b5c7bc74aa4f77fb9c3ce2f40974aa58|Thu Mar 14 17:30:06 CET 2024|Bump actions/setup-java from 4.2.0 to 4.2.1|0|0|0|440|4236|410|199|33|2|7|0|
41d0d9a83355dd67249791cc3867605fbfa4847e|Thu Mar 14 18:29:24 CET 2024|Adds Permissions-Policy-Report-Only definition.|0|0|1|440|4236|411|199|32|8|6|0|
d5fbccac90aba8501c633e896ea67e2b0bfb426d|Fri Mar 15 00:04:15 CET 2024|Test `LocalCache` when async refresh takes longer than expire-after-write duration.|0|0|0|440|4236|411|199|32|2|6|0|
c99891cb863504eeb783899f985bc75af0d5c67e|Fri Mar 15 17:29:18 CET 2024|Make a class initialization deadlock more impossible|0|0|1|440|4236|411|199|31|23|8|0|
7dc01ed27b0aee9d6410d50dcaa9fa7c91319797|Fri Mar 15 19:42:54 CET 2024|Add "Ad-Auction-Allowed" header.|0|0|1|440|4236|412|199|31|8|7|0|
578ee2a305b8e9e8086260f9700c126741f3cec2|Mon Mar 18 19:25:11 CET 2024|Bump github/codeql-action from 3.24.7 to 3.24.8|0|0|0|440|4236|412|199|33|2|7|0|
bc56e904df26acb9eead13cb073b05661b8d428a|Tue Mar 19 20:25:01 CET 2024|Add `@CanIgnoreReturnValue` to `ForwardingMapEntry.setValue`.|0|0|1|440|4236|412|199|33|46|10|0|
85d57205e12397285632bb6e57c76455ff25ffeb|Thu Mar 21 22:01:34 CET 2024|Update Public Suffix List data.|0|0|1|440|4236|412|199|34|46|9|0|
a32589e467c990701a0da10aac8de34c295c5d57|Fri Mar 22 17:22:45 CET 2024|Bump gradle/wrapper-validation-action from 2.1.1 to 2.1.2|0|0|0|440|4236|412|199|32|2|7|0|
aecd2f0ac00b50f7ff01964a41b20227775064f3|Fri Mar 22 20:24:17 CET 2024|Bump github/codeql-action from 3.24.8 to 3.24.9|0|0|0|440|4236|412|199|28|2|7|0|
57ff7d93b503513a17fac8683e840e1b6c2ad1e9|Mon Apr 01 18:06:30 CEST 2024|Use the diamond operator more.|0|0|40|440|4236|412|199|59|282|15|0|
faa651613b7daa8a81cab89f8fdc77feaeb8cd2e|Fri Apr 05 18:29:42 CEST 2024|Bump github/codeql-action from 3.24.9 to 3.24.10|0|0|0|440|4236|412|199|31|3|8|0|
d364abbfd08f767af612d071a9298b19dad9e810|Sat Apr 06 17:31:42 CEST 2024|Discourage use of HMAC-MD5.|0|0|1|440|4236|412|199|31|30|10|0|
ac17a14c7025ae122144e6df6563ee4ac28f35e3|Tue Apr 09 02:32:54 CEST 2024|Fix typo reported by @Marcono1234.|0|0|1|440|4236|412|199|36|31|9|0|
48b664367aa552d49040fdd6cab5149b14bc4c93|Tue Apr 09 17:41:17 CEST 2024|Internal change|0|0|1|440|4236|412|199|34|17|9|0|
911661a9519815e4a132acd8ce2bd8ce42bd18dd|Tue Apr 09 20:35:11 CEST 2024|Check `isEmpty()` instead of `size == 0`.|0|0|1|440|4236|412|199|33|63|9|0|
616802ad0e41f41dee22d2bfedfa58f8b4165774|Wed Apr 10 20:01:37 CEST 2024|Bump gradle/wrapper-validation-action from 2.1.2 to 2.1.3|0|0|0|440|4236|412|199|32|2|6|0|
1a583c32fadcdd5f0ce851d80f8d8613ea426778|Wed Apr 10 21:39:05 CEST 2024|Reduce the thoroughness of mutation testing.|0|0|0|440|4236|412|199|29|2|6|0|
31e7a17c0ef873ba241e3db868005852499ebebd|Thu Apr 11 04:09:24 CEST 2024|Internal change|0|0|1|440|4236|412|199|30|15|10|0|
983b4516aa4e4c664ed617b253a594f6718d2d45|Thu Apr 11 06:53:59 CEST 2024|Internal change|0|0|1|440|4236|412|199|32|15|6|0|
75de44c2b0387b51becfb2f0343093b5b27c1eae|Thu Apr 11 10:39:32 CEST 2024|Make `Comparators.max`/`min` return the type of the comparands, even if the `Comparator` accepts a more general type.|0|0|1|440|4236|412|199|33|45|6|2|BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Comparators.min(T,T,java.util.Comparator<T>), newSymbol=com.google.common.collect.Comparators.min(T,T,java.util.Comparator<? super T>)],BC[kind=METHOD_PARAMETER_GENERICS_CHANGED, impactedSymbol=com.google.common.collect.Comparators.max(T,T,java.util.Comparator<T>), newSymbol=com.google.common.collect.Comparators.max(T,T,java.util.Comparator<? super T>)]
dad0c594f2caed34b98cc0e9b36182a9bc3753b8|Thu Apr 11 13:49:28 CEST 2024|Internal change|0|0|1|440|4236|412|199|29|15|7|0|
858caf425cdf3183776b61b437ba7a4129b6539b|Thu Apr 11 16:57:53 CEST 2024|Fix [Gradle GWT compilation breakage](https://github.com/google/guava/issues/7134).|0|0|0|440|4236|412|199|33|2|10|0|
cf4e8ad287b9c3a8f00e0dab0fb3b3806773ecdb|Mon Apr 15 19:53:38 CEST 2024|Bump github/codeql-action from 3.24.10 to 3.25.0|0|0|0|440|4236|412|199|31|2|6|0|
26f4538b52e719322adcfad9b37dd1e3a6c53653|Mon Apr 15 23:17:08 CEST 2024|Bump gradle/wrapper-validation-action from 2.1.3 to 3.3.0|0|0|0|440|4236|412|199|29|2|6|0|
b33044e5770a293bb2ad80539d7bd1dd599962e2|Mon Apr 15 23:41:32 CEST 2024|Bump Maven Wrapper's version of Maven to 3.9.6.|0|0|0|440|4236|412|199|28|2|7|0|
eab5117070ebcadae3ca5c2ffc8616240c0d9b76|Tue Apr 16 00:30:03 CEST 2024|Address a few nullness mismatches that our checker newly detects.|0|0|1|440|4236|412|199|31|14|8|0|
df2c2e55c9325d2828e71a793c392c7fb66b9812|Wed Apr 17 18:31:06 CEST 2024|Use multicatch even when it produces the type `ReflectiveOperationException`.|0|0|2|440|4236|412|199|37|89|7|0|
ffb708e6cdc9aa4ade1bba2bc98953836221f4bf|Wed Apr 17 19:12:17 CEST 2024|Bump github/codeql-action from 3.25.0 to 3.25.1|0|0|0|440|4236|412|199|39|3|8|0|
6585e3e32e6a68005efa331f13010db209fa5bbe|Thu Apr 18 19:22:48 CEST 2024|Bump actions/upload-artifact from 4.3.1 to 4.3.2|0|0|0|440|4236|412|199|33|3|8|0|
e21aac94335a2b72bee818f4e560a3fe768efcbe|Fri Apr 19 18:20:25 CEST 2024|Bump gradle/wrapper-validation-action from 3.3.0 to 3.3.1|0|0|0|440|4236|412|199|30|3|7|0|
1792bffe772f9ba2287a5f1e49d965b5ab27e151|Fri Apr 19 21:15:42 CEST 2024|Bump actions/checkout from 4.1.2 to 4.1.3|0|0|0|440|4236|412|199|32|3|10|0|
183837d2f3e62c24af386e808071aced230b942c|Sat Apr 20 05:30:05 CEST 2024|Further micro-optimize `singletonIterator`, just to be safe / waste my morning.|0|0|1|440|4236|412|199|34|67|7|0|
d092aeda2bddfad9a58f74820e3b775df2eed215|Mon Apr 22 20:17:05 CEST 2024|Add a missing `@since` tag, and remove `@FunctionalInterface` from a package-private method.|0|0|1|440|4236|412|199|34|47|6|0|
38c8017bd44b7919b112f1c99f3d8ce4b058ae5d|Mon Apr 22 23:05:10 CEST 2024|Add "Sec-GPC" header.|0|0|1|440|4236|413|199|33|9|7|0|
b9d2b93da44cba673b34ea56bb228cafe7d3d957|Mon Apr 22 23:14:37 CEST 2024|Update comments to reflect our recent handling of "sneaky checked exceptions."|0|0|2|440|4236|413|199|33|71|6|0|
759bad65224a23d59bbeecf3073895e321beb8e6|Tue Apr 23 18:00:42 CEST 2024|Bump actions/upload-artifact from 4.3.2 to 4.3.3|0|0|0|440|4236|413|199|32|2|7|0|
4be0c81560a9016f154b658f4b7c4bd91c6121d6|Tue Apr 23 18:38:39 CEST 2024|Bump github/codeql-action from 3.25.1 to 3.25.2|0|0|0|440|4236|413|199|30|3|7|0|
f88cd5c2051f23212bbb0d9cf670e91a61d5b59f|Wed Apr 24 03:36:51 CEST 2024|Add Javadoc to the guava-android copy of `Equivalence.doEquivalent`.|0|0|0|440|4236|413|199|34|2|8|0|
730ca9f23e426eabdf6b7612e441c21c7933c31b|Wed Apr 24 21:31:14 CEST 2024|Bump actions/checkout from 4.1.3 to 4.1.4|0|0|0|440|4236|413|199|30|2|8|0|
21fb20119180cb0f17e863a494fec14feabf54ec|Wed Apr 24 21:35:52 CEST 2024|Suppress or work around false-positive errors from the forthcoming version of our nullness checker.|0|0|5|440|4236|413|199|33|120|10|0|
348be7bd1764ad12b41bcb661a91b31ae2009049|Fri Apr 26 15:59:40 CEST 2024|Actually write the manifest we generate to the jar.|0|0|0|440|4236|413|199|37|2|7|0|
093852ef2bc92d27198f5bd16b37b77ca2581324|Fri Apr 26 18:37:16 CEST 2024|Document that we now run our Android tests under Lollipop.|0|0|0|440|4236|413|199|31|2|7|0|
50047447e555e1ad05065e844267fa67e9c36946|Fri Apr 26 18:53:33 CEST 2024|Bump gradle/wrapper-validation-action from 3.3.1 to 3.3.2|0|0|0|440|4236|413|199|32|3|10|0|
9596c996098272f0ea69cfdf45c7c1fe1ef8406d|Fri Apr 26 19:49:11 CEST 2024|Update Animal Sniffer scents to Lollipop.|0|0|0|440|4236|413|199|33|3|10|0|
e075e895591474c2fccd88c9f201246e365a5a0f|Tue Apr 30 01:33:03 CEST 2024|Bump github/codeql-action from 3.25.2 to 3.25.3|0|0|0|440|4236|413|199|31|2|9|0|
70a98115d828f17d8c997b43347b4ce989130bce|Tue Apr 30 16:36:03 CEST 2024|Fixed a potential `NullPointerException` in `ImmutableMap.Builder` on a rare code path.|0|0|1|440|4236|413|199|32|78|10|0|
fddc95d79ae7b26efe6d63d0e003cbd73f92e66f|Tue Apr 30 20:40:32 CEST 2024|Micro-optimize `singletonIterator` one more time.|0|0|1|440|4236|413|199|40|70|7|0|
96fca0b74736621db15416bf03489a4d6678fb5d|Tue Apr 30 21:18:25 CEST 2024|Make our `Collector` APIs available in `guava-android`.|0|0|0|440|4236|413|199|48|2|8|0|
57f76e3a7d4d01fe083462d8d391d94a5a79542d|Wed May 01 20:42:35 CEST 2024|Prepare for release 33.2.0.|0|0|1|440|4236|413|199|45|7|7|0|
2f4154d53408b77d3c3e11ccf6936b4be4a81a31|Fri May 03 14:55:42 CEST 2024|Roll back the most recent `singletonIterator` optimization attempt.|0|0|1|440|4236|413|199|38|63|7|0|
ba820c6a89b314c343c5e49cc8a7014973e4083d|Fri May 03 16:08:34 CEST 2024|Roll back middle atttempt at micro-optimizing `singletonIterator`.|0|0|1|440|4236|413|199|36|63|6|0|
b15afd574adbb276767cc57359dab22a81f23936|Fri May 03 16:43:14 CEST 2024|Roll back initial atttempt at micro-optimizing `singletonIterator`.|0|0|1|440|4236|413|199|30|61|7|0|
8f212ba60a83c5c9a85f08a4fc049bad2abd91e2|Sat May 04 16:27:29 CEST 2024|Add missing `@since` tag for `merge` in `TreeRangeMap` and `ImmutableRangeMap`.|0|0|2|440|4236|413|199|34|67|6|0|
381835deb8bf1d3e9370109aeef16660ef7739c5|Tue May 07 14:34:33 CEST 2024|Accept `AutoCloseable` in the Android copy of `ClosingFuture`, too.|0|0|0|440|4236|413|199|34|2|9|0|
61d3f25b1d15247aaf4cc1d7befb92978f1817e9|Tue May 07 14:34:34 CEST 2024|Use `Throwable.addSuppressed` in the Android copy of `ServiceManager`.|0|0|1|440|4236|413|199|33|87|8|0|
6342a23cd21960f871b3144bbf64b56040fa344a|Tue May 07 17:23:59 CEST 2024|Unconditionally use `Throwable.addSuppressed` in `Closer`.|0|0|1|440|4236|413|199|34|18|6|0|
1b3969e80426027e546b2eec5ba4fd453fc58bbc|Tue May 07 20:47:49 CEST 2024|Bump actions/checkout from 4.1.4 to 4.1.5|0|0|0|440|4236|413|199|31|2|8|0|
b9b6084dff44ced77e6ee3162c3bdcd533a9f601|Wed May 08 04:58:47 CEST 2024|Standardize parameter names across `Immutable*.of(...)` methods.|0|0|5|440|4236|413|199|36|78|10|0|
8b70996ad9d9616175c61758bf160756651d8969|Wed May 08 21:30:52 CEST 2024|Bump github/codeql-action from 3.25.3 to 3.25.4|0|0|0|440|4236|413|199|37|3|7|0|
243b32747c56771f35268957dd49e8ea980eea16|Fri May 10 19:01:26 CEST 2024|Bump ossf/scorecard-action from 2.3.1 to 2.3.3|0|0|0|440|4236|413|199|32|3|8|0|
aeadb633fc5357e50633e0877ffd475d64129a21|Sat May 11 03:42:33 CEST 2024|Update the documentation of `RegularImmutableMap`.|0|0|1|440|4236|413|199|32|78|7|0|
cc2875120a224cd6ec2d5ba98eabaa7af6e89720|Mon May 13 17:56:56 CEST 2024|Bump github/codeql-action from 3.25.4 to 3.25.5|0|0|0|440|4236|413|199|33|2|10|0|
7c934a2d5823ab8c675af1140bf686557948dcb5|Wed May 15 12:37:26 CEST 2024|Add a J2kt super-source implementation of DirectExecutorService that doesn't rely on other unsupported classes.|1|0|1|440|4236|413|199|33|75|7|0|
225c1b5f98cc98b488cd2ed8db4c4270b156e8c5|Wed May 15 14:11:55 CEST 2024|Internal change.|0|0|0|440|4236|413|199|30|2|6|0|
dc200d32f0ba8d270a1990b55c8ff407147f617e|Thu May 16 16:31:13 CEST 2024|Internal change.|0|0|0|440|4236|413|199|31|2|6|0|
6dd1cb16204bb4f9e4c4ea5c708c75109131310a|Fri May 17 17:24:53 CEST 2024|Reenable `NullPointerTester` tests for our internal Android-emulator testing.|0|0|0|440|4236|413|199|42|2|9|0|
ec7069a1d06c7f11c20689b6f3a5dcc827b34d38|Fri May 17 18:22:39 CEST 2024|Bump actions/checkout from 4.1.5 to 4.1.6|0|0|0|440|4236|413|199|41|2|8|0|
dd2fac88bf7921ea33bcee76278b12ea46a6de9f|Fri May 17 19:09:51 CEST 2024|Remove `@Beta` from `TestingExecutors.sameThreadScheduledExecutor`.|0|0|0|440|4236|413|199|29|2|7|0|
f0c70999725ce61dfb3b4cbfc3313964007e18bd|Fri May 17 19:56:04 CEST 2024|Remove workaround for an Android bug that was fixed at some point before Lollipop.|0|0|0|440|4236|413|199|30|2|6|0|
4ed49723048ec8631a4cec425f0bc497be05848b|Sat May 18 05:22:17 CEST 2024|Remove workaround for an ancient Android `toArray` bug.|0|0|2|440|4236|413|199|32|117|9|0|
f238ae451fd9c0b3d88c2d94b9e89257cb34fff8|Mon May 20 19:36:59 CEST 2024|Bump github/codeql-action from 3.25.5 to 3.25.6|0|0|0|440|4236|413|199|34|2|7|0|
3f61870ac6e5b18dbb74ce6f6cb2930ad8750a43|Fri May 24 18:39:45 CEST 2024|Change `InetAddress`-`String` conversion methods to preserve the scope ID.|0|0|1|440|4236|413|199|32|35|7|0|
c4b883de9679dae7da831e49dd9adaca71cc1991|Mon May 27 15:54:36 CEST 2024|Use Number.prototype.toPrecision in Platform.formatCompact4Digits.|0|0|0|440|4236|413|199|34|2|7|0|
142ddbc3225e8d0fb7b516aff9f7357344cb03b5|Tue May 28 20:07:57 CEST 2024|Fix `@VisibleForTesting` violations.|0|0|5|440|4236|413|199|34|89|11|0|
f74135f69c0743f8ada1cdd8756f5499007c3a7c|Tue May 28 22:38:02 CEST 2024|Eliminate the need for a few `rawtypes` and `unchecked` suppressions.|0|0|2|440|4236|413|199|40|79|7|0|
c497a975ba2845d553bb1c1ae76d7118320b32a5|Wed May 29 18:27:01 CEST 2024|Use `AssertionError(String, Throwable)` instead of supplying the cause later.|0|0|0|440|4236|413|199|38|3|9|0|
6c672281b4b18a6c6f5df2fcee06449ca98dc79c|Fri May 31 14:31:14 CEST 2024|Migrate usages of obsolete Guava APIs.|0|0|0|440|4236|413|199|38|2|9|0|
25322a7cc53c1c937c933ef03ca70201d6622cbb|Fri May 31 19:41:11 CEST 2024|Prepare for release 33.2.1.|0|0|0|440|4236|413|199|34|2|10|0|
c86c09dc3da472660efed40e8b0879f8461a6197|Sun Jun 02 15:32:20 CEST 2024|Remove `@Beta` from the `guava-android` `Collector` APIs.|0|0|0|440|4236|413|199|38|2|7|0|
62c7fbbc9b8739f0a1bf601446858ca35803ffec|Mon Jun 03 22:30:44 CEST 2024|Bump deps.|0|0|0|440|4236|413|199|38|2|7|0|
f94db26dd2c17f56a6b9723042b972c287221abf|Tue Jun 04 19:05:22 CEST 2024|Group all dependabot updates together in the same commit to avoid merge conflicts.|0|0|0|440|4236|413|199|32|2|7|0|
0d37269904682ccb7f94244694e3f42d6afa52ce|Tue Jun 04 19:50:26 CEST 2024|Bump github/codeql-action from 3.25.6 to 3.25.8|0|0|0|440|4236|413|199|30|2|6|0|
d328b5175fc8678cfee84e2dbaf166e9ddc61606|Fri Jun 07 23:31:38 CEST 2024|Remove unused `writeObject` method.|0|0|0|440|4236|413|199|31|2|6|0|
635571e121ddffa9ff7f86f3a964d4d83ebcbf09|Sat Jun 08 00:23:26 CEST 2024|Suppress https://errorprone.info/bugpattern/SunApi warnings.|0|0|5|440|4236|413|199|33|56|7|0|
9ea68165fcb78aace43a7b80b0a0e77c7327789b|Mon Jun 10 18:03:42 CEST 2024|Use natural units for durations.|0|0|0|440|4236|413|199|38|2|6|0|
e0e44b562b359c4f071e9d6676fc5408a5700778|Mon Jun 10 21:17:56 CEST 2024|Fix `MissingOverride` findings.|0|0|0|440|4236|413|199|33|2|6|0|
c2bbd73e23eb5da6b40753eca5c0efbab19cc727|Mon Jun 10 22:26:46 CEST 2024|Remove workaround for [ancient Android `unmodifiableMap` bug](https://issuetracker.google.com/36997692).|0|0|0|440|4236|413|199|31|2|8|0|
fdfbed1985640327ebd6d9ed9663ef884bf95712|Tue Jun 11 18:08:48 CEST 2024|Migrate some tests and testing infrastructure from `AssertionFailedError` to `AssertionError`.|0|0|0|440|4236|413|199|38|2|8|0|
a5f9bcafd6b12fd4342de0a4a1d277059a779e83|Thu Jun 13 16:56:53 CEST 2024|Make `CacheBuilder` `Duration` overloads available in `guava-android`.|1|0|1|440|4236|413|199|40|71|6|0|
808e0799f3026c0e08500ab5c06deb0952844377|Fri Jun 14 19:50:03 CEST 2024|Use imports instead of fully qualified types.|0|0|11|440|4236|413|199|44|125|16|0|
95b394ca744f6de55c7bbe20f970436072950aa2|Fri Jun 14 23:18:54 CEST 2024|Lazily initialize the map in ImmutableMultimap.Builder.|0|0|2|440|4236|413|199|45|79|8|0|
040d0b977810200973cc1598f5051d7f482e59ec|Sat Jun 15 00:11:41 CEST 2024|Use a Map<K, ImmutableCollection.Builder<V>> instead of Map<K, Collection<V>> in ImmutableMultimap.Builder.|0|0|4|440|4236|413|199|35|93|9|0|
22151fa71a4082cd9e06942bfb4abd232c51d734|Mon Jun 17 18:17:36 CEST 2024|Bump the github-actions group with 3 updates|0|0|0|440|4236|413|199|35|2|7|0|
b310b7e1ee77f8b0f15acd8548f9bad0925d9059|Wed Jun 19 02:32:40 CEST 2024|Update Sec-Ch-UA-Form-Factor to Sec-Ch-UA-Form-Factors to follow latest spec.|0|0|1|440|4236|414|200|30|8|10|0|
1648ef7a3d3281c4d7441b1b17d9c8bb0d74472c|Fri Jun 21 12:13:54 CEST 2024|Mark Synchronized.java and references as J2ktIncompatible. Change Guava locks in remaining j2kt compatible code to J2ktCompatibleMonitor.|0|0|8|440|4236|414|200|44|154|11|0|
20348c7ed6446ad1c1c249c78639042990fe47ea|Fri Jun 21 17:24:09 CEST 2024|Remove unnecessary explicit NaN check.|0|0|1|440|4236|414|200|51|26|7|0|
263712a207eb26fb624576fc0f6bf543f9ce7f0b|Fri Jun 21 20:20:33 CEST 2024|Fix typo.|0|0|0|440|4236|414|200|34|2|8|0|
cd11e83cfa911e4fb8fe599b504e6a3366c2a3a5|Fri Jun 21 20:43:38 CEST 2024|Remove helper methods that are unused externally from the external codebase.|0|0|1|440|4236|414|200|30|16|6|0|
faf36af34739ddf747eb896ee448688e17e3882b|Fri Jun 21 22:49:43 CEST 2024|Minor followup from cl/645331066:|0|0|1|440|4236|414|200|35|14|7|0|
f46b178bdbfa93cc2bc3d490b0f7929c443a6d0d|Mon Jun 24 17:28:55 CEST 2024|Document and add suppressions for our intentional use of `&` and ``.|0|0|7|440|4236|414|200|41|92|8|0|
19cfef214c62c42466cb067a949207794f837d36|Mon Jun 24 19:41:55 CEST 2024|Address https://errorprone.info/bugpattern/FunctionalInterfaceClash warnings.|0|0|4|440|4236|414|200|39|89|9|0|
8c31d52687cf03346635e29b3c5529e183c3f6ee|Mon Jun 24 19:52:53 CEST 2024|Bump gradle/wrapper-validation-action in the github-actions  group|0|0|0|440|4236|414|200|36|3|9|0|
dc80e7e9f3844381aacc93ee1e043a711f1feffb|Tue Jun 25 01:55:36 CEST 2024|Optimize Futures.allAsList handling of already completed Futures. Skips adding a listener on already completed futures and directly collects the completed futures value.|0|0|1|440|4236|414|200|33|78|7|0|
2a3fa8f076690280267d40583f6ca129ce135407|Tue Jun 25 18:27:13 CEST 2024|Internal change.|0|0|34|440|4236|414|200|56|256|16|0|
76fca99db95ce9c8e55bb9c37fd0e44ef0451a80|Tue Jun 25 19:43:32 CEST 2024|Remove `@Beta` from the `Duration` overload of `Suppliers.memoizeWithExpiration`|0|0|1|440|4236|414|200|52|14|9|0|
93c7a3ab62782299fb9e09b40f1903a1da7768ef|Tue Jun 25 21:57:47 CEST 2024|Remove accidental whitespace from cl/646505537.|0|0|34|440|4236|414|200|55|247|13|0|
b50df335cbb3357685b8e347656828b71d330b82|Tue Jun 25 23:05:57 CEST 2024|Suggest using streams instead of `Maps.toMap()`.|0|0|1|440|4236|414|200|52|95|11|0|
4b96e432bc5be71262296b056705328d9eae8d4d|Wed Jun 26 14:56:02 CEST 2024|Internal change.|0|0|1|440|4236|414|200|37|73|8|0|
4facd69c9a5bbf09244af32e4426432f024bf196|Thu Jun 27 19:22:11 CEST 2024|Bump Truth to 1.4.3.|0|0|0|440|4236|414|200|31|2|7|0|
a869b8665a299a0d1264d77720ba1452e896288d|Fri Jun 28 18:04:31 CEST 2024|Migrate from legacy com.google.gwt to org.gwtproject.|0|0|0|440|4236|414|200|30|2|13|0|
e549ba5c83438d1fd0b09d6367a0412b72707b32|Sun Jun 30 18:20:14 CEST 2024|Remove suppressions that are unnecessary now that our nullness checker sees `@NonNull` on JDK APIs.|0|0|2|440|4236|414|200|35|115|10|0|
0a76ba8ed9567617759f8a2a1fd8d43b4cd546bc|Mon Jul 01 15:59:11 CEST 2024|Tweak code to avoid upsetting the nullness checker.|0|0|1|440|4236|414|200|32|81|10|0|
9ba5fea8ecb63fdcb57953f8365a9336ae9e0b61|Mon Jul 01 17:55:08 CEST 2024|Bump github/codeql-action in the github-actions group|0|0|0|440|4236|414|200|35|2|9|0|
3618043d084c07895b03bfa47b631b6cd54749a5|Tue Jul 02 20:18:14 CEST 2024|Address some `UnusedVariable` warnings.|0|0|0|440|4236|414|200|44|2|12|0|
8b0d007aab5571208a01d2695bcdcc401636cedf|Tue Jul 02 22:09:47 CEST 2024|Suppress https://errorprone.info/bugpattern/Finalize warnings.|0|0|2|440|4236|414|200|47|83|7|0|
c8829bf39c2cd27ab15eac2a0417acd80437e055|Wed Jul 03 20:07:57 CEST 2024|Migrate JUnit `double` equality assertions to Truth.|0|0|0|440|4236|414|200|41|2|9|0|
8dac907542aff4cae90209e93a810a8ca0bfff92|Wed Jul 03 23:14:28 CEST 2024|Compare for equality, not approximate equality within a tolerance of `0.0`.|0|0|0|440|4236|414|200|42|2|9|0|
2c24eb8b437ab30628514dbc4f9d45474fae9be4|Mon Jul 08 18:51:40 CEST 2024|Bump actions/upload-artifact in the github-actions group|0|0|0|440|4236|414|200|33|3|12|0|
ad57f5221a83932f4fc8906d2461686dbe774fab|Tue Jul 09 00:09:00 CEST 2024|Add a Sequential Executor implementation for the j2kt super source. Also remove an J2KtIncompatible annotation.|0|0|1|440|4236|414|200|29|66|9|0|
542e588309fbb6dc16c0243348ca273626eb618c|Tue Jul 09 02:07:41 CEST 2024|Downgrade to a version of `plexus-io` from before a performance improvement was reverted.|0|0|0|440|4236|414|200|34|2|9|0|
c94072c3f2513b9b5b9e533fc95a23a57c536e93|Tue Jul 09 02:12:48 CEST 2024|Roll back suppressions for bogus nullness errors now that we've fixed our checker.|0|0|7|440|4236|414|200|35|104|15|0|
558c2be632f1f2d9ed5fed1c1932c36fba2efea4|Tue Jul 09 18:53:57 CEST 2024|Internal change.|0|0|0|440|4236|414|200|40|3|12|0|
c28e65234ec958160d6e633d63147d0517c02975|Tue Jul 09 19:36:53 CEST 2024|Rename `HighwayHash64FunctionTest` to `HighwayHashFunctionTest`. Simplify some testing setup.|0|0|0|440|4236|414|200|33|2|9|0|
2f6d6186c16d6458753192fc35ccd71eeb3cf0ab|Wed Jul 10 16:04:23 CEST 2024|Switch FutureCallbackTest to an explicit monitor for j2kt compatibility.|0|0|0|440|4236|414|200|33|2|8|0|
7e66ec48fd6a8837ef1d8565ce83b0dcc38db5d1|Thu Jul 11 21:27:53 CEST 2024|Remove Impossible from open-source release.|0|0|1|440|4236|414|200|34|18|16|0|
8b6d8bbdbf984206c9f7945cb4f8b521475ffdef|Thu Jul 11 22:48:45 CEST 2024|Use try-with-resources to close a `URLClassLoader`.|0|0|1|440|4236|414|200|37|14|10|0|
123ae0bda7c687b63c5677b42c36f92968ba0cdd|Fri Jul 12 23:21:39 CEST 2024|Fix a bad name for an exception parameter.|0|0|0|440|4236|414|200|32|2|8|0|
4a2d3025250664ff248f5e82373a13f70ce98faa|Sat Jul 13 01:06:34 CEST 2024|Bump Truth to 1.4.4.|0|0|0|440|4236|414|200|31|2|7|0|
354136fc89abd6195e32ea724982cd2ce0dab250|Tue Jul 16 18:56:20 CEST 2024|Bump github/codeql-action in the github-actions group|0|0|0|440|4236|414|200|31|2|8|0|
61bfd841b5ec61f7dfa3e6e7d22fd0e9ad102d27|Tue Jul 16 22:04:40 CEST 2024|Improve bug report template.|0|0|0|440|4236|414|200|31|2|10|0|
63734b9dfc9d69018c71e5502a1715eaa1f8e2b5|Thu Jul 18 19:51:14 CEST 2024|Use iteration instead of recursion in `Graphs.hasCycle`.|0|0|1|440|4236|414|200|32|67|7|0|
514f212777da34df57fb9ce875ce77948bf95473|Fri Jul 19 17:59:31 CEST 2024|Update links.|0|0|12|440|4236|414|200|49|165|10|0|
e4494149e299bdb010284b297d79f5cdbdb13066|Mon Jul 22 19:38:34 CEST 2024|Bump the github-actions group with 2 updates|0|0|0|440|4236|414|200|48|3|12|0|
5ccc169d0400f3010df52b62f8dcfd0e32241bb2|Mon Jul 22 21:00:09 CEST 2024|Remove some references to Java 7.|0|0|7|440|4236|414|200|33|91|7|0|
1dffea2656a0d71c5d978cd9e79ef2544fb65738|Mon Jul 22 21:08:50 CEST 2024|Clean up threads for `CacheBuilderTest` and `FuturesTest`.|0|0|0|440|4236|414|200|35|2|7|0|
3dce9a2fea31e8e8fa8ab98f22e6336c43c3ece1|Mon Jul 22 21:21:41 CEST 2024|Suppress an `UnusedVariable` warning for an unusual `Comparator` implementation.|0|0|1|440|4236|414|200|37|46|7|0|
e74da92931580198e8a5724c804a01edf2cb73a7|Mon Jul 22 23:59:13 CEST 2024|Update some comments / docs about JDK 7.|0|0|3|440|4236|414|200|38|44|9|0|
04c1b7a8fd353e4f797aa7002d44174219358979|Tue Jul 23 16:12:38 CEST 2024|Reimplement our `compare` methods in terms of JDK equivalents.|0|0|11|440|4236|414|200|48|94|7|0|
5041fbe61965a73ea269c7c24ea746d89bd1b1ba|Tue Jul 23 16:13:20 CEST 2024|Migrate off our `Charsets` constants, and further discourage usage.|0|0|5|440|4236|414|200|75|107|6|0|
76f87bbcc20c79de5d05582b191835f8a60de452|Wed Jul 24 20:21:55 CEST 2024|Bump a few Maven plugins.|0|0|1|440|4236|414|200|47|28|12|0|
71666ca5371dd9ceb49b0c78d5c3a1df24666f18|Wed Jul 24 20:49:58 CEST 2024|Hard-code Java versions for plugins other than `maven-surefire-plugin`.|0|0|0|440|4236|414|200|36|2|7|0|
41800d53d9f8b4b05ec8b157c6b84fff397bb60b|Wed Jul 24 22:09:58 CEST 2024|Suppress some https://errorprone.info/bugpattern/JUnit4ClassUsedInJUnit3 warnings.|0|0|0|440|4236|414|200|107|2|8|0|
85c6f88765ec599b2167129cca06f6a5fa14ddc1|Thu Jul 25 00:06:31 CEST 2024|Fix some [style violations](https://google.github.io/styleguide/javaguide.html#s5.2.3-method-names) in test method names.|0|0|0|440|4236|414|200|61|2|9|0|
582742210feb2ad05ebe5d618ec229dbb4ee3b94|Fri Jul 26 01:44:25 CEST 2024|Address some https://errorprone.info/bugpattern/NonApiType warnings.|0|0|4|440|4236|414|200|50|125|9|0|
e2b7a333aa6fba64087c53739e9b0c82dd9f5d89|Fri Jul 26 01:52:16 CEST 2024|Initialize our `Charsets` constants using the fields in `StandardCharsets`.|0|0|1|440|4236|414|200|40|11|9|0|
2466a099ae0fcf9a22c9a5f02818d37ef89b24fd|Fri Jul 26 02:37:57 CEST 2024|Add `text/markdown` to `MediaType`|0|0|1|440|4236|415|200|31|69|10|0|
1a01958a9608637f0a3c3f9a13276ff06a3a14b7|Tue Jul 30 02:27:05 CEST 2024|Bump the github-actions group with 2 updates|0|0|0|440|4236|415|200|32|3|13|0|
372f6f09bd3ba81131e1cff52ff9e173d4d0efa0|Wed Jul 31 16:07:20 CEST 2024|Update Public Suffix List data.|0|0|1|440|4236|415|200|34|47|8|0|
a629c5d9b4b87dcef55a7614b4ae70971cc16ea9|Fri Aug 02 11:59:57 CEST 2024|Soften the comment about _deprecating_ Multimap factories, as it hasn't been done in eight years.|0|0|2|440|4236|415|200|34|76|11|0|
8bab177c14b6c3faf82d6959a9c774b0d15e7414|Fri Aug 02 15:47:30 CEST 2024|swap Charsets for StandardCharsets|0|0|3|440|4236|415|200|38|80|7|0|
641b4c502ef8f3fd6cc7954b858bd95319e36adf|Mon Aug 05 19:55:20 CEST 2024|Bump the github-actions group with 2 updates|0|0|0|440|4236|415|200|34|2|14|0|
5f0e886278e22ff6da187cbf376ec32504d2b1cf|Tue Aug 06 01:08:01 CEST 2024|Make lock objects `transient`.|0|0|1|440|4236|415|200|31|14|8|0|
cab8ad16b049b41f46dbf08a78854e58512679f0|Tue Aug 06 04:33:58 CEST 2024|Update Public Suffix List data.|0|0|1|440|4236|415|200|29|43|9|0|
c7840595598af2ed547b64efa938883437c66072|Tue Aug 06 13:08:51 CEST 2024|Fix or suppress `JUnitIncompatibleType` findings in Guava.|0|0|0|440|4236|415|200|35|3|9|0|
91b6ebeae81eb2a12be43bfe2cd2cbc592055eae|Tue Aug 06 19:20:26 CEST 2024|Synchronize on empty arrays instead of `Integer` instances.|0|0|0|440|4236|415|200|39|2|13|0|
c3d5b17dc25f9108f5e6ba68e4ff4412b9dd9606|Tue Aug 06 19:50:15 CEST 2024|Allow size hinting for ImmutableMultimap and subtypes.|0|0|5|440|4242|415|200|38|92|9|0|
f7c5569b744b961c057fa96742e4abef7c76c968|Tue Aug 06 20:32:40 CEST 2024|Make ImmutableSet.Builder.addAll(Set) smarter about sizing the internal tables in current.|0|0|2|440|4242|415|200|41|63|9|0|
636e580b3a39234fb55d10e4ee4873f503ed4baa|Tue Aug 06 22:57:25 CEST 2024|Stop hashing in presized ImmutableSortedSet.Builders in java7 variant.  This could only happen in code paths involving the just-added ImmutableSetMultimap.orderValuesBy.expectedValuesPerKey.|0|0|0|440|4242|415|200|33|2|13|0|
6bd3a14c0f314fde1695049d9079298a583d6cd7|Tue Aug 06 22:59:32 CEST 2024|Make ImmutableSet.Builder.addAll(Set) smarter about sizing the internal tables in current.|0|0|2|440|4242|415|200|38|77|10|0|
7c4ca4154beec2b250f3e1801c4e8a6b997032a5|Fri Aug 09 23:31:35 CEST 2024|Validate that ImmutableSortedSet.Builder is O(n log n).|0|0|1|440|4242|415|200|33|69|7|0|
36dfb16a26626114616e1cbc64e02a6f0245a9f0|Mon Aug 12 16:38:11 CEST 2024|Simplify the implementation of a test `Predicate`.|0|0|0|440|4242|415|200|39|3|11|0|
0cb9cc6d71159d712fe964b7914c2e86ad48cf8a|Mon Aug 12 18:36:49 CEST 2024|Group overloads.|0|0|1|440|4242|415|200|36|58|6|0|
e232035c7a3d4065c63670d2fbd50a14b9ae4419|Mon Aug 12 18:56:32 CEST 2024|Fix ImmutableList.Builder to throw a useful exception when its size would overflow.|0|0|2|440|4242|415|200|33|75|10|0|
a4a7f6bd00ca1acd2efcb81e493720569ba58424|Mon Aug 12 22:58:09 CEST 2024|Recommend the JDK `compareUnsigned` methods over our equivalents.|0|0|2|440|4242|415|200|31|21|6|0|
a94ff8be64976806c852824933b004d115bbc06a|Fri Aug 16 21:07:34 CEST 2024|Update nullness annotations after cl/662127972, and prepare for the forthcoming version of our nullness checker.|0|0|3|440|4242|415|200|31|80|13|0|
e1eaeff6755a64a65e55cb57850c332a439baa71|Fri Aug 16 22:17:37 CEST 2024|Prepare for release 33.3.0.|0|0|5|440|4242|415|200|38|81|8|0|
55911e843251687157a907e22d0ddada6e60a47f|Fri Aug 16 23:46:50 CEST 2024|Bump the github-actions group with 2 updates|0|0|0|440|4242|415|200|33|2|7|0|
d6192739d0c581dea4cdc70fb82114998268d23c|Mon Aug 19 18:14:35 CEST 2024|Suppress Error Prone findings locally.|0|0|2|440|4242|415|200|33|41|10|0|
7c9455c0d14a840895506b0bd85d48571283235f|Mon Aug 19 18:46:16 CEST 2024|Bump github/codeql-action in the github-actions group|0|0|0|440|4242|415|200|35|2|10|0|
781068569f0a275ac3c4bce08c9a1fe4d624048a|Mon Aug 19 22:47:35 CEST 2024|Synchronize on empty arrays instead of `Integer` instances.|0|0|0|440|4242|415|200|32|3|11|0|
388e0980dd0c5ad1a407e53c90eb83df44bec31b|Thu Aug 22 22:46:17 CEST 2024|Call `Thread.suspend` and `resume` reflectively (when we even try to call them at all).|0|0|0|440|4242|415|200|37|3|12|0|
137798d217d717a153870019ccc1b87cf6ee2cd1|Fri Aug 23 23:08:46 CEST 2024|Specify `@InlineMe` for `{Doubles,Floats}#compare`|0|0|2|440|4242|415|200|39|28|12|0|
508cef7896bbae8b1581cee14d61998d447d2487|Tue Aug 27 18:42:37 CEST 2024|Changed `*.concat()` to throw `IllegalArgumentException` if the input arrays contain too many elements.|0|0|7|440|4242|415|200|45|47|13|0|
bff7090ab57a7fd9939749e2ae64288949939b44|Tue Aug 27 19:56:52 CEST 2024|Stop testing code with inaccurate nullness annotations under J2KT.|0|0|0|440|4242|415|200|39|2|6|0|
9c84ddbacf762c6fb56d48f6779d60daa3ec8ec6|Thu Aug 29 18:44:24 CEST 2024|Remove comments about compiling with JDK 8.|0|0|0|440|4242|415|200|30|2|8|0|
27c544073648972726f96a1f65332969079ee594|Fri Aug 30 19:53:42 CEST 2024|Bump github/codeql-action in the github-actions group|0|0|0|440|4242|415|200|28|2|8|0|
bb9fc2316edd256f65a28a6a01bc4cd36493ee46|Wed Sep 04 20:27:54 CEST 2024|Bump the github-actions group with 2 updates|0|0|0|440|4242|415|200|30|2|13|0|
930cc5833ad736cc3bebf1260d30f4b9504177ec|Mon Sep 09 18:53:01 CEST 2024|Bump actions/setup-java from 4.2.2 to 4.3.0 in the  github-actions group|0|0|0|440|4242|415|200|32|2|9|0|
7bc08c1e98c1518752cb322e84acc0f473adc4fb|Tue Sep 10 17:16:33 CEST 2024|Remove stale comments about `@NonNull` annotations in the JDK.|0|0|1|440|4242|415|200|32|98|10|0|
294f07da2a4945d328ca7ccf1c8c570fd787a9ab|Mon Sep 16 21:26:15 CEST 2024|Bump github/codeql-action in the github-actions group|0|0|0|440|4242|415|200|34|2|6|0|
e5b58e2fc8561192338dfe0c68c0bce27066a6aa|Tue Sep 17 20:05:35 CEST 2024|Use `assertThrows` even in GWT/J2CL/J2KT-compatible code.|0|0|0|440|4242|415|200|38|2|12|0|
6a070d8046e929efb2915f2b3dedde8154c146ab|Mon Sep 23 18:27:05 CEST 2024|Bump github/codeql-action in the github-actions group|0|0|0|440|4242|415|200|32|2|6|0|
a3b51888c2456350ab11694c28d7a72173f3b897|Mon Sep 23 19:13:03 CEST 2024|Include `j2objc-annotations` in the Gradle runtime classpath.|0|0|0|440|4242|415|200|31|2|8|0|
d9dbb1594e6d412973e99119bd01ecdca1690baa|Tue Sep 24 15:37:18 CEST 2024|Fix one instance of incorrect nullability of type argument in FluentIterable.|0|0|1|440|4242|415|200|31|73|7|0|
3c7c173e9c6ac93f154bfe40876f0c792d849f6e|Tue Sep 24 20:31:11 CEST 2024|Prepare for release 33.3.1.|0|0|0|440|4242|415|200|31|2|11|0|
7c0bf0892d8cda86835dfc3fa0a07a2d69f0e0f7|Thu Sep 26 21:11:55 CEST 2024|Add `application/cbor` to `MediaType`.|0|0|1|440|4242|416|200|32|84|11|0|
f358c05162c07fdf9967b956779984de0139ba3e|Tue Oct 01 18:06:11 CEST 2024|Use JDK 23 for compilation (and a few other plugins), while keeping overrides in place for a few others.|0|0|0|440|4242|416|200|33|2|11|0|
503ba429f9fbd4d2ef9a4c0ea28ccf62bed36afc|Tue Oct 01 21:05:17 CEST 2024|Add `HttpHeaders.ALT_SVC`; see https://datatracker.ietf.org/doc/html/rfc7838#page-8|0|0|1|440|4242|417|200|32|9|13|0|
f640a0f23ef755a1bf7acfcad07771ab2e85178f|Tue Oct 01 21:50:24 CEST 2024|Bump the github-actions group with 3 updates|0|0|0|440|4242|417|200|34|3|12|0|
5da71a77865cbab3d0609b7faf8509685241ffce|Wed Oct 02 19:12:02 CEST 2024|Fix some misconfigured collections test suites that were passing due to #7401.|0|0|0|440|4242|417|200|37|2|8|0|
81be061f85c3dd010e3cd5c8214e1937def6069e|Sun Oct 06 00:02:27 CEST 2024|Fix `@Require` annotations so that features implied by absent features are not also required to be absent.|0|0|0|440|4242|417|200|35|2|6|0|
a46565dd1c6ce45f444d707013afb5fda9aa6b06|Sun Oct 06 15:00:57 CEST 2024|Provide an optimized copyOf method for TreeRangeMap|0|0|1|440|4243|417|200|34|64|9|0|
ed33d3dd6204bad4e35f9ca14598fce58c572114|Mon Oct 07 19:15:29 CEST 2024|Bump github/codeql-action in the github-actions group|0|0|0|440|4243|417|200|36|3|11|0|
4d7c71ea79520b3555917cd157cee6315ebc5205|Tue Oct 08 18:25:48 CEST 2024|Add `@RetainedLocalRef` to `volatile` `value` field references to resolve potential memory issues in a J2ObjC context.|0|0|1|440|4243|417|200|29|31|9|0|
01e6a5594f59243759e53c6b81451b259ca7144e|Tue Oct 08 20:18:25 CEST 2024|Refactor `getDoneValue(Object obj)` to improve readability of `Cancellation` and `Failure` case handling logic.|0|0|1|440|4243|417|200|32|33|9|0|
49776fd83201172368ce560bb3282d5ca568096f|Tue Oct 08 21:34:27 CEST 2024|Address https://errorprone.info/bugpattern/Interruption warnings.|0|0|9|440|4243|417|200|37|100|9|0|
99d2ced9e9a07ebba49a6e9eb8a4724be650f0a4|Wed Oct 09 18:35:46 CEST 2024|Remove @GwtIncompatible from LongMath.checkedSubtract|0|0|1|440|4243|417|200|38|25|13|0|
f5ec2ab85ce0ca94917d02a8619d5018c52b8986|Wed Oct 09 23:16:31 CEST 2024|add `ToStringHelper.omitEmptyValues()`. Fixes https://github.com/google/guava/issues/7415|0|0|1|440|4244|417|200|32|13|6|0|
d40589de41baa3b2ce8442b24366bc57339b9871|Thu Oct 10 17:35:23 CEST 2024|Avoid backticks in Javadoc.|0|0|6|440|4244|417|200|33|90|8|0|
b84a41d077ac91bff682c354f9dde0f25b0cd6c4|Fri Oct 11 23:56:34 CEST 2024|n/a|0|0|1|440|4244|417|200|35|15|9|0|
ccb3c8534de6018ae78631ad44f098e595de6b60|Mon Oct 14 20:25:18 CEST 2024|Bump the github-actions group with 3 updates|0|0|0|440|4244|417|200|31|2|11|0|
9be5c722c44fb827d410cfea023e29b69b37f65e|Tue Oct 15 00:21:47 CEST 2024|Bump Maven to 3.9.9 and Wrapper to 3.3.2.|0|0|0|440|4244|417|200|34|3|10|0|
77243d6af23c9ee44f6ebb33a118353acee91f6a|Tue Oct 15 00:48:00 CEST 2024|Add a note about `Thread.Factory` for Java 21+ users. See https://github.com/google/guava/issues/7427|0|0|1|440|4244|417|200|33|66|7|0|
0a291292e84874963b92a962394216b8d8715001|Tue Oct 15 19:33:42 CEST 2024|Use `assertThrows` even in GWT/J2CL/J2KT-compatible code, `common.collect` edition.|0|0|0|440|4244|417|200|69|3|7|0|
5338f7c997dac25879378c9aebb692dc6f6cf9da|Wed Oct 16 17:03:24 CEST 2024|Upgrade to a version of `plexus-io` from after a performance improvement was restored.|0|0|0|440|4244|417|200|51|2|9|0|
503c9eb8d4c90f86218ae5cc0645b9d41d71835b|Wed Oct 16 18:50:01 CEST 2024|Add Fingerprint2011 to ChecksumBenchmark|0|0|0|440|4244|417|200|31|2|9|0|
10d4b1b10a4bc490adb1168dccb4046424c91ae6|Wed Oct 16 19:14:13 CEST 2024|Inline a method that mainly serves to confuse the compiler's reachabililty checking.|0|0|1|440|4244|417|200|29|74|10|0|
98d55289fcbb460e9c24c91391a08476be01f424|Wed Oct 16 19:15:00 CEST 2024|Address https://errorprone.info/bugpattern/UnnecessaryDefaultInEnumSwitch warnings.|0|0|8|440|4244|417|200|43|88|9|0|
702e4b23c31362895863c106446c826023f4f0ad|Wed Oct 16 23:15:29 CEST 2024|Disable `Java7ApiChecker` for our *tests*, removing most of its suppressions and also most `AndroidJdkLibsChecker` suppressions.|0|0|0|440|4244|417|200|50|2|7|0|
ca12c336b74319b40618c55c399c639d3e688434|Thu Oct 17 04:06:00 CEST 2024|Address [CatchFail](https://errorprone.info/bugpattern/CatchFail), [StaticQualifiedUsingExpression](https://errorprone.info/bugpattern/StaticQualifiedUsingExpression), [UnusedMethod](https://errorprone.info/bugpattern/UnusedMethod), and [CacheLoaderNull](https://errorprone.info/bugpattern/CacheLoaderNull) warnings.|0|0|0|440|4244|417|200|44|2|9|0|
8f747d0069eef34d845e60f9ee9f9cf5b54004b2|Thu Oct 17 04:35:47 CEST 2024|Migrate off `Throwables.propagate`, and stop rethrowing exceptions from other threads.|0|0|2|440|4244|417|200|37|103|6|0|
0e2fa3ece48bc46ad173f43d7a6bdd7571bc95d3|Thu Oct 17 04:36:23 CEST 2024|Address https://errorprone.info/bugpattern/ThreadPriorityCheck warnings.|0|0|1|440|4244|417|200|43|17|11|0|
13374053ab548dd6ad16e588e9ed269bf2e30ff0|Thu Oct 17 14:56:46 CEST 2024|Use `addSuppressed` in `AbstractExecutionThreadService`, and otherwise update/clarify code pinned to "Java 7" / old versions of Android.|0|0|4|440|4244|417|200|47|34|6|0|
22124956acbbbfbcc00f7b85b73c7b3d8cec6dc4|Thu Oct 17 14:59:56 CEST 2024|Migrate more code to use `UndeclaredThrowableException`.|0|0|2|440|4244|417|200|40|32|7|0|
dc423d228abd6e4bdd8fb1306018a336b4012b9c|Thu Oct 17 15:39:05 CEST 2024|Address [StaticQualifiedUsingExpression](https://errorprone.info/bugpattern/StaticQualifiedUsingExpression) and [ExtendsObject](https://errorprone.info/bugpattern/ExtendsObject) warnings.|0|0|0|440|4244|417|200|31|3|8|0|
585b93a026c8c43b3e592096cb416fee5b62e9ac|Thu Oct 17 17:14:00 CEST 2024|Restore the behavior of throwing an `IllegalArgumentException` directly.|0|0|1|440|4244|417|200|32|97|10|0|
7b62a516af2c7c84a1b9199fb7de68e135933763|Thu Oct 17 17:49:10 CEST 2024|Point users to [`Math.clamp`](https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/lang/Math.html#clamp(long,int,int)).|0|0|4|440|4244|417|200|36|41|7|0|
9597b0d290892edc9961842465e8aeb9aa3aa53e|Thu Oct 17 21:06:40 CEST 2024|Use `assertThrows` even in GWT/J2CL/J2KT-compatible code, `common.collect.testing.google` edition.|0|0|0|440|4244|417|200|43|3|10|0|
8a1c90e7b34765d720b3711d4180526dde24c124|Thu Oct 17 21:41:15 CEST 2024|Prepare for usage of `ReflectionFreeAssertThrows` from more packages:|0|0|1|440|4244|417|200|38|87|15|0|
99be0a4e5acf397795bd144cd366089dbc63ce6c|Thu Oct 17 21:57:25 CEST 2024|Use `assertThrows` even in GWT/J2CL/J2KT-compatible code, `common.collect.testing` edition.|0|0|0|440|4244|417|200|61|2|8|0|
608278213482a1e4d3b05642c029d5f5f51939c8|Thu Oct 17 23:11:04 CEST 2024|Make `Splitter.splitToStream` available to Android users.|0|0|1|440|4244|417|200|38|16|7|0|
b0461b725bd043e478d672254ae677c2557d0163|Fri Oct 18 16:56:52 CEST 2024|Use `assertThrows` even in GWT/J2CL/J2KT-compatible code, `common.cache`+`io`+`math`+`reflect`+`testing` edition.|0|0|0|440|4244|417|200|44|2|8|0|
b045bf3a99f4efc5964e8a4cffd5d81f0e3930c8|Fri Oct 18 17:44:57 CEST 2024|Suppress a suggestion that we use the `Duration` overload.|0|0|0|440|4244|417|200|35|2|9|0|
f5108a367d62c4b510132257323c7f91ab326e72|Fri Oct 18 21:04:48 CEST 2024|Use some static imports.|0|0|8|440|4244|417|200|49|131|7|0|
dc12fb2ffed3610d45c919420c0b17bbdcc7da7b|Fri Oct 18 21:23:52 CEST 2024|Address [InitializeInline](https://errorprone.info/bugpattern/InitializeInline) warnings.|0|0|0|440|4244|417|200|46|2|9|0|
3a8463a075a9547492848a4adad3b3b86ca10cfd|Fri Oct 18 22:22:12 CEST 2024|Use some static imports.|0|0|16|440|4244|417|200|59|130|13|0|
266b30c1f106bd40b9ff551cd40bd1347249f300|Sat Oct 19 00:07:12 CEST 2024|Use some static imports.|0|0|3|440|4244|417|200|70|69|8|0|
8bbbefd6e61f65a6116121b4937bd7c7421d9699|Sat Oct 19 02:02:32 CEST 2024|Use _more_ static imports.|0|0|24|440|4244|417|200|130|169|11|0|
89ca0ef77832c9d31aab16f27a97d2878af6b591|Sat Oct 19 02:23:16 CEST 2024|Use some static imports.|0|0|16|440|4244|417|200|89|133|9|0|
cdc225474e5b1663f783973bec90ab554c67d20e|Sat Oct 19 02:49:27 CEST 2024|Make most `util.concurrent` `Duration` overloads available to Android users.|1|0|7|440|4244|417|200|53|131|14|0|
fea7a3635b7db1a01fd2f1fba2db7b8419d38c77|Sat Oct 19 04:53:18 CEST 2024|Use `assertThrows` even in GWT/J2CL/J2KT-compatible code, `common.primitives` edition.|0|0|0|440|4244|417|200|52|2|12|0|
6544c1edbc3b69814ef5d6e319c7d677af3fa6fe|Mon Oct 21 16:24:39 CEST 2024|Update links from code.google.com to github.com.|0|0|4|440|4244|417|200|50|96|13|0|
f617e81434173fdedd4710b5c2f010d074379104|Mon Oct 21 17:39:08 CEST 2024|Use `assertThrows` even in GWT/J2CL/J2KT-compatible code, `common.net` and `common.util.concurrent` edition.|0|0|0|440|4244|417|200|52|2|10|0|
031cefac6216f2d1118e21ec65dbf132e6adf563|Mon Oct 21 17:59:43 CEST 2024|Remove a couple more obsolete workarounds for `FilterOutputStream` trouble.|0|0|2|440|4244|417|200|38|17|9|0|
9911c8347f59462da22a06ebc464f3c6a7fec76c|Mon Oct 21 18:25:13 CEST 2024|Internal change.|0|0|0|440|4244|417|200|30|2|9|0|
79c9e7a36cc139d41f99004b61f88dcd01c0c530|Mon Oct 21 19:41:28 CEST 2024|Remove a couple more obsolete workarounds for `FilterOutputStream` trouble.|0|0|2|440|4244|417|200|31|16|11|0|
67f914985e18bb4692b51d5cda078b2c2af66d57|Mon Oct 21 19:50:47 CEST 2024|Extract shared helper methods in `UrlEscapersTest` into `UrlEscaperTesting`.|0|0|0|440|4244|417|200|33|2|10|0|
3d14f1d81b7d3e1b7bffb6d83da6c5d1cee8c7b2|Mon Oct 21 23:09:31 CEST 2024|Complete the automatable migration to `assertThrows`.|0|0|0|440|4244|417|200|31|2|9|0|
10c64d93b767b5f6cea850dcb8ea8e65124cc1b9|Tue Oct 22 15:45:45 CEST 2024|Internal change.|0|0|0|440|4244|417|200|31|2|7|0|
f9f3fffb874cc3f23aebd6e1ad7cc24d026b6a51|Wed Oct 23 18:42:19 CEST 2024|Expose more Java 8 APIs to Android users.|1|0|4|440|4244|417|200|34|71|13|0|
9938818c967a39bee17b8e9323a007febfc3a3ab|Fri Oct 25 15:10:15 CEST 2024|Use `@RetainedLocalRef` to keep J2ObjC from deallocating objects when the fields they were stored in are nulled out.|0|0|7|440|4244|417|200|44|88|10|0|
19fef9b0cd808e8ffcc574c648b1c370d4d87dcc|Fri Oct 25 16:04:08 CEST 2024|Avoid varargs allocations in `min`/`max` calls.|0|0|1|440|4244|417|200|35|33|8|0|
309365e2bb5487f9e5d7dddefd6130e03cd2b290|Fri Oct 25 17:31:26 CEST 2024|Miscellaneous followup from cl/687404334.|0|0|1|440|4244|417|200|38|57|12|0|
984f713d7651c0f72f1b97be3ad289f24deb8b3d|Fri Oct 25 18:18:50 CEST 2024|Expose more Java 8 APIs to Android users.|0|0|1|440|4244|417|200|36|67|9|0|
c6c268006c28d65eb5c8e72a0755ef012cd8fc22|Fri Oct 25 20:02:11 CEST 2024|Expose more Java 8 APIs to Android users.|1|0|3|440|4244|417|200|37|59|6|0|
2f04514087a61201dc477ecf9c4f078ec14698a9|Sat Oct 26 14:31:57 CEST 2024|Eliminate unnecessary conversion to byte array.|0|0|1|440|4244|417|200|35|17|8|0|
b650b9fe776d155999d7fabfd0055c00c5cc6d48|Sat Oct 26 16:08:53 CEST 2024|Expose more Java 8 APIs to Android users.|0|0|1|440|4244|417|200|32|59|11|0|
ea060954d38a407068227f10a67426a3ef3bc3a0|Sun Oct 27 15:33:05 CET 2024|Copy an `Entry` to avoid undefined behavior after the `Map` is modified.|0|0|0|440|4244|417|200|32|2|8|0|
dc30916de3ab5d7867527abfe0703f2c29140968|Mon Oct 28 17:51:40 CET 2024|Roll forward cl/688155711, which was rolled back in cl/688191691.|0|0|2|440|4244|417|200|34|18|9|0|
26ea2d41a931d96d41ac087b4bfad6e8c537a455|Mon Oct 28 22:37:58 CET 2024|Improve the error message for `assertNull` in test-suite-builder tests.|0|0|0|440|4244|417|200|34|2|9|0|
2a36be11f742a06fcafed6b5910cbe21ba49a077|Tue Oct 29 19:50:17 CET 2024|Bump the github-actions group with 3 updates|0|0|0|440|4244|417|200|31|2|11|0|
167113ac6e94d0fef46379e4678d2f369fe24807|Wed Oct 30 17:11:47 CET 2024|Use **more** static imports.|0|0|40|440|4244|417|200|161|178|8|0|
85d08ecb7e7127550e5f88ea1aa16ec8a195f951|Wed Oct 30 20:09:21 CET 2024|Use `Iterables.transform` again (except for one method that apparently wants `Lists.transform`).|0|0|0|440|4244|417|200|79|3|9|0|
5a63833514a7e75295f1a03e942095e4d5280339|Wed Oct 30 20:51:14 CET 2024|Remove unused import.|0|0|1|440|4244|417|200|34|27|12|0|
664c80b4eb4b1ecc96d7cedbbe30cdf63caf4e69|Wed Oct 30 22:14:50 CET 2024|Fix another accidental use of varargs `min`/`max` calls.|0|0|1|440|4244|417|200|31|22|10|0|
6ace8bc8ea31d6eb9bc6e2a4698807005c00399c|Thu Oct 31 15:17:24 CET 2024|Expose more Java 8 APIs to Android users.|0|0|5|440|4244|417|200|38|85|10|0|
99d75d1e7f79124e9cab7fc583caadacb64d6699|Thu Oct 31 15:48:22 CET 2024|Add tester classes for Java 8 APIs to the Android flavor.|0|0|0|440|4244|417|200|48|2|9|0|
9b0109c6622dde0bd97ba61a43641df3ba8e301a|Thu Oct 31 17:03:51 CET 2024|Expose some `common.io` Java 8 APIs to Android users.|0|0|3|440|4244|417|200|34|76|9|0|
68d28ec8e28d37fcc53656f7804f6423e9df8a17|Mon Nov 11 21:27:14 CET 2024|Bump github/codeql-action in the github-actions group|0|0|0|440|4244|417|200|31|2|8|0|
c3091759a290181dabae6cd7808bee777adc479b|Mon Nov 11 23:38:55 CET 2024|Avoid iterating thrice in SetView.immutableCopy()|0|0|1|440|4244|417|200|29|78|9|0|
f7bb71157e6f02a5d5a3ba80aeea1b19fd8600ad|Wed Nov 13 22:33:25 CET 2024|Document that `isInetAddress` and `forString` perform slightly different validation.|0|0|1|440|4244|417|200|36|36|12|0|
ed2c12aab2cf59a52d5d7e567b1752aef9d498b4|Fri Nov 15 00:36:35 CET 2024|Clarify comments about our usage of `@Ignore` and the associated suppression.|0|0|0|440|4244|417|200|99|2|9|0|
7a61ca9bffebc4de97b6cb1519c5f1b869f1f3fe|Fri Nov 15 19:28:31 CET 2024|Use `hasMessageThat` and `hasCauseThat`.|0|0|0|440|4244|417|200|57|2|9|0|
747dd4ba6cc64f493922193d979df2d783062ab7|Fri Nov 15 20:46:10 CET 2024|Fix a tiny Javadoc error on UnsignedInteger.doubleValue.|0|0|1|440|4244|417|200|42|17|7|0|
166bb20dc84b755fb7425426248ddef3e8c3f6d4|Fri Nov 15 21:58:22 CET 2024|Link to Java 21 Javadoc instead of Java 9.|0|0|0|440|4244|417|200|32|2|13|0|
9166ed0e1a242e7bc76a6e7e56a448d6d7d39e58|Mon Nov 18 18:19:47 CET 2024|Bump github/codeql-action in the github-actions group|0|0|0|440|4244|417|200|32|2|9|0|
3853b98a9419dcfae2a8c026dabc85d44947584e|Wed Nov 20 16:07:19 CET 2024|Stop warning that Caffeine requires Java 8.|0|0|1|440|4244|417|200|33|68|9|0|
c799c38c553872cb47208a0b69c38b9fac842bd3|Wed Nov 20 19:41:51 CET 2024|Fix some Javadoc warnings, mostly around the use of the default constructor.|0|0|18|440|4244|417|200|45|143|13|0|
27bb9c2519835afd2c201356c81b674c07fe6079|Thu Nov 21 00:23:55 CET 2024|Fix typo from cl/698442998.|0|0|1|440|4244|417|200|31|70|9|0|
4d4b29c3d3955f73219e15202483125e09f87dbc|Thu Nov 21 00:24:37 CET 2024|Add docs for `TreeRangeMap`, including `@since` tag for the `copyOf` method from cl/682878547.|0|0|1|440|4244|417|200|35|66|11|0|
45e6be2688ec7c6ece67931707f92adce864d49e|Mon Nov 25 16:13:29 CET 2024|Deprecate `Charsets` constants.|0|0|1|440|4244|417|206|36|12|9|0|
74c75ca661129f4d39944c548d54dbe98e9b1ae8|Mon Nov 25 21:45:03 CET 2024|Bump github/codeql-action in the github-actions group|0|0|0|440|4244|417|206|33|3|15|0|
cf508b773c389b7ab9b3d8ecf991ef2e4b681717|Tue Nov 26 19:48:20 CET 2024|Bump Error Prone to 2.36.0, including setting `--should-stop=ifError=FLOW`.|0|0|0|440|4244|417|206|33|2|10|0|
335950bdcc69c4c6ed332fc330f5d33bd37d262c|Tue Nov 26 20:43:39 CET 2024|Remove obsolete link to ancient site.|0|0|1|440|4244|417|206|31|72|9|0|
8a24204a29275636b5bd30136ef289e9f6651bb1|Wed Nov 27 01:52:27 CET 2024|Internal change|0|0|0|440|4244|417|206|35|2|9|0|
5d6e2bd640da6eed40422bdf25e0f40fbf7e601a|Wed Dec 04 20:30:42 CET 2024|Suppress https://errorprone.info/bugpattern/ThrowIfUncheckedKnownUnchecked warnings.|0|0|0|440|4244|417|206|31|2|12|0|
6832b54e8d1db17bb729c4eef92d043e9e56b3f5|Thu Dec 05 16:09:59 CET 2024|Remove a test that creates a `SecurityManager`.|0|0|0|440|4244|417|206|32|2|9|0|
03d3b70c5fa4a2eb8eecd3f17b658fd452e93d34|Fri Dec 06 23:19:00 CET 2024|Internal change.|0|0|0|440|4244|417|206|30|2|9|0|
3bb61016a4a95e1515e19f7b8eb8577622a39c18|Sun Dec 08 18:29:20 CET 2024|Improve the calculation of the optimal number of hash functions for a `BloomFilter`.|0|0|1|440|4244|417|206|30|30|9|0|
3644d6155fdeca4c97d51329b66d1272d2905735|Mon Dec 09 21:29:57 CET 2024|Remove tests that create a `SecurityManager`.|0|0|0|440|4244|417|206|35|2|13|0|
54cc5eac07886563680d252fc06d4b10ccf107f1|Tue Dec 10 16:16:55 CET 2024|Make `Joiner` sometimes use `String.join`, which was [optimized](https://bugs.openjdk.org/browse/JDK-8265237) for JDK 17+.|0|0|2|440|4244|417|206|32|66|8|0|
983c10642a64441fe9094facf2f0a6f1e8d301e9|Tue Dec 10 19:01:13 CET 2024|Fix/suppress more warnings.|0|0|1|440|4244|417|206|41|15|10|0|
2aa8fd971b74d38b97fd9edf0681e898d6e884e6|Tue Dec 10 21:54:12 CET 2024|Bump github/codeql-action in the github-actions group|0|0|0|440|4244|417|206|35|2|9|0|
e307cae436d2a949a00b7c6e03dca55817e20428|Wed Dec 11 22:58:00 CET 2024|Remove tests that rely on a `SecurityManager`.|0|0|0|440|4244|417|206|29|2|13|0|
62c61872053d639b6a1622797848c95badc8afab|Thu Dec 12 16:00:29 CET 2024|Recommend `Cleaner` instead of `FinalizableReferenceQueue`.|0|0|1|440|4244|417|206|35|16|11|0|
a124c1e45e431c1fd64d9147157071549c585951|Thu Dec 12 17:23:50 CET 2024|Release `testMyServerExampleWithCleaner` publicly.|0|0|0|440|4244|417|206|35|3|10|0|
660e5dcc59a2bccb382bd5ccaa0fc8957f72b691|Fri Dec 13 15:51:43 CET 2024|Prefactoring for future changes that will avoid using `Unsafe`.|0|0|1|440|4244|417|206|33|34|11|0|
2496b4ec63f41c3223bba4bb873d15bf56674da0|Mon Dec 16 22:05:22 CET 2024|Bump github/codeql-action in the github-actions group|0|0|0|440|4244|417|206|34|2|14|0|
617fd28a72980cc4d86678a341e8b58545ede0bc|Mon Dec 16 22:29:03 CET 2024|Prepare for release 33.4.0.|0|0|4|440|4244|417|206|47|85|8|0|
e25ee0c6fbe11d17fd2c56e2e32358d7e9759ed5|Mon Dec 16 23:57:57 CET 2024|In `ClosingFuture`, remove a workaround for [JDK-7101822](https://bugs.openjdk.java.net/browse/JDK-7101822)(?) now that we [build with a JDK after JDK 8](https://github.com/google/guava/issues/6549). This follows up on cl/332225001 and cl/643394004.|0|0|1|440|4244|417|206|42|81|10|0|
15617f55808180e6e2d07a1907c0c2b9fb6c1a1d|Thu Dec 19 18:15:35 CET 2024|Add some nullness annotations to tests.|0|0|0|440|4244|417|206|34|2|10|0|
24e20e42268288066800d2859041fa2f59185426|Thu Dec 19 18:31:36 CET 2024|Add JSpecify as a build dependency without using it yet.|0|0|0|440|4244|417|206|35|2|8|0|
a0b90e75bf8bd3338a41ed6a83d0e4e04af586b4|Thu Dec 19 18:59:53 CET 2024|Explicitly annotate some null-unmarked classes as `@NullUnmarked`.|0|0|2|440|4244|417|206|295|106|9|0|
d1f941992d455754ecf13ecbb08ce22acf1fdd26|Thu Dec 19 19:41:07 CET 2024|Remove workarounds for a bug in Java 5.|0|0|0|440|4244|417|206|114|3|9|0|
831793cce82d0bd148b0599db2be0667a6fe1afc|Thu Dec 19 21:10:50 CET 2024|Remove workarounds and update comments related to old JDKs.|0|0|7|440|4244|417|206|43|120|9|0|
7ee7759376f2720e643397a60d756bca4c3e8578|Thu Dec 19 21:51:34 CET 2024|Update links to refer to the new bug tracker.|0|0|1|440|4244|417|206|49|58|10|0|
d9ed9b94399fe872c6ca6abdea54d4a8d38832f8|Thu Dec 19 21:59:37 CET 2024|Annotate `*GwtSerializationDependencies` classes for nullness.|0|0|3|440|4244|417|206|38|60|8|0|
cc2c5d3d6623fe66a969c29fcb422bf02fb57a1f|Fri Dec 20 00:12:24 CET 2024|Stop building collection-test-suite-builder code for J2KT.|0|0|0|440|4244|417|206|38|2|13|0|
5fe9d20cae408d43b90d5548ab73289e160ece66|Fri Dec 20 15:07:27 CET 2024|Promote `@ElementTypesAreNonnullByDefault` to the package level, replacing `@ParametersAreNonnullByDefault`.|0|0|15|440|4244|417|206|56|98|11|0|
ce43463a9a884dacab6b3d1ca898d975cb2b071f|Sat Dec 21 04:07:17 CET 2024|Remove class-level `@ElementTypesAreNonnullByDefault` annotations.|0|0|572|440|4244|417|206|417|782|23|0|
8ebb375fce9bd50a3a924285bf175c8fb1870d36|Sat Dec 21 15:47:45 CET 2024|Use `@NullMarked` instead of our custom `@ElementTypesAreNonnullByDefault` annotations.|0|15|16|440|4244|417|206|311|93|18|0|
17634b5c71e3934e02904f168883f3d1fae67483|Sat Dec 21 16:42:18 CET 2024|Change `<? extends @Nullable Object>` back to `<?>`.|0|0|1|440|4244|417|206|85|14|6|0|
ae36f571a23b6c7119a6eda8ae2f9c3200b8846f|Sat Dec 21 17:18:13 CET 2024|Turn `@ParametricNullness` into a no-op for Kotlin and IntelliJ, and reduce its retention to `CLASS`.|0|0|15|440|4244|417|206|39|87|8|0|
d997ad9367c1369fca227605be4713c52b235e49|Sat Dec 21 18:12:43 CET 2024|Migrate from `@CheckForNull` to Checker Framework `@Nullable`.|0|0|332|440|4244|417|206|247|710|22|0|
04bf0300b8736ec7297a34da40a6efb21231c5da|Sun Dec 22 03:15:34 CET 2024|Remove dependency on JSR-305.|0|0|0|440|4244|417|206|122|2|19|0|
2cc8c5eddb587db3ac12dacdd5563e79a4681ec4|Sun Dec 22 04:35:44 CET 2024|Migrate from Checker Framework annotations to JSpecify annotations.|0|0|408|440|4244|417|206|492|759|15|0|
800b3d42bd124519eac2604b1c4800d523d6065a|Sun Dec 22 05:23:31 CET 2024|Remove dependency on Checker Framework annotations.|0|0|0|440|4244|417|206|213|2|16|0|
58fb2ebaba130c77519a61d2cceb3c667c64c843|Fri Dec 27 16:31:33 CET 2024|Adding test scenarios related to leading and trailing spaces when parsing string to Long|0|0|0|440|4244|417|206|31|2|6|0|
a3e17c25cb7f16be537d0582716598082a89c677|Fri Dec 27 17:16:12 CET 2024|Apply inlinings where possible and appropriate, and suppress elsewhere.|0|0|4|440|4244|417|206|44|71|18|0|
4067301d23ac5c2c43a4da702b7ab92f89467fc0|Fri Dec 27 18:27:15 CET 2024|Sort some lists, removing a duplicate.|0|0|0|440|4244|417|206|45|2|7|0|
1462a03d7465c04e4804df94a7606cb30566e7b6|Fri Dec 27 21:13:00 CET 2024|Standardize on `sneakyThrow` for "impossible" checked exceptions.|3|0|4|440|4244|417|206|38|88|6|0|
470f16f1e2cf0ba81b9b0941fe2b995c8ed908e3|Fri Dec 27 21:22:33 CET 2024|Fixed `MixedArrayDimensions` warnings.|0|0|3|440|4244|417|206|40|20|11|0|
9b0567491f4e41f9f96dc4ed4676af306ec1bb0a|Sat Dec 28 02:23:58 CET 2024|Address more `ConstantCaseForConstants` warnings.|0|0|8|440|4244|417|206|44|97|6|0|
215f2563ab098f86f143d59e472b766c9876119a|Sat Dec 28 03:45:32 CET 2024|Fix or suppress `IdentifierName` (and sometimes `ConstantNameForConstants`) warnings.|0|0|7|440|4244|417|206|59|86|7|0|
92eb5b41ca0211b847401a88a5b5f6ba4406daeb|Mon Dec 30 19:09:04 CET 2024|Fix a race condition in `FinalizableReferenceQueueTest`.|0|0|0|440|4244|417|206|47|2|8|0|
d10797e284aff5b5c2ed8a2147aac9f66b04a2fd|Mon Dec 30 19:42:00 CET 2024|Clarify documentation of `sneakyThrow`.|0|0|3|440|4244|417|206|32|54|8|0|
69d96d089f1654424e7c8ef878aff094c71be8a8|Thu Jan 02 16:44:57 CET 2025|Regenerate directories of GWT sources from scratch each time.|0|0|0|440|4244|417|206|33|2|7|0|
c1467725d60ba531a8fae38fedc7af7b69faefe5|Thu Jan 02 17:54:52 CET 2025|Specify versions for plugins.|0|0|0|440|4244|417|206|28|2|5|0|
4559277ff03fec79861839039c608820049146e8|Thu Jan 02 20:08:30 CET 2025|Apply or suppress suggestions to use `@InlineMe`.|0|0|18|440|4244|417|206|45|174|9|0|
2c6e3b9dab189f1fe9c875aa864a0c1377d42ef8|Thu Jan 02 20:20:50 CET 2025|Make it possible to actually use (e.g.) `-Dsurefire.toolchain.version=21` to set the Java version for tests, and do so in CI. (The property value still _defaults_ to the JDK that you use to run Maven, so passing the flag is not _necessary_.)|0|0|0|440|4244|417|206|45|2|10|0|
80559d250e78c86fdf266fc43fde1d7c12acd8ea|Thu Jan 02 21:02:35 CET 2025|Expose [JSpecify annotations](https://github.com/jspecify/jspecify/issues/239) in our GWT artifact.|0|0|0|440|4244|417|206|30|2|6|0|
1a300f6b2f7ba03ae9bc3620a80c4d4589c65b69|Fri Jan 03 15:25:09 CET 2025|Make `AbstractFuture` use `VarHandle` when available.|0|0|1|440|4244|417|206|30|32|7|0|
c171b9cbb86cc3d17dea6838d0c146e7bb45fc9b|Fri Jan 03 16:27:03 CET 2025|Mess around more with Javadoc and Maven toolchains:|0|0|2|440|4244|417|206|36|76|6|0|
7ac7965a1311393cc3bd82e54c2398823ab4b2bf|Fri Jan 03 19:14:58 CET 2025|Make Javadoc link to JSpecify classes.|0|0|0|440|4244|417|206|35|2|6|0|
c03d604f12a44a319eb5f38085fb099e126c1c50|Fri Jan 03 19:59:18 CET 2025|Use `@linkplain` instead of `<a href="...">`.|0|0|0|440|4244|417|206|32|2|8|0|
993aa762c4047028e035b83775d72dda68e6d82e|Fri Jan 03 20:42:16 CET 2025|Fix linking to JDK 21 from the Guava Javadoc.|0|0|0|440|4244|417|206|32|2|6|0|
c9e692672ad92cd208580a849001d808d927b662|Fri Jan 03 21:04:39 CET 2025|Minor updates after recent changes for Java 8 APIs.|0|0|0|440|4244|417|206|32|2|5|0|
ff7c071b0aeff0306451f74aa69b2c2c5803f932|Fri Jan 03 22:26:06 CET 2025|Use JDK 23 for generating Javadoc, too.|0|0|0|440|4244|417|206|31|2|5|0|
bc1b20941f852a627eeab36ae16fad8d4887ee71|Sat Jan 04 03:38:35 CET 2025|Bump build timestamp to 2025.|0|0|0|440|4244|417|206|29|2|5|0|
c8b804109f3b360f2e5902f04e4ecd65007483f8|Mon Jan 06 17:33:46 CET 2025|Bump the github-actions group with 3 updates|0|0|0|440|4244|417|206|32|2|8|0|
5a0e12f9ed547752cdec9b838546820b04b48638|Mon Jan 06 18:01:40 CET 2025|Update and explicitly mention "Javadoc" on README|0|0|0|440|4244|417|206|31|2|5|0|
4b6f8713c0c79481b542a963caf3e7ee88350c2c|Mon Jan 06 23:31:35 CET 2025|Fix the CI badge.|0|0|0|440|4244|417|206|30|2|5|0|
12bf71e5e87e88516dfce13ccdf2e3aca1061572|Tue Jan 07 19:20:53 CET 2025|Address some https://errorprone.info/bugpattern/UnnecessaryJavacSuppressWarnings warnings.|0|0|5|440|4244|417|206|33|90|5|0|
400af25292096746ed3f6164f0ff88209acbb19f|Tue Jan 07 21:40:00 CET 2025|Make `AtomicReferenceFieldUpdater` fields `static` for [better performance](https://shipilev.net/blog/2015/faster-atomic-fu/#:~:text=thrown%20out%20of%20the%20window).|0|0|1|440|4244|417|206|42|31|6|0|
d1a3cd5037528a2ae990bfceed9cdd009fbc54de|Wed Jan 08 15:23:57 CET 2025|Under the JRE, use `java.util.concurrent.atomic.LongAdder` unconditionally and (except when we need to support GWT/J2CL) directly instead of through our `LongAddable` interfaces.|0|6|2|440|4244|417|206|33|31|9|0|
0180d0924be1f6158c71f34019a5c8b1eff9256c|Thu Jan 09 16:00:14 CET 2025|Restore Sonatype configuration that I'd accidentally removed in cl/711746683.|0|0|0|440|4244|417|206|32|2|7|0|
aeb9099d49673eb5490cbeaed422ccfee7bbecae|Thu Jan 09 22:19:37 CET 2025|Clarify `CharMatcher.precomputed()` javadocs a bit. Also mention "kebab case" in `CaseFormat.LOWER_HYPHEN`'s docs.|0|0|2|440|4244|417|206|31|18|6|0|
77cf12110647661a0cbb34db93805aeb717d796f|Fri Jan 10 18:17:00 CET 2025|Changing Void to be annotated with @Nullable and updating any other needed types this should be a no-op for everything but J2KT.|0|0|1|440|4244|417|206|33|13|6|0|
b3bb29a54b8f13d6f6630b6cb929867adbf6b9a0|Fri Jan 10 21:05:54 CET 2025|Make `UnsignedBytes.lexicographicalComparator()` use `Arrays.compareUnsigned` when it's available.|0|0|1|440|4244|417|206|30|19|6|0|
80aab00dc5b7a36785f5e09b6a54397388980cde|Fri Jan 10 23:43:40 CET 2025|Remove `Unsafe`-based implementation from `ExecutionListBenchmark`.|0|0|0|440|4244|417|206|32|2|10|0|
ee63055ddda671132510350406032f9bb55405cb|Tue Jan 14 03:25:48 CET 2025|Make `common.hash` use `VarHandle` [instead of `Unsafe`](https://github.com/google/guava/issues/6806) when possible.|0|0|1|440|4244|417|206|33|23|6|0|
71d0692d418a5dd001c9b3786275a5f1f94e1971|Tue Jan 14 16:12:43 CET 2025|Make `UnsignedBytesTest` actually check that we are using the correct endianness for reads.|0|0|0|440|4244|417|206|32|2|6|0|
30aee2eede08935e669c88a533b6bf13b3339b4c|Tue Jan 14 19:03:27 CET 2025|Bump the github-actions group with 2 updates|0|0|0|440|4244|417|206|29|2|6|0|
d6ceb21f1fc034c9438f8def36be3b9eb3ba7db2|Wed Jan 15 22:06:50 CET 2025|Fix automatic toolchain downloads again.|0|0|0|440|4244|417|206|29|2|6|0|
18131c054336ac33a1071fca718a8378e250bea3|Wed Jan 15 23:14:03 CET 2025|Update suppressions for usage of `sun.misc.Unsafe`.|0|0|3|440|4244|417|206|35|47|7|0|
3b077bc6aa5a5083847556ec60bd3d83ef6b9f56|Thu Jan 16 00:03:15 CET 2025|Sort `<plugins>` in `<pluginManagement>` to prevent #7622 from happening again.|0|0|0|440|4244|417|206|35|2|6|0|
22046a37f552a283f3abf69d22ca0a4be5c52301|Fri Jan 17 19:38:06 CET 2025|Prepare for the removal of `blogspot.*` ccTLD domains from the Public Suffix List.|0|0|0|440|4244|417|206|31|2|6|0|
a3d5c96963967dc351f71a41e60271f1d3921fa3|Fri Jan 17 20:55:13 CET 2025|Attempt to fix some recent flakiness in `testAwaitFullGc`.|0|0|0|440|4244|417|206|31|2|6|0|
176cf74d8ed2ca22af2a9c88c902a229f6e009d5|Sat Jan 18 03:52:11 CET 2025|Reformat.|0|0|41|440|4244|417|206|79|236|7|0|
ee3b9c64382037f72b3a8341915cc64b87850b53|Wed Jan 22 19:07:27 CET 2025|Update Public Suffix List data.|0|0|1|440|4244|417|206|68|46|8|0|
172b19a094844487b633694722c08d5dcb23cc44|Wed Jan 22 19:54:28 CET 2025|Fix typo.|0|0|0|440|4244|417|206|32|2|7|0|
bc1d74fbe53a1d3fb83a30920510a36d1c15bd27|Thu Jan 23 16:20:06 CET 2025|Address some http://errorprone.info/bugpattern/CatchingUnchecked warnings.|0|0|1|440|4244|417|206|35|12|6|0|
fd9d7ae4b861c457a9a69c201ab9d09451cb126c|Fri Jan 24 02:37:53 CET 2025|Address some http://errorprone.info/bugpattern/DistinctVarargsChecker warnings.|0|0|0|440|4244|417|206|33|2|6|0|
f06226878ac6674e2486feb12e2fd11007180671|Sat Jan 25 16:50:49 CET 2025|Remove obsolete claim that our internal Android tests skip anything with `@MediumTest`.|0|0|0|440|4244|417|206|39|2|6|0|
1d3cbf8228a1bc30b4dcf1704c1aaae96443e79d|Sat Jan 25 17:16:13 CET 2025|Mark test-suite-builder suites and related code as `@AndroidIncompatible`.|0|0|0|440|4244|417|206|87|2|9|0|
ff278054a92d1a75278459983010462ff7e757b4|Mon Jan 27 18:09:17 CET 2025|Bump github/codeql-action in the github-actions group|0|0|0|440|4244|417|206|52|2|6|0|
e3e1ec5cfc6cac0b98794a75f0f200882eced318|Mon Jan 27 18:13:16 CET 2025|Recommend `Arrays::compareUnsigned` to users of `UnsignedBytes.lexicographicalComparator`.|0|0|1|440|4244|417|206|30|21|6|0|
c8767178c3ae195586061c07b3da0327b28cebfc|Wed Jan 29 18:21:13 CET 2025|Stop running `StackOverflowError` tests under Android.|0|0|0|440|4244|417|206|34|2|7|0|
83692e7f9fed0e5836722f91a8bd7d5be9a7b24c|Thu Jan 30 15:17:35 CET 2025|More and newer Javadoc links.|0|0|0|440|4244|417|206|35|2|7|0|
12b2ec963c304f2b85c12a5e92c7c41d38a4b83a|Thu Jan 30 17:55:01 CET 2025|Remove some redundancies.|0|0|9|440|4244|417|206|41|149|7|0|
6baae9fa3e5f3dd3dac4987f34c449bc2ae9f020|Mon Feb 03 20:46:17 CET 2025|Bump the github-actions group with 2 updates|0|0|0|440|4244|417|206|46|2|7|0|
a015c53ea09fca0343d796253d026f7cfd31d75a|Mon Feb 03 22:49:31 CET 2025|Internal Change|1|0|2|440|4244|417|206|31|17|6|0|
f5fa4ea452b907bc9e86ebf74658706cb7407490|Mon Feb 03 23:10:21 CET 2025|Use string concatenation instead of `String.format`.|0|0|0|440|4244|417|206|30|2|6|0|
453549c87a83412ba3521201fe85d77ffe7d495d|Tue Feb 04 22:37:04 CET 2025|Run a test under more environments.|0|0|0|440|4244|417|206|33|3|7|0|
a3500eb3d2810f968c60a776a40fa11a3f0ff727|Thu Feb 06 19:30:19 CET 2025|Add `image/avif` to `MediaType`.|0|0|1|440|4244|418|206|37|69|6|0|
7719744040d05004bd7051fc33a782fa78b01634|Thu Feb 06 20:38:05 CET 2025|Make `Atomic*FieldUpdater` fields `static` for better performance.|0|0|2|440|4244|418|206|32|77|6|0|
57ec95cfcbd248af7dbd2257abef04a6f8ac3e98|Fri Feb 07 18:56:28 CET 2025|Throw `StackOverflowError` manually instead of triggering a real stack overflow, which sometimes hoses subsequent tests or crashes Android.|0|0|0|440|4244|418|206|33|2|5|0|
ca73f717ae0aab63e00db009e62d27f3c7d64149|Sun Feb 09 17:18:32 CET 2025|Recommend `Arrays::compareUnsigned` also for `int` and `long` arrays.|0|0|2|440|4244|418|206|34|21|6|0|
8ea070f483c623678e1c642ae0b9b4c70c5222c2|Mon Feb 10 19:27:09 CET 2025|Disable two assertions for j2kt that are only passing by accident|0|0|0|440|4244|418|206|33|2|9|0|
5b19523fd448523ea25943803583452fda919dfd|Mon Feb 10 21:38:50 CET 2025|Bump github/codeql-action in the github-actions group|0|0|0|440|4244|418|206|33|2|6|0|
ccd06f2eb635b085ed651edba406116a3665155b|Mon Feb 10 22:00:30 CET 2025|Avoid mocking java.lang.Runtime|0|0|1|440|4244|418|206|32|14|5|0|
4c6211e9b3adba3c27ad29772dbd51f493279407|Tue Feb 11 16:36:36 CET 2025|Change snapshot version numbers to begin with a number.|0|0|0|440|4244|418|206|35|2|6|0|
20732ffa6014aede270b3f94c02f2302a10db305|Tue Feb 11 17:26:22 CET 2025|Suppress some https://errorprone.info/bugpattern/EnumOrdinal warnings.|0|0|2|440|4244|418|206|35|75|6|0|
96cbfca933833ee34b4243273c3b4aaed764772a|Tue Feb 11 18:27:02 CET 2025|Partially enable ListeningScheduledExecutorService for j2kt (omitting new methods depending on java time)|0|0|1|440|4244|418|206|35|61|9|0|
f95fa15ff1254569463a87eb7ada214d96efca9b|Tue Feb 11 19:11:49 CET 2025|Address some https://errorprone.info/bugpattern/RedundantOverride warnings.|0|0|1|440|4242|418|206|34|61|6|0|
9f771f6239f11b0b7648fa314ee58e9e9e5f10be|Tue Feb 11 19:30:12 CET 2025|Fix some https://errorprone.info/bugpattern/NotJavadoc warnings.|0|0|3|440|4242|418|206|36|79|9|0|
f2bd540e7654360d83d96bd7e283eba53ec74d2e|Tue Feb 11 20:00:47 CET 2025|Add `@CanIgnoreReturnValue`, or suppress where we shouldn't.|0|0|8|440|4242|418|206|54|106|9|0|
c282d6a6b90bbbf14c3b41a7736854595c9fae6d|Tue Feb 11 21:58:15 CET 2025|Use _more_ lambdas.|0|0|19|440|4242|418|206|68|231|10|0|
16d1e071ae555e67577d5c69aa543ea3cd556cd2|Wed Feb 12 00:03:39 CET 2025|Standardize annotations on `serialVersionUID` fields.|0|0|103|440|4242|418|206|123|395|14|0|
45f57f3768e38f0a405bdaa9f0c9bef57f2f4a86|Wed Feb 12 04:02:11 CET 2025|Apply InlineMe, or suppress where appropriate.|0|0|1|440|4242|418|206|66|67|12|0|
d65006830ffe631ced4f481d526be8742370329d|Wed Feb 12 04:46:28 CET 2025|Address some https://errorprone.info/bugpattern/YodaCondition warnings.|0|0|8|440|4242|418|206|49|111|7|0|
96aec229b1d98cb14c866679bb22ac3c84d50cd7|Wed Feb 12 17:24:50 CET 2025|Address some https://errorprone.info/bugpattern/JdkObsolete warnings.|0|0|5|440|4242|418|206|46|85|9|0|
cf77dacd22738456e21ed373b2e81bcc3683b868|Wed Feb 12 18:44:01 CET 2025|Enable additional methods in MoreExecutors for J2kt-native|0|0|2|440|4242|418|206|42|69|6|0|
89a6d256da8cb293303035ec2fd8c23ab86d9f85|Wed Feb 12 18:58:08 CET 2025|Address assorted warnings for Error Prone, Android Lint, etc.|0|0|4|440|4242|418|206|33|87|10|0|
287c701a8656a44c719d55fe8b4eb9b0c42038a5|Wed Feb 12 19:10:54 CET 2025|Modularize `failureaccess`.|0|0|0|440|4242|418|206|37|2|5|0|
39b39d485b973cc09b4901af8955326157070cf8|Wed Feb 12 21:32:09 CET 2025|Use `@Serial` on `serialVersionUID` fields.|0|0|122|440|4242|418|206|111|457|16|0|
b6c232ce78d1fcb2a5d8c9028f511561fd2ef918|Wed Feb 12 22:07:16 CET 2025|Suppress some https://errorprone.info/bugpattern/UndefinedEquals warnings.|0|0|5|440|4242|418|206|89|91|16|0|
d0c23aabb89cdbde842a253b5f0f1eda4984da8d|Wed Feb 12 22:18:38 CET 2025|Suppress some https://errorprone.info/bugpattern/NullableOptional warnings.|0|0|2|440|4242|418|206|42|71|5|0|
cbf6f7f28c7c20e40bd4dc26f6d7bb46ea2cdd88|Wed Feb 12 22:35:41 CET 2025|Suppress some https://errorprone.info/bugpattern/CollectionUndefinedEquality warnings.|0|0|1|440|4242|418|206|34|67|8|0|
8df849d80acab985ca133c50005840b42d2761fb|Thu Feb 13 16:39:04 CET 2025|Address https://errorprone.info/bugpattern/EscapedEntity warnings.|0|0|7|440|4242|418|206|39|66|6|0|
5d336dba0e1db909ade66658252124d9c23390b5|Thu Feb 13 18:30:16 CET 2025|Withdraw usages of `java.io.Serial` from the external repo.|0|0|122|440|4242|418|206|126|450|17|0|
740d8bdaa6ceaeb06d46a7d39a4f0d713bce6541|Thu Feb 13 22:28:59 CET 2025|Fix a few Javadoc warnings.|0|0|1|440|4242|418|206|86|69|11|0|
1769a857d981fcb15438f6690649d8aed41db7fa|Fri Feb 14 16:33:07 CET 2025|Internal change.|0|0|15|440|4242|418|206|40|130|13|0|
46ce527bc646909b877c640512cd2407e171e3c1|Tue Feb 18 16:38:16 CET 2025|Truthify `escape` tests.|0|0|0|440|4242|418|206|42|2|8|0|
7d7cc7d18122fecf4d5b3cf837bb45411643c29a|Tue Feb 18 17:55:26 CET 2025|Address a couple nullness errors.|0|0|2|440|4242|418|206|33|62|6|0|
7ec362ec68b630363231d5292cd6b2577c710be6|Tue Feb 18 19:33:56 CET 2025|Temporarily withdraw `image/avif` from `MediaType`.|0|0|1|440|4242|417|206|31|72|6|1|BC[kind=FIELD_REMOVED, impactedSymbol=com.google.common.net.MediaType.AVIF, newSymbol=]
688ad56ac376ba9e7cce985b1cef6690231dbec6|Wed Feb 19 18:37:21 CET 2025|Fix some https://errorprone.info/bugpattern/AnnotationPosition warnings.|0|0|1|440|4242|417|206|33|66|12|0|
7d73105b86a5cde8a652f6e557e268ed8e1784a7|Wed Feb 19 19:24:47 CET 2025|Mention `ExecutorService.close()` as a slightly different alternative to `MoreExecutors.shutdownAndAwaitTermination`.|0|0|1|440|4242|417|206|32|72|8|0|
c4965e486851765f6ffd102771abe39c529557ea|Wed Feb 19 22:21:25 CET 2025|Fix some https://errorprone.info/bugpattern/UnnecessaryFinal warnings.|0|0|45|440|4242|417|206|69|339|10|0|
ec8263807c2ce5099ef3ca931e987198b4313f55|Thu Feb 20 15:13:56 CET 2025|Revert commit 032e2f92 “Workaround bad J2KT/Kotlin smartcast interaction”|0|0|0|440|4242|417|206|65|3|7|0|
a5a02ae74aed0f3db3f2bfa91be6c867a7ce7334|Thu Feb 20 17:12:25 CET 2025|Change snapshot version numbers to begin with a _bigger_ number.|0|0|0|440|4242|417|206|37|3|11|0|
60ba1ab80bb09ecb1cff8618589710b4fea9cab7|Thu Feb 20 18:59:57 CET 2025|Reduce scope of suppressions in `Abstract*Future` classes, and make the classes look slightly more similar to one another.|0|0|2|440|4242|417|206|31|68|6|0|
ba42c96029643420d1de2e0359ea393c466a131f|Thu Feb 20 20:22:23 CET 2025|Update `TableCollectorsTest` for compatibility with J2KT.|0|0|0|440|4242|417|206|32|2|7|0|
2dd82ad97cbe1cab3b06d7269ee8a5711cbac8ae|Fri Feb 21 02:34:51 CET 2025|Refactor the main `AbstractFuture` implementation to prepare for using it for more environments.|0|0|2|440|4242|417|206|33|34|7|0|
b15c23fb4c53633da755ca1421bcaae9d89fd0d6|Fri Feb 21 03:35:44 CET 2025|Use most of the main `AbstractFuture` implementation from J2KT and from GWT/J2CL.|1|0|2|440|4242|417|206|36|35|12|0|
8f6f4b346c85db554a1b2c7c7706247c2a94f637|Fri Feb 21 17:06:25 CET 2025|Assorted cleanups noticed after recent `AbstractFuture` [changes](https://github.com/google/guava/issues/2934).|0|0|1|440|4242|417|206|39|33|7|0|
2076b8ecbf78625bfa2cdb3c56d14020371ad692|Fri Feb 21 17:08:46 CET 2025|Address more Error Prone warnings.|0|0|4|440|4242|417|206|37|74|8|0|
8e13507b385a120f3c2716d315b8a633e3ba59a8|Mon Feb 24 16:38:20 CET 2025|Use conventional modifier order in comment.|0|0|0|440|4242|417|206|36|2|7|0|
45cc9c9a87e74b7ca44188e589eb49d94ed9261d|Mon Feb 24 17:25:12 CET 2025|Standardize on openjdk.org for bug links.|0|0|2|440|4242|417|206|33|30|7|0|
223156d086804bc73c89758afaa76652e6feb493|Mon Feb 24 18:49:05 CET 2025|Bump the github-actions group with 3 updates|0|0|0|440|4242|417|206|31|2|11|0|
f4b6ef015c5a8febe407e0ba8e1ee17753d26bc8|Mon Feb 24 20:12:35 CET 2025|Migrate from `<? extends @Nullable Object>` back to `<?>`.|0|0|2|440|4242|417|206|32|79|6|0|
b7ac5f21ac543acca498f11f35c9624dc229fdf2|Tue Feb 25 17:00:45 CET 2025|Inline some `Maps` helper lambdas (follow-up from cl/725740741). Tidy up some code comments.|0|0|3|440|4242|417|206|39|128|13|0|
9d9a7cd038d049d4df9c0da06fdf824d96bcf6f5|Wed Feb 26 22:01:30 CET 2025|Add test for `containsKey(keyForNullValue)`.|0|0|0|440|4242|417|206|37|2|7|0|
5d7daaef9ed04de583f3d0fc9ad75b237615d97f|Wed Feb 26 22:03:32 CET 2025|Enable some methods in ByteStreams for j2kt-native|0|0|1|440|4242|417|206|33|20|12|0|
67a1ff20211ed7f67af85c4f409f5e894b2a0b36|Wed Feb 26 23:21:20 CET 2025|Document the `nullOutputStream` in `OutputStream` as an alternative to ours in `ByteStreams`.|0|0|1|440|4242|417|206|30|21|7|0|
572e4efcc7548ca5f23d0530aad769e24929541a|Thu Feb 27 16:42:01 CET 2025|Document the `nullWriter` in `Writer` as an alternative to ours in `CharStreams`.|0|0|1|440|4242|417|206|33|19|6|0|
02a9c1aef312215e61a9e24ed4db54712171ab73|Thu Feb 27 17:12:04 CET 2025|Improve documentation and naming of `getFromAlreadyDoneFuture`.|0|0|1|440|4242|417|206|33|31|7|0|
008e78e799cfe6ef47beab313a99d23fdf334b87|Fri Feb 28 03:10:52 CET 2025|Override `Predicate.test` wherever we override `Predicate.apply`.|0|0|3|440|4245|417|209|36|76|7|1|BC[kind=METHOD_NOW_FINAL, impactedSymbol=com.google.common.base.Predicate.test(T), newSymbol=com.google.common.hash.BloomFilter.test(T)]
292cc2ab8445403454c284dbc6b185d5a2d513a4|Mon Mar 03 23:59:47 CET 2025|Normalize whitespace.|0|0|0|440|4245|417|209|38|2|11|0|
5004483ef06bd3ab408d46ea8f49faa3bd8b6619|Tue Mar 04 15:39:42 CET 2025|Try one more `@RetainedLocalRef` annotation in `AbstractFuture`.|0|0|1|440|4245|417|209|30|30|6|0|
